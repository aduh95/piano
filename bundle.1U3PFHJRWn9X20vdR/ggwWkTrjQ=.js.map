{"version":3,"file":"ggwWkTrjQ=.js","sources":["../../node_modules/automation-events/build/es2019/functions/create-extended-exponential-ramp-to-value-automation-event.js","../../node_modules/automation-events/build/es2019/functions/create-extended-linear-ramp-to-value-automation-event.js","../../node_modules/automation-events/build/es2019/functions/create-set-value-automation-event.js","../../node_modules/automation-events/build/es2019/functions/create-set-value-curve-automation-event.js","../../node_modules/automation-events/build/es2019/functions/get-target-value-at-time.js","../../node_modules/automation-events/build/es2019/guards/exponential-ramp-to-value-automation-event.js","../../node_modules/automation-events/build/es2019/guards/linear-ramp-to-value-automation-event.js","../../node_modules/automation-events/build/es2019/guards/any-ramp-to-value-automation-event.js","../../node_modules/automation-events/build/es2019/guards/set-value-automation-event.js","../../node_modules/automation-events/build/es2019/guards/set-value-curve-automation-event.js","../../node_modules/automation-events/build/es2019/functions/get-value-of-automation-event-at-index-at-time.js","../../node_modules/automation-events/build/es2019/functions/get-end-time-and-value-of-previous-automation-event.js","../../node_modules/automation-events/build/es2019/guards/cancel-and-hold-automation-event.js","../../node_modules/automation-events/build/es2019/guards/cancel-scheduled-values-automation-event.js","../../node_modules/automation-events/build/es2019/functions/get-event-time.js","../../node_modules/automation-events/build/es2019/functions/get-exponential-ramp-value-at-time.js","../../node_modules/automation-events/build/es2019/functions/get-linear-ramp-value-at-time.js","../../node_modules/automation-events/build/es2019/functions/get-value-curve-value-at-time.js","../../node_modules/automation-events/build/es2019/functions/interpolate-value.js","../../node_modules/automation-events/build/es2019/guards/set-target-automation-event.js","../../node_modules/automation-events/build/es2019/classes/automation-event-list.js","../../node_modules/automation-events/build/es2019/functions/create-cancel-and-hold-automation-event.js","../../node_modules/standardized-audio-context/build/es2019/globals.js","../../node_modules/standardized-audio-context/build/es2019/helpers/is-constructible.js","../../node_modules/standardized-audio-context/build/es2019/helpers/split-import-statements.js","../../node_modules/standardized-audio-context/build/es2019/factories/add-audio-worklet-module.js","../../node_modules/standardized-audio-context/build/es2019/factories/analyser-node-constructor.js","../../node_modules/standardized-audio-context/build/es2019/helpers/is-owned-by-context.js","../../node_modules/standardized-audio-context/build/es2019/helpers/test-audio-buffer-copy-channel-methods-out-of-bounds-support.js","../../node_modules/standardized-audio-context/build/es2019/factories/index-size-error.js","../../node_modules/standardized-audio-context/build/es2019/helpers/wrap-audio-buffer-get-channel-data-method.js","../../node_modules/standardized-audio-context/build/es2019/factories/audio-buffer-constructor.js","../../node_modules/standardized-audio-context/build/es2019/constants.js","../../node_modules/standardized-audio-context/build/es2019/helpers/get-value-for-key.js","../../node_modules/standardized-audio-context/build/es2019/helpers/get-event-listeners-of-audio-node.js","../../node_modules/standardized-audio-context/build/es2019/helpers/set-internal-state-to-active.js","../../node_modules/standardized-audio-context/build/es2019/helpers/set-internal-state-to-passive.js","../../node_modules/standardized-audio-context/build/es2019/factories/audio-buffer-source-node-constructor.js","../../node_modules/standardized-audio-context/build/es2019/guards/audio-node.js","../../node_modules/standardized-audio-context/build/es2019/guards/audio-node-output-connection.js","../../node_modules/standardized-audio-context/build/es2019/guards/audio-worklet-node.js","../../node_modules/standardized-audio-context/build/es2019/guards/native-audio-node-faker.js","../../node_modules/standardized-audio-context/build/es2019/helpers/connect-native-audio-node-to-native-audio-node.js","../../node_modules/standardized-audio-context/build/es2019/helpers/delete-event-listeners-of-audio-node.js","../../node_modules/standardized-audio-context/build/es2019/helpers/disconnect-native-audio-node-from-native-audio-node.js","../../node_modules/standardized-audio-context/build/es2019/helpers/get-audio-node-connections.js","../../node_modules/standardized-audio-context/build/es2019/helpers/get-audio-param-connections.js","../../node_modules/standardized-audio-context/build/es2019/helpers/get-native-audio-node.js","../../node_modules/standardized-audio-context/build/es2019/helpers/get-native-audio-param.js","../../node_modules/standardized-audio-context/build/es2019/helpers/insert-element-in-set.js","../../node_modules/standardized-audio-context/build/es2019/helpers/is-active-audio-node.js","../../node_modules/standardized-audio-context/build/es2019/helpers/is-part-of-a-cycle.js","../../node_modules/standardized-audio-context/build/es2019/helpers/is-passive-audio-node.js","../../node_modules/standardized-audio-context/build/es2019/helpers/pick-element-from-set.js","../../node_modules/standardized-audio-context/build/es2019/helpers/set-internal-state-to-passive-when-necessary.js","../../node_modules/standardized-audio-context/build/es2019/helpers/test-audio-node-disconnect-method-support.js","../../node_modules/standardized-audio-context/build/es2019/helpers/visit-each-audio-node-once.js","../../node_modules/standardized-audio-context/build/es2019/guards/native-audio-node.js","../../node_modules/standardized-audio-context/build/es2019/helpers/wrap-audio-node-disconnect-method.js","../../node_modules/standardized-audio-context/build/es2019/factories/audio-node-constructor.js","../../node_modules/standardized-audio-context/build/es2019/read-only-map.js","../../node_modules/standardized-audio-context/build/es2019/factories/audio-worklet-node-constructor.js","../../node_modules/standardized-audio-context/build/es2019/helpers/copy-from-channel.js","../../node_modules/standardized-audio-context/build/es2019/helpers/copy-to-channel.js","../../node_modules/standardized-audio-context/build/es2019/helpers/create-nested-arrays.js","../../node_modules/standardized-audio-context/build/es2019/factories/audio-worklet-node-renderer-factory.js","../../node_modules/standardized-audio-context/build/es2019/helpers/get-audio-worklet-processor.js","../../node_modules/standardized-audio-context/build/es2019/factories/biquad-filter-node-constructor.js","../../node_modules/standardized-audio-context/build/es2019/factories/channel-merger-node-constructor.js","../../node_modules/standardized-audio-context/build/es2019/factories/channel-splitter-node-constructor.js","../../node_modules/standardized-audio-context/build/es2019/factories/constant-source-node-constructor.js","../../node_modules/standardized-audio-context/build/es2019/factories/convolver-node-constructor.js","../../node_modules/standardized-audio-context/build/es2019/factories/delay-node-constructor.js","../../node_modules/standardized-audio-context/build/es2019/factories/disconnect-multiple-outputs.js","../../node_modules/standardized-audio-context/build/es2019/factories/dynamics-compressor-node-constructor.js","../../node_modules/standardized-audio-context/build/es2019/factories/gain-node-constructor.js","../../node_modules/standardized-audio-context/build/es2019/factories/invalid-state-error.js","../../node_modules/standardized-audio-context/build/es2019/factories/invalid-access-error.js","../../node_modules/standardized-audio-context/build/es2019/factories/iir-filter-node-constructor.js","../../node_modules/standardized-audio-context/build/es2019/helpers/filter-buffer.js","../../node_modules/standardized-audio-context/build/es2019/factories/media-stream-audio-destination-node-constructor.js","../../node_modules/standardized-audio-context/build/es2019/helpers/test-promise-support.js","../../node_modules/standardized-audio-context/build/es2019/helpers/assign-native-audio-node-option.js","../../node_modules/standardized-audio-context/build/es2019/helpers/assign-native-audio-node-options.js","../../node_modules/standardized-audio-context/build/es2019/helpers/test-analyser-node-get-float-time-domain-data-method-support.js","../../node_modules/standardized-audio-context/build/es2019/helpers/assign-native-audio-node-audio-param-value.js","../../node_modules/standardized-audio-context/build/es2019/helpers/wrap-audio-scheduled-source-node-start-method-negative-parameters.js","../../node_modules/standardized-audio-context/build/es2019/helpers/wrap-audio-scheduled-source-node-stop-method-negative-parameters.js","../../node_modules/standardized-audio-context/build/es2019/helpers/compute-buffer-size.js","../../node_modules/standardized-audio-context/build/es2019/helpers/create-audio-worklet-processor-promise.js","../../node_modules/standardized-audio-context/build/es2019/helpers/clone-audio-worklet-node-options.js","../../node_modules/standardized-audio-context/build/es2019/helpers/intercept-connections.js","../../node_modules/standardized-audio-context/build/es2019/factories/native-iir-filter-node-faker-factory.js","../../node_modules/standardized-audio-context/build/es2019/factories/not-supported-error.js","../../node_modules/standardized-audio-context/build/es2019/factories/offline-audio-context-constructor.js","../../node_modules/standardized-audio-context/build/es2019/factories/oscillator-node-constructor.js","../../node_modules/standardized-audio-context/build/es2019/factories/panner-node-constructor.js","../../node_modules/standardized-audio-context/build/es2019/factories/periodic-wave-constructor.js","../../node_modules/standardized-audio-context/build/es2019/factories/stereo-panner-node-constructor.js","../../node_modules/standardized-audio-context/build/es2019/factories/wave-shaper-node-constructor.js","../../node_modules/standardized-audio-context/build/es2019/helpers/is-dc-curve.js","../../node_modules/standardized-audio-context/build/es2019/helpers/overwrite-accessors.js","../../node_modules/standardized-audio-context/build/es2019/helpers/wrap-event-listener.js","../../node_modules/standardized-audio-context/build/es2019/module.js","../../node_modules/standardized-audio-context/build/es2019/factories/cache-test-result.js","../../node_modules/standardized-audio-context/build/es2019/factories/window.js","../../node_modules/standardized-audio-context/build/es2019/factories/native-offline-audio-context-constructor.js","../../node_modules/standardized-audio-context/build/es2019/factories/is-native-offline-audio-context.js","../../node_modules/standardized-audio-context/build/es2019/factories/native-audio-context-constructor.js","../../node_modules/standardized-audio-context/build/es2019/factories/get-backup-native-context.js","../../node_modules/standardized-audio-context/build/es2019/factories/native-audio-node-factory.js","../../node_modules/standardized-audio-context/build/es2019/factories/native-analyser-node-factory.js","../../node_modules/standardized-audio-context/build/es2019/helpers/wrap-analyser-node-get-float-time-domain-data-method.js","../../node_modules/standardized-audio-context/build/es2019/factories/get-audio-node-renderer.js","../../node_modules/standardized-audio-context/build/es2019/factories/render-inputs-of-audio-node.js","../../node_modules/standardized-audio-context/build/es2019/factories/analyser-node-renderer-factory.js","../../node_modules/standardized-audio-context/build/es2019/factories/get-native-context.js","../../node_modules/standardized-audio-context/build/es2019/factories/event-target-constructor.js","../../node_modules/standardized-audio-context/build/es2019/factories/is-native-audio-context.js","../../node_modules/standardized-audio-context/build/es2019/factories/is-native-audio-node.js","../../node_modules/standardized-audio-context/build/es2019/factories/is-native-audio-param.js","../../node_modules/standardized-audio-context/build/es2019/factories/add-audio-node-connections.js","../../node_modules/standardized-audio-context/build/es2019/factories/increment-cycle-counter-factory.js","../../node_modules/standardized-audio-context/build/es2019/factories/decrement-cycle-counter.js","../../node_modules/standardized-audio-context/build/es2019/factories/detect-cycles.js","../../node_modules/standardized-audio-context/build/es2019/guards/delay-node.js","../../node_modules/standardized-audio-context/build/es2019/factories/native-audio-buffer-constructor.js","../../node_modules/standardized-audio-context/build/es2019/factories/convert-number-to-unsigned-long.js","../../node_modules/standardized-audio-context/build/es2019/factories/wrap-audio-buffer-copy-channel-methods.js","../../node_modules/standardized-audio-context/build/es2019/factories/wrap-audio-buffer-copy-channel-methods-out-of-bounds.js","../../node_modules/standardized-audio-context/build/es2019/factories/test-audio-buffer-constructor-support.js","../../node_modules/standardized-audio-context/build/es2019/factories/test-audio-scheduled-source-node-start-method-negative-parameters-support.js","../../node_modules/standardized-audio-context/build/es2019/factories/test-audio-scheduled-source-node-stop-method-consecutive-calls-support.js","../../node_modules/standardized-audio-context/build/es2019/factories/test-audio-scheduled-source-node-stop-method-negative-parameters-support.js","../../node_modules/standardized-audio-context/build/es2019/factories/wrap-audio-scheduled-source-node-stop-method-consecutive-calls.js","../../node_modules/standardized-audio-context/build/es2019/factories/render-inputs-of-audio-param.js","../../node_modules/standardized-audio-context/build/es2019/factories/connect-audio-param.js","../../node_modules/standardized-audio-context/build/es2019/factories/native-audio-buffer-source-node-factory.js","../../node_modules/standardized-audio-context/build/es2019/helpers/wrap-audio-buffer-source-node-start-method-consecutive-calls.js","../../node_modules/standardized-audio-context/build/es2019/helpers/wrap-audio-buffer-source-node-start-method-duration-parameter.js","../../node_modules/standardized-audio-context/build/es2019/factories/test-audio-buffer-source-node-start-method-consecutive-calls-support.js","../../node_modules/standardized-audio-context/build/es2019/factories/test-audio-buffer-source-node-start-method-duration-parameter-support.js","../../node_modules/standardized-audio-context/build/es2019/factories/test-audio-buffer-source-node-start-method-offset-clamping-support.js","../../node_modules/standardized-audio-context/build/es2019/factories/test-audio-buffer-source-node-stop-method-nullified-buffer-support.js","../../node_modules/standardized-audio-context/build/es2019/helpers/wrap-audio-buffer-source-node-start-method-offset-clamping.js","../../node_modules/standardized-audio-context/build/es2019/factories/wrap-audio-buffer-source-node-stop-method-nullified-buffer.js","../../node_modules/standardized-audio-context/build/es2019/factories/render-automation.js","../../node_modules/standardized-audio-context/build/es2019/factories/get-audio-param-renderer.js","../../node_modules/standardized-audio-context/build/es2019/factories/audio-buffer-source-node-renderer-factory.js","../../node_modules/standardized-audio-context/build/es2019/factories/audio-param-factory.js","../../node_modules/standardized-audio-context/build/es2019/factories/add-audio-param-connections.js","../../node_modules/standardized-audio-context/build/es2019/factories/audio-param-renderer.js","../../node_modules/automation-events/build/es2019/functions/create-cancel-scheduled-values-automation-event.js","../../node_modules/automation-events/build/es2019/functions/create-exponential-ramp-to-value-automation-event.js","../../node_modules/automation-events/build/es2019/functions/create-linear-ramp-to-value-automation-event.js","../../node_modules/automation-events/build/es2019/functions/create-set-target-automation-event.js","../../node_modules/standardized-audio-context/build/es2019/factories/native-gain-node-factory.js","../../node_modules/standardized-audio-context/build/es2019/factories/audio-destination-node-constructor.js","../../node_modules/standardized-audio-context/build/es2019/factories/audio-destination-node-renderer-factory.js","../../node_modules/standardized-audio-context/build/es2019/factories/native-audio-destination-node.js","../../node_modules/standardized-audio-context/build/es2019/factories/native-biquad-filter-node-factory.js","../../node_modules/standardized-audio-context/build/es2019/factories/biquad-filter-node-renderer-factory.js","../../node_modules/standardized-audio-context/build/es2019/factories/monitor-connections.js","../../node_modules/standardized-audio-context/build/es2019/factories/wrap-channel-merger-node.js","../../node_modules/standardized-audio-context/build/es2019/factories/native-channel-merger-node-factory.js","../../node_modules/standardized-audio-context/build/es2019/factories/channel-merger-node-renderer-factory.js","../../node_modules/standardized-audio-context/build/es2019/factories/native-channel-splitter-node-factory.js","../../node_modules/standardized-audio-context/build/es2019/helpers/wrap-channel-splitter-node.js","../../node_modules/standardized-audio-context/build/es2019/factories/channel-splitter-node-renderer-factory.js","../../node_modules/standardized-audio-context/build/es2019/factories/native-constant-source-node-factory.js","../../node_modules/standardized-audio-context/build/es2019/factories/native-constant-source-node-faker-factory.js","../../node_modules/standardized-audio-context/build/es2019/factories/constant-source-node-renderer-factory.js","../../node_modules/standardized-audio-context/build/es2019/factories/native-convolver-node-faker-factory.js","../../node_modules/standardized-audio-context/build/es2019/factories/native-convolver-node-factory.js","../../node_modules/standardized-audio-context/build/es2019/factories/convolver-node-renderer-factory.js","../../node_modules/standardized-audio-context/build/es2019/factories/native-delay-node-factory.js","../../node_modules/standardized-audio-context/build/es2019/factories/delay-node-renderer-factory.js","../../node_modules/standardized-audio-context/build/es2019/factories/native-dynamics-compressor-node-factory.js","../../node_modules/standardized-audio-context/build/es2019/factories/dynamics-compressor-node-renderer-factory.js","../../node_modules/standardized-audio-context/build/es2019/factories/gain-node-renderer-factory.js","../../node_modules/standardized-audio-context/build/es2019/factories/native-script-processor-node-factory.js","../../node_modules/standardized-audio-context/build/es2019/factories/render-native-offline-audio-context.js","../../node_modules/standardized-audio-context/build/es2019/factories/test-offline-audio-context-current-time-support.js","../../node_modules/standardized-audio-context/build/es2019/factories/iir-filter-node-renderer-factory.js","../../node_modules/standardized-audio-context/build/es2019/helpers/wrap-iir-filter-node-get-frequency-response-method.js","../../node_modules/standardized-audio-context/build/es2019/factories/native-iir-filter-node-factory.js","../../node_modules/standardized-audio-context/build/es2019/factories/audio-listener-factory.js","../../node_modules/standardized-audio-context/build/es2019/factories/minimal-base-audio-context-constructor.js","../../node_modules/standardized-audio-context/build/es2019/factories/native-oscillator-node-factory.js","../../node_modules/standardized-audio-context/build/es2019/factories/oscillator-node-renderer-factory.js","../../node_modules/standardized-audio-context/build/es2019/factories/connected-native-audio-buffer-source-node-factory.js","../../node_modules/standardized-audio-context/build/es2019/factories/native-wave-shaper-node-faker-factory.js","../../node_modules/standardized-audio-context/build/es2019/factories/native-wave-shaper-node-factory.js","../../node_modules/standardized-audio-context/build/es2019/factories/native-panner-node-faker-factory.js","../../node_modules/standardized-audio-context/build/es2019/factories/native-panner-node-factory.js","../../node_modules/standardized-audio-context/build/es2019/factories/panner-node-renderer-factory.js","../../node_modules/standardized-audio-context/build/es2019/factories/native-periodic-wave-factory.js","../../node_modules/standardized-audio-context/build/es2019/factories/native-stereo-panner-node-factory.js","../../node_modules/standardized-audio-context/build/es2019/factories/native-stereo-panner-node-faker-factory.js","../../node_modules/standardized-audio-context/build/es2019/factories/stereo-panner-node-renderer-factory.js","../../node_modules/standardized-audio-context/build/es2019/factories/wave-shaper-node-renderer-factory.js","../../node_modules/standardized-audio-context/build/es2019/factories/is-secure-context.js","../../node_modules/standardized-audio-context/build/es2019/factories/expose-current-frame-and-current-time.js","../../node_modules/standardized-audio-context/build/es2019/factories/evaluate-source.js","../../node_modules/standardized-audio-context/build/es2019/factories/fetch-source.js","../../node_modules/standardized-audio-context/build/es2019/factories/abort-error.js","../../node_modules/standardized-audio-context/build/es2019/factories/is-native-context.js","../../node_modules/standardized-audio-context/build/es2019/factories/base-audio-context-constructor.js","../../node_modules/standardized-audio-context/build/es2019/factories/decode-audio-data.js","../../node_modules/standardized-audio-context/build/es2019/helpers/detach-array-buffer.js","../../node_modules/standardized-audio-context/build/es2019/factories/data-clone-error.js","../../node_modules/standardized-audio-context/build/es2019/factories/encoding-error.js","../../node_modules/standardized-audio-context/build/es2019/factories/media-element-audio-source-node-constructor.js","../../node_modules/standardized-audio-context/build/es2019/factories/native-media-element-audio-source-node-factory.js","../../node_modules/standardized-audio-context/build/es2019/factories/native-media-stream-audio-destination-node-factory.js","../../node_modules/standardized-audio-context/build/es2019/factories/media-stream-audio-source-node-constructor.js","../../node_modules/standardized-audio-context/build/es2019/factories/native-media-stream-audio-source-node-factory.js","../../node_modules/standardized-audio-context/build/es2019/factories/media-stream-track-audio-source-node-constructor.js","../../node_modules/standardized-audio-context/build/es2019/factories/native-media-stream-track-audio-source-node-factory.js","../../node_modules/standardized-audio-context/build/es2019/factories/audio-context-constructor.js","../../node_modules/standardized-audio-context/build/es2019/helpers/is-valid-latency-hint.js","../../node_modules/standardized-audio-context/build/es2019/factories/unknown-error.js","../../node_modules/standardized-audio-context/build/es2019/factories/get-unrendered-audio-worklet-nodes.js","../../node_modules/standardized-audio-context/build/es2019/factories/add-unrendered-audio-worklet-node.js","../../node_modules/standardized-audio-context/build/es2019/factories/connect-multiple-outputs.js","../../node_modules/standardized-audio-context/build/es2019/factories/delete-unrendered-audio-worklet-node.js","../../node_modules/standardized-audio-context/build/es2019/factories/native-audio-worklet-node-faker-factory.js","../../node_modules/standardized-audio-context/build/es2019/helpers/create-audio-worklet-processor.js","../../node_modules/standardized-audio-context/build/es2019/factories/native-audio-worklet-node-factory.js","../../node_modules/standardized-audio-context/build/es2019/helpers/test-clonability-of-audio-worklet-node-options.js","../../node_modules/standardized-audio-context/build/es2019/factories/native-audio-worklet-node-constructor.js","../../node_modules/standardized-audio-context/build/es2019/factories/create-native-offline-audio-context.js","../../node_modules/standardized-audio-context/build/es2019/factories/start-rendering.js","../../node_modules/standardized-audio-context/build/es2019/factories/is-any-audio-context.js","../../node_modules/standardized-audio-context/build/es2019/factories/is-any-audio-node.js","../../node_modules/standardized-audio-context/build/es2019/factories/is-any-audio-param.js","../../node_modules/standardized-audio-context/build/es2019/factories/is-any-offline-audio-context.js","../../node_modules/tslib/tslib.es6.js","../../node_modules/tone/build/esm/core/util/Debug.js","../../node_modules/tone/build/esm/core/util/TypeCheck.js","../../node_modules/tone/build/esm/core/context/AudioContext.js","../../node_modules/tone/build/esm/core/clock/Ticker.js","../../node_modules/tone/build/esm/core/util/AdvancedTypeCheck.js","../../node_modules/tone/build/esm/core/util/Defaults.js","../../node_modules/tone/build/esm/core/Tone.js","../../node_modules/tone/build/esm/version.js","../../node_modules/tone/build/esm/core/util/Math.js","../../node_modules/tone/build/esm/core/util/Timeline.js","../../node_modules/tone/build/esm/core/context/ContextInitialization.js","../../node_modules/tone/build/esm/core/util/Emitter.js","../../node_modules/tone/build/esm/core/context/BaseContext.js","../../node_modules/tone/build/esm/core/context/Context.js","../../node_modules/tone/build/esm/core/context/DummyContext.js","../../node_modules/tone/build/esm/core/util/Interface.js","../../node_modules/tone/build/esm/core/context/ToneAudioBuffer.js","../../node_modules/tone/build/esm/core/context/OfflineContext.js","../../node_modules/tone/build/esm/core/Global.js","../../node_modules/tone/build/esm/core/type/Conversions.js","../../node_modules/tone/build/esm/core/type/TimeBase.js","../../node_modules/tone/build/esm/core/type/Time.js","../../node_modules/tone/build/esm/core/type/Frequency.js","../../node_modules/tone/build/esm/core/type/TransportTime.js","../../node_modules/tone/build/esm/core/context/ToneWithContext.js","../../node_modules/tone/build/esm/core/util/StateTimeline.js","../../node_modules/tone/build/esm/core/context/Param.js","../../node_modules/tone/build/esm/core/context/ToneAudioNode.js","../../node_modules/tone/build/esm/core/context/Gain.js","../../node_modules/tone/build/esm/source/OneShotSource.js","../../node_modules/tone/build/esm/signal/ToneConstantSource.js","../../node_modules/tone/build/esm/signal/Signal.js","../../node_modules/tone/build/esm/core/clock/TickParam.js","../../node_modules/tone/build/esm/core/clock/TickSignal.js","../../node_modules/tone/build/esm/core/clock/TickSource.js","../../node_modules/tone/build/esm/core/clock/Clock.js","../../node_modules/tone/build/esm/core/util/TimelineValue.js","../../node_modules/tone/build/esm/core/type/Ticks.js","../../node_modules/tone/build/esm/core/util/IntervalTimeline.js","../../node_modules/tone/build/esm/core/clock/TransportEvent.js","../../node_modules/tone/build/esm/core/clock/TransportRepeatEvent.js","../../node_modules/tone/build/esm/core/clock/Transport.js","../../node_modules/tone/build/esm/core/context/Delay.js","../../node_modules/tone/build/esm/component/channel/Volume.js","../../node_modules/tone/build/esm/core/context/Destination.js","../../node_modules/tone/build/esm/core/context/ToneAudioBuffers.js","../../node_modules/tone/build/esm/core/type/Midi.js","../../node_modules/tone/build/esm/core/util/Draw.js","../../node_modules/tone/build/esm/source/Source.js","../../node_modules/tone/build/esm/source/buffer/ToneBufferSource.js","../../node_modules/tone/build/esm/source/Noise.js","../../node_modules/tone/build/esm/source/UserMedia.js","../../node_modules/tone/build/esm/source/oscillator/OscillatorInterface.js","../../node_modules/tone/build/esm/source/oscillator/ToneOscillatorNode.js","../../node_modules/tone/build/esm/source/oscillator/Oscillator.js","../../node_modules/tone/build/esm/signal/SignalOperator.js","../../node_modules/tone/build/esm/signal/WaveShaper.js","../../node_modules/tone/build/esm/signal/AudioToGain.js","../../node_modules/tone/build/esm/signal/Multiply.js","../../node_modules/tone/build/esm/source/oscillator/AMOscillator.js","../../node_modules/tone/build/esm/source/oscillator/FMOscillator.js","../../node_modules/tone/build/esm/source/oscillator/PulseOscillator.js","../../node_modules/tone/build/esm/source/oscillator/FatOscillator.js","../../node_modules/tone/build/esm/source/oscillator/PWMOscillator.js","../../node_modules/tone/build/esm/source/oscillator/OmniOscillator.js","../../node_modules/tone/build/esm/signal/Add.js","../../node_modules/tone/build/esm/signal/Scale.js","../../node_modules/tone/build/esm/signal/Zero.js","../../node_modules/tone/build/esm/source/oscillator/LFO.js","../../node_modules/tone/build/esm/core/util/Decorator.js","../../node_modules/tone/build/esm/source/buffer/Player.js","../../node_modules/tone/build/esm/signal/Abs.js","../../node_modules/tone/build/esm/source/buffer/Players.js","../../node_modules/tone/build/esm/source/buffer/GrainPlayer.js","../../node_modules/tone/build/esm/signal/GainToAudio.js","../../node_modules/tone/build/esm/signal/Negate.js","../../node_modules/tone/build/esm/signal/Subtract.js","../../node_modules/tone/build/esm/signal/GreaterThanZero.js","../../node_modules/tone/build/esm/signal/GreaterThan.js","../../node_modules/tone/build/esm/signal/Pow.js","../../node_modules/tone/build/esm/signal/ScaleExp.js","../../node_modules/tone/build/esm/component/envelope/Envelope.js","../../node_modules/tone/build/esm/signal/SyncedSignal.js","../../node_modules/tone/build/esm/instrument/Instrument.js","../../node_modules/tone/build/esm/instrument/Monophonic.js","../../node_modules/tone/build/esm/component/envelope/AmplitudeEnvelope.js","../../node_modules/tone/build/esm/instrument/Synth.js","../../node_modules/tone/build/esm/instrument/ModulationSynth.js","../../node_modules/tone/build/esm/component/filter/Filter.js","../../node_modules/tone/build/esm/instrument/AMSynth.js","../../node_modules/tone/build/esm/component/envelope/FrequencyEnvelope.js","../../node_modules/tone/build/esm/instrument/MonoSynth.js","../../node_modules/tone/build/esm/instrument/MetalSynth.js","../../node_modules/tone/build/esm/instrument/DuoSynth.js","../../node_modules/tone/build/esm/instrument/FMSynth.js","../../node_modules/tone/build/esm/core/context/ToneAudioWorklet.js","../../node_modules/tone/build/esm/instrument/MembraneSynth.js","../../node_modules/tone/build/esm/instrument/NoiseSynth.js","../../node_modules/tone/build/esm/component/filter/FeedbackCombFilter.js","../../node_modules/tone/build/esm/component/filter/OnePoleFilter.js","../../node_modules/tone/build/esm/component/filter/LowpassCombFilter.js","../../node_modules/tone/build/esm/instrument/PolySynth.js","../../node_modules/tone/build/esm/instrument/PluckSynth.js","../../node_modules/tone/build/esm/event/ToneEvent.js","../../node_modules/tone/build/esm/instrument/Sampler.js","../../node_modules/tone/build/esm/event/Loop.js","../../node_modules/tone/build/esm/event/Part.js","../../node_modules/tone/build/esm/event/PatternGenerator.js","../../node_modules/tone/build/esm/event/Pattern.js","../../node_modules/tone/build/esm/event/Sequence.js","../../node_modules/tone/build/esm/component/channel/CrossFade.js","../../node_modules/tone/build/esm/effect/Effect.js","../../node_modules/tone/build/esm/effect/LFOEffect.js","../../node_modules/tone/build/esm/component/channel/Panner.js","../../node_modules/tone/build/esm/effect/AutoFilter.js","../../node_modules/tone/build/esm/component/analysis/Follower.js","../../node_modules/tone/build/esm/effect/AutoPanner.js","../../node_modules/tone/build/esm/effect/BitCrusher.js","../../node_modules/tone/build/esm/effect/AutoWah.js","../../node_modules/tone/build/esm/component/channel/Split.js","../../node_modules/tone/build/esm/effect/Chebyshev.js","../../node_modules/tone/build/esm/component/channel/Merge.js","../../node_modules/tone/build/esm/effect/StereoEffect.js","../../node_modules/tone/build/esm/effect/StereoFeedbackEffect.js","../../node_modules/tone/build/esm/effect/FeedbackEffect.js","../../node_modules/tone/build/esm/effect/Chorus.js","../../node_modules/tone/build/esm/effect/Distortion.js","../../node_modules/tone/build/esm/component/filter/PhaseShiftAllpass.js","../../node_modules/tone/build/esm/effect/FeedbackDelay.js","../../node_modules/tone/build/esm/effect/Freeverb.js","../../node_modules/tone/build/esm/effect/FrequencyShifter.js","../../node_modules/tone/build/esm/effect/JCReverb.js","../../node_modules/tone/build/esm/effect/StereoXFeedbackEffect.js","../../node_modules/tone/build/esm/component/channel/MidSideSplit.js","../../node_modules/tone/build/esm/effect/PingPongDelay.js","../../node_modules/tone/build/esm/effect/PitchShift.js","../../node_modules/tone/build/esm/effect/Phaser.js","../../node_modules/tone/build/esm/effect/Reverb.js","../../node_modules/tone/build/esm/component/channel/MidSideMerge.js","../../node_modules/tone/build/esm/effect/MidSideEffect.js","../../node_modules/tone/build/esm/component/analysis/Analyser.js","../../node_modules/tone/build/esm/effect/StereoWidener.js","../../node_modules/tone/build/esm/effect/Tremolo.js","../../node_modules/tone/build/esm/effect/Vibrato.js","../../node_modules/tone/build/esm/component/analysis/MeterBase.js","../../node_modules/tone/build/esm/component/channel/Solo.js","../../node_modules/tone/build/esm/component/analysis/Meter.js","../../node_modules/tone/build/esm/component/analysis/FFT.js","../../node_modules/tone/build/esm/component/analysis/DCMeter.js","../../node_modules/tone/build/esm/component/analysis/Waveform.js","../../node_modules/tone/build/esm/component/channel/PanVol.js","../../node_modules/tone/build/esm/component/channel/MultibandSplit.js","../../node_modules/tone/build/esm/component/channel/Channel.js","../../node_modules/tone/build/esm/core/context/Listener.js","../../node_modules/tone/build/esm/component/channel/Panner3D.js","../../node_modules/tone/build/esm/component/dynamics/Compressor.js","../../node_modules/tone/build/esm/component/dynamics/Gate.js","../../node_modules/tone/build/esm/component/dynamics/Limiter.js","../../node_modules/tone/build/esm/component/dynamics/MidSideCompressor.js","../../node_modules/tone/build/esm/component/dynamics/MultibandCompressor.js","../../node_modules/tone/build/esm/component/filter/EQ3.js","../../node_modules/tone/build/esm/component/filter/Convolver.js","../../node_modules/tone/build/esm/index.js","../../src/playNotes.js","../../src/script.js"],"sourcesContent":["export const createExtendedExponentialRampToValueAutomationEvent = (value, endTime, insertTime) => {\n    return { endTime, insertTime, type: 'exponentialRampToValue', value };\n};\n//# sourceMappingURL=/build/es2019/functions/create-extended-exponential-ramp-to-value-automation-event.js.map","export const createExtendedLinearRampToValueAutomationEvent = (value, endTime, insertTime) => {\n    return { endTime, insertTime, type: 'linearRampToValue', value };\n};\n//# sourceMappingURL=/build/es2019/functions/create-extended-linear-ramp-to-value-automation-event.js.map","export const createSetValueAutomationEvent = (value, startTime) => {\n    return { startTime, type: 'setValue', value };\n};\n//# sourceMappingURL=/build/es2019/functions/create-set-value-automation-event.js.map","export const createSetValueCurveAutomationEvent = (values, startTime, duration) => {\n    return { duration, startTime, type: 'setValueCurve', values };\n};\n//# sourceMappingURL=/build/es2019/functions/create-set-value-curve-automation-event.js.map","export const getTargetValueAtTime = (time, valueAtStartTime, { startTime, target, timeConstant }) => {\n    return target + (valueAtStartTime - target) * Math.exp((startTime - time) / timeConstant);\n};\n//# sourceMappingURL=/build/es2019/functions/get-target-value-at-time.js.map","export const isExponentialRampToValueAutomationEvent = (automationEvent) => {\n    return automationEvent.type === 'exponentialRampToValue';\n};\n//# sourceMappingURL=/build/es2019/guards/exponential-ramp-to-value-automation-event.js.map","export const isLinearRampToValueAutomationEvent = (automationEvent) => {\n    return automationEvent.type === 'linearRampToValue';\n};\n//# sourceMappingURL=/build/es2019/guards/linear-ramp-to-value-automation-event.js.map","import { isExponentialRampToValueAutomationEvent } from './exponential-ramp-to-value-automation-event';\nimport { isLinearRampToValueAutomationEvent } from './linear-ramp-to-value-automation-event';\nexport const isAnyRampToValueAutomationEvent = (automationEvent) => {\n    return isExponentialRampToValueAutomationEvent(automationEvent) || isLinearRampToValueAutomationEvent(automationEvent);\n};\n//# sourceMappingURL=/build/es2019/guards/any-ramp-to-value-automation-event.js.map","export const isSetValueAutomationEvent = (automationEvent) => {\n    return automationEvent.type === 'setValue';\n};\n//# sourceMappingURL=/build/es2019/guards/set-value-automation-event.js.map","export const isSetValueCurveAutomationEvent = (automationEvent) => {\n    return automationEvent.type === 'setValueCurve';\n};\n//# sourceMappingURL=/build/es2019/guards/set-value-curve-automation-event.js.map","import { getTargetValueAtTime } from '../functions/get-target-value-at-time';\nimport { isAnyRampToValueAutomationEvent } from '../guards/any-ramp-to-value-automation-event';\nimport { isSetValueAutomationEvent } from '../guards/set-value-automation-event';\nimport { isSetValueCurveAutomationEvent } from '../guards/set-value-curve-automation-event';\nexport const getValueOfAutomationEventAtIndexAtTime = (automationEvents, index, time, defaultValue) => {\n    const automationEvent = automationEvents[index];\n    return (automationEvent === undefined)\n        ? defaultValue\n        : (isAnyRampToValueAutomationEvent(automationEvent) || isSetValueAutomationEvent(automationEvent))\n            ? automationEvent.value\n            : (isSetValueCurveAutomationEvent(automationEvent))\n                ? automationEvent.values[automationEvent.values.length - 1]\n                : getTargetValueAtTime(time, getValueOfAutomationEventAtIndexAtTime(automationEvents, index - 1, automationEvent.startTime, defaultValue), automationEvent);\n};\n//# sourceMappingURL=/build/es2019/functions/get-value-of-automation-event-at-index-at-time.js.map","import { getValueOfAutomationEventAtIndexAtTime } from '../functions/get-value-of-automation-event-at-index-at-time';\nimport { isAnyRampToValueAutomationEvent } from '../guards/any-ramp-to-value-automation-event';\nimport { isSetValueAutomationEvent } from '../guards/set-value-automation-event';\nimport { isSetValueCurveAutomationEvent } from '../guards/set-value-curve-automation-event';\nexport const getEndTimeAndValueOfPreviousAutomationEvent = (automationEvents, index, currentAutomationEvent, nextAutomationEvent, defaultValue) => {\n    return (currentAutomationEvent === undefined)\n        ? [nextAutomationEvent.insertTime, defaultValue]\n        : (isAnyRampToValueAutomationEvent(currentAutomationEvent))\n            ? [currentAutomationEvent.endTime, currentAutomationEvent.value]\n            : (isSetValueAutomationEvent(currentAutomationEvent))\n                ? [currentAutomationEvent.startTime, currentAutomationEvent.value]\n                : (isSetValueCurveAutomationEvent(currentAutomationEvent))\n                    ? [\n                        currentAutomationEvent.startTime + currentAutomationEvent.duration,\n                        currentAutomationEvent.values[currentAutomationEvent.values.length - 1]\n                    ]\n                    : [\n                        currentAutomationEvent.startTime,\n                        getValueOfAutomationEventAtIndexAtTime(automationEvents, index - 1, currentAutomationEvent.startTime, defaultValue)\n                    ];\n};\n//# sourceMappingURL=/build/es2019/functions/get-end-time-and-value-of-previous-automation-event.js.map","export const isCancelAndHoldAutomationEvent = (automationEvent) => {\n    return automationEvent.type === 'cancelAndHold';\n};\n//# sourceMappingURL=/build/es2019/guards/cancel-and-hold-automation-event.js.map","export const isCancelScheduledValuesAutomationEvent = (automationEvent) => {\n    return automationEvent.type === 'cancelScheduledValues';\n};\n//# sourceMappingURL=/build/es2019/guards/cancel-scheduled-values-automation-event.js.map","import { isCancelAndHoldAutomationEvent } from '../guards/cancel-and-hold-automation-event';\nimport { isCancelScheduledValuesAutomationEvent } from '../guards/cancel-scheduled-values-automation-event';\nimport { isExponentialRampToValueAutomationEvent } from '../guards/exponential-ramp-to-value-automation-event';\nimport { isLinearRampToValueAutomationEvent } from '../guards/linear-ramp-to-value-automation-event';\nexport const getEventTime = (automationEvent) => {\n    if (isCancelAndHoldAutomationEvent(automationEvent) || isCancelScheduledValuesAutomationEvent(automationEvent)) {\n        return automationEvent.cancelTime;\n    }\n    if (isExponentialRampToValueAutomationEvent(automationEvent) || isLinearRampToValueAutomationEvent(automationEvent)) {\n        return automationEvent.endTime;\n    }\n    return automationEvent.startTime;\n};\n//# sourceMappingURL=/build/es2019/functions/get-event-time.js.map","export const getExponentialRampValueAtTime = (time, startTime, valueAtStartTime, { endTime, value }) => {\n    if (valueAtStartTime === value) {\n        return value;\n    }\n    if ((0 < valueAtStartTime && 0 < value) || (valueAtStartTime < 0 && value < 0)) {\n        return valueAtStartTime * ((value / valueAtStartTime) ** ((time - startTime) / (endTime - startTime)));\n    }\n    return 0;\n};\n//# sourceMappingURL=/build/es2019/functions/get-exponential-ramp-value-at-time.js.map","export const getLinearRampValueAtTime = (time, startTime, valueAtStartTime, { endTime, value }) => {\n    return valueAtStartTime + ((time - startTime) / (endTime - startTime) * (value - valueAtStartTime));\n};\n//# sourceMappingURL=/build/es2019/functions/get-linear-ramp-value-at-time.js.map","import { interpolateValue } from './interpolate-value';\nexport const getValueCurveValueAtTime = (time, { duration, startTime, values }) => {\n    const theoreticIndex = ((time - startTime) / duration) * (values.length - 1);\n    return interpolateValue(values, theoreticIndex);\n};\n//# sourceMappingURL=/build/es2019/functions/get-value-curve-value-at-time.js.map","export const interpolateValue = (values, theoreticIndex) => {\n    const lowerIndex = Math.floor(theoreticIndex);\n    const upperIndex = Math.ceil(theoreticIndex);\n    if (lowerIndex === upperIndex) {\n        return values[lowerIndex];\n    }\n    return ((1 - (theoreticIndex - lowerIndex)) * values[lowerIndex]) + ((1 - (upperIndex - theoreticIndex)) * values[upperIndex]);\n};\n//# sourceMappingURL=/build/es2019/functions/interpolate-value.js.map","export const isSetTargetAutomationEvent = (automationEvent) => {\n    return automationEvent.type === 'setTarget';\n};\n//# sourceMappingURL=/build/es2019/guards/set-target-automation-event.js.map","import { createExtendedExponentialRampToValueAutomationEvent } from '../functions/create-extended-exponential-ramp-to-value-automation-event';\nimport { createExtendedLinearRampToValueAutomationEvent } from '../functions/create-extended-linear-ramp-to-value-automation-event';\nimport { createSetValueAutomationEvent } from '../functions/create-set-value-automation-event';\nimport { createSetValueCurveAutomationEvent } from '../functions/create-set-value-curve-automation-event';\nimport { getEndTimeAndValueOfPreviousAutomationEvent } from '../functions/get-end-time-and-value-of-previous-automation-event';\nimport { getEventTime } from '../functions/get-event-time';\nimport { getExponentialRampValueAtTime } from '../functions/get-exponential-ramp-value-at-time';\nimport { getLinearRampValueAtTime } from '../functions/get-linear-ramp-value-at-time';\nimport { getTargetValueAtTime } from '../functions/get-target-value-at-time';\nimport { getValueCurveValueAtTime } from '../functions/get-value-curve-value-at-time';\nimport { getValueOfAutomationEventAtIndexAtTime } from '../functions/get-value-of-automation-event-at-index-at-time';\nimport { isAnyRampToValueAutomationEvent } from '../guards/any-ramp-to-value-automation-event';\nimport { isCancelAndHoldAutomationEvent } from '../guards/cancel-and-hold-automation-event';\nimport { isCancelScheduledValuesAutomationEvent } from '../guards/cancel-scheduled-values-automation-event';\nimport { isExponentialRampToValueAutomationEvent } from '../guards/exponential-ramp-to-value-automation-event';\nimport { isLinearRampToValueAutomationEvent } from '../guards/linear-ramp-to-value-automation-event';\nimport { isSetTargetAutomationEvent } from '../guards/set-target-automation-event';\nimport { isSetValueAutomationEvent } from '../guards/set-value-automation-event';\nimport { isSetValueCurveAutomationEvent } from '../guards/set-value-curve-automation-event';\nexport class AutomationEventList {\n    constructor(defaultValue) {\n        this._automationEvents = [];\n        this._currenTime = 0;\n        this._defaultValue = defaultValue;\n    }\n    [Symbol.iterator]() {\n        return this._automationEvents[Symbol.iterator]();\n    }\n    add(automationEvent) {\n        const eventTime = getEventTime(automationEvent);\n        if (isCancelAndHoldAutomationEvent(automationEvent) || isCancelScheduledValuesAutomationEvent(automationEvent)) {\n            const index = this._automationEvents\n                .findIndex((currentAutomationEvent) => (getEventTime(currentAutomationEvent) >= eventTime));\n            const removedAutomationEvent = this._automationEvents[index];\n            if (index !== -1) {\n                this._automationEvents = this._automationEvents.slice(0, index);\n            }\n            if (isCancelAndHoldAutomationEvent(automationEvent)) {\n                const lastAutomationEvent = this._automationEvents[this._automationEvents.length - 1];\n                if (removedAutomationEvent !== undefined && isAnyRampToValueAutomationEvent(removedAutomationEvent)) {\n                    if (isSetTargetAutomationEvent(lastAutomationEvent)) {\n                        throw new Error('The internal list is malformed.');\n                    }\n                    const startTime = isSetValueCurveAutomationEvent(lastAutomationEvent)\n                        ? lastAutomationEvent.startTime + lastAutomationEvent.duration\n                        : getEventTime(lastAutomationEvent);\n                    const startValue = isSetValueCurveAutomationEvent(lastAutomationEvent)\n                        ? lastAutomationEvent.values[lastAutomationEvent.values.length - 1]\n                        : lastAutomationEvent.value;\n                    const value = (isExponentialRampToValueAutomationEvent(removedAutomationEvent))\n                        ? getExponentialRampValueAtTime(eventTime, startTime, startValue, removedAutomationEvent)\n                        : getLinearRampValueAtTime(eventTime, startTime, startValue, removedAutomationEvent);\n                    const truncatedAutomationEvent = isExponentialRampToValueAutomationEvent(removedAutomationEvent)\n                        ? createExtendedExponentialRampToValueAutomationEvent(value, eventTime, this._currenTime)\n                        : createExtendedLinearRampToValueAutomationEvent(value, eventTime, this._currenTime);\n                    this._automationEvents.push(truncatedAutomationEvent);\n                }\n                if (lastAutomationEvent !== undefined && isSetTargetAutomationEvent(lastAutomationEvent)) {\n                    this._automationEvents.push(createSetValueAutomationEvent(this.getValue(eventTime), eventTime));\n                }\n                if (lastAutomationEvent !== undefined\n                    && isSetValueCurveAutomationEvent(lastAutomationEvent)\n                    && lastAutomationEvent.startTime + lastAutomationEvent.duration > eventTime) {\n                    this._automationEvents[this._automationEvents.length - 1] = createSetValueCurveAutomationEvent(new Float32Array([6, 7]), lastAutomationEvent.startTime, eventTime - lastAutomationEvent.startTime);\n                }\n            }\n        }\n        else {\n            const index = this._automationEvents\n                .findIndex((currentAutomationEvent) => (getEventTime(currentAutomationEvent) > eventTime));\n            const previousAutomationEvent = (index === -1)\n                ? this._automationEvents[this._automationEvents.length - 1]\n                : this._automationEvents[index - 1];\n            if (previousAutomationEvent !== undefined\n                && isSetValueCurveAutomationEvent(previousAutomationEvent)\n                && getEventTime(previousAutomationEvent) + previousAutomationEvent.duration > eventTime) {\n                return false;\n            }\n            const persistentAutomationEvent = isExponentialRampToValueAutomationEvent(automationEvent)\n                ? createExtendedExponentialRampToValueAutomationEvent(automationEvent.value, automationEvent.endTime, this._currenTime)\n                : isLinearRampToValueAutomationEvent(automationEvent)\n                    ? createExtendedLinearRampToValueAutomationEvent(automationEvent.value, eventTime, this._currenTime)\n                    : automationEvent;\n            if (index === -1) {\n                this._automationEvents.push(persistentAutomationEvent);\n            }\n            else {\n                if (isSetValueCurveAutomationEvent(automationEvent)\n                    && eventTime + automationEvent.duration > getEventTime(this._automationEvents[index])) {\n                    return false;\n                }\n                this._automationEvents.splice(index, 0, persistentAutomationEvent);\n            }\n        }\n        return true;\n    }\n    flush(time) {\n        const index = this._automationEvents\n            .findIndex((currentAutomationEvent) => (getEventTime(currentAutomationEvent) > time));\n        if (index > 1) {\n            const remainingAutomationEvents = this._automationEvents.slice(index - 1);\n            const firstRemainingAutomationEvent = remainingAutomationEvents[0];\n            if (isSetTargetAutomationEvent(firstRemainingAutomationEvent)) {\n                remainingAutomationEvents.unshift(createSetValueAutomationEvent(getValueOfAutomationEventAtIndexAtTime(this._automationEvents, index - 2, firstRemainingAutomationEvent.startTime, this._defaultValue), firstRemainingAutomationEvent.startTime));\n            }\n            this._automationEvents = remainingAutomationEvents;\n        }\n    }\n    getValue(time) {\n        if (this._automationEvents.length === 0) {\n            return this._defaultValue;\n        }\n        const lastAutomationEvent = this._automationEvents[this._automationEvents.length - 1];\n        const index = this._automationEvents\n            .findIndex((automationEvent) => (getEventTime(automationEvent) > time));\n        const nextAutomationEvent = this._automationEvents[index];\n        const currentAutomationEvent = (getEventTime(lastAutomationEvent) <= time)\n            ? lastAutomationEvent\n            : this._automationEvents[index - 1];\n        if (currentAutomationEvent !== undefined\n            && isSetTargetAutomationEvent(currentAutomationEvent)\n            && (nextAutomationEvent === undefined\n                || !isAnyRampToValueAutomationEvent(nextAutomationEvent)\n                || nextAutomationEvent.insertTime > time)) {\n            return getTargetValueAtTime(time, getValueOfAutomationEventAtIndexAtTime(this._automationEvents, index - 2, currentAutomationEvent.startTime, this._defaultValue), currentAutomationEvent);\n        }\n        if (currentAutomationEvent !== undefined\n            && isSetValueAutomationEvent(currentAutomationEvent)\n            && (nextAutomationEvent === undefined\n                || !isAnyRampToValueAutomationEvent(nextAutomationEvent))) {\n            return currentAutomationEvent.value;\n        }\n        if (currentAutomationEvent !== undefined\n            && isSetValueCurveAutomationEvent(currentAutomationEvent)\n            && (nextAutomationEvent === undefined\n                || !isAnyRampToValueAutomationEvent(nextAutomationEvent)\n                || (currentAutomationEvent.startTime + currentAutomationEvent.duration) > time)) {\n            if (time < (currentAutomationEvent.startTime + currentAutomationEvent.duration)) {\n                return getValueCurveValueAtTime(time, currentAutomationEvent);\n            }\n            return currentAutomationEvent.values[currentAutomationEvent.values.length - 1];\n        }\n        if (currentAutomationEvent !== undefined\n            && isAnyRampToValueAutomationEvent(currentAutomationEvent)\n            && (nextAutomationEvent === undefined\n                || !isAnyRampToValueAutomationEvent(nextAutomationEvent))) {\n            return currentAutomationEvent.value;\n        }\n        if (nextAutomationEvent !== undefined && isExponentialRampToValueAutomationEvent(nextAutomationEvent)) {\n            const [startTime, value] = getEndTimeAndValueOfPreviousAutomationEvent(this._automationEvents, index - 1, currentAutomationEvent, nextAutomationEvent, this._defaultValue);\n            return getExponentialRampValueAtTime(time, startTime, value, nextAutomationEvent);\n        }\n        if (nextAutomationEvent !== undefined && isLinearRampToValueAutomationEvent(nextAutomationEvent)) {\n            const [startTime, value] = getEndTimeAndValueOfPreviousAutomationEvent(this._automationEvents, index - 1, currentAutomationEvent, nextAutomationEvent, this._defaultValue);\n            return getLinearRampValueAtTime(time, startTime, value, nextAutomationEvent);\n        }\n        return this._defaultValue;\n    }\n}\n//# sourceMappingURL=/build/es2019/classes/automation-event-list.js.map","export const createCancelAndHoldAutomationEvent = (cancelTime) => {\n    return { cancelTime, type: 'cancelAndHold' };\n};\n//# sourceMappingURL=/build/es2019/functions/create-cancel-and-hold-automation-event.js.map","export const ACTIVE_AUDIO_NODE_STORE = new WeakSet();\nexport const AUDIO_NODE_CONNECTIONS_STORE = new WeakMap();\nexport const AUDIO_NODE_STORE = new WeakMap();\nexport const AUDIO_PARAM_CONNECTIONS_STORE = new WeakMap();\nexport const AUDIO_PARAM_STORE = new WeakMap();\nexport const BACKUP_NATIVE_CONTEXT_STORE = new WeakMap();\nexport const CONTEXT_STORE = new WeakMap();\nexport const EVENT_LISTENERS = new WeakMap();\nexport const CYCLE_COUNTERS = new WeakMap();\n// This clunky name is borrowed from the spec. :-)\nexport const NODE_NAME_TO_PROCESSOR_CONSTRUCTOR_MAPS = new WeakMap();\nexport const NODE_TO_PROCESSOR_MAPS = new WeakMap();\n//# sourceMappingURL=/build/es2019/globals.js.map","const handler = {\n    construct() {\n        return handler;\n    }\n};\nexport const isConstructible = (constructible) => {\n    try {\n        const proxy = new Proxy(constructible, handler);\n        new proxy(); // tslint:disable-line:no-unused-expression\n    }\n    catch {\n        return false;\n    }\n    return true;\n};\n//# sourceMappingURL=/build/es2019/helpers/is-constructible.js.map","/*\n * This massive regex tries to cover all the following cases.\n *\n * import './path';\n * import defaultImport from './path';\n * import { namedImport } from './path';\n * import { namedImport as renamendImport } from './path';\n * import * as namespaceImport from './path';\n * import defaultImport, { namedImport } from './path';\n * import defaultImport, { namedImport as renamendImport } from './path';\n * import defaultImport, * as namespaceImport from './path';\n */\nconst IMPORT_STATEMENT_REGEX = /^import(?:(?:[\\s]+[\\w]+|(?:[\\s]+[\\w]+[\\s]*,)?[\\s]*\\{[\\s]*[\\w]+(?:[\\s]+as[\\s]+[\\w]+)?(?:[\\s]*,[\\s]*[\\w]+(?:[\\s]+as[\\s]+[\\w]+)?)*[\\s]*}|(?:[\\s]+[\\w]+[\\s]*,)?[\\s]*\\*[\\s]+as[\\s]+[\\w]+)[\\s]+from)?(?:[\\s]*)(\"([^\"\\\\]|\\\\.)+\"|'([^'\\\\]|\\\\.)+')(?:[\\s]*);?/; // tslint:disable-line:max-line-length\nexport const splitImportStatements = (source, url) => {\n    const importStatements = [];\n    let sourceWithoutImportStatements = source.replace(/^[\\s]+/, '');\n    let result = sourceWithoutImportStatements.match(IMPORT_STATEMENT_REGEX);\n    while (result !== null) {\n        const unresolvedUrl = result[1].slice(1, -1);\n        const importStatementWithResolvedUrl = result[0]\n            .replace(/([\\s]+)?;?$/, '')\n            .replace(unresolvedUrl, (new URL(unresolvedUrl, url)).toString());\n        importStatements.push(importStatementWithResolvedUrl);\n        sourceWithoutImportStatements = sourceWithoutImportStatements\n            .slice(result[0].length)\n            .replace(/^[\\s]+/, '');\n        result = sourceWithoutImportStatements.match(IMPORT_STATEMENT_REGEX);\n    }\n    return [importStatements.join(';'), sourceWithoutImportStatements];\n};\n//# sourceMappingURL=/build/es2019/helpers/split-import-statements.js.map","import { NODE_NAME_TO_PROCESSOR_CONSTRUCTOR_MAPS } from '../globals';\nimport { isConstructible } from '../helpers/is-constructible';\nimport { splitImportStatements } from '../helpers/split-import-statements';\nconst verifyParameterDescriptors = (parameterDescriptors) => {\n    if (parameterDescriptors !== undefined && !Array.isArray(parameterDescriptors)) {\n        throw new TypeError('The parameterDescriptors property of given value for processorCtor is not an array.');\n    }\n};\nconst verifyProcessorCtor = (processorCtor) => {\n    if (!isConstructible(processorCtor)) {\n        throw new TypeError('The given value for processorCtor should be a constructor.');\n    }\n    if (processorCtor.prototype === null || typeof processorCtor.prototype !== 'object') {\n        throw new TypeError('The given value for processorCtor should have a prototype.');\n    }\n};\nexport const createAddAudioWorkletModule = (createNotSupportedError, evaluateSource, exposeCurrentFrameAndCurrentTime, fetchSource, getBackupNativeContext, getNativeContext, ongoingRequests, resolvedRequests, window) => {\n    return (context, moduleURL, options = { credentials: 'omit' }) => {\n        const nativeContext = getNativeContext(context);\n        const absoluteUrl = (new URL(moduleURL, window.location.href)).toString();\n        // Bug #59: Only Chrome & Opera do implement the audioWorklet property.\n        if (nativeContext.audioWorklet !== undefined) {\n            return fetchSource(moduleURL)\n                .then((source) => {\n                const [importStatements, sourceWithoutImportStatements] = splitImportStatements(source, absoluteUrl);\n                /*\n                 * Bug #170: Chrome and Opera do call process() with an array with empty channelData for each input if no input is\n                 * connected.\n                 *\n                 * This is the unminified version of the code used below:\n                 *\n                 * ```js\n                 * `${ importStatements };\n                 * ((registerProcessor) => {${ sourceWithoutImportStatements }\n                 * })((name, processorCtor) => registerProcessor(name, class extends processorCtor {\n                 *\n                 *     process (inputs, outputs, parameters) {\n                 *         return super.process(\n                 *             (inputs.map((input) => input.some((channelData) => channelData.length === 0)) ? [ ] : input),\n                 *             outputs,\n                 *             parameters\n                 *         );\n                 *     }\n                 *\n                 * }))`\n                 * ```\n                 */\n                const wrappedSource = `${importStatements};(registerProcessor=>{${sourceWithoutImportStatements}\n})((n,p)=>registerProcessor(n,class extends p{process(i,o,p){return super.process(i.map(j=>j.some(k=>k.length===0)?[]:j),o,p)}}))`; // tslint:disable-line:max-line-length\n                const blob = new Blob([wrappedSource], { type: 'application/javascript; charset=utf-8' });\n                const url = URL.createObjectURL(blob);\n                const backupNativeContext = getBackupNativeContext(nativeContext);\n                const nativeContextOrBackupNativeContext = (backupNativeContext !== null) ? backupNativeContext : nativeContext;\n                return nativeContextOrBackupNativeContext.audioWorklet\n                    .addModule(url, options)\n                    .then(() => URL.revokeObjectURL(url))\n                    // @todo This could be written more elegantly when Promise.finally() becomes avalaible.\n                    .catch((err) => {\n                    URL.revokeObjectURL(url);\n                    if (err.code === undefined || err.name === 'SyntaxError') {\n                        err.code = 12;\n                    }\n                    throw err;\n                });\n            });\n        }\n        const resolvedRequestsOfContext = resolvedRequests.get(context);\n        if (resolvedRequestsOfContext !== undefined && resolvedRequestsOfContext.has(moduleURL)) {\n            return Promise.resolve();\n        }\n        const ongoingRequestsOfContext = ongoingRequests.get(context);\n        if (ongoingRequestsOfContext !== undefined) {\n            const promiseOfOngoingRequest = ongoingRequestsOfContext.get(moduleURL);\n            if (promiseOfOngoingRequest !== undefined) {\n                return promiseOfOngoingRequest;\n            }\n        }\n        const promise = fetchSource(moduleURL)\n            .then((source) => {\n            const [importStatements, sourceWithoutImportStatements] = splitImportStatements(source, absoluteUrl);\n            /*\n             * This is the unminified version of the code used below:\n             *\n             * ```js\n             * ${ importStatements };\n             * ((a, b) => {\n             *     (a[b] = a[b] || [ ]).push(\n             *         (AudioWorkletProcessor, global, registerProcessor, sampleRate, self, window) => {\n             *             ${ sourceWithoutImportStatements }\n             *         }\n             *     );\n             * })(window, '_AWGS');\n             * ```\n             */\n            // tslint:disable-next-line:max-line-length\n            const wrappedSource = `${importStatements};((a,b)=>{(a[b]=a[b]||[]).push((AudioWorkletProcessor,global,registerProcessor,sampleRate,self,window)=>{${sourceWithoutImportStatements}\n})})(window,'_AWGS')`;\n            // @todo Evaluating the given source code is a possible security problem.\n            return evaluateSource(wrappedSource);\n        })\n            .then(() => {\n            const evaluateAudioWorkletGlobalScope = window._AWGS.pop();\n            if (evaluateAudioWorkletGlobalScope === undefined) {\n                throw new SyntaxError();\n            }\n            exposeCurrentFrameAndCurrentTime(nativeContext.currentTime, nativeContext.sampleRate, () => evaluateAudioWorkletGlobalScope(class AudioWorkletProcessor {\n            }, undefined, (name, processorCtor) => {\n                if (name.trim() === '') {\n                    throw createNotSupportedError();\n                }\n                const nodeNameToProcessorConstructorMap = NODE_NAME_TO_PROCESSOR_CONSTRUCTOR_MAPS.get(nativeContext);\n                if (nodeNameToProcessorConstructorMap !== undefined) {\n                    if (nodeNameToProcessorConstructorMap.has(name)) {\n                        throw createNotSupportedError();\n                    }\n                    verifyProcessorCtor(processorCtor);\n                    verifyParameterDescriptors(processorCtor.parameterDescriptors);\n                    nodeNameToProcessorConstructorMap.set(name, processorCtor);\n                }\n                else {\n                    verifyProcessorCtor(processorCtor);\n                    verifyParameterDescriptors(processorCtor.parameterDescriptors);\n                    NODE_NAME_TO_PROCESSOR_CONSTRUCTOR_MAPS.set(nativeContext, new Map([[name, processorCtor]]));\n                }\n            }, nativeContext.sampleRate, undefined, undefined));\n        })\n            .catch((err) => {\n            if (err.code === undefined || err.name === 'SyntaxError') {\n                err.code = 12;\n            }\n            throw err;\n        });\n        if (ongoingRequestsOfContext === undefined) {\n            ongoingRequests.set(context, new Map([[moduleURL, promise]]));\n        }\n        else {\n            ongoingRequestsOfContext.set(moduleURL, promise);\n        }\n        promise\n            .then(() => {\n            const rslvdRqstsFCntxt = resolvedRequests.get(context);\n            if (rslvdRqstsFCntxt === undefined) {\n                resolvedRequests.set(context, new Set([moduleURL]));\n            }\n            else {\n                rslvdRqstsFCntxt.add(moduleURL);\n            }\n        })\n            .catch(() => { }) // tslint:disable-line:no-empty\n            // @todo Use finally when it becomes available in all supported browsers.\n            .then(() => {\n            const ngngRqstsFCntxt = ongoingRequests.get(context);\n            if (ngngRqstsFCntxt !== undefined) {\n                ngngRqstsFCntxt.delete(moduleURL);\n            }\n        });\n        return promise;\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/add-audio-worklet-module.js.map","const DEFAULT_OPTIONS = {\n    channelCount: 2,\n    channelCountMode: 'max',\n    channelInterpretation: 'speakers',\n    fftSize: 2048,\n    maxDecibels: -30,\n    minDecibels: -100,\n    smoothingTimeConstant: 0.8\n};\nexport const createAnalyserNodeConstructor = (audionNodeConstructor, createAnalyserNodeRenderer, createIndexSizeError, createNativeAnalyserNode, getNativeContext, isNativeOfflineAudioContext) => {\n    return class AnalyserNode extends audionNodeConstructor {\n        constructor(context, options = DEFAULT_OPTIONS) {\n            const nativeContext = getNativeContext(context);\n            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };\n            const nativeAnalyserNode = createNativeAnalyserNode(nativeContext, mergedOptions);\n            const analyserNodeRenderer = ((isNativeOfflineAudioContext(nativeContext))\n                ? createAnalyserNodeRenderer()\n                : null);\n            super(context, false, nativeAnalyserNode, analyserNodeRenderer);\n            this._nativeAnalyserNode = nativeAnalyserNode;\n        }\n        get fftSize() {\n            return this._nativeAnalyserNode.fftSize;\n        }\n        set fftSize(value) {\n            this._nativeAnalyserNode.fftSize = value;\n        }\n        get frequencyBinCount() {\n            return this._nativeAnalyserNode.frequencyBinCount;\n        }\n        get maxDecibels() {\n            return this._nativeAnalyserNode.maxDecibels;\n        }\n        set maxDecibels(value) {\n            // Bug #118: Safari does not throw an error if maxDecibels is not more than minDecibels.\n            const maxDecibels = this._nativeAnalyserNode.maxDecibels;\n            this._nativeAnalyserNode.maxDecibels = value;\n            if (!(value > this._nativeAnalyserNode.minDecibels)) {\n                this._nativeAnalyserNode.maxDecibels = maxDecibels;\n                throw createIndexSizeError();\n            }\n        }\n        get minDecibels() {\n            return this._nativeAnalyserNode.minDecibels;\n        }\n        set minDecibels(value) {\n            // Bug #118: Safari does not throw an error if maxDecibels is not more than minDecibels.\n            const minDecibels = this._nativeAnalyserNode.minDecibels;\n            this._nativeAnalyserNode.minDecibels = value;\n            if (!(this._nativeAnalyserNode.maxDecibels > value)) {\n                this._nativeAnalyserNode.minDecibels = minDecibels;\n                throw createIndexSizeError();\n            }\n        }\n        get smoothingTimeConstant() {\n            return this._nativeAnalyserNode.smoothingTimeConstant;\n        }\n        set smoothingTimeConstant(value) {\n            this._nativeAnalyserNode.smoothingTimeConstant = value;\n        }\n        getByteFrequencyData(array) {\n            this._nativeAnalyserNode.getByteFrequencyData(array);\n        }\n        getByteTimeDomainData(array) {\n            this._nativeAnalyserNode.getByteTimeDomainData(array);\n        }\n        getFloatFrequencyData(array) {\n            this._nativeAnalyserNode.getFloatFrequencyData(array);\n        }\n        getFloatTimeDomainData(array) {\n            this._nativeAnalyserNode.getFloatTimeDomainData(array);\n        }\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/analyser-node-constructor.js.map","export const isOwnedByContext = (nativeAudioNode, nativeContext) => {\n    return nativeAudioNode.context === nativeContext;\n};\n//# sourceMappingURL=/build/es2019/helpers/is-owned-by-context.js.map","export const testAudioBufferCopyChannelMethodsOutOfBoundsSupport = (nativeAudioBuffer) => {\n    try {\n        nativeAudioBuffer.copyToChannel(new Float32Array(1), 0, -1);\n    }\n    catch {\n        return false;\n    }\n    return true;\n};\n//# sourceMappingURL=/build/es2019/helpers/test-audio-buffer-copy-channel-methods-out-of-bounds-support.js.map","export const createIndexSizeError = () => {\n    try {\n        return new DOMException('', 'IndexSizeError');\n    }\n    catch (err) {\n        // Bug #122: Edge is the only browser that does not yet allow to construct a DOMException.\n        err.code = 1;\n        err.name = 'IndexSizeError';\n        return err;\n    }\n};\n//# sourceMappingURL=/build/es2019/factories/index-size-error.js.map","import { createIndexSizeError } from '../factories/index-size-error';\nexport const wrapAudioBufferGetChannelDataMethod = (audioBuffer) => {\n    audioBuffer.getChannelData = ((getChannelData) => {\n        return (channel) => {\n            try {\n                return getChannelData.call(audioBuffer, channel);\n            }\n            catch (err) {\n                if (err.code === 12) {\n                    throw createIndexSizeError();\n                }\n                throw err;\n            }\n        };\n    })(audioBuffer.getChannelData);\n};\n//# sourceMappingURL=/build/es2019/helpers/wrap-audio-buffer-get-channel-data-method.js.map","import { testAudioBufferCopyChannelMethodsOutOfBoundsSupport } from '../helpers/test-audio-buffer-copy-channel-methods-out-of-bounds-support';\nimport { wrapAudioBufferGetChannelDataMethod } from '../helpers/wrap-audio-buffer-get-channel-data-method';\nconst DEFAULT_OPTIONS = {\n    numberOfChannels: 1\n};\nexport const createAudioBufferConstructor = (audioBufferStore, cacheTestResult, createNotSupportedError, nativeAudioBufferConstructor, nativeOfflineAudioContextConstructor, testNativeAudioBufferConstructorSupport, wrapAudioBufferCopyChannelMethods, wrapAudioBufferCopyChannelMethodsOutOfBounds) => {\n    let nativeOfflineAudioContext = null;\n    return class AudioBuffer {\n        constructor(options) {\n            if (nativeOfflineAudioContextConstructor === null) {\n                throw new Error('Missing the native OfflineAudioContext constructor.');\n            }\n            const { length, numberOfChannels, sampleRate } = { ...DEFAULT_OPTIONS, ...options };\n            if (nativeOfflineAudioContext === null) {\n                nativeOfflineAudioContext = new nativeOfflineAudioContextConstructor(1, 1, 44100);\n            }\n            /*\n             * Bug #99: Firefox does not throw a NotSupportedError when the numberOfChannels is zero. But it only does it when using the\n             * factory function. But since Firefox also supports the constructor everything should be fine.\n             */\n            const audioBuffer = (nativeAudioBufferConstructor !== null &&\n                cacheTestResult(testNativeAudioBufferConstructorSupport, testNativeAudioBufferConstructorSupport)) ?\n                new nativeAudioBufferConstructor({ length, numberOfChannels, sampleRate }) :\n                nativeOfflineAudioContext.createBuffer(numberOfChannels, length, sampleRate);\n            // Bug #99: Safari does not throw an error when the numberOfChannels is zero.\n            if (audioBuffer.numberOfChannels === 0) {\n                throw createNotSupportedError();\n            }\n            // Bug #5: Safari does not support copyFromChannel() and copyToChannel().\n            // Bug #100: Safari does throw a wrong error when calling getChannelData() with an out-of-bounds value.\n            if (typeof audioBuffer.copyFromChannel !== 'function') {\n                wrapAudioBufferCopyChannelMethods(audioBuffer);\n                wrapAudioBufferGetChannelDataMethod(audioBuffer);\n                // Bug #157: Only Chrome & Opera do allow the bufferOffset to be out-of-bounds.\n            }\n            else if (!cacheTestResult(testAudioBufferCopyChannelMethodsOutOfBoundsSupport, () => testAudioBufferCopyChannelMethodsOutOfBoundsSupport(audioBuffer))) {\n                wrapAudioBufferCopyChannelMethodsOutOfBounds(audioBuffer);\n            }\n            audioBufferStore.add(audioBuffer);\n            /*\n             * This does violate all good pratices but it is necessary to allow this AudioBuffer to be used with native\n             * (Offline)AudioContexts.\n             */\n            return audioBuffer;\n        }\n        static [Symbol.hasInstance](instance) {\n            return (instance !== null && typeof instance === 'object' && Object.getPrototypeOf(instance) === AudioBuffer.prototype)\n                || (audioBufferStore.has(instance));\n        }\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/audio-buffer-constructor.js.map","export const MOST_NEGATIVE_SINGLE_FLOAT = -3.4028234663852886e38;\nexport const MOST_POSITIVE_SINGLE_FLOAT = -MOST_NEGATIVE_SINGLE_FLOAT;\n//# sourceMappingURL=/build/es2019/constants.js.map","export const getValueForKey = (map, key) => {\n    const value = map.get(key);\n    if (value === undefined) {\n        throw new Error('A value with the given key could not be found.');\n    }\n    return value;\n};\n//# sourceMappingURL=/build/es2019/helpers/get-value-for-key.js.map","import { EVENT_LISTENERS } from '../globals';\nimport { getValueForKey } from './get-value-for-key';\nexport const getEventListenersOfAudioNode = (audioNode) => {\n    return getValueForKey(EVENT_LISTENERS, audioNode);\n};\n//# sourceMappingURL=/build/es2019/helpers/get-event-listeners-of-audio-node.js.map","import { ACTIVE_AUDIO_NODE_STORE } from '../globals';\nimport { getEventListenersOfAudioNode } from './get-event-listeners-of-audio-node';\nexport const setInternalStateToActive = (audioNode) => {\n    if (ACTIVE_AUDIO_NODE_STORE.has(audioNode)) {\n        throw new Error('The AudioNode is already stored.');\n    }\n    ACTIVE_AUDIO_NODE_STORE.add(audioNode);\n    getEventListenersOfAudioNode(audioNode)\n        .forEach((eventListener) => eventListener(true));\n};\n//# sourceMappingURL=/build/es2019/helpers/set-internal-state-to-active.js.map","import { ACTIVE_AUDIO_NODE_STORE } from '../globals';\nimport { getEventListenersOfAudioNode } from './get-event-listeners-of-audio-node';\nexport const setInternalStateToPassive = (audioNode) => {\n    if (!ACTIVE_AUDIO_NODE_STORE.has(audioNode)) {\n        throw new Error('The AudioNode is not stored.');\n    }\n    ACTIVE_AUDIO_NODE_STORE.delete(audioNode);\n    getEventListenersOfAudioNode(audioNode)\n        .forEach((eventListener) => eventListener(false));\n};\n//# sourceMappingURL=/build/es2019/helpers/set-internal-state-to-passive.js.map","import { MOST_NEGATIVE_SINGLE_FLOAT, MOST_POSITIVE_SINGLE_FLOAT } from '../constants';\nimport { setInternalStateToActive } from '../helpers/set-internal-state-to-active';\nimport { setInternalStateToPassive } from '../helpers/set-internal-state-to-passive';\nconst DEFAULT_OPTIONS = {\n    buffer: null,\n    channelCount: 2,\n    channelCountMode: 'max',\n    channelInterpretation: 'speakers',\n    // Bug #149: Safari does not yet support the detune AudioParam.\n    loop: false,\n    loopEnd: 0,\n    loopStart: 0,\n    playbackRate: 1\n};\nexport const createAudioBufferSourceNodeConstructor = (audioNodeConstructor, createAudioBufferSourceNodeRenderer, createAudioParam, createInvalidStateError, createNativeAudioBufferSourceNode, getNativeContext, isNativeOfflineAudioContext, wrapEventListener) => {\n    return class AudioBufferSourceNode extends audioNodeConstructor {\n        constructor(context, options = DEFAULT_OPTIONS) {\n            const nativeContext = getNativeContext(context);\n            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };\n            const nativeAudioBufferSourceNode = createNativeAudioBufferSourceNode(nativeContext, mergedOptions);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            const audioBufferSourceNodeRenderer = ((isOffline)\n                ? createAudioBufferSourceNodeRenderer()\n                : null);\n            super(context, false, nativeAudioBufferSourceNode, audioBufferSourceNodeRenderer);\n            this._audioBufferSourceNodeRenderer = audioBufferSourceNodeRenderer;\n            this._isBufferNullified = false;\n            this._isBufferSet = (options.buffer !== null && options.buffer !== undefined);\n            this._nativeAudioBufferSourceNode = nativeAudioBufferSourceNode;\n            this._onended = null;\n            // Bug #73: Edge & Safari do not export the correct values for maxValue and minValue.\n            this._playbackRate = createAudioParam(this, isOffline, nativeAudioBufferSourceNode.playbackRate, MOST_POSITIVE_SINGLE_FLOAT, MOST_NEGATIVE_SINGLE_FLOAT);\n        }\n        get buffer() {\n            if (this._isBufferNullified) {\n                return null;\n            }\n            return this._nativeAudioBufferSourceNode.buffer;\n        }\n        set buffer(value) {\n            // Bug #71: Edge does not allow to set the buffer to null.\n            try {\n                this._nativeAudioBufferSourceNode.buffer = value;\n            }\n            catch (err) {\n                if (value !== null || err.code !== 17) {\n                    throw err;\n                }\n                // This will modify the buffer in place. Luckily that works in Edge and has the same effect as setting the buffer to null.\n                if (this._nativeAudioBufferSourceNode.buffer !== null) {\n                    const buffer = this._nativeAudioBufferSourceNode.buffer;\n                    const numberOfChannels = buffer.numberOfChannels;\n                    for (let i = 0; i < numberOfChannels; i += 1) {\n                        buffer\n                            .getChannelData(i)\n                            .fill(0);\n                    }\n                    this._isBufferNullified = true;\n                }\n            }\n            // Bug #72: Only Chrome, Edge & Opera do not allow to reassign the buffer yet.\n            if (value !== null) {\n                if (this._isBufferSet) {\n                    throw createInvalidStateError();\n                }\n                this._isBufferSet = true;\n            }\n        }\n        get loop() {\n            return this._nativeAudioBufferSourceNode.loop;\n        }\n        set loop(value) {\n            this._nativeAudioBufferSourceNode.loop = value;\n        }\n        get loopEnd() {\n            return this._nativeAudioBufferSourceNode.loopEnd;\n        }\n        set loopEnd(value) {\n            this._nativeAudioBufferSourceNode.loopEnd = value;\n        }\n        get loopStart() {\n            return this._nativeAudioBufferSourceNode.loopStart;\n        }\n        set loopStart(value) {\n            this._nativeAudioBufferSourceNode.loopStart = value;\n        }\n        get onended() {\n            return this._onended;\n        }\n        set onended(value) {\n            const wrappedListener = (typeof value === 'function') ? wrapEventListener(this, value) : null;\n            this._nativeAudioBufferSourceNode.onended = wrappedListener;\n            const nativeOnEnded = this._nativeAudioBufferSourceNode.onended;\n            this._onended = (nativeOnEnded !== null && nativeOnEnded === wrappedListener)\n                ? value\n                : nativeOnEnded;\n        }\n        get playbackRate() {\n            return this._playbackRate;\n        }\n        start(when = 0, offset = 0, duration) {\n            this._nativeAudioBufferSourceNode.start(when, offset, duration);\n            if (this._audioBufferSourceNodeRenderer !== null) {\n                this._audioBufferSourceNodeRenderer.start = (duration === undefined) ? [when, offset] : [when, offset, duration];\n            }\n            else {\n                setInternalStateToActive(this);\n                const resetInternalStateToPassive = () => {\n                    this._nativeAudioBufferSourceNode.removeEventListener('ended', resetInternalStateToPassive);\n                    // @todo Determine a meaningful delay instead of just using one second.\n                    setTimeout(() => setInternalStateToPassive(this), 1000);\n                };\n                this._nativeAudioBufferSourceNode.addEventListener('ended', resetInternalStateToPassive);\n            }\n        }\n        stop(when = 0) {\n            this._nativeAudioBufferSourceNode.stop(when);\n            if (this._audioBufferSourceNodeRenderer !== null) {\n                this._audioBufferSourceNodeRenderer.stop = when;\n            }\n        }\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/audio-buffer-source-node-constructor.js.map","export const isAudioNode = (audioNodeOrAudioParam) => {\n    return 'context' in audioNodeOrAudioParam;\n};\n//# sourceMappingURL=/build/es2019/guards/audio-node.js.map","import { isAudioNode } from './audio-node';\nexport const isAudioNodeOutputConnection = (outputConnection) => {\n    return isAudioNode(outputConnection[0]);\n};\n//# sourceMappingURL=/build/es2019/guards/audio-node-output-connection.js.map","export const isAudioWorkletNode = (audioNode) => {\n    return 'port' in audioNode;\n};\n//# sourceMappingURL=/build/es2019/guards/audio-worklet-node.js.map","export const isNativeAudioNodeFaker = (nativeAudioNodeOrNativeAudioNodeFaker) => {\n    return 'inputs' in nativeAudioNodeOrNativeAudioNodeFaker;\n};\n//# sourceMappingURL=/build/es2019/guards/native-audio-node-faker.js.map","import { isNativeAudioNodeFaker } from '../guards/native-audio-node-faker';\nexport const connectNativeAudioNodeToNativeAudioNode = (nativeSourceAudioNode, nativeDestinationAudioNode, output, input) => {\n    if (isNativeAudioNodeFaker(nativeDestinationAudioNode)) {\n        const fakeNativeDestinationAudioNode = nativeDestinationAudioNode.inputs[input];\n        nativeSourceAudioNode.connect(fakeNativeDestinationAudioNode, output, 0);\n        return [fakeNativeDestinationAudioNode, output, 0];\n    }\n    nativeSourceAudioNode.connect(nativeDestinationAudioNode, output, input);\n    return [nativeDestinationAudioNode, output, input];\n};\n//# sourceMappingURL=/build/es2019/helpers/connect-native-audio-node-to-native-audio-node.js.map","import { getEventListenersOfAudioNode } from './get-event-listeners-of-audio-node';\nexport const deleteEventListenerOfAudioNode = (audioNode, eventListener) => {\n    const eventListeners = getEventListenersOfAudioNode(audioNode);\n    if (!eventListeners.delete(eventListener)) {\n        throw new Error('Missing the expected event listener.');\n    }\n};\n//# sourceMappingURL=/build/es2019/helpers/delete-event-listeners-of-audio-node.js.map","import { isNativeAudioNodeFaker } from '../guards/native-audio-node-faker';\nexport const disconnectNativeAudioNodeFromNativeAudioNode = (nativeSourceAudioNode, nativeDestinationAudioNode, output, input) => {\n    if (isNativeAudioNodeFaker(nativeDestinationAudioNode)) {\n        nativeSourceAudioNode.disconnect(nativeDestinationAudioNode.inputs[input], output, 0);\n    }\n    else {\n        nativeSourceAudioNode.disconnect(nativeDestinationAudioNode, output, input);\n    }\n};\n//# sourceMappingURL=/build/es2019/helpers/disconnect-native-audio-node-from-native-audio-node.js.map","import { AUDIO_NODE_CONNECTIONS_STORE } from '../globals';\nimport { getValueForKey } from './get-value-for-key';\nexport const getAudioNodeConnections = (audioNode) => {\n    return getValueForKey(AUDIO_NODE_CONNECTIONS_STORE, audioNode);\n};\n//# sourceMappingURL=/build/es2019/helpers/get-audio-node-connections.js.map","import { AUDIO_PARAM_CONNECTIONS_STORE } from '../globals';\nimport { getValueForKey } from './get-value-for-key';\nexport const getAudioParamConnections = (audioParam) => {\n    return getValueForKey(AUDIO_PARAM_CONNECTIONS_STORE, audioParam);\n};\n//# sourceMappingURL=/build/es2019/helpers/get-audio-param-connections.js.map","import { AUDIO_NODE_STORE } from '../globals';\nimport { getValueForKey } from './get-value-for-key';\nexport const getNativeAudioNode = (audioNode) => {\n    return getValueForKey(AUDIO_NODE_STORE, audioNode);\n};\n//# sourceMappingURL=/build/es2019/helpers/get-native-audio-node.js.map","import { AUDIO_PARAM_STORE } from '../globals';\nimport { getValueForKey } from './get-value-for-key';\nexport const getNativeAudioParam = (audioParam) => {\n    return getValueForKey(AUDIO_PARAM_STORE, audioParam);\n};\n//# sourceMappingURL=/build/es2019/helpers/get-native-audio-param.js.map","export const insertElementInSet = (set, element, predicate, ignoreDuplicates) => {\n    for (const lmnt of set) {\n        if (predicate(lmnt)) {\n            if (ignoreDuplicates) {\n                return false;\n            }\n            throw Error('The set contains at least one similar element.');\n        }\n    }\n    set.add(element);\n    return true;\n};\n//# sourceMappingURL=/build/es2019/helpers/insert-element-in-set.js.map","import { ACTIVE_AUDIO_NODE_STORE } from '../globals';\nexport const isActiveAudioNode = (audioNode) => ACTIVE_AUDIO_NODE_STORE.has(audioNode);\n//# sourceMappingURL=/build/es2019/helpers/is-active-audio-node.js.map","import { CYCLE_COUNTERS } from '../globals';\nexport const isPartOfACycle = (audioNode) => {\n    return CYCLE_COUNTERS.has(audioNode);\n};\n//# sourceMappingURL=/build/es2019/helpers/is-part-of-a-cycle.js.map","import { ACTIVE_AUDIO_NODE_STORE } from '../globals';\nexport const isPassiveAudioNode = (audioNode) => {\n    return !ACTIVE_AUDIO_NODE_STORE.has(audioNode);\n};\n//# sourceMappingURL=/build/es2019/helpers/is-passive-audio-node.js.map","export const pickElementFromSet = (set, predicate) => {\n    const matchingElements = Array\n        .from(set)\n        .filter(predicate);\n    if (matchingElements.length > 1) {\n        throw Error('More than one element was found.');\n    }\n    if (matchingElements.length === 0) {\n        throw Error('No element was found.');\n    }\n    const [matchingElement] = matchingElements;\n    set.delete(matchingElement);\n    return matchingElement;\n};\n//# sourceMappingURL=/build/es2019/helpers/pick-element-from-set.js.map","import { isAudioWorkletNode } from '../guards/audio-worklet-node';\nimport { setInternalStateToPassive } from './set-internal-state-to-passive';\n// Set the internalState of the audioNode to 'passive' if it is not an AudioWorkletNode and if it has no 'active' input connections.\nexport const setInternalStateToPassiveWhenNecessary = (audioNode, activeInputs) => {\n    if (!isAudioWorkletNode(audioNode) && activeInputs.every((connections) => (connections.size === 0))) {\n        setInternalStateToPassive(audioNode);\n    }\n};\n//# sourceMappingURL=/build/es2019/helpers/set-internal-state-to-passive-when-necessary.js.map","export const testAudioNodeDisconnectMethodSupport = (nativeAudioContext) => {\n    return new Promise((resolve) => {\n        const analyzer = nativeAudioContext.createScriptProcessor(256, 1, 1);\n        const dummy = nativeAudioContext.createGain();\n        // Bug #95: Safari does not play one sample buffers.\n        const ones = nativeAudioContext.createBuffer(1, 2, 44100);\n        const channelData = ones.getChannelData(0);\n        channelData[0] = 1;\n        channelData[1] = 1;\n        const source = nativeAudioContext.createBufferSource();\n        source.buffer = ones;\n        source.loop = true;\n        source\n            .connect(analyzer)\n            .connect(nativeAudioContext.destination);\n        source.connect(dummy);\n        source.disconnect(dummy);\n        analyzer.onaudioprocess = (event) => {\n            const chnnlDt = event.inputBuffer.getChannelData(0);\n            if (Array.prototype.some.call(chnnlDt, (sample) => sample === 1)) {\n                resolve(true);\n            }\n            else {\n                resolve(false);\n            }\n            source.stop();\n            analyzer.onaudioprocess = null; // tslint:disable-line:deprecation\n            source.disconnect(analyzer);\n            analyzer.disconnect(nativeAudioContext.destination);\n        };\n        source.start();\n    });\n};\n//# sourceMappingURL=/build/es2019/helpers/test-audio-node-disconnect-method-support.js.map","export const visitEachAudioNodeOnce = (cycles, visitor) => {\n    const counts = new Map();\n    for (const cycle of cycles) {\n        for (const audioNode of cycle) {\n            const count = counts.get(audioNode);\n            counts.set(audioNode, (count === undefined) ? 1 : count + 1);\n        }\n    }\n    counts.forEach((count, audioNode) => visitor(audioNode, count));\n};\n//# sourceMappingURL=/build/es2019/helpers/visit-each-audio-node-once.js.map","export const isNativeAudioNode = (nativeAudioNodeOrAudioParam) => {\n    return 'context' in nativeAudioNodeOrAudioParam;\n};\n//# sourceMappingURL=/build/es2019/guards/native-audio-node.js.map","import { isNativeAudioNode } from '../guards/native-audio-node';\nexport const wrapAudioNodeDisconnectMethod = (nativeAudioNode) => {\n    const connections = new Map();\n    nativeAudioNode.connect = ((connect) => {\n        return (destination, output = 0, input = 0) => {\n            const returnValue = (isNativeAudioNode(destination))\n                ? connect(destination, output, input)\n                : connect(destination, output);\n            // Save the new connection only if the calls to connect above didn't throw an error.\n            const connectionsToDestination = connections.get(destination);\n            if (connectionsToDestination === undefined) {\n                connections.set(destination, [{ input, output }]);\n            }\n            else {\n                if (connectionsToDestination.every((connection) => (connection.input !== input || connection.output !== output))) {\n                    connectionsToDestination.push({ input, output });\n                }\n            }\n            return returnValue;\n        };\n    })(nativeAudioNode.connect.bind(nativeAudioNode));\n    nativeAudioNode.disconnect = ((disconnect) => {\n        return (destinationOrOutput, output, input) => {\n            disconnect.apply(nativeAudioNode);\n            if (destinationOrOutput === undefined) {\n                connections.clear();\n            }\n            else if (typeof destinationOrOutput === 'number') {\n                for (const [destination, connectionsToDestination] of connections) {\n                    const filteredConnections = connectionsToDestination\n                        .filter((connection) => (connection.output !== destinationOrOutput));\n                    if (filteredConnections.length === 0) {\n                        connections.delete(destination);\n                    }\n                    else {\n                        connections.set(destination, filteredConnections);\n                    }\n                }\n            }\n            else if (connections.has(destinationOrOutput)) {\n                if (output === undefined) {\n                    connections.delete(destinationOrOutput);\n                }\n                else {\n                    const connectionsToDestination = connections.get(destinationOrOutput);\n                    if (connectionsToDestination !== undefined) {\n                        const filteredConnections = connectionsToDestination\n                            .filter((connection) => (connection.output !== output && (connection.input !== input || input === undefined)));\n                        if (filteredConnections.length === 0) {\n                            connections.delete(destinationOrOutput);\n                        }\n                        else {\n                            connections.set(destinationOrOutput, filteredConnections);\n                        }\n                    }\n                }\n            }\n            for (const [destination, connectionsToDestination] of connections) {\n                connectionsToDestination\n                    .forEach((connection) => {\n                    if (isNativeAudioNode(destination)) {\n                        nativeAudioNode.connect(destination, connection.output, connection.input);\n                    }\n                    else {\n                        nativeAudioNode.connect(destination, connection.output);\n                    }\n                });\n            }\n        };\n    })(nativeAudioNode.disconnect);\n};\n//# sourceMappingURL=/build/es2019/helpers/wrap-audio-node-disconnect-method.js.map","import { AUDIO_NODE_STORE, EVENT_LISTENERS } from '../globals';\nimport { isAudioNode } from '../guards/audio-node';\nimport { isAudioNodeOutputConnection } from '../guards/audio-node-output-connection';\nimport { isAudioWorkletNode } from '../guards/audio-worklet-node';\nimport { connectNativeAudioNodeToNativeAudioNode } from '../helpers/connect-native-audio-node-to-native-audio-node';\nimport { deleteEventListenerOfAudioNode } from '../helpers/delete-event-listeners-of-audio-node';\nimport { disconnectNativeAudioNodeFromNativeAudioNode } from '../helpers/disconnect-native-audio-node-from-native-audio-node';\nimport { getAudioNodeConnections } from '../helpers/get-audio-node-connections';\nimport { getAudioParamConnections } from '../helpers/get-audio-param-connections';\nimport { getEventListenersOfAudioNode } from '../helpers/get-event-listeners-of-audio-node';\nimport { getNativeAudioNode } from '../helpers/get-native-audio-node';\nimport { getNativeAudioParam } from '../helpers/get-native-audio-param';\nimport { getValueForKey } from '../helpers/get-value-for-key';\nimport { insertElementInSet } from '../helpers/insert-element-in-set';\nimport { isActiveAudioNode } from '../helpers/is-active-audio-node';\nimport { isPartOfACycle } from '../helpers/is-part-of-a-cycle';\nimport { isPassiveAudioNode } from '../helpers/is-passive-audio-node';\nimport { pickElementFromSet } from '../helpers/pick-element-from-set';\nimport { setInternalStateToActive } from '../helpers/set-internal-state-to-active';\nimport { setInternalStateToPassiveWhenNecessary } from '../helpers/set-internal-state-to-passive-when-necessary';\nimport { testAudioNodeDisconnectMethodSupport } from '../helpers/test-audio-node-disconnect-method-support';\nimport { visitEachAudioNodeOnce } from '../helpers/visit-each-audio-node-once';\nimport { wrapAudioNodeDisconnectMethod } from '../helpers/wrap-audio-node-disconnect-method';\nconst addActiveInputConnectionToAudioNode = (activeInputs, source, [output, input, eventListener], ignoreDuplicates) => {\n    insertElementInSet(activeInputs[input], [source, output, eventListener], (activeInputConnection) => (activeInputConnection[0] === source && activeInputConnection[1] === output), ignoreDuplicates);\n};\nconst addActiveInputConnectionToAudioParam = (activeInputs, source, [output, eventListener], ignoreDuplicates) => {\n    insertElementInSet(activeInputs, [source, output, eventListener], (activeInputConnection) => (activeInputConnection[0] === source && activeInputConnection[1] === output), ignoreDuplicates);\n};\nconst deleteActiveInputConnectionToAudioNode = (activeInputs, source, output, input) => {\n    return pickElementFromSet(activeInputs[input], (activeInputConnection) => (activeInputConnection[0] === source && activeInputConnection[1] === output));\n};\nconst deleteActiveInputConnectionToAudioParam = (activeInputs, source, output) => {\n    return pickElementFromSet(activeInputs, (activeInputConnection) => (activeInputConnection[0] === source && activeInputConnection[1] === output));\n};\nconst addPassiveInputConnectionToAudioNode = (passiveInputs, input, [source, output, eventListener], ignoreDuplicates) => {\n    const passiveInputConnections = passiveInputs.get(source);\n    if (passiveInputConnections === undefined) {\n        passiveInputs.set(source, new Set([[output, input, eventListener]]));\n    }\n    else {\n        insertElementInSet(passiveInputConnections, [output, input, eventListener], (passiveInputConnection) => (passiveInputConnection[0] === output && passiveInputConnection[1] === input), ignoreDuplicates);\n    }\n};\nconst addPassiveInputConnectionToAudioParam = (passiveInputs, [source, output, eventListener], ignoreDuplicates) => {\n    const passiveInputConnections = passiveInputs.get(source);\n    if (passiveInputConnections === undefined) {\n        passiveInputs.set(source, new Set([[output, eventListener]]));\n    }\n    else {\n        insertElementInSet(passiveInputConnections, [output, eventListener], (passiveInputConnection) => (passiveInputConnection[0] === output), ignoreDuplicates);\n    }\n};\nconst deletePassiveInputConnectionToAudioNode = (passiveInputs, source, output, input) => {\n    const passiveInputConnections = getValueForKey(passiveInputs, source);\n    const matchingConnection = pickElementFromSet(passiveInputConnections, (passiveInputConnection) => (passiveInputConnection[0] === output && passiveInputConnection[1] === input));\n    if (passiveInputConnections.size === 0) {\n        passiveInputs.delete(source);\n    }\n    return matchingConnection;\n};\nconst deletePassiveInputConnectionToAudioParam = (passiveInputs, source, output) => {\n    const passiveInputConnections = getValueForKey(passiveInputs, source);\n    const matchingConnection = pickElementFromSet(passiveInputConnections, (passiveInputConnection) => (passiveInputConnection[0] === output));\n    if (passiveInputConnections.size === 0) {\n        passiveInputs.delete(source);\n    }\n    return matchingConnection;\n};\nconst addConnectionToAudioNodeOfAudioContext = (source, destination, output, input) => {\n    const { activeInputs, passiveInputs } = getAudioNodeConnections(destination);\n    const { outputs } = getAudioNodeConnections(source);\n    const eventListeners = getEventListenersOfAudioNode(source);\n    const eventListener = ((isActive) => {\n        const nativeDestinationAudioNode = getNativeAudioNode(destination);\n        const nativeSourceAudioNode = getNativeAudioNode(source);\n        if (isActive) {\n            const partialConnection = deletePassiveInputConnectionToAudioNode(passiveInputs, source, output, input);\n            addActiveInputConnectionToAudioNode(activeInputs, source, partialConnection, false);\n            if (!isPartOfACycle(source)) {\n                connectNativeAudioNodeToNativeAudioNode(nativeSourceAudioNode, nativeDestinationAudioNode, output, input);\n            }\n            if (isPassiveAudioNode(destination)) {\n                setInternalStateToActive(destination);\n            }\n        }\n        else {\n            const partialConnection = deleteActiveInputConnectionToAudioNode(activeInputs, source, output, input);\n            addPassiveInputConnectionToAudioNode(passiveInputs, input, partialConnection, false);\n            if (!isPartOfACycle(source)) {\n                disconnectNativeAudioNodeFromNativeAudioNode(nativeSourceAudioNode, nativeDestinationAudioNode, output, input);\n            }\n            if (isActiveAudioNode(destination)) {\n                setInternalStateToPassiveWhenNecessary(destination, activeInputs);\n            }\n        }\n    });\n    if (insertElementInSet(outputs, [destination, output, input], (outputConnection) => (outputConnection[0] === destination && outputConnection[1] === output && outputConnection[2] === input), true)) {\n        eventListeners.add(eventListener);\n        if (isActiveAudioNode(source)) {\n            addActiveInputConnectionToAudioNode(activeInputs, source, [output, input, eventListener], true);\n        }\n        else {\n            addPassiveInputConnectionToAudioNode(passiveInputs, input, [source, output, eventListener], true);\n        }\n        return true;\n    }\n    return false;\n};\nconst addConnectionToAudioNodeOfOfflineAudioContext = (source, destination, output, input) => {\n    const { outputs } = getAudioNodeConnections(source);\n    if (insertElementInSet(outputs, [destination, output, input], (outputConnection) => (outputConnection[0] === destination && outputConnection[1] === output && outputConnection[2] === input), true)) {\n        const { activeInputs } = getAudioNodeConnections(destination);\n        addActiveInputConnectionToAudioNode(activeInputs, source, [output, input, null], true);\n        return true;\n    }\n    return false;\n};\nconst addConnectionToAudioParamOfAudioContext = (source, destination, output) => {\n    const { activeInputs, passiveInputs } = getAudioParamConnections(destination);\n    const { outputs } = getAudioNodeConnections(source);\n    const eventListeners = getEventListenersOfAudioNode(source);\n    const eventListener = ((isActive) => {\n        const nativeAudioNode = getNativeAudioNode(source);\n        const nativeAudioParam = getNativeAudioParam(destination);\n        if (isActive) {\n            const partialConnection = deletePassiveInputConnectionToAudioParam(passiveInputs, source, output);\n            addActiveInputConnectionToAudioParam(activeInputs, source, partialConnection, false);\n            if (!isPartOfACycle(source)) {\n                nativeAudioNode.connect(nativeAudioParam, output);\n            }\n        }\n        else {\n            const partialConnection = deleteActiveInputConnectionToAudioParam(activeInputs, source, output);\n            addPassiveInputConnectionToAudioParam(passiveInputs, partialConnection, false);\n            if (!isPartOfACycle(source)) {\n                nativeAudioNode.disconnect(nativeAudioParam, output);\n            }\n        }\n    });\n    if (insertElementInSet(outputs, [destination, output], (outputConnection) => (outputConnection[0] === destination && outputConnection[1] === output), true)) {\n        eventListeners.add(eventListener);\n        if (isActiveAudioNode(source)) {\n            addActiveInputConnectionToAudioParam(activeInputs, source, [output, eventListener], true);\n        }\n        else {\n            addPassiveInputConnectionToAudioParam(passiveInputs, [source, output, eventListener], true);\n        }\n        return true;\n    }\n    return false;\n};\nconst addConnectionToAudioParamOfOfflineAudioContext = (source, destination, output) => {\n    const { outputs } = getAudioNodeConnections(source);\n    if (insertElementInSet(outputs, [destination, output], (outputConnection) => (outputConnection[0] === destination && outputConnection[1] === output), true)) {\n        const { activeInputs } = getAudioParamConnections(destination);\n        addActiveInputConnectionToAudioParam(activeInputs, source, [output, null], true);\n        return true;\n    }\n    return false;\n};\nconst deleteActiveInputConnection = (activeInputConnections, source, output) => {\n    for (const activeInputConnection of activeInputConnections) {\n        if (activeInputConnection[0] === source && activeInputConnection[1] === output) {\n            activeInputConnections.delete(activeInputConnection);\n            return activeInputConnection;\n        }\n    }\n    return null;\n};\nconst deleteInputConnectionOfAudioNode = (source, destination, output, input) => {\n    const { activeInputs, passiveInputs } = getAudioNodeConnections(destination);\n    const activeInputConnection = deleteActiveInputConnection(activeInputs[input], source, output);\n    if (activeInputConnection === null) {\n        const passiveInputConnection = deletePassiveInputConnectionToAudioNode(passiveInputs, source, output, input);\n        return [passiveInputConnection[2], false];\n    }\n    return [activeInputConnection[2], true];\n};\nconst deleteInputConnectionOfAudioParam = (source, destination, output) => {\n    const { activeInputs, passiveInputs } = getAudioParamConnections(destination);\n    const activeInputConnection = deleteActiveInputConnection(activeInputs, source, output);\n    if (activeInputConnection === null) {\n        const passiveInputConnection = deletePassiveInputConnectionToAudioParam(passiveInputs, source, output);\n        return [passiveInputConnection[1], false];\n    }\n    return [activeInputConnection[2], true];\n};\nconst deleteInputsOfAudioNode = (source, destination, output, input) => {\n    const [listener, isActive] = deleteInputConnectionOfAudioNode(source, destination, output, input);\n    if (listener !== null) {\n        deleteEventListenerOfAudioNode(source, listener);\n        if (isActive && !isPartOfACycle(source)) {\n            disconnectNativeAudioNodeFromNativeAudioNode(getNativeAudioNode(source), getNativeAudioNode(destination), output, input);\n        }\n    }\n    if (isActiveAudioNode(destination)) {\n        const { activeInputs } = getAudioNodeConnections(destination);\n        setInternalStateToPassiveWhenNecessary(destination, activeInputs);\n    }\n};\nconst deleteInputsOfAudioParam = (source, destination, output) => {\n    const [listener, isActive] = deleteInputConnectionOfAudioParam(source, destination, output);\n    if (listener !== null) {\n        deleteEventListenerOfAudioNode(source, listener);\n        if (isActive && !isPartOfACycle(source)) {\n            getNativeAudioNode(source)\n                .disconnect(getNativeAudioParam(destination), output);\n        }\n    }\n};\nconst deleteAnyConnection = (source) => {\n    const audioNodeConnectionsOfSource = getAudioNodeConnections(source);\n    const destinations = [];\n    for (const outputConnection of audioNodeConnectionsOfSource.outputs) {\n        if (isAudioNodeOutputConnection(outputConnection)) {\n            deleteInputsOfAudioNode(source, ...outputConnection);\n        }\n        else {\n            deleteInputsOfAudioParam(source, ...outputConnection);\n        }\n        destinations.push(outputConnection[0]);\n    }\n    audioNodeConnectionsOfSource.outputs.clear();\n    return destinations;\n};\nconst deleteConnectionAtOutput = (source, output) => {\n    const audioNodeConnectionsOfSource = getAudioNodeConnections(source);\n    const destinations = [];\n    for (const outputConnection of audioNodeConnectionsOfSource.outputs) {\n        if (outputConnection[1] === output) {\n            if (isAudioNodeOutputConnection(outputConnection)) {\n                deleteInputsOfAudioNode(source, ...outputConnection);\n            }\n            else {\n                deleteInputsOfAudioParam(source, ...outputConnection);\n            }\n            destinations.push(outputConnection[0]);\n            audioNodeConnectionsOfSource.outputs.delete(outputConnection);\n        }\n    }\n    return destinations;\n};\nconst deleteConnectionToDestination = (source, destination, output, input) => {\n    const audioNodeConnectionsOfSource = getAudioNodeConnections(source);\n    return Array\n        .from(audioNodeConnectionsOfSource.outputs)\n        .filter((outputConnection) => (outputConnection[0] === destination\n        && (output === undefined || outputConnection[1] === output)\n        && (input === undefined || outputConnection[2] === input)))\n        .map((outputConnection) => {\n        if (isAudioNodeOutputConnection(outputConnection)) {\n            deleteInputsOfAudioNode(source, ...outputConnection);\n        }\n        else {\n            deleteInputsOfAudioParam(source, ...outputConnection);\n        }\n        audioNodeConnectionsOfSource.outputs.delete(outputConnection);\n        return outputConnection[0];\n    });\n};\nexport const createAudioNodeConstructor = (addAudioNodeConnections, auxiliaryGainNodeStore, cacheTestResult, createIncrementCycleCounter, createIndexSizeError, createInvalidAccessError, createNotSupportedError, decrementCycleCounter, detectCycles, eventTargetConstructor, getNativeContext, isNativeAudioContext, isNativeAudioNode, isNativeAudioParam, isNativeOfflineAudioContext) => {\n    return class AudioNode extends eventTargetConstructor {\n        constructor(context, isActive, nativeAudioNode, audioNodeRenderer) {\n            super(nativeAudioNode);\n            this._context = context;\n            this._nativeAudioNode = nativeAudioNode;\n            const nativeContext = getNativeContext(context);\n            // Bug #12: Safari does not support to disconnect a specific destination.\n            if (isNativeAudioContext(nativeContext) && true !== cacheTestResult(testAudioNodeDisconnectMethodSupport, () => {\n                return testAudioNodeDisconnectMethodSupport(nativeContext);\n            })) {\n                wrapAudioNodeDisconnectMethod(nativeAudioNode);\n            }\n            AUDIO_NODE_STORE.set(this, nativeAudioNode);\n            EVENT_LISTENERS.set(this, new Set());\n            if (isActive) {\n                setInternalStateToActive(this);\n            }\n            addAudioNodeConnections(this, audioNodeRenderer, nativeAudioNode);\n        }\n        get channelCount() {\n            return this._nativeAudioNode.channelCount;\n        }\n        set channelCount(value) {\n            this._nativeAudioNode.channelCount = value;\n        }\n        get channelCountMode() {\n            return this._nativeAudioNode.channelCountMode;\n        }\n        set channelCountMode(value) {\n            this._nativeAudioNode.channelCountMode = value;\n        }\n        get channelInterpretation() {\n            return this._nativeAudioNode.channelInterpretation;\n        }\n        set channelInterpretation(value) {\n            this._nativeAudioNode.channelInterpretation = value;\n        }\n        get context() {\n            return this._context;\n        }\n        get numberOfInputs() {\n            return this._nativeAudioNode.numberOfInputs;\n        }\n        get numberOfOutputs() {\n            return this._nativeAudioNode.numberOfOutputs;\n        }\n        connect(destination, output = 0, input = 0) {\n            // Bug #174: Safari does expose a wrong numberOfOutputs for MediaStreamAudioDestinationNodes.\n            if (output < 0 || output >= this._nativeAudioNode.numberOfOutputs) {\n                throw createIndexSizeError();\n            }\n            const nativeContext = getNativeContext(this._context);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            if (isNativeAudioNode(destination) || isNativeAudioParam(destination)) {\n                throw createInvalidAccessError();\n            }\n            if (isAudioNode(destination)) {\n                const nativeDestinationAudioNode = getNativeAudioNode(destination);\n                try {\n                    const connection = connectNativeAudioNodeToNativeAudioNode(this._nativeAudioNode, nativeDestinationAudioNode, output, input);\n                    if (isOffline || isPassiveAudioNode(this)) {\n                        this._nativeAudioNode.disconnect(...connection);\n                    }\n                    else if (isPassiveAudioNode(destination)) {\n                        setInternalStateToActive(destination);\n                    }\n                    // An AudioWorklet needs a connection because it otherwise may truncate the input array.\n                    // @todo Count the number of connections which depend on this auxiliary GainNode to know when it can be removed again.\n                    if (isAudioWorkletNode(destination)) {\n                        const auxiliaryGainNodes = auxiliaryGainNodeStore.get(nativeDestinationAudioNode);\n                        if (auxiliaryGainNodes === undefined) {\n                            const nativeGainNode = nativeContext.createGain();\n                            nativeGainNode.connect(connection[0], 0, connection[2]);\n                            auxiliaryGainNodeStore.set(nativeDestinationAudioNode, new Map([[input, nativeGainNode]]));\n                        }\n                        else if (auxiliaryGainNodes.get(input) === undefined) {\n                            const nativeGainNode = nativeContext.createGain();\n                            nativeGainNode.connect(connection[0], 0, connection[2]);\n                            auxiliaryGainNodes.set(input, nativeGainNode);\n                        }\n                    }\n                }\n                catch (err) {\n                    // Bug #41: Only Chrome, Firefox and Opera throw the correct exception by now.\n                    if (err.code === 12) {\n                        throw createInvalidAccessError();\n                    }\n                    throw err;\n                }\n                const isNewConnectionToAudioNode = isOffline\n                    ? addConnectionToAudioNodeOfOfflineAudioContext(this, destination, output, input)\n                    : addConnectionToAudioNodeOfAudioContext(this, destination, output, input);\n                // Bug #164: Only Firefox detects cycles so far.\n                if (isNewConnectionToAudioNode) {\n                    const cycles = detectCycles([this], destination);\n                    visitEachAudioNodeOnce(cycles, createIncrementCycleCounter(isOffline));\n                }\n                return destination;\n            }\n            const nativeAudioParam = getNativeAudioParam(destination);\n            /*\n             * Bug #147 & #153: Safari does not support to connect an input signal to the playbackRate AudioParam of an\n             * AudioBufferSourceNode. This can't be easily detected and that's why the outdated name property is used here to identify\n             * Safari.\n             */\n            if (nativeAudioParam.name === 'playbackRate') {\n                throw createNotSupportedError();\n            }\n            try {\n                this._nativeAudioNode.connect(nativeAudioParam, output);\n                if (isOffline || isPassiveAudioNode(this)) {\n                    this._nativeAudioNode.disconnect(nativeAudioParam, output);\n                }\n            }\n            catch (err) {\n                // Bug #58: Only Firefox does throw an InvalidStateError yet.\n                if (err.code === 12) {\n                    throw createInvalidAccessError();\n                }\n                throw err;\n            }\n            const isNewConnectionToAudioParam = isOffline\n                ? addConnectionToAudioParamOfOfflineAudioContext(this, destination, output)\n                : addConnectionToAudioParamOfAudioContext(this, destination, output);\n            // Bug #164: Only Firefox detects cycles so far.\n            if (isNewConnectionToAudioParam) {\n                const cycles = detectCycles([this], destination);\n                visitEachAudioNodeOnce(cycles, createIncrementCycleCounter(isOffline));\n            }\n        }\n        disconnect(destinationOrOutput, output, input) {\n            let destinations;\n            if (destinationOrOutput === undefined) {\n                destinations = deleteAnyConnection(this);\n            }\n            else if (typeof destinationOrOutput === 'number') {\n                if (destinationOrOutput < 0 || destinationOrOutput >= this.numberOfOutputs) {\n                    throw createIndexSizeError();\n                }\n                destinations = deleteConnectionAtOutput(this, destinationOrOutput);\n            }\n            else {\n                if (output !== undefined && (output < 0 || output >= this.numberOfOutputs)) {\n                    throw createIndexSizeError();\n                }\n                if (isAudioNode(destinationOrOutput)\n                    && input !== undefined\n                    && (input < 0 || input >= destinationOrOutput.numberOfInputs)) {\n                    throw createIndexSizeError();\n                }\n                destinations = deleteConnectionToDestination(this, destinationOrOutput, output, input);\n                if (destinations.length === 0) {\n                    throw createInvalidAccessError();\n                }\n            }\n            // Bug #164: Only Firefox detects cycles so far.\n            for (const destination of destinations) {\n                const cycles = detectCycles([this], destination);\n                visitEachAudioNodeOnce(cycles, decrementCycleCounter);\n            }\n        }\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/audio-node-constructor.js.map","export class ReadOnlyMap {\n    constructor(parameters) {\n        this._map = new Map(parameters);\n    }\n    get size() {\n        return this._map.size;\n    }\n    entries() {\n        return this._map.entries();\n    }\n    forEach(callback, thisArg = null) {\n        return this._map.forEach((value, key) => callback.call(thisArg, value, key, this));\n    }\n    get(name) {\n        return this._map.get(name);\n    }\n    has(name) {\n        return this._map.has(name);\n    }\n    keys() {\n        return this._map.keys();\n    }\n    values() {\n        return this._map.values();\n    }\n}\n//# sourceMappingURL=/build/es2019/read-only-map.js.map","import { NODE_NAME_TO_PROCESSOR_CONSTRUCTOR_MAPS } from '../globals';\nimport { ReadOnlyMap } from '../read-only-map';\nconst DEFAULT_OPTIONS = {\n    channelCount: 2,\n    // Bug #61: The channelCountMode should be 'max' according to the spec but is set to 'explicit' to achieve consistent behavior.\n    channelCountMode: 'explicit',\n    channelInterpretation: 'speakers',\n    numberOfInputs: 1,\n    numberOfOutputs: 1,\n    outputChannelCount: undefined,\n    parameterData: {},\n    processorOptions: {}\n};\nconst createChannelCount = (length) => {\n    const channelCount = [];\n    for (let i = 0; i < length; i += 1) {\n        channelCount.push(1);\n    }\n    return channelCount;\n};\nconst sanitizedOptions = (options) => {\n    return {\n        ...options,\n        outputChannelCount: (options.outputChannelCount !== undefined) ?\n            options.outputChannelCount :\n            (options.numberOfInputs === 1 && options.numberOfOutputs === 1) ?\n                /*\n                 * Bug #61: This should be the computedNumberOfChannels, but unfortunately that is almost impossible to fake. That's why\n                 * the channelCountMode is required to be 'explicit' as long as there is not a native implementation in every browser. That\n                 * makes sure the computedNumberOfChannels is equivilant to the channelCount which makes it much easier to compute.\n                 */\n                [options.channelCount] :\n                createChannelCount(options.numberOfOutputs)\n    };\n};\nexport const createAudioWorkletNodeConstructor = (addUnrenderedAudioWorkletNode, audioNodeConstructor, createAudioParam, createAudioWorkletNodeRenderer, createNativeAudioWorkletNode, getNativeContext, isNativeOfflineAudioContext, nativeAudioWorkletNodeConstructor, wrapEventListener) => {\n    return class AudioWorkletNode extends audioNodeConstructor {\n        constructor(context, name, options = DEFAULT_OPTIONS) {\n            const nativeContext = getNativeContext(context);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            const mergedOptions = sanitizedOptions({ ...DEFAULT_OPTIONS, ...options });\n            const nodeNameToProcessorConstructorMap = NODE_NAME_TO_PROCESSOR_CONSTRUCTOR_MAPS.get(nativeContext);\n            const processorConstructor = (nodeNameToProcessorConstructorMap === undefined) ?\n                undefined :\n                nodeNameToProcessorConstructorMap.get(name);\n            const nativeAudioWorkletNode = createNativeAudioWorkletNode(nativeContext, isOffline ? null : context.baseLatency, nativeAudioWorkletNodeConstructor, name, processorConstructor, mergedOptions);\n            const audioWorkletNodeRenderer = ((isOffline)\n                ? createAudioWorkletNodeRenderer(name, mergedOptions, processorConstructor)\n                : null);\n            /*\n             * @todo Add a mechanism to switch an AudioWorkletNode to passive once the process() function of the AudioWorkletProcessor\n             * returns false.\n             */\n            super(context, true, nativeAudioWorkletNode, audioWorkletNodeRenderer);\n            const parameters = [];\n            nativeAudioWorkletNode.parameters.forEach((nativeAudioParam, nm) => {\n                const audioParam = createAudioParam(this, isOffline, nativeAudioParam);\n                parameters.push([nm, audioParam]);\n            });\n            this._nativeAudioWorkletNode = nativeAudioWorkletNode;\n            this._onprocessorerror = null;\n            this._parameters = new ReadOnlyMap(parameters);\n            /*\n             * Bug #86 & #87: Invoking the renderer of an AudioWorkletNode might be necessary if it has no direct or indirect connection to\n             * the destination.\n             */\n            if (isOffline) {\n                addUnrenderedAudioWorkletNode(nativeContext, this);\n            }\n        }\n        get onprocessorerror() {\n            return this._onprocessorerror;\n        }\n        set onprocessorerror(value) {\n            const wrappedListener = (typeof value === 'function')\n                ? wrapEventListener(this, value)\n                : null;\n            this._nativeAudioWorkletNode.onprocessorerror = wrappedListener;\n            const nativeOnProcessorError = this._nativeAudioWorkletNode.onprocessorerror;\n            this._onprocessorerror = (nativeOnProcessorError !== null && nativeOnProcessorError === wrappedListener)\n                ? value\n                : nativeOnProcessorError;\n        }\n        get parameters() {\n            if (this._parameters === null) {\n                // @todo The definition that TypeScript uses of the AudioParamMap is lacking many methods.\n                return this._nativeAudioWorkletNode.parameters;\n            }\n            return this._parameters;\n        }\n        get port() {\n            return this._nativeAudioWorkletNode.port;\n        }\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/audio-worklet-node-constructor.js.map","export function copyFromChannel(audioBuffer, \n// @todo There is currently no way to define something like { [ key: number | string ]: Float32Array }\nparent, key, channelNumber, bufferOffset) {\n    if (typeof audioBuffer.copyFromChannel === 'function') {\n        // The byteLength will be 0 when the ArrayBuffer was transferred.\n        if (parent[key].byteLength === 0) {\n            parent[key] = new Float32Array(128);\n        }\n        audioBuffer.copyFromChannel(parent[key], channelNumber, bufferOffset);\n        // Bug #5: Safari does not support copyFromChannel().\n    }\n    else {\n        const channelData = audioBuffer.getChannelData(channelNumber);\n        // The byteLength will be 0 when the ArrayBuffer was transferred.\n        if (parent[key].byteLength === 0) {\n            parent[key] = channelData.slice(bufferOffset, bufferOffset + 128);\n        }\n        else {\n            const slicedInput = new Float32Array(channelData.buffer, bufferOffset * Float32Array.BYTES_PER_ELEMENT, 128);\n            parent[key].set(slicedInput);\n        }\n    }\n}\n//# sourceMappingURL=/build/es2019/helpers/copy-from-channel.js.map","export const copyToChannel = (audioBuffer, parent, key, channelNumber, bufferOffset) => {\n    if (typeof audioBuffer.copyToChannel === 'function') {\n        // The byteLength will be 0 when the ArrayBuffer was transferred.\n        if (parent[key].byteLength !== 0) {\n            audioBuffer.copyToChannel(parent[key], channelNumber, bufferOffset);\n        }\n        // Bug #5: Safari does not support copyToChannel().\n    }\n    else {\n        // The byteLength will be 0 when the ArrayBuffer was transferred.\n        if (parent[key].byteLength !== 0) {\n            audioBuffer\n                .getChannelData(channelNumber)\n                .set(parent[key], bufferOffset);\n        }\n    }\n};\n//# sourceMappingURL=/build/es2019/helpers/copy-to-channel.js.map","export const createNestedArrays = (x, y) => {\n    const arrays = [];\n    for (let i = 0; i < x; i += 1) {\n        const array = [];\n        const length = (typeof y === 'number') ? y : y[i];\n        for (let j = 0; j < length; j += 1) {\n            array.push(new Float32Array(128));\n        }\n        arrays.push(array);\n    }\n    return arrays;\n};\n//# sourceMappingURL=/build/es2019/helpers/create-nested-arrays.js.map","import { copyFromChannel } from '../helpers/copy-from-channel';\nimport { copyToChannel } from '../helpers/copy-to-channel';\nimport { createNestedArrays } from '../helpers/create-nested-arrays';\nimport { getAudioNodeConnections } from '../helpers/get-audio-node-connections';\nimport { getAudioWorkletProcessor } from '../helpers/get-audio-worklet-processor';\nimport { isOwnedByContext } from '../helpers/is-owned-by-context';\nconst processBuffer = async (proxy, renderedBuffer, nativeOfflineAudioContext, options, processorConstructor, exposeCurrentFrameAndCurrentTime) => {\n    // Ceil the length to the next full render quantum.\n    // Bug #17: Safari does not yet expose the length.\n    const length = (renderedBuffer === null) ? (Math.ceil(proxy.context.length / 128) * 128) : renderedBuffer.length;\n    const numberOfInputChannels = options.channelCount * options.numberOfInputs;\n    const numberOfOutputChannels = options.outputChannelCount.reduce((sum, value) => sum + value, 0);\n    const processedBuffer = (numberOfOutputChannels === 0) ? null : nativeOfflineAudioContext.createBuffer(numberOfOutputChannels, length, nativeOfflineAudioContext.sampleRate);\n    if (processorConstructor === undefined) {\n        throw new Error('Missing the processor constructor.');\n    }\n    const audioNodeConnections = getAudioNodeConnections(proxy);\n    const audioWorkletProcessor = await getAudioWorkletProcessor(nativeOfflineAudioContext, proxy);\n    const inputs = createNestedArrays(options.numberOfInputs, options.channelCount);\n    const outputs = createNestedArrays(options.numberOfOutputs, options.outputChannelCount);\n    const parameters = Array\n        .from(proxy.parameters.keys())\n        .reduce((prmtrs, name) => ({ ...prmtrs, [name]: new Float32Array(128) }), {});\n    for (let i = 0; i < length; i += 128) {\n        if (options.numberOfInputs > 0 && renderedBuffer !== null) {\n            for (let j = 0; j < options.numberOfInputs; j += 1) {\n                for (let k = 0; k < options.channelCount; k += 1) {\n                    copyFromChannel(renderedBuffer, inputs[j], k, k, i);\n                }\n            }\n        }\n        if (processorConstructor.parameterDescriptors !== undefined && renderedBuffer !== null) {\n            processorConstructor.parameterDescriptors.forEach(({ name }, index) => {\n                copyFromChannel(renderedBuffer, parameters, name, numberOfInputChannels + index, i);\n            });\n        }\n        for (let j = 0; j < options.numberOfInputs; j += 1) {\n            for (let k = 0; k < options.outputChannelCount[j]; k += 1) {\n                // The byteLength will be 0 when the ArrayBuffer was transferred.\n                if (outputs[j][k].byteLength === 0) {\n                    outputs[j][k] = new Float32Array(128);\n                }\n            }\n        }\n        try {\n            const potentiallyEmptyInputs = inputs\n                .map((input, index) => {\n                if (audioNodeConnections.activeInputs[index].size === 0) {\n                    return [];\n                }\n                return input;\n            });\n            const activeSourceFlag = exposeCurrentFrameAndCurrentTime(i / nativeOfflineAudioContext.sampleRate, nativeOfflineAudioContext.sampleRate, () => audioWorkletProcessor.process(potentiallyEmptyInputs, outputs, parameters));\n            if (processedBuffer !== null) {\n                for (let j = 0, outputChannelSplitterNodeOutput = 0; j < options.numberOfOutputs; j += 1) {\n                    for (let k = 0; k < options.outputChannelCount[j]; k += 1) {\n                        copyToChannel(processedBuffer, outputs[j], k, outputChannelSplitterNodeOutput + k, i);\n                    }\n                    outputChannelSplitterNodeOutput += options.outputChannelCount[j];\n                }\n            }\n            if (!activeSourceFlag) {\n                break;\n            }\n        }\n        catch (error) {\n            proxy.dispatchEvent(new ErrorEvent('processorerror', { error }));\n            break;\n        }\n    }\n    return processedBuffer;\n};\nexport const createAudioWorkletNodeRendererFactory = (connectAudioParam, connectMultipleOutputs, createNativeAudioBufferSourceNode, createNativeChannelMergerNode, createNativeChannelSplitterNode, createNativeConstantSourceNode, createNativeGainNode, deleteUnrenderedAudioWorkletNode, disconnectMultipleOutputs, exposeCurrentFrameAndCurrentTime, getNativeAudioNode, nativeAudioWorkletNodeConstructor, nativeOfflineAudioContextConstructor, renderAutomation, renderInputsOfAudioNode, renderNativeOfflineAudioContext) => {\n    return (name, options, processorConstructor) => {\n        const renderedNativeAudioNodes = new WeakMap();\n        let processedBufferPromise = null;\n        const createAudioNode = async (proxy, nativeOfflineAudioContext, trace) => {\n            let nativeAudioWorkletNode = getNativeAudioNode(proxy);\n            let nativeOutputNodes = null;\n            const nativeAudioWorkletNodeIsOwnedByContext = isOwnedByContext(nativeAudioWorkletNode, nativeOfflineAudioContext);\n            // Bug #61: Only Chrome & Opera have an implementation of the AudioWorkletNode yet.\n            if (nativeAudioWorkletNodeConstructor === null) {\n                const numberOfOutputChannels = options.outputChannelCount.reduce((sum, value) => sum + value, 0);\n                const outputChannelSplitterNode = createNativeChannelSplitterNode(nativeOfflineAudioContext, {\n                    channelCount: Math.max(1, numberOfOutputChannels),\n                    channelCountMode: 'explicit',\n                    channelInterpretation: 'discrete',\n                    numberOfOutputs: Math.max(1, numberOfOutputChannels)\n                });\n                const outputChannelMergerNodes = [];\n                for (let i = 0; i < proxy.numberOfOutputs; i += 1) {\n                    outputChannelMergerNodes.push(createNativeChannelMergerNode(nativeOfflineAudioContext, {\n                        channelCount: 1,\n                        channelCountMode: 'explicit',\n                        channelInterpretation: 'speakers',\n                        numberOfInputs: options.outputChannelCount[i]\n                    }));\n                }\n                const outputGainNode = createNativeGainNode(nativeOfflineAudioContext, {\n                    channelCount: options.channelCount,\n                    channelCountMode: options.channelCountMode,\n                    channelInterpretation: options.channelInterpretation,\n                    gain: 1\n                });\n                outputGainNode.connect = connectMultipleOutputs.bind(null, outputChannelMergerNodes);\n                outputGainNode.disconnect = disconnectMultipleOutputs.bind(null, outputChannelMergerNodes);\n                nativeOutputNodes = [outputChannelSplitterNode, outputChannelMergerNodes, outputGainNode];\n            }\n            else if (!nativeAudioWorkletNodeIsOwnedByContext) {\n                nativeAudioWorkletNode = new nativeAudioWorkletNodeConstructor(nativeOfflineAudioContext, name);\n            }\n            renderedNativeAudioNodes.set(nativeOfflineAudioContext, (nativeOutputNodes === null) ? nativeAudioWorkletNode : nativeOutputNodes[2]);\n            if (nativeOutputNodes !== null) {\n                if (processedBufferPromise === null) {\n                    if (processorConstructor === undefined) {\n                        throw new Error('Missing the processor constructor.');\n                    }\n                    if (nativeOfflineAudioContextConstructor === null) {\n                        throw new Error('Missing the native OfflineAudioContext constructor.');\n                    }\n                    // Bug #47: The AudioDestinationNode in Edge and Safari gets not initialized correctly.\n                    const numberOfInputChannels = proxy.channelCount * proxy.numberOfInputs;\n                    const numberOfParameters = (processorConstructor.parameterDescriptors === undefined)\n                        ? 0\n                        : processorConstructor.parameterDescriptors.length;\n                    const numberOfChannels = numberOfInputChannels + numberOfParameters;\n                    const renderBuffer = async () => {\n                        const partialOfflineAudioContext = new nativeOfflineAudioContextConstructor(numberOfChannels, \n                        // Ceil the length to the next full render quantum.\n                        // Bug #17: Safari does not yet expose the length.\n                        Math.ceil(proxy.context.length / 128) * 128, nativeOfflineAudioContext.sampleRate);\n                        const gainNodes = [];\n                        const inputChannelSplitterNodes = [];\n                        for (let i = 0; i < options.numberOfInputs; i += 1) {\n                            gainNodes.push(createNativeGainNode(partialOfflineAudioContext, {\n                                channelCount: options.channelCount,\n                                channelCountMode: options.channelCountMode,\n                                channelInterpretation: options.channelInterpretation,\n                                gain: 1\n                            }));\n                            inputChannelSplitterNodes.push(createNativeChannelSplitterNode(partialOfflineAudioContext, {\n                                channelCount: options.channelCount,\n                                channelCountMode: 'explicit',\n                                channelInterpretation: 'discrete',\n                                numberOfOutputs: options.channelCount\n                            }));\n                        }\n                        const constantSourceNodes = await Promise\n                            .all(Array\n                            .from(proxy.parameters.values())\n                            .map(async (audioParam) => {\n                            const constantSourceNode = createNativeConstantSourceNode(partialOfflineAudioContext, {\n                                channelCount: 1,\n                                channelCountMode: 'explicit',\n                                channelInterpretation: 'discrete',\n                                offset: audioParam.value\n                            });\n                            await renderAutomation(partialOfflineAudioContext, audioParam, constantSourceNode.offset, trace);\n                            return constantSourceNode;\n                        }));\n                        const inputChannelMergerNode = createNativeChannelMergerNode(partialOfflineAudioContext, {\n                            channelCount: 1,\n                            channelCountMode: 'explicit',\n                            channelInterpretation: 'speakers',\n                            numberOfInputs: Math.max(1, numberOfInputChannels + numberOfParameters)\n                        });\n                        for (let i = 0; i < options.numberOfInputs; i += 1) {\n                            gainNodes[i].connect(inputChannelSplitterNodes[i]);\n                            for (let j = 0; j < options.channelCount; j += 1) {\n                                inputChannelSplitterNodes[i].connect(inputChannelMergerNode, j, (i * options.channelCount) + j);\n                            }\n                        }\n                        for (const [index, constantSourceNode] of constantSourceNodes.entries()) {\n                            constantSourceNode.connect(inputChannelMergerNode, 0, numberOfInputChannels + index);\n                            constantSourceNode.start(0);\n                        }\n                        inputChannelMergerNode.connect(partialOfflineAudioContext.destination);\n                        await Promise\n                            .all(gainNodes\n                            .map((gainNode) => renderInputsOfAudioNode(proxy, partialOfflineAudioContext, gainNode, trace)));\n                        return renderNativeOfflineAudioContext(partialOfflineAudioContext);\n                    };\n                    processedBufferPromise = processBuffer(proxy, (numberOfChannels === 0) ? null : await renderBuffer(), nativeOfflineAudioContext, options, processorConstructor, exposeCurrentFrameAndCurrentTime);\n                }\n                const processedBuffer = await processedBufferPromise;\n                const audioBufferSourceNode = createNativeAudioBufferSourceNode(nativeOfflineAudioContext);\n                const [outputChannelSplitterNode, outputChannelMergerNodes, outputGainNode] = nativeOutputNodes;\n                if (processedBuffer !== null) {\n                    audioBufferSourceNode.buffer = processedBuffer;\n                    audioBufferSourceNode.start(0);\n                }\n                audioBufferSourceNode.connect(outputChannelSplitterNode);\n                for (let i = 0, outputChannelSplitterNodeOutput = 0; i < proxy.numberOfOutputs; i += 1) {\n                    const outputChannelMergerNode = outputChannelMergerNodes[i];\n                    for (let j = 0; j < options.outputChannelCount[i]; j += 1) {\n                        outputChannelSplitterNode.connect(outputChannelMergerNode, outputChannelSplitterNodeOutput + j, j);\n                    }\n                    outputChannelSplitterNodeOutput += options.outputChannelCount[i];\n                }\n                return outputGainNode;\n            }\n            if (!nativeAudioWorkletNodeIsOwnedByContext) {\n                for (const [nm, audioParam] of proxy.parameters.entries()) {\n                    await renderAutomation(nativeOfflineAudioContext, audioParam, \n                    // @todo The definition that TypeScript uses of the AudioParamMap is lacking many methods.\n                    nativeAudioWorkletNode.parameters.get(nm), trace);\n                }\n            }\n            else {\n                for (const [nm, audioParam] of proxy.parameters.entries()) {\n                    await connectAudioParam(nativeOfflineAudioContext, audioParam, \n                    // @todo The definition that TypeScript uses of the AudioParamMap is lacking many methods.\n                    nativeAudioWorkletNode.parameters.get(nm), trace);\n                }\n            }\n            await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeAudioWorkletNode, trace);\n            return nativeAudioWorkletNode;\n        };\n        return {\n            render(proxy, nativeOfflineAudioContext, trace) {\n                deleteUnrenderedAudioWorkletNode(nativeOfflineAudioContext, proxy);\n                const renderedNativeAudioWorkletNodeOrGainNode = renderedNativeAudioNodes.get(nativeOfflineAudioContext);\n                if (renderedNativeAudioWorkletNodeOrGainNode !== undefined) {\n                    return Promise.resolve(renderedNativeAudioWorkletNodeOrGainNode);\n                }\n                return createAudioNode(proxy, nativeOfflineAudioContext, trace);\n            }\n        };\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/audio-worklet-node-renderer-factory.js.map","import { NODE_TO_PROCESSOR_MAPS } from '../globals';\nimport { getNativeAudioNode } from './get-native-audio-node';\nimport { getValueForKey } from './get-value-for-key';\nexport const getAudioWorkletProcessor = (nativeOfflineAudioContext, proxy) => {\n    const nodeToProcessorMap = getValueForKey(NODE_TO_PROCESSOR_MAPS, nativeOfflineAudioContext);\n    const nativeAudioWorkletNode = getNativeAudioNode(proxy);\n    return getValueForKey(nodeToProcessorMap, nativeAudioWorkletNode);\n};\n//# sourceMappingURL=/build/es2019/helpers/get-audio-worklet-processor.js.map","import { MOST_NEGATIVE_SINGLE_FLOAT, MOST_POSITIVE_SINGLE_FLOAT } from '../constants';\nconst DEFAULT_OPTIONS = {\n    Q: 1,\n    channelCount: 2,\n    channelCountMode: 'max',\n    channelInterpretation: 'speakers',\n    detune: 0,\n    frequency: 350,\n    gain: 0,\n    type: 'lowpass'\n};\nexport const createBiquadFilterNodeConstructor = (audioNodeConstructor, createAudioParam, createBiquadFilterNodeRenderer, createInvalidAccessError, createNativeBiquadFilterNode, getNativeContext, isNativeOfflineAudioContext) => {\n    return class BiquadFilterNode extends audioNodeConstructor {\n        constructor(context, options = DEFAULT_OPTIONS) {\n            const nativeContext = getNativeContext(context);\n            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };\n            const nativeBiquadFilterNode = createNativeBiquadFilterNode(nativeContext, mergedOptions);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            const biquadFilterNodeRenderer = ((isOffline) ? createBiquadFilterNodeRenderer() : null);\n            super(context, false, nativeBiquadFilterNode, biquadFilterNodeRenderer);\n            // Bug #80: Edge & Safari do not export the correct values for maxValue and minValue.\n            this._Q = createAudioParam(this, isOffline, nativeBiquadFilterNode.Q, MOST_POSITIVE_SINGLE_FLOAT, MOST_NEGATIVE_SINGLE_FLOAT);\n            // Bug #78: Chrome, Edge, Firefox, Opera & Safari do not export the correct values for maxValue and minValue.\n            this._detune = createAudioParam(this, isOffline, nativeBiquadFilterNode.detune, 1200 * Math.log2(MOST_POSITIVE_SINGLE_FLOAT), -1200 * Math.log2(MOST_POSITIVE_SINGLE_FLOAT));\n            /*\n             * Bug #77: Edge does not export the correct values for maxValue and minValue. Firefox & Safari do not export the correct value\n             * for minValue.\n             */\n            this._frequency = createAudioParam(this, isOffline, nativeBiquadFilterNode.frequency, context.sampleRate / 2, 0);\n            // Bug #79: Chrome, Edge, Firefox, Opera & Safari do not export the correct values for maxValue and minValue.\n            this._gain = createAudioParam(this, isOffline, nativeBiquadFilterNode.gain, 40 * Math.log10(MOST_POSITIVE_SINGLE_FLOAT), MOST_NEGATIVE_SINGLE_FLOAT);\n            this._nativeBiquadFilterNode = nativeBiquadFilterNode;\n        }\n        get detune() {\n            return this._detune;\n        }\n        get frequency() {\n            return this._frequency;\n        }\n        get gain() {\n            return this._gain;\n        }\n        get Q() {\n            return this._Q;\n        }\n        get type() {\n            return this._nativeBiquadFilterNode.type;\n        }\n        set type(value) {\n            this._nativeBiquadFilterNode.type = value;\n        }\n        getFrequencyResponse(frequencyHz, magResponse, phaseResponse) {\n            this._nativeBiquadFilterNode.getFrequencyResponse(frequencyHz, magResponse, phaseResponse);\n            // Bug #68: Only Chrome, Firefox & Opera do throw an error if the parameters differ in their length.\n            if ((frequencyHz.length !== magResponse.length) || (magResponse.length !== phaseResponse.length)) {\n                throw createInvalidAccessError();\n            }\n        }\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/biquad-filter-node-constructor.js.map","const DEFAULT_OPTIONS = {\n    channelCount: 1,\n    channelCountMode: 'explicit',\n    channelInterpretation: 'speakers',\n    numberOfInputs: 6\n};\nexport const createChannelMergerNodeConstructor = (audioNodeConstructor, createChannelMergerNodeRenderer, createNativeChannelMergerNode, getNativeContext, isNativeOfflineAudioContext) => {\n    return class ChannelMergerNode extends audioNodeConstructor {\n        constructor(context, options = DEFAULT_OPTIONS) {\n            const nativeContext = getNativeContext(context);\n            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };\n            const nativeChannelMergerNode = createNativeChannelMergerNode(nativeContext, mergedOptions);\n            const channelMergerNodeRenderer = ((isNativeOfflineAudioContext(nativeContext))\n                ? createChannelMergerNodeRenderer()\n                : null);\n            super(context, false, nativeChannelMergerNode, channelMergerNodeRenderer);\n        }\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/channel-merger-node-constructor.js.map","const DEFAULT_OPTIONS = {\n    channelCount: 6,\n    channelCountMode: 'explicit',\n    channelInterpretation: 'discrete',\n    numberOfOutputs: 6\n};\nconst sanitizedOptions = (options) => {\n    return { ...options, channelCount: options.numberOfOutputs };\n};\nexport const createChannelSplitterNodeConstructor = (audioNodeConstructor, createChannelSplitterNodeRenderer, createNativeChannelSplitterNode, getNativeContext, isNativeOfflineAudioContext) => {\n    return class ChannelSplitterNode extends audioNodeConstructor {\n        constructor(context, options = DEFAULT_OPTIONS) {\n            const nativeContext = getNativeContext(context);\n            const mergedOptions = sanitizedOptions({ ...DEFAULT_OPTIONS, ...options });\n            const nativeChannelSplitterNode = createNativeChannelSplitterNode(nativeContext, mergedOptions);\n            const channelSplitterNodeRenderer = ((isNativeOfflineAudioContext(nativeContext))\n                ? createChannelSplitterNodeRenderer()\n                : null);\n            super(context, false, nativeChannelSplitterNode, channelSplitterNodeRenderer);\n        }\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/channel-splitter-node-constructor.js.map","import { MOST_NEGATIVE_SINGLE_FLOAT, MOST_POSITIVE_SINGLE_FLOAT } from '../constants';\nimport { setInternalStateToActive } from '../helpers/set-internal-state-to-active';\nimport { setInternalStateToPassive } from '../helpers/set-internal-state-to-passive';\nconst DEFAULT_OPTIONS = {\n    channelCount: 2,\n    channelCountMode: 'max',\n    channelInterpretation: 'speakers',\n    offset: 1\n};\nexport const createConstantSourceNodeConstructor = (audioNodeConstructor, createAudioParam, createConstantSourceNodeRendererFactory, createNativeConstantSourceNode, getNativeContext, isNativeOfflineAudioContext, wrapEventListener) => {\n    return class ConstantSourceNode extends audioNodeConstructor {\n        constructor(context, options = DEFAULT_OPTIONS) {\n            const nativeContext = getNativeContext(context);\n            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };\n            const nativeConstantSourceNode = createNativeConstantSourceNode(nativeContext, mergedOptions);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            const constantSourceNodeRenderer = ((isOffline)\n                ? createConstantSourceNodeRendererFactory()\n                : null);\n            super(context, false, nativeConstantSourceNode, constantSourceNodeRenderer);\n            this._constantSourceNodeRenderer = constantSourceNodeRenderer;\n            this._nativeConstantSourceNode = nativeConstantSourceNode;\n            /*\n             * Bug #62 & #74: Edge & Safari do not support ConstantSourceNodes and do not export the correct values for maxValue and\n             * minValue for GainNodes.\n             */\n            this._offset = createAudioParam(this, isOffline, nativeConstantSourceNode.offset, MOST_POSITIVE_SINGLE_FLOAT, MOST_NEGATIVE_SINGLE_FLOAT);\n            this._onended = null;\n        }\n        get offset() {\n            return this._offset;\n        }\n        get onended() {\n            return this._onended;\n        }\n        set onended(value) {\n            const wrappedListener = (typeof value === 'function') ? wrapEventListener(this, value) : null;\n            this._nativeConstantSourceNode.onended = wrappedListener;\n            const nativeOnEnded = this._nativeConstantSourceNode.onended;\n            this._onended = (nativeOnEnded !== null && nativeOnEnded === wrappedListener)\n                ? value\n                : nativeOnEnded;\n        }\n        start(when = 0) {\n            this._nativeConstantSourceNode.start(when);\n            if (this._constantSourceNodeRenderer !== null) {\n                this._constantSourceNodeRenderer.start = when;\n            }\n            else {\n                setInternalStateToActive(this);\n                const resetInternalStateToPassive = () => {\n                    this._nativeConstantSourceNode.removeEventListener('ended', resetInternalStateToPassive);\n                    // @todo Determine a meaningful delay instead of just using one second.\n                    setTimeout(() => setInternalStateToPassive(this), 1000);\n                };\n                this._nativeConstantSourceNode.addEventListener('ended', resetInternalStateToPassive);\n            }\n        }\n        stop(when = 0) {\n            this._nativeConstantSourceNode.stop(when);\n            if (this._constantSourceNodeRenderer !== null) {\n                this._constantSourceNodeRenderer.stop = when;\n            }\n        }\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/constant-source-node-constructor.js.map","const DEFAULT_OPTIONS = {\n    buffer: null,\n    channelCount: 2,\n    channelCountMode: 'clamped-max',\n    channelInterpretation: 'speakers',\n    disableNormalization: false\n};\nexport const createConvolverNodeConstructor = (audioNodeConstructor, createConvolverNodeRenderer, createNativeConvolverNode, getNativeContext, isNativeOfflineAudioContext) => {\n    return class ConvolverNode extends audioNodeConstructor {\n        constructor(context, options = DEFAULT_OPTIONS) {\n            const nativeContext = getNativeContext(context);\n            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };\n            const nativeConvolverNode = createNativeConvolverNode(nativeContext, mergedOptions);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            const convolverNodeRenderer = ((isOffline) ? createConvolverNodeRenderer() : null);\n            super(context, false, nativeConvolverNode, convolverNodeRenderer);\n            this._isBufferNullified = false;\n            this._nativeConvolverNode = nativeConvolverNode;\n        }\n        get buffer() {\n            if (this._isBufferNullified) {\n                return null;\n            }\n            return this._nativeConvolverNode.buffer;\n        }\n        set buffer(value) {\n            this._nativeConvolverNode.buffer = value;\n            // Bug #115: Safari does not allow to set the buffer to null.\n            if (value === null && this._nativeConvolverNode.buffer !== null) {\n                const nativeContext = this._nativeConvolverNode.context;\n                this._nativeConvolverNode.buffer = nativeContext.createBuffer(1, 1, nativeContext.sampleRate);\n                this._isBufferNullified = true;\n            }\n            else {\n                this._isBufferNullified = false;\n            }\n        }\n        get normalize() {\n            return this._nativeConvolverNode.normalize;\n        }\n        set normalize(value) {\n            this._nativeConvolverNode.normalize = value;\n        }\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/convolver-node-constructor.js.map","const DEFAULT_OPTIONS = {\n    channelCount: 2,\n    channelCountMode: 'max',\n    channelInterpretation: 'speakers',\n    delayTime: 0,\n    maxDelayTime: 1\n};\nexport const createDelayNodeConstructor = (audioNodeConstructor, createAudioParam, createDelayNodeRenderer, createNativeDelayNode, getNativeContext, isNativeOfflineAudioContext) => {\n    return class DelayNode extends audioNodeConstructor {\n        constructor(context, options = DEFAULT_OPTIONS) {\n            const nativeContext = getNativeContext(context);\n            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };\n            const nativeDelayNode = createNativeDelayNode(nativeContext, mergedOptions);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            const delayNodeRenderer = ((isOffline)\n                ? createDelayNodeRenderer(mergedOptions.maxDelayTime)\n                : null);\n            super(context, false, nativeDelayNode, delayNodeRenderer);\n            // Bug #161: Edge does not export the correct values for maxValue and minValue.\n            this._delayTime = createAudioParam(this, isOffline, nativeDelayNode.delayTime, mergedOptions.maxDelayTime, 0);\n        }\n        get delayTime() {\n            return this._delayTime;\n        }\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/delay-node-constructor.js.map","import { isNativeAudioNode } from '../guards/native-audio-node';\nconst getOutputAudioNodeAtIndex = (createIndexSizeError, outputAudioNodes, output) => {\n    const outputAudioNode = outputAudioNodes[output];\n    if (outputAudioNode === undefined) {\n        throw createIndexSizeError();\n    }\n    return outputAudioNode;\n};\nexport const createDisconnectMultipleOutputs = (createIndexSizeError) => {\n    return (outputAudioNodes, destinationOrOutput = undefined, output = undefined, input = 0) => {\n        if (destinationOrOutput === undefined) {\n            return outputAudioNodes\n                .forEach((outputAudioNode) => outputAudioNode.disconnect());\n        }\n        if (typeof destinationOrOutput === 'number') {\n            return getOutputAudioNodeAtIndex(createIndexSizeError, outputAudioNodes, destinationOrOutput)\n                .disconnect();\n        }\n        if (isNativeAudioNode(destinationOrOutput)) {\n            if (output === undefined) {\n                return outputAudioNodes\n                    .forEach((outputAudioNode) => outputAudioNode.disconnect(destinationOrOutput));\n            }\n            if (input === undefined) {\n                return getOutputAudioNodeAtIndex(createIndexSizeError, outputAudioNodes, output)\n                    .disconnect(destinationOrOutput, 0);\n            }\n            return getOutputAudioNodeAtIndex(createIndexSizeError, outputAudioNodes, output)\n                .disconnect(destinationOrOutput, 0, input);\n        }\n        if (output === undefined) {\n            return outputAudioNodes\n                .forEach((outputAudioNode) => outputAudioNode.disconnect(destinationOrOutput));\n        }\n        return getOutputAudioNodeAtIndex(createIndexSizeError, outputAudioNodes, output)\n            .disconnect(destinationOrOutput, 0);\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/disconnect-multiple-outputs.js.map","const DEFAULT_OPTIONS = {\n    attack: 0.003,\n    channelCount: 2,\n    channelCountMode: 'clamped-max',\n    channelInterpretation: 'speakers',\n    knee: 30,\n    ratio: 12,\n    release: 0.25,\n    threshold: -24\n};\nexport const createDynamicsCompressorNodeConstructor = (audioNodeConstructor, createAudioParam, createDynamicsCompressorNodeRenderer, createNativeDynamicsCompressorNode, createNotSupportedError, getNativeContext, isNativeOfflineAudioContext) => {\n    return class DynamicsCompressorNode extends audioNodeConstructor {\n        constructor(context, options = DEFAULT_OPTIONS) {\n            const nativeContext = getNativeContext(context);\n            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };\n            const nativeDynamicsCompressorNode = createNativeDynamicsCompressorNode(nativeContext, mergedOptions);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            const dynamicsCompressorNodeRenderer = ((isOffline)\n                ? createDynamicsCompressorNodeRenderer()\n                : null);\n            super(context, false, nativeDynamicsCompressorNode, dynamicsCompressorNodeRenderer);\n            // Bug #110: Edge does not export the correct values for maxValue and minValue.\n            this._attack = createAudioParam(this, isOffline, nativeDynamicsCompressorNode.attack, 1, 0);\n            this._knee = createAudioParam(this, isOffline, nativeDynamicsCompressorNode.knee, 40, 0);\n            this._nativeDynamicsCompressorNode = nativeDynamicsCompressorNode;\n            this._ratio = createAudioParam(this, isOffline, nativeDynamicsCompressorNode.ratio, 20, 1);\n            this._release = createAudioParam(this, isOffline, nativeDynamicsCompressorNode.release, 1, 0);\n            this._threshold = createAudioParam(this, isOffline, nativeDynamicsCompressorNode.threshold, 0, -100);\n        }\n        get attack() {\n            return this._attack;\n        }\n        /*\n         * Bug #108: Only Chrome, Firefox and Opera disallow a channelCount of three and above yet which is why the getter and setter needs\n         * to be overwritten here.\n         */\n        get channelCount() {\n            return this._nativeDynamicsCompressorNode.channelCount;\n        }\n        set channelCount(value) {\n            const previousChannelCount = this._nativeDynamicsCompressorNode.channelCount;\n            this._nativeDynamicsCompressorNode.channelCount = value;\n            if (value > 2) {\n                this._nativeDynamicsCompressorNode.channelCount = previousChannelCount;\n                throw createNotSupportedError();\n            }\n        }\n        /*\n         * Bug #109: Only Chrome, Firefox and Opera disallow a channelCountMode of 'max' yet which is why the getter and setter needs to be\n         * overwritten here.\n         */\n        get channelCountMode() {\n            return this._nativeDynamicsCompressorNode.channelCountMode;\n        }\n        set channelCountMode(value) {\n            const previousChannelCount = this._nativeDynamicsCompressorNode.channelCountMode;\n            this._nativeDynamicsCompressorNode.channelCountMode = value;\n            if (value === 'max') {\n                this._nativeDynamicsCompressorNode.channelCountMode = previousChannelCount;\n                throw createNotSupportedError();\n            }\n        }\n        get knee() {\n            return this._knee;\n        }\n        get ratio() {\n            return this._ratio;\n        }\n        get reduction() {\n            // Bug #111: Safari returns an AudioParam instead of a number.\n            if (typeof this._nativeDynamicsCompressorNode.reduction.value === 'number') {\n                return this._nativeDynamicsCompressorNode.reduction.value;\n            }\n            return this._nativeDynamicsCompressorNode.reduction;\n        }\n        get release() {\n            return this._release;\n        }\n        get threshold() {\n            return this._threshold;\n        }\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/dynamics-compressor-node-constructor.js.map","import { MOST_NEGATIVE_SINGLE_FLOAT, MOST_POSITIVE_SINGLE_FLOAT } from '../constants';\nconst DEFAULT_OPTIONS = {\n    channelCount: 2,\n    channelCountMode: 'max',\n    channelInterpretation: 'speakers',\n    gain: 1\n};\nexport const createGainNodeConstructor = (audioNodeConstructor, createAudioParam, createGainNodeRenderer, createNativeGainNode, getNativeContext, isNativeOfflineAudioContext) => {\n    return class GainNode extends audioNodeConstructor {\n        constructor(context, options = DEFAULT_OPTIONS) {\n            const nativeContext = getNativeContext(context);\n            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };\n            const nativeGainNode = createNativeGainNode(nativeContext, mergedOptions);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            const gainNodeRenderer = ((isOffline) ? createGainNodeRenderer() : null);\n            super(context, false, nativeGainNode, gainNodeRenderer);\n            // Bug #74: Edge & Safari do not export the correct values for maxValue and minValue.\n            this._gain = createAudioParam(this, isOffline, nativeGainNode.gain, MOST_POSITIVE_SINGLE_FLOAT, MOST_NEGATIVE_SINGLE_FLOAT);\n        }\n        get gain() {\n            return this._gain;\n        }\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/gain-node-constructor.js.map","export const createInvalidStateError = () => {\n    try {\n        return new DOMException('', 'InvalidStateError');\n    }\n    catch (err) {\n        // Bug #122: Edge is the only browser that does not yet allow to construct a DOMException.\n        err.code = 11;\n        err.name = 'InvalidStateError';\n        return err;\n    }\n};\n//# sourceMappingURL=/build/es2019/factories/invalid-state-error.js.map","export const createInvalidAccessError = () => {\n    try {\n        return new DOMException('', 'InvalidAccessError');\n    }\n    catch (err) {\n        // Bug #122: Edge is the only browser that does not yet allow to construct a DOMException.\n        err.code = 15;\n        err.name = 'InvalidAccessError';\n        return err;\n    }\n};\n//# sourceMappingURL=/build/es2019/factories/invalid-access-error.js.map","import { wrapIIRFilterNodeGetFrequencyResponseMethod } from '../helpers/wrap-iir-filter-node-get-frequency-response-method';\nconst DEFAULT_OPTIONS = {\n    channelCount: 2,\n    channelCountMode: 'max',\n    channelInterpretation: 'speakers'\n};\nexport const createIIRFilterNodeConstructor = (audioNodeConstructor, createNativeIIRFilterNode, createIIRFilterNodeRenderer, getNativeContext, isNativeOfflineAudioContext) => {\n    return class IIRFilterNode extends audioNodeConstructor {\n        constructor(context, options) {\n            const nativeContext = getNativeContext(context);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };\n            const nativeIIRFilterNode = createNativeIIRFilterNode(nativeContext, isOffline ? null : context.baseLatency, mergedOptions);\n            const iirFilterNodeRenderer = ((isOffline)\n                ? createIIRFilterNodeRenderer(mergedOptions.feedback, mergedOptions.feedforward)\n                : null);\n            super(context, false, nativeIIRFilterNode, iirFilterNodeRenderer);\n            // Bug #23 & #24: FirefoxDeveloper does not throw an InvalidAccessError.\n            // @todo Write a test which allows other browsers to remain unpatched.\n            wrapIIRFilterNodeGetFrequencyResponseMethod(nativeIIRFilterNode);\n            this._nativeIIRFilterNode = nativeIIRFilterNode;\n        }\n        getFrequencyResponse(frequencyHz, magResponse, phaseResponse) {\n            return this._nativeIIRFilterNode.getFrequencyResponse(frequencyHz, magResponse, phaseResponse);\n        }\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/iir-filter-node-constructor.js.map","// This implementation as shamelessly inspired by source code of\n// tslint:disable-next-line:max-line-length\n// {@link https://chromium.googlesource.com/chromium/src.git/+/master/third_party/WebKit/Source/platform/audio/IIRFilter.cpp|Chromium's IIRFilter}.\nexport const filterBuffer = (feedback, feedbackLength, feedforward, feedforwardLength, minLength, xBuffer, yBuffer, bufferIndex, bufferLength, input, output) => {\n    const inputLength = input.length;\n    let i = bufferIndex;\n    for (let j = 0; j < inputLength; j += 1) {\n        let y = feedforward[0] * input[j];\n        for (let k = 1; k < minLength; k += 1) {\n            const x = (i - k) & (bufferLength - 1); // tslint:disable-line:no-bitwise\n            y += feedforward[k] * xBuffer[x];\n            y -= feedback[k] * yBuffer[x];\n        }\n        for (let k = minLength; k < feedforwardLength; k += 1) {\n            y += feedforward[k] * xBuffer[(i - k) & (bufferLength - 1)]; // tslint:disable-line:no-bitwise\n        }\n        for (let k = minLength; k < feedbackLength; k += 1) {\n            y -= feedback[k] * yBuffer[(i - k) & (bufferLength - 1)]; // tslint:disable-line:no-bitwise\n        }\n        xBuffer[i] = input[j];\n        yBuffer[i] = y;\n        i = (i + 1) & (bufferLength - 1); // tslint:disable-line:no-bitwise\n        output[j] = y;\n    }\n    return i;\n};\n//# sourceMappingURL=/build/es2019/helpers/filter-buffer.js.map","const DEFAULT_OPTIONS = {\n    channelCount: 2,\n    channelCountMode: 'explicit',\n    channelInterpretation: 'speakers'\n};\nexport const createMediaStreamAudioDestinationNodeConstructor = (audioNodeConstructor, createNativeMediaStreamAudioDestinationNode, getNativeContext, isNativeOfflineAudioContext) => {\n    return class MediaStreamAudioDestinationNode extends audioNodeConstructor {\n        constructor(context, options = DEFAULT_OPTIONS) {\n            const nativeContext = getNativeContext(context);\n            // Bug #173: Safari allows to create a MediaStreamAudioDestinationNode with an OfflineAudioContext.\n            if (isNativeOfflineAudioContext(nativeContext)) {\n                throw new TypeError();\n            }\n            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };\n            const nativeMediaStreamAudioDestinationNode = createNativeMediaStreamAudioDestinationNode(nativeContext, mergedOptions);\n            super(context, false, nativeMediaStreamAudioDestinationNode, null);\n            this._nativeMediaStreamAudioDestinationNode = nativeMediaStreamAudioDestinationNode;\n        }\n        get stream() {\n            return this._nativeMediaStreamAudioDestinationNode.stream;\n        }\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/media-stream-audio-destination-node-constructor.js.map","export const testPromiseSupport = (nativeContext) => {\n    // This 12 numbers represent the 48 bytes of an empty WAVE file with a single sample.\n    const uint32Array = new Uint32Array([\n        1179011410,\n        40,\n        1163280727,\n        544501094,\n        16,\n        131073,\n        44100,\n        176400,\n        1048580,\n        1635017060,\n        4,\n        0\n    ]);\n    try {\n        // Bug #1: Safari requires a successCallback.\n        const promise = nativeContext.decodeAudioData(uint32Array.buffer, () => {\n            // Ignore the success callback.\n        });\n        if (promise === undefined) {\n            return false;\n        }\n        promise.catch(() => {\n            // Ignore rejected errors.\n        });\n        return true;\n    }\n    catch {\n        // Ignore errors.\n    }\n    return false;\n};\n//# sourceMappingURL=/build/es2019/helpers/test-promise-support.js.map","export const assignNativeAudioNodeOption = (nativeAudioNode, options, option) => {\n    const value = options[option];\n    if (value !== undefined && value !== nativeAudioNode[option]) {\n        nativeAudioNode[option] = value;\n    }\n};\n//# sourceMappingURL=/build/es2019/helpers/assign-native-audio-node-option.js.map","import { assignNativeAudioNodeOption } from './assign-native-audio-node-option';\nexport const assignNativeAudioNodeOptions = (nativeAudioNode, options) => {\n    assignNativeAudioNodeOption(nativeAudioNode, options, 'channelCount');\n    assignNativeAudioNodeOption(nativeAudioNode, options, 'channelCountMode');\n    assignNativeAudioNodeOption(nativeAudioNode, options, 'channelInterpretation');\n};\n//# sourceMappingURL=/build/es2019/helpers/assign-native-audio-node-options.js.map","export const testAnalyserNodeGetFloatTimeDomainDataMethodSupport = (nativeAnalyserNode) => {\n    return typeof nativeAnalyserNode.getFloatTimeDomainData === 'function';\n};\n//# sourceMappingURL=/build/es2019/helpers/test-analyser-node-get-float-time-domain-data-method-support.js.map","export const assignNativeAudioNodeAudioParamValue = (nativeAudioNode, options, audioParam) => {\n    const value = options[audioParam];\n    if (value !== undefined && value !== nativeAudioNode[audioParam].value) {\n        nativeAudioNode[audioParam].value = value;\n    }\n};\n//# sourceMappingURL=/build/es2019/helpers/assign-native-audio-node-audio-param-value.js.map","export const wrapAudioScheduledSourceNodeStartMethodNegativeParameters = (nativeAudioScheduledSourceNode) => {\n    nativeAudioScheduledSourceNode.start = ((start) => {\n        return (when = 0, offset = 0, duration) => {\n            if ((typeof duration === 'number' && duration < 0) || offset < 0 || when < 0) {\n                throw new RangeError(\"The parameters can't be negative.\");\n            }\n            // @todo TypeScript cannot infer the overloaded signature with 3 arguments yet.\n            start.call(nativeAudioScheduledSourceNode, when, offset, duration);\n        };\n    })(nativeAudioScheduledSourceNode.start);\n};\n//# sourceMappingURL=/build/es2019/helpers/wrap-audio-scheduled-source-node-start-method-negative-parameters.js.map","export const wrapAudioScheduledSourceNodeStopMethodNegativeParameters = (nativeAudioScheduledSourceNode) => {\n    nativeAudioScheduledSourceNode.stop = ((stop) => {\n        return (when = 0) => {\n            if (when < 0) {\n                throw new RangeError(\"The parameter can't be negative.\");\n            }\n            stop.call(nativeAudioScheduledSourceNode, when);\n        };\n    })(nativeAudioScheduledSourceNode.stop);\n};\n//# sourceMappingURL=/build/es2019/helpers/wrap-audio-scheduled-source-node-stop-method-negative-parameters.js.map","export const computeBufferSize = (baseLatency, sampleRate) => {\n    if (baseLatency === null) {\n        return 512;\n    }\n    return Math.max(512, Math.min(16384, Math.pow(2, Math.round(Math.log2(baseLatency * sampleRate)))));\n};\n//# sourceMappingURL=/build/es2019/helpers/compute-buffer-size.js.map","import { cloneAudioWorkletNodeOptions } from './clone-audio-worklet-node-options';\nexport const createAudioWorkletProcessorPromise = async (processorConstructor, audioWorkletNodeOptions) => {\n    const clonedAudioWorkletNodeOptions = await cloneAudioWorkletNodeOptions(audioWorkletNodeOptions);\n    return new processorConstructor(clonedAudioWorkletNodeOptions);\n};\n//# sourceMappingURL=/build/es2019/helpers/create-audio-worklet-processor-promise.js.map","export const cloneAudioWorkletNodeOptions = (audioWorkletNodeOptions) => {\n    return new Promise((resolve, reject) => {\n        const { port1, port2 } = new MessageChannel();\n        port1.onmessage = ({ data }) => {\n            port1.close();\n            port2.close();\n            resolve(data);\n        };\n        port1.onmessageerror = ({ data }) => {\n            port1.close();\n            port2.close();\n            reject(data);\n        };\n        // This will throw an error if the audioWorkletNodeOptions are not clonable.\n        port2.postMessage(audioWorkletNodeOptions);\n    });\n};\n//# sourceMappingURL=/build/es2019/helpers/clone-audio-worklet-node-options.js.map","export const interceptConnections = (original, interceptor) => {\n    original.connect = interceptor.connect.bind(interceptor);\n    original.disconnect = interceptor.disconnect.bind(interceptor);\n    return original;\n};\n//# sourceMappingURL=/build/es2019/helpers/intercept-connections.js.map","import { computeBufferSize } from '../helpers/compute-buffer-size';\nimport { filterBuffer } from '../helpers/filter-buffer';\nimport { interceptConnections } from '../helpers/intercept-connections';\nfunction divide(a, b) {\n    const denominator = (b[0] * b[0]) + (b[1] * b[1]);\n    return [(((a[0] * b[0]) + (a[1] * b[1])) / denominator), (((a[1] * b[0]) - (a[0] * b[1])) / denominator)];\n}\nfunction multiply(a, b) {\n    return [((a[0] * b[0]) - (a[1] * b[1])), ((a[0] * b[1]) + (a[1] * b[0]))];\n}\nfunction evaluatePolynomial(coefficient, z) {\n    let result = [0, 0];\n    for (let i = coefficient.length - 1; i >= 0; i -= 1) {\n        result = multiply(result, z);\n        result[0] += coefficient[i];\n    }\n    return result;\n}\nexport const createNativeIIRFilterNodeFakerFactory = (createInvalidAccessError, createInvalidStateError, createNativeScriptProcessorNode, createNotSupportedError) => {\n    return (nativeContext, baseLatency, { channelCount, channelCountMode, channelInterpretation, feedback, feedforward }) => {\n        const bufferSize = computeBufferSize(baseLatency, nativeContext.sampleRate);\n        const feedbackLength = feedback.length;\n        const feedforwardLength = feedforward.length;\n        const minLength = Math.min(feedbackLength, feedforwardLength);\n        if (feedback.length === 0 || feedback.length > 20) {\n            throw createNotSupportedError();\n        }\n        if (feedback[0] === 0) {\n            throw createInvalidStateError();\n        }\n        if (feedforward.length === 0 || feedforward.length > 20) {\n            throw createNotSupportedError();\n        }\n        if (feedforward[0] === 0) {\n            throw createInvalidStateError();\n        }\n        if (feedback[0] !== 1) {\n            for (let i = 0; i < feedforwardLength; i += 1) {\n                feedforward[i] /= feedback[0];\n            }\n            for (let i = 1; i < feedbackLength; i += 1) {\n                feedback[i] /= feedback[0];\n            }\n        }\n        const scriptProcessorNode = createNativeScriptProcessorNode(nativeContext, bufferSize, channelCount, channelCount);\n        scriptProcessorNode.channelCount = channelCount;\n        scriptProcessorNode.channelCountMode = channelCountMode;\n        scriptProcessorNode.channelInterpretation = channelInterpretation;\n        const bufferLength = 32;\n        const bufferIndexes = [];\n        const xBuffers = [];\n        const yBuffers = [];\n        for (let i = 0; i < channelCount; i += 1) {\n            bufferIndexes.push(0);\n            const xBuffer = new Float32Array(bufferLength);\n            const yBuffer = new Float32Array(bufferLength);\n            xBuffer.fill(0);\n            yBuffer.fill(0);\n            xBuffers.push(xBuffer);\n            yBuffers.push(yBuffer);\n        }\n        scriptProcessorNode.onaudioprocess = (event) => {\n            const inputBuffer = event.inputBuffer;\n            const outputBuffer = event.outputBuffer;\n            const numberOfChannels = inputBuffer.numberOfChannels;\n            for (let i = 0; i < numberOfChannels; i += 1) {\n                const input = inputBuffer.getChannelData(i);\n                const output = outputBuffer.getChannelData(i);\n                bufferIndexes[i] = filterBuffer(feedback, feedbackLength, feedforward, feedforwardLength, minLength, xBuffers[i], yBuffers[i], bufferIndexes[i], bufferLength, input, output);\n            }\n        };\n        const nyquist = nativeContext.sampleRate / 2;\n        const nativeIIRFilterNodeFaker = {\n            get bufferSize() {\n                return bufferSize;\n            },\n            get channelCount() {\n                return scriptProcessorNode.channelCount;\n            },\n            set channelCount(value) {\n                scriptProcessorNode.channelCount = value;\n            },\n            get channelCountMode() {\n                return scriptProcessorNode.channelCountMode;\n            },\n            set channelCountMode(value) {\n                scriptProcessorNode.channelCountMode = value;\n            },\n            get channelInterpretation() {\n                return scriptProcessorNode.channelInterpretation;\n            },\n            set channelInterpretation(value) {\n                scriptProcessorNode.channelInterpretation = value;\n            },\n            get context() {\n                return scriptProcessorNode.context;\n            },\n            get inputs() {\n                return [scriptProcessorNode];\n            },\n            get numberOfInputs() {\n                return scriptProcessorNode.numberOfInputs;\n            },\n            get numberOfOutputs() {\n                return scriptProcessorNode.numberOfOutputs;\n            },\n            addEventListener(...args) {\n                // @todo Dissallow adding an audioprocess listener.\n                return scriptProcessorNode.addEventListener(args[0], args[1], args[2]);\n            },\n            dispatchEvent(...args) {\n                return scriptProcessorNode.dispatchEvent(args[0]);\n            },\n            getFrequencyResponse(frequencyHz, magResponse, phaseResponse) {\n                if ((frequencyHz.length !== magResponse.length) || (magResponse.length !== phaseResponse.length)) {\n                    throw createInvalidAccessError();\n                }\n                const length = frequencyHz.length;\n                for (let i = 0; i < length; i += 1) {\n                    const omega = -Math.PI * (frequencyHz[i] / nyquist);\n                    const z = [Math.cos(omega), Math.sin(omega)];\n                    const numerator = evaluatePolynomial(feedforward, z);\n                    const denominator = evaluatePolynomial(feedback, z);\n                    const response = divide(numerator, denominator);\n                    magResponse[i] = Math.sqrt((response[0] * response[0]) + (response[1] * response[1]));\n                    phaseResponse[i] = Math.atan2(response[1], response[0]);\n                }\n            },\n            removeEventListener(...args) {\n                return scriptProcessorNode.removeEventListener(args[0], args[1], args[2]);\n            }\n        };\n        return interceptConnections(nativeIIRFilterNodeFaker, scriptProcessorNode);\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/native-iir-filter-node-faker-factory.js.map","export const createNotSupportedError = () => {\n    try {\n        return new DOMException('', 'NotSupportedError');\n    }\n    catch (err) {\n        // Bug #122: Edge is the only browser that does not yet allow to construct a DOMException.\n        err.code = 9;\n        err.name = 'NotSupportedError';\n        return err;\n    }\n};\n//# sourceMappingURL=/build/es2019/factories/not-supported-error.js.map","import { testPromiseSupport } from '../helpers/test-promise-support';\nconst DEFAULT_OPTIONS = {\n    numberOfChannels: 1\n};\nexport const createOfflineAudioContextConstructor = (baseAudioContextConstructor, cacheTestResult, createInvalidStateError, createNativeOfflineAudioContext, startRendering) => {\n    return class OfflineAudioContext extends baseAudioContextConstructor {\n        constructor(a, b, c) {\n            let options;\n            if (typeof a === 'number' && b !== undefined && c !== undefined) {\n                options = { length: b, numberOfChannels: a, sampleRate: c };\n            }\n            else if (typeof a === 'object') {\n                options = a;\n            }\n            else {\n                throw new Error('The given parameters are not valid.');\n            }\n            const { length, numberOfChannels, sampleRate } = { ...DEFAULT_OPTIONS, ...options };\n            const nativeOfflineAudioContext = createNativeOfflineAudioContext(numberOfChannels, length, sampleRate);\n            // #21 Safari does not support promises and therefore would fire the statechange event before the promise can be resolved.\n            if (!cacheTestResult(testPromiseSupport, () => testPromiseSupport(nativeOfflineAudioContext))) {\n                nativeOfflineAudioContext.addEventListener('statechange', (() => {\n                    let i = 0;\n                    const delayStateChangeEvent = (event) => {\n                        if (this._state === 'running') {\n                            if (i > 0) {\n                                nativeOfflineAudioContext.removeEventListener('statechange', delayStateChangeEvent);\n                                event.stopImmediatePropagation();\n                                this._waitForThePromiseToSettle(event);\n                            }\n                            else {\n                                i += 1;\n                            }\n                        }\n                    };\n                    return delayStateChangeEvent;\n                })());\n            }\n            super(nativeOfflineAudioContext, numberOfChannels);\n            this._length = length;\n            this._nativeOfflineAudioContext = nativeOfflineAudioContext;\n            this._state = null;\n        }\n        get length() {\n            // Bug #17: Safari does not yet expose the length.\n            if (this._nativeOfflineAudioContext.length === undefined) {\n                return this._length;\n            }\n            return this._nativeOfflineAudioContext.length;\n        }\n        get state() {\n            return (this._state === null) ? this._nativeOfflineAudioContext.state : this._state;\n        }\n        startRendering() {\n            /*\n             * Bug #9 & #59: It is theoretically possible that startRendering() will first render a partialOfflineAudioContext. Therefore\n             * the state of the nativeOfflineAudioContext might no transition to running immediately.\n             */\n            if (this._state === 'running') {\n                return Promise.reject(createInvalidStateError());\n            }\n            this._state = 'running';\n            return startRendering(this.destination, this._nativeOfflineAudioContext)\n                .then((audioBuffer) => {\n                this._state = null;\n                /*\n                 * Bug #50: Deleting the AudioGraph is currently not possible anymore.\n                 * deleteAudioGraph(this, this._nativeOfflineAudioContext);\n                 */\n                return audioBuffer;\n            })\n                // @todo This could be written more elegantly when Promise.finally() becomes avalaible.\n                .catch((err) => {\n                this._state = null;\n                /*\n                 * Bug #50: Deleting the AudioGraph is currently not possible anymore.\n                 * deleteAudioGraph(this, this._nativeOfflineAudioContext);\n                 */\n                throw err;\n            });\n        }\n        _waitForThePromiseToSettle(event) {\n            if (this._state === null) {\n                this._nativeOfflineAudioContext.dispatchEvent(event);\n            }\n            else {\n                setTimeout(() => this._waitForThePromiseToSettle(event));\n            }\n        }\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/offline-audio-context-constructor.js.map","import { setInternalStateToActive } from '../helpers/set-internal-state-to-active';\nimport { setInternalStateToPassive } from '../helpers/set-internal-state-to-passive';\nconst DEFAULT_OPTIONS = {\n    channelCount: 2,\n    channelCountMode: 'max',\n    channelInterpretation: 'speakers',\n    detune: 0,\n    frequency: 440,\n    type: 'sine'\n};\nexport const createOscillatorNodeConstructor = (audioNodeConstructor, createAudioParam, createInvalidStateError, createNativeOscillatorNode, createOscillatorNodeRenderer, getNativeContext, isNativeOfflineAudioContext, wrapEventListener) => {\n    return class OscillatorNode extends audioNodeConstructor {\n        constructor(context, options = DEFAULT_OPTIONS) {\n            const nativeContext = getNativeContext(context);\n            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };\n            const nativeOscillatorNode = createNativeOscillatorNode(nativeContext, mergedOptions);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            const oscillatorNodeRenderer = ((isOffline) ? createOscillatorNodeRenderer() : null);\n            const nyquist = context.sampleRate / 2;\n            super(context, false, nativeOscillatorNode, oscillatorNodeRenderer);\n            // Bug #81: Edge, Firefox & Safari do not export the correct values for maxValue and minValue.\n            this._detune = createAudioParam(this, isOffline, nativeOscillatorNode.detune, 153600, -153600);\n            // Bug #76: Edge & Safari do not export the correct values for maxValue and minValue.\n            this._frequency = createAudioParam(this, isOffline, nativeOscillatorNode.frequency, nyquist, -nyquist);\n            this._nativeOscillatorNode = nativeOscillatorNode;\n            this._onended = null;\n            this._oscillatorNodeRenderer = oscillatorNodeRenderer;\n            if (this._oscillatorNodeRenderer !== null && mergedOptions.periodicWave !== undefined) {\n                this._oscillatorNodeRenderer.periodicWave =\n                    mergedOptions.periodicWave;\n            }\n        }\n        get detune() {\n            return this._detune;\n        }\n        get frequency() {\n            return this._frequency;\n        }\n        get onended() {\n            return this._onended;\n        }\n        set onended(value) {\n            const wrappedListener = (typeof value === 'function') ? wrapEventListener(this, value) : null;\n            this._nativeOscillatorNode.onended = wrappedListener;\n            const nativeOnEnded = this._nativeOscillatorNode.onended;\n            this._onended = (nativeOnEnded !== null && nativeOnEnded === wrappedListener)\n                ? value\n                : nativeOnEnded;\n        }\n        get type() {\n            return this._nativeOscillatorNode.type;\n        }\n        set type(value) {\n            this._nativeOscillatorNode.type = value;\n            // Bug #57: Edge will not throw an error when assigning the type to 'custom'. But it still will change the value.\n            if (value === 'custom') {\n                throw createInvalidStateError();\n            }\n            if (this._oscillatorNodeRenderer !== null) {\n                this._oscillatorNodeRenderer.periodicWave = null;\n            }\n        }\n        setPeriodicWave(periodicWave) {\n            this._nativeOscillatorNode.setPeriodicWave(periodicWave);\n            if (this._oscillatorNodeRenderer !== null) {\n                this._oscillatorNodeRenderer.periodicWave = periodicWave;\n            }\n        }\n        start(when = 0) {\n            this._nativeOscillatorNode.start(when);\n            if (this._oscillatorNodeRenderer !== null) {\n                this._oscillatorNodeRenderer.start = when;\n            }\n            else {\n                setInternalStateToActive(this);\n                const resetInternalStateToPassive = () => {\n                    this._nativeOscillatorNode.removeEventListener('ended', resetInternalStateToPassive);\n                    // @todo Determine a meaningful delay instead of just using one second.\n                    setTimeout(() => setInternalStateToPassive(this), 1000);\n                };\n                this._nativeOscillatorNode.addEventListener('ended', resetInternalStateToPassive);\n            }\n        }\n        stop(when = 0) {\n            this._nativeOscillatorNode.stop(when);\n            if (this._oscillatorNodeRenderer !== null) {\n                this._oscillatorNodeRenderer.stop = when;\n            }\n        }\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/oscillator-node-constructor.js.map","import { MOST_NEGATIVE_SINGLE_FLOAT, MOST_POSITIVE_SINGLE_FLOAT } from '../constants';\nconst DEFAULT_OPTIONS = {\n    channelCount: 2,\n    channelCountMode: 'clamped-max',\n    channelInterpretation: 'speakers',\n    coneInnerAngle: 360,\n    coneOuterAngle: 360,\n    coneOuterGain: 0,\n    distanceModel: 'inverse',\n    maxDistance: 10000,\n    orientationX: 1,\n    orientationY: 0,\n    orientationZ: 0,\n    panningModel: 'equalpower',\n    positionX: 0,\n    positionY: 0,\n    positionZ: 0,\n    refDistance: 1,\n    rolloffFactor: 1\n};\nexport const createPannerNodeConstructor = (audioNodeConstructor, createAudioParam, createNativePannerNode, createPannerNodeRenderer, getNativeContext, isNativeOfflineAudioContext) => {\n    return class PannerNode extends audioNodeConstructor {\n        constructor(context, options = DEFAULT_OPTIONS) {\n            const nativeContext = getNativeContext(context);\n            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };\n            const nativePannerNode = createNativePannerNode(nativeContext, mergedOptions);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            const pannerNodeRenderer = ((isOffline) ? createPannerNodeRenderer() : null);\n            super(context, false, nativePannerNode, pannerNodeRenderer);\n            this._nativePannerNode = nativePannerNode;\n            // Bug #74: Edge & Safari do not export the correct values for maxValue and minValue for GainNodes.\n            this._orientationX = createAudioParam(this, isOffline, nativePannerNode.orientationX, MOST_POSITIVE_SINGLE_FLOAT, MOST_NEGATIVE_SINGLE_FLOAT);\n            this._orientationY = createAudioParam(this, isOffline, nativePannerNode.orientationY, MOST_POSITIVE_SINGLE_FLOAT, MOST_NEGATIVE_SINGLE_FLOAT);\n            this._orientationZ = createAudioParam(this, isOffline, nativePannerNode.orientationZ, MOST_POSITIVE_SINGLE_FLOAT, MOST_NEGATIVE_SINGLE_FLOAT);\n            this._positionX = createAudioParam(this, isOffline, nativePannerNode.positionX, MOST_POSITIVE_SINGLE_FLOAT, MOST_NEGATIVE_SINGLE_FLOAT);\n            this._positionY = createAudioParam(this, isOffline, nativePannerNode.positionY, MOST_POSITIVE_SINGLE_FLOAT, MOST_NEGATIVE_SINGLE_FLOAT);\n            this._positionZ = createAudioParam(this, isOffline, nativePannerNode.positionZ, MOST_POSITIVE_SINGLE_FLOAT, MOST_NEGATIVE_SINGLE_FLOAT);\n        }\n        get coneInnerAngle() {\n            return this._nativePannerNode.coneInnerAngle;\n        }\n        set coneInnerAngle(value) {\n            this._nativePannerNode.coneInnerAngle = value;\n        }\n        get coneOuterAngle() {\n            return this._nativePannerNode.coneOuterAngle;\n        }\n        set coneOuterAngle(value) {\n            this._nativePannerNode.coneOuterAngle = value;\n        }\n        get coneOuterGain() {\n            return this._nativePannerNode.coneOuterGain;\n        }\n        set coneOuterGain(value) {\n            this._nativePannerNode.coneOuterGain = value;\n        }\n        get distanceModel() {\n            return this._nativePannerNode.distanceModel;\n        }\n        set distanceModel(value) {\n            this._nativePannerNode.distanceModel = value;\n        }\n        get maxDistance() {\n            return this._nativePannerNode.maxDistance;\n        }\n        set maxDistance(value) {\n            this._nativePannerNode.maxDistance = value;\n        }\n        get orientationX() {\n            return this._orientationX;\n        }\n        get orientationY() {\n            return this._orientationY;\n        }\n        get orientationZ() {\n            return this._orientationZ;\n        }\n        get panningModel() {\n            return this._nativePannerNode.panningModel;\n        }\n        set panningModel(value) {\n            this._nativePannerNode.panningModel = value;\n        }\n        get positionX() {\n            return this._positionX;\n        }\n        get positionY() {\n            return this._positionY;\n        }\n        get positionZ() {\n            return this._positionZ;\n        }\n        get refDistance() {\n            return this._nativePannerNode.refDistance;\n        }\n        set refDistance(value) {\n            this._nativePannerNode.refDistance = value;\n        }\n        get rolloffFactor() {\n            return this._nativePannerNode.rolloffFactor;\n        }\n        set rolloffFactor(value) {\n            this._nativePannerNode.rolloffFactor = value;\n        }\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/panner-node-constructor.js.map","const DEFAULT_OPTIONS = {\n    disableNormalization: false\n};\nexport const createPeriodicWaveConstructor = (createNativePeriodicWave, getNativeContext, periodicWaveStore) => {\n    return class PeriodicWave {\n        constructor(context, options) {\n            const nativeContext = getNativeContext(context);\n            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };\n            const periodicWave = createNativePeriodicWave(nativeContext, mergedOptions);\n            periodicWaveStore.add(periodicWave);\n            // This does violate all good pratices but it is used here to simplify the handling of periodic waves.\n            return periodicWave;\n        }\n        static [Symbol.hasInstance](instance) {\n            return (instance !== null && typeof instance === 'object' && Object.getPrototypeOf(instance) === PeriodicWave.prototype)\n                || (periodicWaveStore.has(instance));\n        }\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/periodic-wave-constructor.js.map","const DEFAULT_OPTIONS = {\n    channelCount: 2,\n    /*\n     * Bug #105: The channelCountMode should be 'clamped-max' according to the spec but is set to 'explicit' to achieve consistent\n     * behavior.\n     */\n    channelCountMode: 'explicit',\n    channelInterpretation: 'speakers',\n    pan: 0\n};\nexport const createStereoPannerNodeConstructor = (audioNodeConstructor, createAudioParam, createNativeStereoPannerNode, createStereoPannerNodeRenderer, getNativeContext, isNativeOfflineAudioContext) => {\n    return class StereoPannerNode extends audioNodeConstructor {\n        constructor(context, options = DEFAULT_OPTIONS) {\n            const nativeContext = getNativeContext(context);\n            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };\n            const nativeStereoPannerNode = createNativeStereoPannerNode(nativeContext, mergedOptions);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            const stereoPannerNodeRenderer = ((isOffline) ? createStereoPannerNodeRenderer() : null);\n            super(context, false, nativeStereoPannerNode, stereoPannerNodeRenderer);\n            // Bug #106: Edge does not export a maxValue and minValue property.\n            this._pan = createAudioParam(this, isOffline, nativeStereoPannerNode.pan, 1, -1);\n        }\n        get pan() {\n            return this._pan;\n        }\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/stereo-panner-node-constructor.js.map","const DEFAULT_OPTIONS = {\n    channelCount: 2,\n    channelCountMode: 'max',\n    channelInterpretation: 'speakers',\n    curve: null,\n    oversample: 'none'\n};\nexport const createWaveShaperNodeConstructor = (audioNodeConstructor, createInvalidStateError, createNativeWaveShaperNode, createWaveShaperNodeRenderer, getNativeContext, isNativeOfflineAudioContext) => {\n    return class WaveShaperNode extends audioNodeConstructor {\n        constructor(context, options = DEFAULT_OPTIONS) {\n            const nativeContext = getNativeContext(context);\n            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };\n            const nativeWaveShaperNode = createNativeWaveShaperNode(nativeContext, mergedOptions);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            const waveShaperNodeRenderer = ((isOffline) ? createWaveShaperNodeRenderer() : null);\n            // @todo Add a mechanism to only switch a WaveShaperNode to active while it is connected.\n            super(context, true, nativeWaveShaperNode, waveShaperNodeRenderer);\n            this._isCurveNullified = false;\n            this._nativeWaveShaperNode = nativeWaveShaperNode;\n        }\n        get curve() {\n            if (this._isCurveNullified) {\n                return null;\n            }\n            return this._nativeWaveShaperNode.curve;\n        }\n        set curve(value) {\n            // Bug #103: Safari does not allow to set the curve to null.\n            if (value === null) {\n                this._isCurveNullified = true;\n                this._nativeWaveShaperNode.curve = new Float32Array([0, 0]);\n            }\n            else {\n                // Bug #102: Safari does not throw an InvalidStateError when the curve has less than two samples.\n                // Bug #104: Chrome will throw an InvalidAccessError when the curve has less than two samples.\n                if (value.length < 2) {\n                    throw createInvalidStateError();\n                }\n                this._isCurveNullified = false;\n                this._nativeWaveShaperNode.curve = value;\n            }\n        }\n        get oversample() {\n            return this._nativeWaveShaperNode.oversample;\n        }\n        set oversample(value) {\n            this._nativeWaveShaperNode.oversample = value;\n        }\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/wave-shaper-node-constructor.js.map","export const isDCCurve = (curve) => {\n    if (curve === null) {\n        return false;\n    }\n    const length = curve.length;\n    if (length % 2 !== 0) {\n        return (curve[Math.floor(length / 2)] !== 0);\n    }\n    return (curve[(length / 2) - 1] + curve[length / 2] !== 0);\n};\n//# sourceMappingURL=/build/es2019/helpers/is-dc-curve.js.map","export const overwriteAccessors = (object, property, createGetter, createSetter) => {\n    let prototype = Object.getPrototypeOf(object);\n    while (!prototype.hasOwnProperty(property)) {\n        prototype = Object.getPrototypeOf(prototype);\n    }\n    const { get, set } = Object.getOwnPropertyDescriptor(prototype, property);\n    Object.defineProperty(object, property, { get: createGetter(get), set: createSetter(set) });\n};\n//# sourceMappingURL=/build/es2019/helpers/overwrite-accessors.js.map","export const wrapEventListener = (target, eventListener) => {\n    return (event) => {\n        const descriptor = { value: target };\n        Object.defineProperties(event, {\n            currentTarget: descriptor,\n            target: descriptor\n        });\n        if (typeof eventListener === 'function') {\n            return eventListener.call(target, event);\n        }\n        return eventListener.handleEvent.call(target, event);\n    };\n};\n//# sourceMappingURL=/build/es2019/helpers/wrap-event-listener.js.map","import { createCancelAndHoldAutomationEvent, createCancelScheduledValuesAutomationEvent, createExponentialRampToValueAutomationEvent, createLinearRampToValueAutomationEvent, createSetTargetAutomationEvent, createSetValueAutomationEvent, createSetValueCurveAutomationEvent } from 'automation-events';\nimport { createAbortError } from './factories/abort-error';\nimport { createAddAudioNodeConnections } from './factories/add-audio-node-connections';\nimport { createAddAudioParamConnections } from './factories/add-audio-param-connections';\nimport { createAddAudioWorkletModule } from './factories/add-audio-worklet-module';\nimport { createAddUnrenderedAudioWorkletNode } from './factories/add-unrendered-audio-worklet-node';\nimport { createAnalyserNodeConstructor } from './factories/analyser-node-constructor';\nimport { createAnalyserNodeRendererFactory } from './factories/analyser-node-renderer-factory';\nimport { createAudioBufferConstructor } from './factories/audio-buffer-constructor';\nimport { createAudioBufferSourceNodeConstructor } from './factories/audio-buffer-source-node-constructor';\nimport { createAudioBufferSourceNodeRendererFactory } from './factories/audio-buffer-source-node-renderer-factory';\nimport { createAudioContextConstructor } from './factories/audio-context-constructor';\nimport { createAudioDestinationNodeConstructor } from './factories/audio-destination-node-constructor';\nimport { createAudioDestinationNodeRenderer } from './factories/audio-destination-node-renderer-factory';\nimport { createAudioListenerFactory } from './factories/audio-listener-factory';\nimport { createAudioNodeConstructor } from './factories/audio-node-constructor';\nimport { createAudioParamFactory } from './factories/audio-param-factory';\nimport { createAudioParamRenderer } from './factories/audio-param-renderer';\nimport { createAudioWorkletNodeConstructor } from './factories/audio-worklet-node-constructor';\nimport { createAudioWorkletNodeRendererFactory } from './factories/audio-worklet-node-renderer-factory';\nimport { createBaseAudioContextConstructor } from './factories/base-audio-context-constructor';\nimport { createBiquadFilterNodeConstructor } from './factories/biquad-filter-node-constructor';\nimport { createBiquadFilterNodeRendererFactory } from './factories/biquad-filter-node-renderer-factory';\nimport { createCacheTestResult } from './factories/cache-test-result';\nimport { createChannelMergerNodeConstructor } from './factories/channel-merger-node-constructor';\nimport { createChannelMergerNodeRendererFactory } from './factories/channel-merger-node-renderer-factory';\nimport { createChannelSplitterNodeConstructor } from './factories/channel-splitter-node-constructor';\nimport { createChannelSplitterNodeRendererFactory } from './factories/channel-splitter-node-renderer-factory';\nimport { createConnectAudioParam } from './factories/connect-audio-param';\nimport { createConnectMultipleOutputs } from './factories/connect-multiple-outputs';\nimport { createConnectedNativeAudioBufferSourceNodeFactory } from './factories/connected-native-audio-buffer-source-node-factory';\nimport { createConstantSourceNodeConstructor } from './factories/constant-source-node-constructor';\nimport { createConstantSourceNodeRendererFactory } from './factories/constant-source-node-renderer-factory';\nimport { createConvertNumberToUnsignedLong } from './factories/convert-number-to-unsigned-long';\nimport { createConvolverNodeConstructor } from './factories/convolver-node-constructor';\nimport { createConvolverNodeRendererFactory } from './factories/convolver-node-renderer-factory';\nimport { createCreateNativeOfflineAudioContext } from './factories/create-native-offline-audio-context';\nimport { createDataCloneError } from './factories/data-clone-error';\nimport { createDecodeAudioData } from './factories/decode-audio-data';\nimport { createDecrementCycleCounter } from './factories/decrement-cycle-counter';\nimport { createDelayNodeConstructor } from './factories/delay-node-constructor';\nimport { createDelayNodeRendererFactory } from './factories/delay-node-renderer-factory';\nimport { createDeleteUnrenderedAudioWorkletNode } from './factories/delete-unrendered-audio-worklet-node';\nimport { createDetectCycles } from './factories/detect-cycles';\nimport { createDisconnectMultipleOutputs } from './factories/disconnect-multiple-outputs';\nimport { createDynamicsCompressorNodeConstructor } from './factories/dynamics-compressor-node-constructor';\nimport { createDynamicsCompressorNodeRendererFactory } from './factories/dynamics-compressor-node-renderer-factory';\nimport { createEncodingError } from './factories/encoding-error';\nimport { createEvaluateSource } from './factories/evaluate-source';\nimport { createEventTargetConstructor } from './factories/event-target-constructor';\nimport { createExposeCurrentFrameAndCurrentTime } from './factories/expose-current-frame-and-current-time';\nimport { createFetchSource } from './factories/fetch-source';\nimport { createGainNodeConstructor } from './factories/gain-node-constructor';\nimport { createGainNodeRendererFactory } from './factories/gain-node-renderer-factory';\nimport { createGetAudioNodeRenderer } from './factories/get-audio-node-renderer';\nimport { createGetAudioParamRenderer } from './factories/get-audio-param-renderer';\nimport { createGetBackupNativeContext } from './factories/get-backup-native-context';\nimport { createGetNativeContext } from './factories/get-native-context';\nimport { createGetUnrenderedAudioWorkletNodes } from './factories/get-unrendered-audio-worklet-nodes';\nimport { createIIRFilterNodeConstructor } from './factories/iir-filter-node-constructor';\nimport { createIIRFilterNodeRendererFactory } from './factories/iir-filter-node-renderer-factory';\nimport { createIncrementCycleCounterFactory } from './factories/increment-cycle-counter-factory';\nimport { createIndexSizeError } from './factories/index-size-error';\nimport { createInvalidAccessError } from './factories/invalid-access-error';\nimport { createInvalidStateError } from './factories/invalid-state-error';\nimport { createIsAnyAudioContext } from './factories/is-any-audio-context';\nimport { createIsAnyAudioNode } from './factories/is-any-audio-node';\nimport { createIsAnyAudioParam } from './factories/is-any-audio-param';\nimport { createIsAnyOfflineAudioContext } from './factories/is-any-offline-audio-context';\nimport { createIsNativeAudioContext } from './factories/is-native-audio-context';\nimport { createIsNativeAudioNode } from './factories/is-native-audio-node';\nimport { createIsNativeAudioParam } from './factories/is-native-audio-param';\nimport { createIsNativeContext } from './factories/is-native-context';\nimport { createIsNativeOfflineAudioContext } from './factories/is-native-offline-audio-context';\nimport { createIsSecureContext } from './factories/is-secure-context';\nimport { createIsSupportedPromise } from './factories/is-supported-promise';\nimport { createMediaElementAudioSourceNodeConstructor } from './factories/media-element-audio-source-node-constructor';\nimport { createMediaStreamAudioDestinationNodeConstructor } from './factories/media-stream-audio-destination-node-constructor';\nimport { createMediaStreamAudioSourceNodeConstructor } from './factories/media-stream-audio-source-node-constructor';\nimport { createMediaStreamTrackAudioSourceNodeConstructor } from './factories/media-stream-track-audio-source-node-constructor';\nimport { createMinimalAudioContextConstructor } from './factories/minimal-audio-context-constructor';\nimport { createMinimalBaseAudioContextConstructor } from './factories/minimal-base-audio-context-constructor';\nimport { createMinimalOfflineAudioContextConstructor } from './factories/minimal-offline-audio-context-constructor';\nimport { createMonitorConnections } from './factories/monitor-connections';\nimport { createNativeAnalyserNodeFactory } from './factories/native-analyser-node-factory';\nimport { createNativeAudioBufferConstructor } from './factories/native-audio-buffer-constructor';\nimport { createNativeAudioBufferSourceNodeFactory } from './factories/native-audio-buffer-source-node-factory';\nimport { createNativeAudioContextConstructor } from './factories/native-audio-context-constructor';\nimport { createNativeAudioDestinationNodeFactory } from './factories/native-audio-destination-node';\nimport { createNativeAudioNodeFactory } from './factories/native-audio-node-factory';\nimport { createNativeAudioWorkletNodeConstructor } from './factories/native-audio-worklet-node-constructor';\nimport { createNativeAudioWorkletNodeFactory } from './factories/native-audio-worklet-node-factory';\nimport { createNativeAudioWorkletNodeFakerFactory } from './factories/native-audio-worklet-node-faker-factory';\nimport { createNativeBiquadFilterNodeFactory } from './factories/native-biquad-filter-node-factory';\nimport { createNativeChannelMergerNodeFactory } from './factories/native-channel-merger-node-factory';\nimport { createNativeChannelSplitterNodeFactory } from './factories/native-channel-splitter-node-factory';\nimport { createNativeConstantSourceNodeFactory } from './factories/native-constant-source-node-factory';\nimport { createNativeConstantSourceNodeFakerFactory } from './factories/native-constant-source-node-faker-factory';\nimport { createNativeConvolverNodeFactory } from './factories/native-convolver-node-factory';\nimport { createNativeConvolverNodeFakerFactory } from './factories/native-convolver-node-faker-factory';\nimport { createNativeDelayNodeFactory } from './factories/native-delay-node-factory';\nimport { createNativeDynamicsCompressorNodeFactory } from './factories/native-dynamics-compressor-node-factory';\nimport { createNativeGainNodeFactory } from './factories/native-gain-node-factory';\nimport { createNativeIIRFilterNodeFactory } from './factories/native-iir-filter-node-factory';\nimport { createNativeIIRFilterNodeFakerFactory } from './factories/native-iir-filter-node-faker-factory';\nimport { createNativeMediaElementAudioSourceNodeFactory } from './factories/native-media-element-audio-source-node-factory';\nimport { createNativeMediaStreamAudioDestinationNodeFactory } from './factories/native-media-stream-audio-destination-node-factory';\nimport { createNativeMediaStreamAudioSourceNodeFactory } from './factories/native-media-stream-audio-source-node-factory';\nimport { createNativeMediaStreamTrackAudioSourceNodeFactory } from './factories/native-media-stream-track-audio-source-node-factory';\nimport { createNativeOfflineAudioContextConstructor } from './factories/native-offline-audio-context-constructor';\nimport { createNativeOscillatorNodeFactory } from './factories/native-oscillator-node-factory';\nimport { createNativePannerNodeFactory } from './factories/native-panner-node-factory';\nimport { createNativePannerNodeFakerFactory } from './factories/native-panner-node-faker-factory';\nimport { createNativePeriodicWaveFactory } from './factories/native-periodic-wave-factory';\nimport { createNativeScriptProcessorNodeFactory } from './factories/native-script-processor-node-factory';\nimport { createNativeStereoPannerNodeFactory } from './factories/native-stereo-panner-node-factory';\nimport { createNativeStereoPannerNodeFakerFactory } from './factories/native-stereo-panner-node-faker-factory';\nimport { createNativeWaveShaperNodeFactory } from './factories/native-wave-shaper-node-factory';\nimport { createNativeWaveShaperNodeFakerFactory } from './factories/native-wave-shaper-node-faker-factory';\nimport { createNotSupportedError } from './factories/not-supported-error';\nimport { createOfflineAudioContextConstructor } from './factories/offline-audio-context-constructor';\nimport { createOscillatorNodeConstructor } from './factories/oscillator-node-constructor';\nimport { createOscillatorNodeRendererFactory } from './factories/oscillator-node-renderer-factory';\nimport { createPannerNodeConstructor } from './factories/panner-node-constructor';\nimport { createPannerNodeRendererFactory } from './factories/panner-node-renderer-factory';\nimport { createPeriodicWaveConstructor } from './factories/periodic-wave-constructor';\nimport { createRenderAutomation } from './factories/render-automation';\nimport { createRenderInputsOfAudioNode } from './factories/render-inputs-of-audio-node';\nimport { createRenderInputsOfAudioParam } from './factories/render-inputs-of-audio-param';\nimport { createRenderNativeOfflineAudioContext } from './factories/render-native-offline-audio-context';\nimport { createStartRendering } from './factories/start-rendering';\nimport { createStereoPannerNodeConstructor } from './factories/stereo-panner-node-constructor';\nimport { createStereoPannerNodeRendererFactory } from './factories/stereo-panner-node-renderer-factory';\nimport { createTestAudioBufferConstructorSupport } from './factories/test-audio-buffer-constructor-support';\nimport { createTestAudioBufferCopyChannelMethodsSubarraySupport } from './factories/test-audio-buffer-copy-channel-methods-subarray-support';\nimport { createTestAudioBufferSourceNodeStartMethodConsecutiveCallsSupport } from './factories/test-audio-buffer-source-node-start-method-consecutive-calls-support';\nimport { createTestAudioBufferSourceNodeStartMethodDurationParameterSupport } from './factories/test-audio-buffer-source-node-start-method-duration-parameter-support';\nimport { createTestAudioBufferSourceNodeStartMethodOffsetClampingSupport } from './factories/test-audio-buffer-source-node-start-method-offset-clamping-support';\nimport { createTestAudioBufferSourceNodeStopMethodNullifiedBufferSupport } from './factories/test-audio-buffer-source-node-stop-method-nullified-buffer-support';\nimport { createTestAudioContextCloseMethodSupport } from './factories/test-audio-context-close-method-support';\nimport { createTestAudioContextDecodeAudioDataMethodTypeErrorSupport } from './factories/test-audio-context-decode-audio-data-method-type-error-support';\nimport { createTestAudioContextOptionsSupport } from './factories/test-audio-context-options-support';\nimport { createTestAudioNodeConnectMethodSupport } from './factories/test-audio-node-connect-method-support';\nimport { createTestAudioScheduledSourceNodeStartMethodNegativeParametersSupport } from './factories/test-audio-scheduled-source-node-start-method-negative-parameters-support';\nimport { createTestAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport } from './factories/test-audio-scheduled-source-node-stop-method-consecutive-calls-support';\nimport { createTestAudioScheduledSourceNodeStopMethodNegativeParametersSupport } from './factories/test-audio-scheduled-source-node-stop-method-negative-parameters-support';\nimport { createTestAudioWorkletProcessorNoOutputsSupport } from './factories/test-audio-worklet-processor-no-outputs-support';\nimport { createTestChannelMergerNodeChannelCountSupport } from './factories/test-channel-merger-node-channel-count-support';\nimport { createTestConstantSourceNodeAccurateSchedulingSupport } from './factories/test-constant-source-node-accurate-scheduling-support';\nimport { createTestConvolverNodeBufferReassignabilitySupport } from './factories/test-convolver-node-buffer-reassignability-support';\nimport { createTestIsSecureContextSupport } from './factories/test-is-secure-context-support';\nimport { createTestMediaStreamAudioSourceNodeMediaStreamWithoutAudioTrackSupport } from './factories/test-media-stream-audio-source-node-media-stream-without-audio-track-support';\nimport { createTestOfflineAudioContextCurrentTimeSupport } from './factories/test-offline-audio-context-current-time-support';\nimport { createTestStereoPannerNodeDefaultValueSupport } from './factories/test-stereo-panner-node-default-value-support';\nimport { createUnknownError } from './factories/unknown-error';\nimport { createWaveShaperNodeConstructor } from './factories/wave-shaper-node-constructor';\nimport { createWaveShaperNodeRendererFactory } from './factories/wave-shaper-node-renderer-factory';\nimport { createWindow } from './factories/window';\nimport { createWrapAudioBufferCopyChannelMethods } from './factories/wrap-audio-buffer-copy-channel-methods';\nimport { createWrapAudioBufferCopyChannelMethodsOutOfBounds } from './factories/wrap-audio-buffer-copy-channel-methods-out-of-bounds';\nimport { createWrapAudioBufferSourceNodeStopMethodNullifiedBuffer } from './factories/wrap-audio-buffer-source-node-stop-method-nullified-buffer';\nimport { createWrapAudioScheduledSourceNodeStopMethodConsecutiveCalls } from './factories/wrap-audio-scheduled-source-node-stop-method-consecutive-calls';\nimport { createWrapChannelMergerNode } from './factories/wrap-channel-merger-node';\nimport { AUDIO_NODE_CONNECTIONS_STORE, AUDIO_NODE_STORE, AUDIO_PARAM_CONNECTIONS_STORE, AUDIO_PARAM_STORE, CONTEXT_STORE, CYCLE_COUNTERS } from './globals';\nimport { connectNativeAudioNodeToNativeAudioNode } from './helpers/connect-native-audio-node-to-native-audio-node';\nimport { disconnectNativeAudioNodeFromNativeAudioNode } from './helpers/disconnect-native-audio-node-from-native-audio-node';\nimport { getAudioNodeConnections } from './helpers/get-audio-node-connections';\nimport { getAudioParamConnections } from './helpers/get-audio-param-connections';\nimport { getNativeAudioNode } from './helpers/get-native-audio-node';\nimport { getNativeAudioParam } from './helpers/get-native-audio-param';\nimport { getValueForKey } from './helpers/get-value-for-key';\nimport { insertElementInSet } from './helpers/insert-element-in-set';\nimport { isActiveAudioNode } from './helpers/is-active-audio-node';\nimport { isDCCurve } from './helpers/is-dc-curve';\nimport { isPartOfACycle } from './helpers/is-part-of-a-cycle';\nimport { overwriteAccessors } from './helpers/overwrite-accessors';\nimport { testAudioBufferCopyChannelMethodsOutOfBoundsSupport } from './helpers/test-audio-buffer-copy-channel-methods-out-of-bounds-support';\nimport { testPromiseSupport } from './helpers/test-promise-support';\nimport { testTransferablesSupport } from './helpers/test-transferables-support';\nimport { wrapAudioBufferSourceNodeStartMethodOffsetClamping } from './helpers/wrap-audio-buffer-source-node-start-method-offset-clamping';\nimport { wrapEventListener } from './helpers/wrap-event-listener';\n/*\n * @todo Explicitly referencing the barrel file seems to be necessary when enabling the\n * isolatedModules compiler option.\n */\nexport * from './interfaces/index';\nexport * from './types/index';\nconst cacheTestResult = createCacheTestResult(new Map(), new WeakMap());\nconst window = createWindow();\nconst nativeOfflineAudioContextConstructor = createNativeOfflineAudioContextConstructor(window);\nconst isNativeOfflineAudioContext = createIsNativeOfflineAudioContext(nativeOfflineAudioContextConstructor);\nconst nativeAudioContextConstructor = createNativeAudioContextConstructor(window);\nconst getBackupNativeContext = createGetBackupNativeContext(isNativeOfflineAudioContext, nativeAudioContextConstructor, nativeOfflineAudioContextConstructor);\nconst createNativeAudioNode = createNativeAudioNodeFactory(getBackupNativeContext);\nconst createNativeAnalyserNode = createNativeAnalyserNodeFactory(cacheTestResult, createIndexSizeError, createNativeAudioNode);\nconst getAudioNodeRenderer = createGetAudioNodeRenderer(getAudioNodeConnections);\nconst renderInputsOfAudioNode = createRenderInputsOfAudioNode(getAudioNodeConnections, getAudioNodeRenderer, isPartOfACycle);\nconst createAnalyserNodeRenderer = createAnalyserNodeRendererFactory(createNativeAnalyserNode, getNativeAudioNode, renderInputsOfAudioNode);\nconst auxiliaryGainNodeStore = new WeakMap();\nconst getNativeContext = createGetNativeContext(CONTEXT_STORE);\nconst audioParamAudioNodeStore = new WeakMap();\nconst eventTargetConstructor = createEventTargetConstructor(wrapEventListener);\nconst isNativeAudioContext = createIsNativeAudioContext(nativeAudioContextConstructor);\nconst isNativeAudioNode = createIsNativeAudioNode(window);\nconst isNativeAudioParam = createIsNativeAudioParam(window);\nconst audioNodeConstructor = createAudioNodeConstructor(createAddAudioNodeConnections(AUDIO_NODE_CONNECTIONS_STORE), auxiliaryGainNodeStore, cacheTestResult, createIncrementCycleCounterFactory(CYCLE_COUNTERS, disconnectNativeAudioNodeFromNativeAudioNode, getAudioNodeConnections, getNativeAudioNode, getNativeAudioParam, isActiveAudioNode), createIndexSizeError, createInvalidAccessError, createNotSupportedError, createDecrementCycleCounter(connectNativeAudioNodeToNativeAudioNode, CYCLE_COUNTERS, getAudioNodeConnections, getNativeAudioNode, getNativeAudioParam, getNativeContext, isActiveAudioNode, isNativeOfflineAudioContext), createDetectCycles(audioParamAudioNodeStore, getAudioNodeConnections, getValueForKey), eventTargetConstructor, getNativeContext, isNativeAudioContext, isNativeAudioNode, isNativeAudioParam, isNativeOfflineAudioContext);\nconst analyserNodeConstructor = createAnalyserNodeConstructor(audioNodeConstructor, createAnalyserNodeRenderer, createIndexSizeError, createNativeAnalyserNode, getNativeContext, isNativeOfflineAudioContext);\nexport { analyserNodeConstructor as AnalyserNode };\nconst audioBufferStore = new WeakSet();\nconst nativeAudioBufferConstructor = createNativeAudioBufferConstructor(window);\nconst convertNumberToUnsignedLong = createConvertNumberToUnsignedLong(new Uint32Array(1));\nconst wrapAudioBufferCopyChannelMethods = createWrapAudioBufferCopyChannelMethods(convertNumberToUnsignedLong, createIndexSizeError);\nconst wrapAudioBufferCopyChannelMethodsOutOfBounds = createWrapAudioBufferCopyChannelMethodsOutOfBounds(convertNumberToUnsignedLong);\nconst audioBufferConstructor = createAudioBufferConstructor(audioBufferStore, cacheTestResult, createNotSupportedError, nativeAudioBufferConstructor, nativeOfflineAudioContextConstructor, createTestAudioBufferConstructorSupport(nativeAudioBufferConstructor), wrapAudioBufferCopyChannelMethods, wrapAudioBufferCopyChannelMethodsOutOfBounds);\nexport { audioBufferConstructor as AudioBuffer };\nconst testAudioScheduledSourceNodeStartMethodNegativeParametersSupport = createTestAudioScheduledSourceNodeStartMethodNegativeParametersSupport(createNativeAudioNode);\nconst testAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport = createTestAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport(createNativeAudioNode);\nconst testAudioScheduledSourceNodeStopMethodNegativeParametersSupport = createTestAudioScheduledSourceNodeStopMethodNegativeParametersSupport(createNativeAudioNode);\nconst wrapAudioScheduledSourceNodeStopMethodConsecutiveCalls = createWrapAudioScheduledSourceNodeStopMethodConsecutiveCalls(createNativeAudioNode);\nconst renderInputsOfAudioParam = createRenderInputsOfAudioParam(getAudioNodeRenderer, getAudioParamConnections, isPartOfACycle);\nconst connectAudioParam = createConnectAudioParam(renderInputsOfAudioParam);\nconst createNativeAudioBufferSourceNode = createNativeAudioBufferSourceNodeFactory(cacheTestResult, createNativeAudioNode, createTestAudioBufferSourceNodeStartMethodConsecutiveCallsSupport(createNativeAudioNode), createTestAudioBufferSourceNodeStartMethodDurationParameterSupport(nativeOfflineAudioContextConstructor), createTestAudioBufferSourceNodeStartMethodOffsetClampingSupport(createNativeAudioNode), createTestAudioBufferSourceNodeStopMethodNullifiedBufferSupport(createNativeAudioNode), testAudioScheduledSourceNodeStartMethodNegativeParametersSupport, testAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport, testAudioScheduledSourceNodeStopMethodNegativeParametersSupport, wrapAudioBufferSourceNodeStartMethodOffsetClamping, createWrapAudioBufferSourceNodeStopMethodNullifiedBuffer(overwriteAccessors), wrapAudioScheduledSourceNodeStopMethodConsecutiveCalls);\nconst renderAutomation = createRenderAutomation(createGetAudioParamRenderer(getAudioParamConnections), renderInputsOfAudioParam);\nconst createAudioBufferSourceNodeRenderer = createAudioBufferSourceNodeRendererFactory(connectAudioParam, createNativeAudioBufferSourceNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode);\nconst createAudioParam = createAudioParamFactory(createAddAudioParamConnections(AUDIO_PARAM_CONNECTIONS_STORE), audioParamAudioNodeStore, AUDIO_PARAM_STORE, createAudioParamRenderer, createCancelAndHoldAutomationEvent, createCancelScheduledValuesAutomationEvent, createExponentialRampToValueAutomationEvent, createLinearRampToValueAutomationEvent, createSetTargetAutomationEvent, createSetValueAutomationEvent, createSetValueCurveAutomationEvent, nativeAudioContextConstructor);\nconst audioBufferSourceNodeConstructor = createAudioBufferSourceNodeConstructor(audioNodeConstructor, createAudioBufferSourceNodeRenderer, createAudioParam, createInvalidStateError, createNativeAudioBufferSourceNode, getNativeContext, isNativeOfflineAudioContext, wrapEventListener);\nexport { audioBufferSourceNodeConstructor as AudioBufferSourceNode };\nconst createNativeGainNode = createNativeGainNodeFactory(createNativeAudioNode);\nconst audioDestinationNodeConstructor = createAudioDestinationNodeConstructor(audioNodeConstructor, createAudioDestinationNodeRenderer, createIndexSizeError, createInvalidStateError, createNativeAudioDestinationNodeFactory(createNativeGainNode, overwriteAccessors), getNativeContext, isNativeOfflineAudioContext, renderInputsOfAudioNode);\nconst createNativeBiquadFilterNode = createNativeBiquadFilterNodeFactory(createNativeAudioNode);\nconst createBiquadFilterNodeRenderer = createBiquadFilterNodeRendererFactory(connectAudioParam, createNativeBiquadFilterNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode);\nconst biquadFilterNodeConstructor = createBiquadFilterNodeConstructor(audioNodeConstructor, createAudioParam, createBiquadFilterNodeRenderer, createInvalidAccessError, createNativeBiquadFilterNode, getNativeContext, isNativeOfflineAudioContext);\nconst monitorConnections = createMonitorConnections(insertElementInSet, isNativeAudioNode);\nconst wrapChannelMergerNode = createWrapChannelMergerNode(createInvalidStateError, createNativeAudioNode, monitorConnections);\nconst createNativeChannelMergerNode = createNativeChannelMergerNodeFactory(createNativeAudioNode, wrapChannelMergerNode);\nconst createChannelMergerNodeRenderer = createChannelMergerNodeRendererFactory(createNativeChannelMergerNode, getNativeAudioNode, renderInputsOfAudioNode);\nconst channelMergerNodeConstructor = createChannelMergerNodeConstructor(audioNodeConstructor, createChannelMergerNodeRenderer, createNativeChannelMergerNode, getNativeContext, isNativeOfflineAudioContext);\nconst createNativeChannelSplitterNode = createNativeChannelSplitterNodeFactory(createNativeAudioNode);\nconst createChannelSplitterNodeRenderer = createChannelSplitterNodeRendererFactory(createNativeChannelSplitterNode, getNativeAudioNode, renderInputsOfAudioNode);\nconst channelSplitterNodeConstructor = createChannelSplitterNodeConstructor(audioNodeConstructor, createChannelSplitterNodeRenderer, createNativeChannelSplitterNode, getNativeContext, isNativeOfflineAudioContext);\nconst createNativeConstantSourceNodeFaker = createNativeConstantSourceNodeFakerFactory(createNativeAudioBufferSourceNode, createNativeGainNode, monitorConnections);\nconst createNativeConstantSourceNode = createNativeConstantSourceNodeFactory(cacheTestResult, createNativeAudioNode, createNativeConstantSourceNodeFaker, testAudioScheduledSourceNodeStartMethodNegativeParametersSupport, testAudioScheduledSourceNodeStopMethodNegativeParametersSupport);\nconst createConstantSourceNodeRenderer = createConstantSourceNodeRendererFactory(connectAudioParam, createNativeConstantSourceNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode);\nconst constantSourceNodeConstructor = createConstantSourceNodeConstructor(audioNodeConstructor, createAudioParam, createConstantSourceNodeRenderer, createNativeConstantSourceNode, getNativeContext, isNativeOfflineAudioContext, wrapEventListener);\nconst createNativeConvolverNodeFaker = createNativeConvolverNodeFakerFactory(createNativeAudioNode, createNativeGainNode, monitorConnections);\nconst createNativeConvolverNode = createNativeConvolverNodeFactory(createNativeAudioNode, createNativeConvolverNodeFaker, createNotSupportedError, overwriteAccessors);\nconst createConvolverNodeRenderer = createConvolverNodeRendererFactory(createNativeConvolverNode, getNativeAudioNode, renderInputsOfAudioNode);\nconst convolverNodeConstructor = createConvolverNodeConstructor(audioNodeConstructor, createConvolverNodeRenderer, createNativeConvolverNode, getNativeContext, isNativeOfflineAudioContext);\nconst createNativeDelayNode = createNativeDelayNodeFactory(createNativeAudioNode);\nconst createDelayNodeRenderer = createDelayNodeRendererFactory(connectAudioParam, createNativeDelayNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode);\nconst delayNodeConstructor = createDelayNodeConstructor(audioNodeConstructor, createAudioParam, createDelayNodeRenderer, createNativeDelayNode, getNativeContext, isNativeOfflineAudioContext);\nconst createNativeDynamicsCompressorNode = createNativeDynamicsCompressorNodeFactory(createNativeAudioNode, createNotSupportedError);\nconst createDynamicsCompressorNodeRenderer = createDynamicsCompressorNodeRendererFactory(connectAudioParam, createNativeDynamicsCompressorNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode);\nconst dynamicsCompressorNodeConstructor = createDynamicsCompressorNodeConstructor(audioNodeConstructor, createAudioParam, createDynamicsCompressorNodeRenderer, createNativeDynamicsCompressorNode, createNotSupportedError, getNativeContext, isNativeOfflineAudioContext);\nconst createGainNodeRenderer = createGainNodeRendererFactory(connectAudioParam, createNativeGainNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode);\nconst gainNodeConstructor = createGainNodeConstructor(audioNodeConstructor, createAudioParam, createGainNodeRenderer, createNativeGainNode, getNativeContext, isNativeOfflineAudioContext);\nconst createNativeScriptProcessorNode = createNativeScriptProcessorNodeFactory(createNativeAudioNode);\nconst createNativeIIRFilterNodeFaker = createNativeIIRFilterNodeFakerFactory(createInvalidAccessError, createInvalidStateError, createNativeScriptProcessorNode, createNotSupportedError);\nconst renderNativeOfflineAudioContext = createRenderNativeOfflineAudioContext(cacheTestResult, createNativeGainNode, createNativeScriptProcessorNode, createTestOfflineAudioContextCurrentTimeSupport(createNativeGainNode, nativeOfflineAudioContextConstructor));\nconst createIIRFilterNodeRenderer = createIIRFilterNodeRendererFactory(createNativeAudioBufferSourceNode, createNativeAudioNode, getNativeAudioNode, nativeOfflineAudioContextConstructor, renderInputsOfAudioNode, renderNativeOfflineAudioContext);\nconst createNativeIIRFilterNode = createNativeIIRFilterNodeFactory(createNativeAudioNode, createNativeIIRFilterNodeFaker);\nconst iIRFilterNodeConstructor = createIIRFilterNodeConstructor(audioNodeConstructor, createNativeIIRFilterNode, createIIRFilterNodeRenderer, getNativeContext, isNativeOfflineAudioContext);\nconst createAudioListener = createAudioListenerFactory(createAudioParam, createNativeChannelMergerNode, createNativeConstantSourceNode, createNativeScriptProcessorNode, isNativeOfflineAudioContext);\nconst unrenderedAudioWorkletNodeStore = new WeakMap();\nconst minimalBaseAudioContextConstructor = createMinimalBaseAudioContextConstructor(audioDestinationNodeConstructor, createAudioListener, eventTargetConstructor, isNativeOfflineAudioContext, unrenderedAudioWorkletNodeStore, wrapEventListener);\nconst createNativeOscillatorNode = createNativeOscillatorNodeFactory(cacheTestResult, createNativeAudioNode, testAudioScheduledSourceNodeStartMethodNegativeParametersSupport, testAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport, testAudioScheduledSourceNodeStopMethodNegativeParametersSupport, wrapAudioScheduledSourceNodeStopMethodConsecutiveCalls);\nconst createOscillatorNodeRenderer = createOscillatorNodeRendererFactory(connectAudioParam, createNativeOscillatorNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode);\nconst oscillatorNodeConstructor = createOscillatorNodeConstructor(audioNodeConstructor, createAudioParam, createInvalidStateError, createNativeOscillatorNode, createOscillatorNodeRenderer, getNativeContext, isNativeOfflineAudioContext, wrapEventListener);\nconst createConnectedNativeAudioBufferSourceNode = createConnectedNativeAudioBufferSourceNodeFactory(createNativeAudioBufferSourceNode);\nconst createNativeWaveShaperNodeFaker = createNativeWaveShaperNodeFakerFactory(createConnectedNativeAudioBufferSourceNode, createInvalidStateError, createNativeAudioNode, createNativeGainNode, isDCCurve, monitorConnections);\nconst createNativeWaveShaperNode = createNativeWaveShaperNodeFactory(createConnectedNativeAudioBufferSourceNode, createInvalidStateError, createNativeAudioNode, createNativeWaveShaperNodeFaker, isDCCurve, monitorConnections, overwriteAccessors);\nconst createNativePannerNodeFaker = createNativePannerNodeFakerFactory(connectNativeAudioNodeToNativeAudioNode, createInvalidStateError, createNativeAudioNode, createNativeChannelMergerNode, createNativeGainNode, createNativeScriptProcessorNode, createNativeWaveShaperNode, createNotSupportedError, disconnectNativeAudioNodeFromNativeAudioNode, monitorConnections);\nconst createNativePannerNode = createNativePannerNodeFactory(createNativeAudioNode, createNativePannerNodeFaker);\nconst createPannerNodeRenderer = createPannerNodeRendererFactory(connectAudioParam, createNativeChannelMergerNode, createNativeConstantSourceNode, createNativeGainNode, createNativePannerNode, getNativeAudioNode, nativeOfflineAudioContextConstructor, renderAutomation, renderInputsOfAudioNode, renderNativeOfflineAudioContext);\nconst pannerNodeConstructor = createPannerNodeConstructor(audioNodeConstructor, createAudioParam, createNativePannerNode, createPannerNodeRenderer, getNativeContext, isNativeOfflineAudioContext);\nconst createNativePeriodicWave = createNativePeriodicWaveFactory(getBackupNativeContext);\nconst periodicWaveConstructor = createPeriodicWaveConstructor(createNativePeriodicWave, getNativeContext, new WeakSet());\nconst nativeStereoPannerNodeFakerFactory = createNativeStereoPannerNodeFakerFactory(createNativeChannelMergerNode, createNativeChannelSplitterNode, createNativeGainNode, createNativeWaveShaperNode, createNotSupportedError, monitorConnections);\nconst createNativeStereoPannerNode = createNativeStereoPannerNodeFactory(createNativeAudioNode, nativeStereoPannerNodeFakerFactory, createNotSupportedError);\nconst createStereoPannerNodeRenderer = createStereoPannerNodeRendererFactory(connectAudioParam, createNativeStereoPannerNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode);\nconst stereoPannerNodeConstructor = createStereoPannerNodeConstructor(audioNodeConstructor, createAudioParam, createNativeStereoPannerNode, createStereoPannerNodeRenderer, getNativeContext, isNativeOfflineAudioContext);\nconst createWaveShaperNodeRenderer = createWaveShaperNodeRendererFactory(createNativeWaveShaperNode, getNativeAudioNode, renderInputsOfAudioNode);\nconst waveShaperNodeConstructor = createWaveShaperNodeConstructor(audioNodeConstructor, createInvalidStateError, createNativeWaveShaperNode, createWaveShaperNodeRenderer, getNativeContext, isNativeOfflineAudioContext);\nconst isSecureContext = createIsSecureContext(window);\nconst exposeCurrentFrameAndCurrentTime = createExposeCurrentFrameAndCurrentTime(window);\n// The addAudioWorkletModule() function is only available in a SecureContext.\nexport const addAudioWorkletModule = (isSecureContext) ?\n    createAddAudioWorkletModule(createNotSupportedError, createEvaluateSource(window), exposeCurrentFrameAndCurrentTime, createFetchSource(createAbortError), getBackupNativeContext, getNativeContext, new WeakMap(), new WeakMap(), \n    // @todo window is guaranteed to be defined because isSecureContext checks that as well.\n    window) :\n    undefined;\nconst isNativeContext = createIsNativeContext(isNativeAudioContext, isNativeOfflineAudioContext);\nexport const decodeAudioData = createDecodeAudioData(audioBufferStore, cacheTestResult, createDataCloneError, createEncodingError, new WeakSet(), getNativeContext, isNativeContext, isNativeOfflineAudioContext, nativeOfflineAudioContextConstructor, testAudioBufferCopyChannelMethodsOutOfBoundsSupport, testPromiseSupport, wrapAudioBufferCopyChannelMethods, wrapAudioBufferCopyChannelMethodsOutOfBounds);\nconst baseAudioContextConstructor = createBaseAudioContextConstructor(addAudioWorkletModule, analyserNodeConstructor, audioBufferConstructor, audioBufferSourceNodeConstructor, biquadFilterNodeConstructor, channelMergerNodeConstructor, channelSplitterNodeConstructor, constantSourceNodeConstructor, convolverNodeConstructor, decodeAudioData, delayNodeConstructor, dynamicsCompressorNodeConstructor, gainNodeConstructor, iIRFilterNodeConstructor, minimalBaseAudioContextConstructor, oscillatorNodeConstructor, pannerNodeConstructor, periodicWaveConstructor, stereoPannerNodeConstructor, waveShaperNodeConstructor);\nconst createNativeMediaElementAudioSourceNode = createNativeMediaElementAudioSourceNodeFactory(createNativeAudioNode);\nconst mediaElementAudioSourceNodeConstructor = createMediaElementAudioSourceNodeConstructor(audioNodeConstructor, createNativeMediaElementAudioSourceNode, getNativeContext, isNativeOfflineAudioContext);\nconst createNativeMediaStreamAudioDestinationNode = createNativeMediaStreamAudioDestinationNodeFactory(createNativeAudioNode, createNotSupportedError);\nconst mediaStreamAudioDestinationNodeConstructor = createMediaStreamAudioDestinationNodeConstructor(audioNodeConstructor, createNativeMediaStreamAudioDestinationNode, getNativeContext, isNativeOfflineAudioContext);\nconst createNativeMediaStreamAudioSourceNode = createNativeMediaStreamAudioSourceNodeFactory(createNativeAudioNode);\nconst mediaStreamAudioSourceNodeConstructor = createMediaStreamAudioSourceNodeConstructor(audioNodeConstructor, createNativeMediaStreamAudioSourceNode, getNativeContext, isNativeOfflineAudioContext);\nconst createNativeMediaStreamTrackAudioSourceNode = createNativeMediaStreamTrackAudioSourceNodeFactory(createInvalidStateError, createNativeAudioNode, isNativeOfflineAudioContext);\nconst mediaStreamTrackAudioSourceNodeConstructor = createMediaStreamTrackAudioSourceNodeConstructor(audioNodeConstructor, createNativeMediaStreamTrackAudioSourceNode, getNativeContext);\nconst audioContextConstructor = createAudioContextConstructor(baseAudioContextConstructor, createInvalidStateError, createNotSupportedError, createUnknownError, mediaElementAudioSourceNodeConstructor, mediaStreamAudioDestinationNodeConstructor, mediaStreamAudioSourceNodeConstructor, mediaStreamTrackAudioSourceNodeConstructor, nativeAudioContextConstructor);\nexport { audioContextConstructor as AudioContext };\nconst getUnrenderedAudioWorkletNodes = createGetUnrenderedAudioWorkletNodes(unrenderedAudioWorkletNodeStore);\nconst addUnrenderedAudioWorkletNode = createAddUnrenderedAudioWorkletNode(getUnrenderedAudioWorkletNodes);\nconst connectMultipleOutputs = createConnectMultipleOutputs(createIndexSizeError);\nconst deleteUnrenderedAudioWorkletNode = createDeleteUnrenderedAudioWorkletNode(getUnrenderedAudioWorkletNodes);\nconst disconnectMultipleOutputs = createDisconnectMultipleOutputs(createIndexSizeError);\nconst createNativeAudioWorkletNodeFaker = createNativeAudioWorkletNodeFakerFactory(auxiliaryGainNodeStore, connectMultipleOutputs, createIndexSizeError, createInvalidStateError, createNativeChannelMergerNode, createNativeChannelSplitterNode, createNativeConstantSourceNode, createNativeGainNode, createNativeScriptProcessorNode, createNotSupportedError, disconnectMultipleOutputs, exposeCurrentFrameAndCurrentTime, monitorConnections);\nconst createNativeAudioWorkletNode = createNativeAudioWorkletNodeFactory(createInvalidStateError, createNativeAudioNode, createNativeAudioWorkletNodeFaker, createNativeGainNode, createNotSupportedError, monitorConnections);\nconst nativeAudioWorkletNodeConstructor = createNativeAudioWorkletNodeConstructor(window);\nconst createAudioWorkletNodeRenderer = createAudioWorkletNodeRendererFactory(connectAudioParam, connectMultipleOutputs, createNativeAudioBufferSourceNode, createNativeChannelMergerNode, createNativeChannelSplitterNode, createNativeConstantSourceNode, createNativeGainNode, deleteUnrenderedAudioWorkletNode, disconnectMultipleOutputs, exposeCurrentFrameAndCurrentTime, getNativeAudioNode, nativeAudioWorkletNodeConstructor, nativeOfflineAudioContextConstructor, renderAutomation, renderInputsOfAudioNode, renderNativeOfflineAudioContext);\n// The AudioWorkletNode constructor is only available in a SecureContext.\nconst audioWorkletNodeConstructor = (isSecureContext) ?\n    createAudioWorkletNodeConstructor(addUnrenderedAudioWorkletNode, audioNodeConstructor, createAudioParam, createAudioWorkletNodeRenderer, createNativeAudioWorkletNode, getNativeContext, isNativeOfflineAudioContext, nativeAudioWorkletNodeConstructor, wrapEventListener) :\n    undefined;\nexport { audioWorkletNodeConstructor as AudioWorkletNode };\nexport { biquadFilterNodeConstructor as BiquadFilterNode };\nexport { channelMergerNodeConstructor as ChannelMergerNode };\nexport { channelSplitterNodeConstructor as ChannelSplitterNode };\nexport { convolverNodeConstructor as ConvolverNode };\nexport { constantSourceNodeConstructor as ConstantSourceNode };\nexport { delayNodeConstructor as DelayNode };\nexport { dynamicsCompressorNodeConstructor as DynamicsCompressorNode };\nexport { gainNodeConstructor as GainNode };\nexport { iIRFilterNodeConstructor as IIRFilterNode };\nexport { mediaElementAudioSourceNodeConstructor as MediaElementAudioSourceNode };\nexport { mediaStreamAudioDestinationNodeConstructor as MediaStreamAudioDestinationNode };\nexport { mediaStreamAudioSourceNodeConstructor as MediaStreamAudioSourceNode };\nexport { mediaStreamTrackAudioSourceNodeConstructor as MediaStreamTrackAudioSourceNode };\nconst minimalAudioContextConstructor = createMinimalAudioContextConstructor(createInvalidStateError, createNotSupportedError, createUnknownError, minimalBaseAudioContextConstructor, nativeAudioContextConstructor);\nexport { minimalAudioContextConstructor as MinimalAudioContext };\nconst createNativeOfflineAudioContext = createCreateNativeOfflineAudioContext(createNotSupportedError, nativeOfflineAudioContextConstructor);\nconst startRendering = createStartRendering(audioBufferStore, cacheTestResult, getAudioNodeRenderer, getUnrenderedAudioWorkletNodes, renderNativeOfflineAudioContext, testAudioBufferCopyChannelMethodsOutOfBoundsSupport, wrapAudioBufferCopyChannelMethods, wrapAudioBufferCopyChannelMethodsOutOfBounds);\nconst minimalOfflineAudioContextConstructor = createMinimalOfflineAudioContextConstructor(cacheTestResult, createInvalidStateError, createNativeOfflineAudioContext, minimalBaseAudioContextConstructor, startRendering);\nexport { minimalOfflineAudioContextConstructor as MinimalOfflineAudioContext };\nconst offlineAudioContextConstructor = createOfflineAudioContextConstructor(baseAudioContextConstructor, cacheTestResult, createInvalidStateError, createNativeOfflineAudioContext, startRendering);\nexport { offlineAudioContextConstructor as OfflineAudioContext };\nexport { oscillatorNodeConstructor as OscillatorNode };\nexport { pannerNodeConstructor as PannerNode };\nexport { periodicWaveConstructor as PeriodicWave };\nexport { stereoPannerNodeConstructor as StereoPannerNode };\nexport { waveShaperNodeConstructor as WaveShaperNode };\nexport const isAnyAudioContext = createIsAnyAudioContext(CONTEXT_STORE, isNativeAudioContext);\nexport const isAnyAudioNode = createIsAnyAudioNode(AUDIO_NODE_STORE, isNativeAudioNode);\nexport const isAnyAudioParam = createIsAnyAudioParam(AUDIO_PARAM_STORE, isNativeAudioParam);\nexport const isAnyOfflineAudioContext = createIsAnyOfflineAudioContext(CONTEXT_STORE, isNativeOfflineAudioContext);\nexport const isSupported = () => createIsSupportedPromise(cacheTestResult, createTestAudioBufferCopyChannelMethodsSubarraySupport(nativeOfflineAudioContextConstructor), createTestAudioContextCloseMethodSupport(nativeAudioContextConstructor), createTestAudioContextDecodeAudioDataMethodTypeErrorSupport(nativeOfflineAudioContextConstructor), createTestAudioContextOptionsSupport(nativeAudioContextConstructor), createTestAudioNodeConnectMethodSupport(nativeOfflineAudioContextConstructor), createTestAudioWorkletProcessorNoOutputsSupport(nativeAudioWorkletNodeConstructor, nativeOfflineAudioContextConstructor), createTestChannelMergerNodeChannelCountSupport(createNativeAudioNode, nativeOfflineAudioContextConstructor), createTestConstantSourceNodeAccurateSchedulingSupport(createNativeAudioNode, nativeOfflineAudioContextConstructor), createTestConvolverNodeBufferReassignabilitySupport(nativeOfflineAudioContextConstructor), createTestIsSecureContextSupport(window), createTestMediaStreamAudioSourceNodeMediaStreamWithoutAudioTrackSupport(nativeAudioContextConstructor), createTestStereoPannerNodeDefaultValueSupport(nativeOfflineAudioContextConstructor), testTransferablesSupport);\n//# sourceMappingURL=/build/es2019/module.js.map","export const createCacheTestResult = (ongoingTests, testResults) => {\n    return (tester, test) => {\n        const cachedTestResult = testResults.get(tester);\n        if (cachedTestResult !== undefined) {\n            return cachedTestResult;\n        }\n        const ongoingTest = ongoingTests.get(tester);\n        if (ongoingTest !== undefined) {\n            return ongoingTest;\n        }\n        try {\n            const synchronousTestResult = test();\n            if (synchronousTestResult instanceof Promise) {\n                ongoingTests.set(tester, synchronousTestResult);\n                return synchronousTestResult\n                    .catch(() => false)\n                    .then((finalTestResult) => {\n                    ongoingTests.delete(tester);\n                    testResults.set(tester, finalTestResult);\n                    return finalTestResult;\n                });\n            }\n            testResults.set(tester, synchronousTestResult);\n            return synchronousTestResult;\n        }\n        catch {\n            testResults.set(tester, false);\n            return false;\n        }\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/cache-test-result.js.map","export const createWindow = () => (typeof window === 'undefined') ? null : window;\n//# sourceMappingURL=/build/es2019/factories/window.js.map","export const createNativeOfflineAudioContextConstructor = (window) => {\n    if (window === null) {\n        return null;\n    }\n    if (window.hasOwnProperty('OfflineAudioContext')) {\n        return window.OfflineAudioContext;\n    }\n    return (window.hasOwnProperty('webkitOfflineAudioContext')) ? window.webkitOfflineAudioContext : null;\n};\n//# sourceMappingURL=/build/es2019/factories/native-offline-audio-context-constructor.js.map","export const createIsNativeOfflineAudioContext = (nativeOfflineAudioContextConstructor) => {\n    return (anything) => {\n        return (nativeOfflineAudioContextConstructor !== null && anything instanceof nativeOfflineAudioContextConstructor);\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/is-native-offline-audio-context.js.map","export const createNativeAudioContextConstructor = (window) => {\n    if (window === null) {\n        return null;\n    }\n    if (window.hasOwnProperty('AudioContext')) {\n        return window.AudioContext;\n    }\n    return (window.hasOwnProperty('webkitAudioContext')) ? window.webkitAudioContext : null;\n};\n//# sourceMappingURL=/build/es2019/factories/native-audio-context-constructor.js.map","import { BACKUP_NATIVE_CONTEXT_STORE } from '../globals';\nexport const createGetBackupNativeContext = (isNativeOfflineAudioContext, nativeAudioContextConstructor, nativeOfflineAudioContextConstructor) => {\n    return (nativeContext) => {\n        /*\n         * Bug #50: Only Edge does currently not allow to create AudioNodes on a closed context yet which is why there needs to be no\n         * backupNativeContext in that case.\n         */\n        if (nativeContext.state === 'closed'\n            && nativeAudioContextConstructor !== null\n            && nativeAudioContextConstructor.name !== 'webkitAudioContext') {\n            if (isNativeOfflineAudioContext(nativeContext)) {\n                const backupNativeContext = BACKUP_NATIVE_CONTEXT_STORE.get(nativeContext);\n                if (backupNativeContext !== undefined) {\n                    return backupNativeContext;\n                }\n                if (nativeOfflineAudioContextConstructor !== null) {\n                    // @todo Copy the attached AudioWorkletProcessors and other settings.\n                    const bckpNtveCntxt = new nativeOfflineAudioContextConstructor(1, 1, 44100);\n                    BACKUP_NATIVE_CONTEXT_STORE.set(nativeContext, bckpNtveCntxt);\n                    return bckpNtveCntxt;\n                }\n            }\n            else {\n                const backupNativeContext = BACKUP_NATIVE_CONTEXT_STORE.get(nativeContext);\n                if (backupNativeContext !== undefined) {\n                    return backupNativeContext;\n                }\n                // @todo Copy the attached AudioWorkletProcessors and other settings.\n                const bckpNtveCntxt = new nativeAudioContextConstructor();\n                BACKUP_NATIVE_CONTEXT_STORE.set(nativeContext, bckpNtveCntxt);\n                return bckpNtveCntxt;\n            }\n        }\n        return null;\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/get-backup-native-context.js.map","export const createNativeAudioNodeFactory = (getBackupNativeContext) => {\n    return (nativeContext, factoryFunction) => {\n        // Bug #50: Only Edge does currently not allow to create AudioNodes on a closed context yet.\n        const backupNativeContext = getBackupNativeContext(nativeContext);\n        if (backupNativeContext !== null) {\n            return factoryFunction(backupNativeContext);\n        }\n        return factoryFunction(nativeContext);\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/native-audio-node-factory.js.map","import { assignNativeAudioNodeOption } from '../helpers/assign-native-audio-node-option';\nimport { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nimport { testAnalyserNodeGetFloatTimeDomainDataMethodSupport } from '../helpers/test-analyser-node-get-float-time-domain-data-method-support';\nimport { wrapAnalyserNodeGetFloatTimeDomainDataMethod } from '../helpers/wrap-analyser-node-get-float-time-domain-data-method';\nexport const createNativeAnalyserNodeFactory = (cacheTestResult, createIndexSizeError, createNativeAudioNode) => {\n    return (nativeContext, options) => {\n        const nativeAnalyserNode = createNativeAudioNode(nativeContext, (ntvCntxt) => ntvCntxt.createAnalyser());\n        // Bug #37: Firefox does not create an AnalyserNode with the default properties.\n        assignNativeAudioNodeOptions(nativeAnalyserNode, options);\n        // Bug #118: Safari does not throw an error if maxDecibels is not more than minDecibels.\n        if (!(options.maxDecibels > options.minDecibels)) {\n            throw createIndexSizeError();\n        }\n        assignNativeAudioNodeOption(nativeAnalyserNode, options, 'fftSize');\n        assignNativeAudioNodeOption(nativeAnalyserNode, options, 'maxDecibels');\n        assignNativeAudioNodeOption(nativeAnalyserNode, options, 'minDecibels');\n        assignNativeAudioNodeOption(nativeAnalyserNode, options, 'smoothingTimeConstant');\n        // Bug #36: Safari does not support getFloatTimeDomainData() yet.\n        if (!cacheTestResult(testAnalyserNodeGetFloatTimeDomainDataMethodSupport, () => testAnalyserNodeGetFloatTimeDomainDataMethodSupport(nativeAnalyserNode))) {\n            wrapAnalyserNodeGetFloatTimeDomainDataMethod(nativeAnalyserNode);\n        }\n        return nativeAnalyserNode;\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/native-analyser-node-factory.js.map","export const wrapAnalyserNodeGetFloatTimeDomainDataMethod = (nativeAnalyserNode) => {\n    nativeAnalyserNode.getFloatTimeDomainData = (array) => {\n        const byteTimeDomainData = new Uint8Array(array.length);\n        nativeAnalyserNode.getByteTimeDomainData(byteTimeDomainData);\n        const length = Math.max(byteTimeDomainData.length, nativeAnalyserNode.fftSize);\n        for (let i = 0; i < length; i += 1) {\n            array[i] = (byteTimeDomainData[i] - 128) * 0.0078125;\n        }\n        return array;\n    };\n};\n//# sourceMappingURL=/build/es2019/helpers/wrap-analyser-node-get-float-time-domain-data-method.js.map","export const createGetAudioNodeRenderer = (getAudioNodeConnections) => {\n    return (audioNode) => {\n        const audioNodeConnections = getAudioNodeConnections(audioNode);\n        if (audioNodeConnections.renderer === null) {\n            throw new Error('Missing the renderer of the given AudioNode in the audio graph.');\n        }\n        return audioNodeConnections.renderer;\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/get-audio-node-renderer.js.map","export const createRenderInputsOfAudioNode = (getAudioNodeConnections, getAudioNodeRenderer, isPartOfACycle) => {\n    return async (audioNode, nativeOfflineAudioContext, nativeAudioNode, trace) => {\n        const audioNodeConnections = getAudioNodeConnections(audioNode);\n        const nextTrace = [...trace, audioNode];\n        await Promise\n            .all(audioNodeConnections.activeInputs\n            .map((connections, input) => Array\n            .from(connections)\n            .filter(([source]) => !nextTrace.includes(source))\n            .map(async ([source, output]) => {\n            const audioNodeRenderer = getAudioNodeRenderer(source);\n            const renderedNativeAudioNode = await audioNodeRenderer.render(source, nativeOfflineAudioContext, nextTrace);\n            const destination = audioNode.context.destination;\n            if (!isPartOfACycle(source) && ((audioNode !== destination) || !isPartOfACycle(audioNode))) {\n                renderedNativeAudioNode.connect(nativeAudioNode, output, input);\n            }\n        }))\n            .reduce((allRenderingPromises, renderingPromises) => [...allRenderingPromises, ...renderingPromises], []));\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/render-inputs-of-audio-node.js.map","import { isOwnedByContext } from '../helpers/is-owned-by-context';\nexport const createAnalyserNodeRendererFactory = (createNativeAnalyserNode, getNativeAudioNode, renderInputsOfAudioNode) => {\n    return () => {\n        const renderedNativeAnalyserNodes = new WeakMap();\n        const createAnalyserNode = async (proxy, nativeOfflineAudioContext, trace) => {\n            let nativeAnalyserNode = getNativeAudioNode(proxy);\n            // If the initially used nativeAnalyserNode was not constructed on the same OfflineAudioContext it needs to be created again.\n            const nativeAnalyserNodeIsOwnedByContext = isOwnedByContext(nativeAnalyserNode, nativeOfflineAudioContext);\n            if (!nativeAnalyserNodeIsOwnedByContext) {\n                const options = {\n                    channelCount: nativeAnalyserNode.channelCount,\n                    channelCountMode: nativeAnalyserNode.channelCountMode,\n                    channelInterpretation: nativeAnalyserNode.channelInterpretation,\n                    fftSize: nativeAnalyserNode.fftSize,\n                    maxDecibels: nativeAnalyserNode.maxDecibels,\n                    minDecibels: nativeAnalyserNode.minDecibels,\n                    smoothingTimeConstant: nativeAnalyserNode.smoothingTimeConstant\n                };\n                nativeAnalyserNode = createNativeAnalyserNode(nativeOfflineAudioContext, options);\n            }\n            renderedNativeAnalyserNodes.set(nativeOfflineAudioContext, nativeAnalyserNode);\n            await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeAnalyserNode, trace);\n            return nativeAnalyserNode;\n        };\n        return {\n            render(proxy, nativeOfflineAudioContext, trace) {\n                const renderedNativeAnalyserNode = renderedNativeAnalyserNodes.get(nativeOfflineAudioContext);\n                if (renderedNativeAnalyserNode !== undefined) {\n                    return Promise.resolve(renderedNativeAnalyserNode);\n                }\n                return createAnalyserNode(proxy, nativeOfflineAudioContext, trace);\n            }\n        };\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/analyser-node-renderer-factory.js.map","import { createInvalidStateError } from './invalid-state-error';\nexport const createGetNativeContext = (contextStore) => {\n    return (context) => {\n        const nativeContext = contextStore.get(context);\n        if (nativeContext === undefined) {\n            throw createInvalidStateError();\n        }\n        return nativeContext;\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/get-native-context.js.map","export const createEventTargetConstructor = (wrapEventListener) => {\n    return class EventTarget {\n        constructor(_nativeEventTarget) {\n            this._nativeEventTarget = _nativeEventTarget;\n            this._listeners = new WeakMap();\n        }\n        addEventListener(type, listener, options) {\n            if (listener !== null) {\n                let wrappedEventListener = this._listeners.get(listener);\n                if (wrappedEventListener === undefined) {\n                    wrappedEventListener = wrapEventListener(this, listener);\n                    if (typeof listener === 'function') {\n                        this._listeners.set(listener, wrappedEventListener);\n                    }\n                }\n                this._nativeEventTarget.addEventListener(type, wrappedEventListener, options);\n            }\n        }\n        dispatchEvent(event) {\n            return this._nativeEventTarget.dispatchEvent(event);\n        }\n        removeEventListener(type, listener, options) {\n            const wrappedEventListener = (listener === null) ? undefined : this._listeners.get(listener);\n            this._nativeEventTarget.removeEventListener(type, (wrappedEventListener === undefined) ? null : wrappedEventListener, options);\n        }\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/event-target-constructor.js.map","export const createIsNativeAudioContext = (nativeAudioContextConstructor) => {\n    return (anything) => {\n        return (nativeAudioContextConstructor !== null && anything instanceof nativeAudioContextConstructor);\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/is-native-audio-context.js.map","export const createIsNativeAudioNode = (window) => {\n    return (anything) => {\n        return (window !== null && typeof window.AudioNode === 'function' && anything instanceof window.AudioNode);\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/is-native-audio-node.js.map","export const createIsNativeAudioParam = (window) => {\n    return (anything) => {\n        return (window !== null && typeof window.AudioParam === 'function' && anything instanceof window.AudioParam);\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/is-native-audio-param.js.map","export const createAddAudioNodeConnections = (audioNodeConnectionsStore) => {\n    return (audioNode, audioNodeRenderer, nativeAudioNode) => {\n        const activeInputs = [];\n        for (let i = 0; i < nativeAudioNode.numberOfInputs; i += 1) {\n            activeInputs.push(new Set());\n        }\n        audioNodeConnectionsStore.set(audioNode, {\n            activeInputs,\n            outputs: new Set(),\n            passiveInputs: new WeakMap(),\n            renderer: audioNodeRenderer\n        });\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/add-audio-node-connections.js.map","import { isAudioNodeOutputConnection } from '../guards/audio-node-output-connection';\nexport const createIncrementCycleCounterFactory = (cycleCounters, disconnectNativeAudioNodeFromNativeAudioNode, getAudioNodeConnections, getNativeAudioNode, getNativeAudioParam, isActiveAudioNode) => {\n    return (isOffline) => {\n        return (audioNode, count) => {\n            const cycleCounter = cycleCounters.get(audioNode);\n            if (cycleCounter === undefined) {\n                if (!isOffline && isActiveAudioNode(audioNode)) {\n                    const nativeSourceAudioNode = getNativeAudioNode(audioNode);\n                    const { outputs } = getAudioNodeConnections(audioNode);\n                    for (const output of outputs) {\n                        if (isAudioNodeOutputConnection(output)) {\n                            const nativeDestinationAudioNode = getNativeAudioNode(output[0]);\n                            disconnectNativeAudioNodeFromNativeAudioNode(nativeSourceAudioNode, nativeDestinationAudioNode, output[1], output[2]);\n                        }\n                        else {\n                            const nativeDestinationAudioParam = getNativeAudioParam(output[0]);\n                            nativeSourceAudioNode.disconnect(nativeDestinationAudioParam, output[1]);\n                        }\n                    }\n                }\n                cycleCounters.set(audioNode, count);\n            }\n            else {\n                cycleCounters.set(audioNode, cycleCounter + count);\n            }\n        };\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/increment-cycle-counter-factory.js.map","import { isAudioNodeOutputConnection } from '../guards/audio-node-output-connection';\nexport const createDecrementCycleCounter = (connectNativeAudioNodeToNativeAudioNode, cycleCounters, getAudioNodeConnections, getNativeAudioNode, getNativeAudioParam, getNativeContext, isActiveAudioNode, isNativeOfflineAudioContext) => {\n    return (audioNode, count) => {\n        const cycleCounter = cycleCounters.get(audioNode);\n        if (cycleCounter === undefined) {\n            throw new Error('Missing the expected cycle count.');\n        }\n        const nativeContext = getNativeContext(audioNode.context);\n        const isOffline = isNativeOfflineAudioContext(nativeContext);\n        if (cycleCounter === count) {\n            cycleCounters.delete(audioNode);\n            if (!isOffline && isActiveAudioNode(audioNode)) {\n                const nativeSourceAudioNode = getNativeAudioNode(audioNode);\n                const { outputs } = getAudioNodeConnections(audioNode);\n                for (const output of outputs) {\n                    if (isAudioNodeOutputConnection(output)) {\n                        const nativeDestinationAudioNode = getNativeAudioNode(output[0]);\n                        connectNativeAudioNodeToNativeAudioNode(nativeSourceAudioNode, nativeDestinationAudioNode, output[1], output[2]);\n                    }\n                    else {\n                        const nativeDestinationAudioParam = getNativeAudioParam(output[0]);\n                        nativeSourceAudioNode.connect(nativeDestinationAudioParam, output[1]);\n                    }\n                }\n            }\n        }\n        else {\n            cycleCounters.set(audioNode, cycleCounter - count);\n        }\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/decrement-cycle-counter.js.map","import { isAudioNode } from '../guards/audio-node';\nimport { isDelayNode } from '../guards/delay-node';\nexport const createDetectCycles = (audioParamAudioNodeStore, getAudioNodeConnections, getValueForKey) => {\n    return function detectCycles(chain, nextLink) {\n        const audioNode = (isAudioNode(nextLink))\n            ? nextLink\n            : getValueForKey(audioParamAudioNodeStore, nextLink);\n        if (isDelayNode(audioNode)) {\n            return [];\n        }\n        if (chain[0] === audioNode) {\n            return [chain];\n        }\n        if (chain.includes(audioNode)) {\n            return [];\n        }\n        const { outputs } = getAudioNodeConnections(audioNode);\n        return Array\n            .from(outputs)\n            .map((outputConnection) => detectCycles([...chain, audioNode], outputConnection[0]))\n            .reduce((mergedCycles, nestedCycles) => mergedCycles.concat(nestedCycles), []);\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/detect-cycles.js.map","export const isDelayNode = (audioNode) => {\n    return 'delayTime' in audioNode;\n};\n//# sourceMappingURL=/build/es2019/guards/delay-node.js.map","export const createNativeAudioBufferConstructor = (window) => {\n    if (window === null) {\n        return null;\n    }\n    if (window.hasOwnProperty('AudioBuffer')) {\n        return window.AudioBuffer;\n    }\n    return null;\n};\n//# sourceMappingURL=/build/es2019/factories/native-audio-buffer-constructor.js.map","export const createConvertNumberToUnsignedLong = (unit32Array) => {\n    return (value) => {\n        unit32Array[0] = value;\n        return unit32Array[0];\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/convert-number-to-unsigned-long.js.map","export const createWrapAudioBufferCopyChannelMethods = (convertNumberToUnsignedLong, createIndexSizeError) => {\n    return (audioBuffer) => {\n        audioBuffer.copyFromChannel = (destination, channelNumberAsNumber, bufferOffsetAsNumber = 0) => {\n            const bufferOffset = convertNumberToUnsignedLong(bufferOffsetAsNumber);\n            const channelNumber = convertNumberToUnsignedLong(channelNumberAsNumber);\n            if (channelNumber >= audioBuffer.numberOfChannels) {\n                throw createIndexSizeError();\n            }\n            const audioBufferLength = audioBuffer.length;\n            const channelData = audioBuffer.getChannelData(channelNumber);\n            const destinationLength = destination.length;\n            for (let i = (bufferOffset < 0) ? -bufferOffset : 0; i + bufferOffset < audioBufferLength && i < destinationLength; i += 1) {\n                destination[i] = channelData[i + bufferOffset];\n            }\n        };\n        audioBuffer.copyToChannel = (source, channelNumberAsNumber, bufferOffsetAsNumber = 0) => {\n            const bufferOffset = convertNumberToUnsignedLong(bufferOffsetAsNumber);\n            const channelNumber = convertNumberToUnsignedLong(channelNumberAsNumber);\n            if (channelNumber >= audioBuffer.numberOfChannels) {\n                throw createIndexSizeError();\n            }\n            const audioBufferLength = audioBuffer.length;\n            const channelData = audioBuffer.getChannelData(channelNumber);\n            const sourceLength = source.length;\n            for (let i = (bufferOffset < 0) ? -bufferOffset : 0; i + bufferOffset < audioBufferLength && i < sourceLength; i += 1) {\n                channelData[i + bufferOffset] = source[i];\n            }\n        };\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/wrap-audio-buffer-copy-channel-methods.js.map","export const createWrapAudioBufferCopyChannelMethodsOutOfBounds = (convertNumberToUnsignedLong) => {\n    return (audioBuffer) => {\n        audioBuffer.copyFromChannel = ((copyFromChannel) => {\n            return (destination, channelNumberAsNumber, bufferOffsetAsNumber = 0) => {\n                const bufferOffset = convertNumberToUnsignedLong(bufferOffsetAsNumber);\n                const channelNumber = convertNumberToUnsignedLong(channelNumberAsNumber);\n                if (bufferOffset < audioBuffer.length) {\n                    return copyFromChannel.call(audioBuffer, destination, channelNumber, bufferOffset);\n                }\n            };\n        })(audioBuffer.copyFromChannel);\n        audioBuffer.copyToChannel = ((copyToChannel) => {\n            return (source, channelNumberAsNumber, bufferOffsetAsNumber = 0) => {\n                const bufferOffset = convertNumberToUnsignedLong(bufferOffsetAsNumber);\n                const channelNumber = convertNumberToUnsignedLong(channelNumberAsNumber);\n                if (bufferOffset < audioBuffer.length) {\n                    return copyToChannel.call(audioBuffer, source, channelNumber, bufferOffset);\n                }\n            };\n        })(audioBuffer.copyToChannel);\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/wrap-audio-buffer-copy-channel-methods-out-of-bounds.js.map","// Bug #33: Edge & Safari expose an AudioBuffer but it can't be used as a constructor.\nexport const createTestAudioBufferConstructorSupport = (nativeAudioBufferConstructor) => {\n    return () => {\n        if (nativeAudioBufferConstructor === null) {\n            return false;\n        }\n        try {\n            new nativeAudioBufferConstructor({ length: 1, sampleRate: 44100 }); // tslint:disable-line:no-unused-expression\n        }\n        catch {\n            return false;\n        }\n        return true;\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/test-audio-buffer-constructor-support.js.map","export const createTestAudioScheduledSourceNodeStartMethodNegativeParametersSupport = (createNativeAudioNode) => {\n    return (nativeContext) => {\n        const nativeAudioBufferSourceNode = createNativeAudioNode(nativeContext, (ntvCntxt) => ntvCntxt.createOscillator());\n        try {\n            nativeAudioBufferSourceNode.start(-1);\n        }\n        catch (err) {\n            return (err instanceof RangeError);\n        }\n        return false;\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/test-audio-scheduled-source-node-start-method-negative-parameters-support.js.map","export const createTestAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport = (createNativeAudioNode) => {\n    return (nativeContext) => {\n        const nativeAudioBuffer = nativeContext.createBuffer(1, 1, 44100);\n        const nativeAudioBufferSourceNode = createNativeAudioNode(nativeContext, (ntvCntxt) => ntvCntxt.createBufferSource());\n        nativeAudioBufferSourceNode.buffer = nativeAudioBuffer;\n        nativeAudioBufferSourceNode.start();\n        nativeAudioBufferSourceNode.stop();\n        try {\n            nativeAudioBufferSourceNode.stop();\n            return true;\n        }\n        catch {\n            return false;\n        }\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/test-audio-scheduled-source-node-stop-method-consecutive-calls-support.js.map","export const createTestAudioScheduledSourceNodeStopMethodNegativeParametersSupport = (createNativeAudioNode) => {\n    return (nativeContext) => {\n        const nativeAudioBufferSourceNode = createNativeAudioNode(nativeContext, (ntvCntxt) => ntvCntxt.createOscillator());\n        try {\n            nativeAudioBufferSourceNode.stop(-1);\n        }\n        catch (err) {\n            return (err instanceof RangeError);\n        }\n        return false;\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/test-audio-scheduled-source-node-stop-method-negative-parameters-support.js.map","import { interceptConnections } from '../helpers/intercept-connections';\nexport const createWrapAudioScheduledSourceNodeStopMethodConsecutiveCalls = (createNativeAudioNode) => {\n    return (nativeAudioScheduledSourceNode, nativeContext) => {\n        const nativeGainNode = createNativeAudioNode(nativeContext, (ntvCntxt) => ntvCntxt.createGain());\n        nativeAudioScheduledSourceNode.connect(nativeGainNode);\n        const disconnectGainNode = ((disconnect) => {\n            return () => {\n                // @todo TypeScript cannot infer the overloaded signature with 1 argument yet.\n                disconnect.call(nativeAudioScheduledSourceNode, nativeGainNode);\n                nativeAudioScheduledSourceNode.removeEventListener('ended', disconnectGainNode);\n            };\n        })(nativeAudioScheduledSourceNode.disconnect);\n        nativeAudioScheduledSourceNode.addEventListener('ended', disconnectGainNode);\n        interceptConnections(nativeAudioScheduledSourceNode, nativeGainNode);\n        nativeAudioScheduledSourceNode.stop = ((stop) => {\n            let isStopped = false;\n            return (when = 0) => {\n                if (isStopped) {\n                    try {\n                        stop.call(nativeAudioScheduledSourceNode, when);\n                    }\n                    catch {\n                        nativeGainNode.gain.setValueAtTime(0, when);\n                    }\n                }\n                else {\n                    stop.call(nativeAudioScheduledSourceNode, when);\n                    isStopped = true;\n                }\n            };\n        })(nativeAudioScheduledSourceNode.stop);\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/wrap-audio-scheduled-source-node-stop-method-consecutive-calls.js.map","export const createRenderInputsOfAudioParam = (getAudioNodeRenderer, getAudioParamConnections, isPartOfACycle) => {\n    return async (audioParam, nativeOfflineAudioContext, nativeAudioParam, trace) => {\n        const audioParamConnections = getAudioParamConnections(audioParam);\n        await Promise\n            .all(Array\n            .from(audioParamConnections.activeInputs)\n            .map(async ([source, output]) => {\n            const audioNodeRenderer = getAudioNodeRenderer(source);\n            const renderedNativeAudioNode = await audioNodeRenderer.render(source, nativeOfflineAudioContext, trace);\n            if (!isPartOfACycle(source)) {\n                renderedNativeAudioNode.connect(nativeAudioParam, output);\n            }\n        }));\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/render-inputs-of-audio-param.js.map","export const createConnectAudioParam = (renderInputsOfAudioParam) => {\n    return (nativeOfflineAudioContext, audioParam, nativeAudioParam, trace) => {\n        return renderInputsOfAudioParam(audioParam, nativeOfflineAudioContext, nativeAudioParam, trace);\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/connect-audio-param.js.map","import { assignNativeAudioNodeAudioParamValue } from '../helpers/assign-native-audio-node-audio-param-value';\nimport { assignNativeAudioNodeOption } from '../helpers/assign-native-audio-node-option';\nimport { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nimport { wrapAudioBufferSourceNodeStartMethodConsecutiveCalls } from '../helpers/wrap-audio-buffer-source-node-start-method-consecutive-calls';\nimport { wrapAudioBufferSourceNodeStartMethodDurationParameter } from '../helpers/wrap-audio-buffer-source-node-start-method-duration-parameter';\nimport { wrapAudioScheduledSourceNodeStartMethodNegativeParameters } from '../helpers/wrap-audio-scheduled-source-node-start-method-negative-parameters';\nimport { wrapAudioScheduledSourceNodeStopMethodNegativeParameters } from '../helpers/wrap-audio-scheduled-source-node-stop-method-negative-parameters';\nexport const createNativeAudioBufferSourceNodeFactory = (cacheTestResult, createNativeAudioNode, testAudioBufferSourceNodeStartMethodConsecutiveCallsSupport, testAudioBufferSourceNodeStartMethodDurationParameterSupport, testAudioBufferSourceNodeStartMethodOffsetClampingSupport, testAudioBufferSourceNodeStopMethodNullifiedBufferSupport, testAudioScheduledSourceNodeStartMethodNegativeParametersSupport, testAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport, testAudioScheduledSourceNodeStopMethodNegativeParametersSupport, wrapAudioBufferSourceNodeStartMethodOffsetClampling, wrapAudioBufferSourceNodeStopMethodNullifiedBuffer, wrapAudioScheduledSourceNodeStopMethodConsecutiveCalls) => {\n    return (nativeContext, options = {}) => {\n        const nativeAudioBufferSourceNode = createNativeAudioNode(nativeContext, (ntvCntxt) => ntvCntxt.createBufferSource());\n        assignNativeAudioNodeOptions(nativeAudioBufferSourceNode, options);\n        assignNativeAudioNodeAudioParamValue(nativeAudioBufferSourceNode, options, 'playbackRate');\n        // Bug #71: Edge does not allow to set the buffer to null.\n        assignNativeAudioNodeOption(nativeAudioBufferSourceNode, options, 'buffer');\n        // Bug #149: Safari does not yet support the detune AudioParam.\n        assignNativeAudioNodeOption(nativeAudioBufferSourceNode, options, 'loop');\n        assignNativeAudioNodeOption(nativeAudioBufferSourceNode, options, 'loopEnd');\n        assignNativeAudioNodeOption(nativeAudioBufferSourceNode, options, 'loopStart');\n        // Bug #69: Safari does allow calls to start() of an already scheduled AudioBufferSourceNode.\n        if (!cacheTestResult(testAudioBufferSourceNodeStartMethodConsecutiveCallsSupport, () => testAudioBufferSourceNodeStartMethodConsecutiveCallsSupport(nativeContext))) {\n            wrapAudioBufferSourceNodeStartMethodConsecutiveCalls(nativeAudioBufferSourceNode);\n        }\n        // Bug #92: Edge does not respect the duration parameter yet.\n        if (!cacheTestResult(testAudioBufferSourceNodeStartMethodDurationParameterSupport, testAudioBufferSourceNodeStartMethodDurationParameterSupport)) {\n            wrapAudioBufferSourceNodeStartMethodDurationParameter(nativeAudioBufferSourceNode, nativeContext);\n        }\n        // Bug #154 & #155: Safari does not handle offsets which are equal to or greater than the duration of the buffer.\n        if (!cacheTestResult(testAudioBufferSourceNodeStartMethodOffsetClampingSupport, () => testAudioBufferSourceNodeStartMethodOffsetClampingSupport(nativeContext))) {\n            wrapAudioBufferSourceNodeStartMethodOffsetClampling(nativeAudioBufferSourceNode);\n        }\n        // Bug #162: Safari does throw an error when stop() is called on an AudioBufferSourceNode which has no buffer assigned to it.\n        if (!cacheTestResult(testAudioBufferSourceNodeStopMethodNullifiedBufferSupport, () => testAudioBufferSourceNodeStopMethodNullifiedBufferSupport(nativeContext))) {\n            wrapAudioBufferSourceNodeStopMethodNullifiedBuffer(nativeAudioBufferSourceNode, nativeContext);\n        }\n        // Bug #44: Only Chrome, Firefox & Opera throw a RangeError yet.\n        if (!cacheTestResult(testAudioScheduledSourceNodeStartMethodNegativeParametersSupport, () => testAudioScheduledSourceNodeStartMethodNegativeParametersSupport(nativeContext))) {\n            wrapAudioScheduledSourceNodeStartMethodNegativeParameters(nativeAudioBufferSourceNode);\n        }\n        // Bug #19: Safari does not ignore calls to stop() of an already stopped AudioBufferSourceNode.\n        if (!cacheTestResult(testAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport, () => testAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport(nativeContext))) {\n            wrapAudioScheduledSourceNodeStopMethodConsecutiveCalls(nativeAudioBufferSourceNode, nativeContext);\n        }\n        // Bug #44: Only Firefox does not throw a RangeError yet.\n        if (!cacheTestResult(testAudioScheduledSourceNodeStopMethodNegativeParametersSupport, () => testAudioScheduledSourceNodeStopMethodNegativeParametersSupport(nativeContext))) {\n            wrapAudioScheduledSourceNodeStopMethodNegativeParameters(nativeAudioBufferSourceNode);\n        }\n        return nativeAudioBufferSourceNode;\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/native-audio-buffer-source-node-factory.js.map","import { createInvalidStateError } from '../factories/invalid-state-error';\nexport const wrapAudioBufferSourceNodeStartMethodConsecutiveCalls = (nativeAudioBufferSourceNode) => {\n    nativeAudioBufferSourceNode.start = ((start) => {\n        let isScheduled = false;\n        return (when = 0, offset = 0, duration) => {\n            if (isScheduled) {\n                throw createInvalidStateError();\n            }\n            start.call(nativeAudioBufferSourceNode, when, offset, duration);\n            isScheduled = true;\n        };\n    })(nativeAudioBufferSourceNode.start);\n};\n//# sourceMappingURL=/build/es2019/helpers/wrap-audio-buffer-source-node-start-method-consecutive-calls.js.map","export const wrapAudioBufferSourceNodeStartMethodDurationParameter = (nativeAudioScheduledSourceNode, nativeContext) => {\n    let endTime = Number.POSITIVE_INFINITY;\n    let stopTime = Number.POSITIVE_INFINITY;\n    nativeAudioScheduledSourceNode.start = ((start, stop) => {\n        return (when = 0, offset = 0, duration = Number.POSITIVE_INFINITY) => {\n            start.call(nativeAudioScheduledSourceNode, when, offset);\n            if (duration >= 0 && duration < Number.POSITIVE_INFINITY) {\n                const actualStartTime = Math.max(when, nativeContext.currentTime);\n                // @todo The playbackRate could of course also have been automated and is not always fixed.\n                const durationInBufferTime = (duration / nativeAudioScheduledSourceNode.playbackRate.value);\n                endTime = actualStartTime + durationInBufferTime;\n                stop.call(nativeAudioScheduledSourceNode, Math.min(endTime, stopTime));\n            }\n        };\n    })(nativeAudioScheduledSourceNode.start, nativeAudioScheduledSourceNode.stop);\n    nativeAudioScheduledSourceNode.stop = ((stop) => {\n        return (when = 0) => {\n            stopTime = Math.max(when, nativeContext.currentTime);\n            stop.call(nativeAudioScheduledSourceNode, Math.min(endTime, stopTime));\n        };\n    })(nativeAudioScheduledSourceNode.stop);\n};\n//# sourceMappingURL=/build/es2019/helpers/wrap-audio-buffer-source-node-start-method-duration-parameter.js.map","export const createTestAudioBufferSourceNodeStartMethodConsecutiveCallsSupport = (createNativeAudioNode) => {\n    return (nativeContext) => {\n        const nativeAudioBufferSourceNode = createNativeAudioNode(nativeContext, (ntvCntxt) => ntvCntxt.createBufferSource());\n        nativeAudioBufferSourceNode.start();\n        try {\n            nativeAudioBufferSourceNode.start();\n        }\n        catch {\n            return true;\n        }\n        return false;\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/test-audio-buffer-source-node-start-method-consecutive-calls-support.js.map","// Bug #92: Edge does not respect the duration parameter yet.\nexport const createTestAudioBufferSourceNodeStartMethodDurationParameterSupport = (nativeOfflineAudioContextConstructor) => {\n    return () => {\n        if (nativeOfflineAudioContextConstructor === null) {\n            return Promise.resolve(false);\n        }\n        const offlineAudioContext = new nativeOfflineAudioContextConstructor(1, 1, 44100);\n        const audioBuffer = offlineAudioContext.createBuffer(1, 1, offlineAudioContext.sampleRate);\n        const audioBufferSourceNode = offlineAudioContext.createBufferSource();\n        audioBuffer.getChannelData(0)[0] = 1;\n        audioBufferSourceNode.buffer = audioBuffer;\n        audioBufferSourceNode.start(0, 0, 0);\n        audioBufferSourceNode.connect(offlineAudioContext.destination);\n        // Bug #21: Safari does not support promises yet.\n        return new Promise((resolve) => {\n            offlineAudioContext.oncomplete = ({ renderedBuffer }) => {\n                // Bug #5: Safari does not support copyFromChannel().\n                resolve(renderedBuffer.getChannelData(0)[0] === 0);\n            };\n            offlineAudioContext.startRendering();\n        });\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/test-audio-buffer-source-node-start-method-duration-parameter-support.js.map","export const createTestAudioBufferSourceNodeStartMethodOffsetClampingSupport = (createNativeAudioNode) => {\n    return (nativeContext) => {\n        const nativeAudioBufferSourceNode = createNativeAudioNode(nativeContext, (ntvCntxt) => ntvCntxt.createBufferSource());\n        const nativeAudioBuffer = nativeContext.createBuffer(1, 1, 44100);\n        nativeAudioBufferSourceNode.buffer = nativeAudioBuffer;\n        try {\n            nativeAudioBufferSourceNode.start(0, 1);\n        }\n        catch {\n            return false;\n        }\n        return true;\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/test-audio-buffer-source-node-start-method-offset-clamping-support.js.map","export const createTestAudioBufferSourceNodeStopMethodNullifiedBufferSupport = (createNativeAudioNode) => {\n    return (nativeContext) => {\n        const nativeAudioBufferSourceNode = createNativeAudioNode(nativeContext, (ntvCntxt) => ntvCntxt.createBufferSource());\n        nativeAudioBufferSourceNode.start();\n        try {\n            nativeAudioBufferSourceNode.stop();\n        }\n        catch {\n            return false;\n        }\n        return true;\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/test-audio-buffer-source-node-stop-method-nullified-buffer-support.js.map","export const wrapAudioBufferSourceNodeStartMethodOffsetClamping = (nativeAudioBufferSourceNode) => {\n    nativeAudioBufferSourceNode.start = ((start) => {\n        return (when = 0, offset = 0, duration) => {\n            const buffer = nativeAudioBufferSourceNode.buffer;\n            // Bug #154: Safari does not clamp the offset if it is equal to or greater than the duration of the buffer.\n            const clampedOffset = (buffer === null) ? offset : Math.min(buffer.duration, offset);\n            // Bug #155: Safari does not handle the offset correctly if it would cause the buffer to be not be played at all.\n            if (buffer !== null && clampedOffset > buffer.duration - (0.5 / nativeAudioBufferSourceNode.context.sampleRate)) {\n                start.call(nativeAudioBufferSourceNode, when, 0, 0);\n            }\n            else {\n                start.call(nativeAudioBufferSourceNode, when, clampedOffset, duration);\n            }\n        };\n    })(nativeAudioBufferSourceNode.start);\n};\n//# sourceMappingURL=/build/es2019/helpers/wrap-audio-buffer-source-node-start-method-offset-clamping.js.map","export const createWrapAudioBufferSourceNodeStopMethodNullifiedBuffer = (overwriteAccessors) => {\n    return (nativeAudioBufferSourceNode, nativeContext) => {\n        const nullifiedBuffer = nativeContext.createBuffer(1, 1, nativeContext.sampleRate);\n        if (nativeAudioBufferSourceNode.buffer === null) {\n            nativeAudioBufferSourceNode.buffer = nullifiedBuffer;\n        }\n        overwriteAccessors(nativeAudioBufferSourceNode, 'buffer', (get) => () => {\n            const value = get.call(nativeAudioBufferSourceNode);\n            return (value === nullifiedBuffer) ? null : value;\n        }, (set) => (value) => {\n            return set.call(nativeAudioBufferSourceNode, (value === null) ? nullifiedBuffer : value);\n        });\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/wrap-audio-buffer-source-node-stop-method-nullified-buffer.js.map","export const createRenderAutomation = (getAudioParamRenderer, renderInputsOfAudioParam) => {\n    return (nativeOfflineAudioContext, audioParam, nativeAudioParam, trace) => {\n        const audioParamRenderer = getAudioParamRenderer(audioParam);\n        audioParamRenderer.replay(nativeAudioParam);\n        return renderInputsOfAudioParam(audioParam, nativeOfflineAudioContext, nativeAudioParam, trace);\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/render-automation.js.map","export const createGetAudioParamRenderer = (getAudioParamConnections) => {\n    return (audioParam) => {\n        const audioParamConnections = getAudioParamConnections(audioParam);\n        if (audioParamConnections.renderer === null) {\n            throw new Error('Missing the renderer of the given AudioParam in the audio graph.');\n        }\n        return audioParamConnections.renderer;\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/get-audio-param-renderer.js.map","import { isOwnedByContext } from '../helpers/is-owned-by-context';\nexport const createAudioBufferSourceNodeRendererFactory = (connectAudioParam, createNativeAudioBufferSourceNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode) => {\n    return () => {\n        const renderedNativeAudioBufferSourceNodes = new WeakMap();\n        let start = null;\n        let stop = null;\n        const createAudioBufferSourceNode = async (proxy, nativeOfflineAudioContext, trace) => {\n            let nativeAudioBufferSourceNode = getNativeAudioNode(proxy);\n            /*\n             * If the initially used nativeAudioBufferSourceNode was not constructed on the same OfflineAudioContext it needs to be created\n             * again.\n             */\n            const nativeAudioBufferSourceNodeIsOwnedByContext = isOwnedByContext(nativeAudioBufferSourceNode, nativeOfflineAudioContext);\n            if (!nativeAudioBufferSourceNodeIsOwnedByContext) {\n                const options = {\n                    buffer: nativeAudioBufferSourceNode.buffer,\n                    channelCount: nativeAudioBufferSourceNode.channelCount,\n                    channelCountMode: nativeAudioBufferSourceNode.channelCountMode,\n                    channelInterpretation: nativeAudioBufferSourceNode.channelInterpretation,\n                    // Bug #149: Safari does not yet support the detune AudioParam.\n                    loop: nativeAudioBufferSourceNode.loop,\n                    loopEnd: nativeAudioBufferSourceNode.loopEnd,\n                    loopStart: nativeAudioBufferSourceNode.loopStart,\n                    playbackRate: nativeAudioBufferSourceNode.playbackRate.value\n                };\n                nativeAudioBufferSourceNode = createNativeAudioBufferSourceNode(nativeOfflineAudioContext, options);\n                if (start !== null) {\n                    nativeAudioBufferSourceNode.start(...start);\n                }\n                if (stop !== null) {\n                    nativeAudioBufferSourceNode.stop(stop);\n                }\n            }\n            renderedNativeAudioBufferSourceNodes.set(nativeOfflineAudioContext, nativeAudioBufferSourceNode);\n            if (!nativeAudioBufferSourceNodeIsOwnedByContext) {\n                // Bug #149: Safari does not yet support the detune AudioParam.\n                await renderAutomation(nativeOfflineAudioContext, proxy.playbackRate, nativeAudioBufferSourceNode.playbackRate, trace);\n            }\n            else {\n                // Bug #149: Safari does not yet support the detune AudioParam.\n                await connectAudioParam(nativeOfflineAudioContext, proxy.playbackRate, nativeAudioBufferSourceNode.playbackRate, trace);\n            }\n            await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeAudioBufferSourceNode, trace);\n            return nativeAudioBufferSourceNode;\n        };\n        return {\n            set start(value) {\n                start = value;\n            },\n            set stop(value) {\n                stop = value;\n            },\n            render(proxy, nativeOfflineAudioContext, trace) {\n                const renderedNativeAudioBufferSourceNode = renderedNativeAudioBufferSourceNodes.get(nativeOfflineAudioContext);\n                if (renderedNativeAudioBufferSourceNode !== undefined) {\n                    return Promise.resolve(renderedNativeAudioBufferSourceNode);\n                }\n                return createAudioBufferSourceNode(proxy, nativeOfflineAudioContext, trace);\n            }\n        };\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/audio-buffer-source-node-renderer-factory.js.map","import { AutomationEventList } from 'automation-events';\nexport const createAudioParamFactory = (addAudioParamConnections, audioParamAudioNodeStore, audioParamStore, createAudioParamRenderer, createCancelAndHoldAutomationEvent, createCancelScheduledValuesAutomationEvent, createExponentialRampToValueAutomationEvent, createLinearRampToValueAutomationEvent, createSetTargetAutomationEvent, createSetValueAutomationEvent, createSetValueCurveAutomationEvent, nativeAudioContextConstructor) => {\n    return (audioNode, isAudioParamOfOfflineAudioContext, nativeAudioParam, maxValue = null, minValue = null) => {\n        const automationEventList = new AutomationEventList(nativeAudioParam.defaultValue);\n        const audioParamRenderer = (isAudioParamOfOfflineAudioContext) ? createAudioParamRenderer(automationEventList) : null;\n        const audioParam = {\n            get defaultValue() {\n                return nativeAudioParam.defaultValue;\n            },\n            get maxValue() {\n                return (maxValue === null) ? nativeAudioParam.maxValue : maxValue;\n            },\n            get minValue() {\n                return (minValue === null) ? nativeAudioParam.minValue : minValue;\n            },\n            get value() {\n                return nativeAudioParam.value;\n            },\n            set value(value) {\n                nativeAudioParam.value = value;\n                // Bug #98: Edge, Firefox & Safari do not yet treat the value setter like a call to setValueAtTime().\n                audioParam.setValueAtTime(value, audioNode.context.currentTime);\n            },\n            cancelAndHoldAtTime(cancelTime) {\n                // Bug #28: Edge, Firefox & Safari do not yet implement cancelAndHoldAtTime().\n                if (typeof nativeAudioParam.cancelAndHoldAtTime === 'function') {\n                    if (audioParamRenderer === null) {\n                        automationEventList.flush(audioNode.context.currentTime);\n                    }\n                    automationEventList.add(createCancelAndHoldAutomationEvent(cancelTime));\n                    nativeAudioParam.cancelAndHoldAtTime(cancelTime);\n                }\n                else {\n                    const previousLastEvent = Array\n                        .from(automationEventList)\n                        .pop();\n                    if (audioParamRenderer === null) {\n                        automationEventList.flush(audioNode.context.currentTime);\n                    }\n                    automationEventList.add(createCancelAndHoldAutomationEvent(cancelTime));\n                    const currentLastEvent = Array\n                        .from(automationEventList)\n                        .pop();\n                    nativeAudioParam.cancelScheduledValues(cancelTime);\n                    if (previousLastEvent !== currentLastEvent && currentLastEvent !== undefined) {\n                        if (currentLastEvent.type === 'exponentialRampToValue') {\n                            nativeAudioParam.exponentialRampToValueAtTime(currentLastEvent.value, currentLastEvent.endTime);\n                        }\n                        else if (currentLastEvent.type === 'linearRampToValue') {\n                            nativeAudioParam.linearRampToValueAtTime(currentLastEvent.value, currentLastEvent.endTime);\n                        }\n                        else if (currentLastEvent.type === 'setValue') {\n                            nativeAudioParam.setValueAtTime(currentLastEvent.value, currentLastEvent.startTime);\n                        }\n                        else if (currentLastEvent.type === 'setValueCurve') {\n                            nativeAudioParam.setValueCurveAtTime(currentLastEvent.values, currentLastEvent.startTime, currentLastEvent.duration);\n                        }\n                    }\n                }\n                return audioParam;\n            },\n            cancelScheduledValues(cancelTime) {\n                if (audioParamRenderer === null) {\n                    automationEventList.flush(audioNode.context.currentTime);\n                }\n                automationEventList.add(createCancelScheduledValuesAutomationEvent(cancelTime));\n                nativeAudioParam.cancelScheduledValues(cancelTime);\n                return audioParam;\n            },\n            exponentialRampToValueAtTime(value, endTime) {\n                if (audioParamRenderer === null) {\n                    automationEventList.flush(audioNode.context.currentTime);\n                }\n                automationEventList.add(createExponentialRampToValueAutomationEvent(value, endTime));\n                nativeAudioParam.exponentialRampToValueAtTime(value, endTime);\n                return audioParam;\n            },\n            linearRampToValueAtTime(value, endTime) {\n                if (audioParamRenderer === null) {\n                    automationEventList.flush(audioNode.context.currentTime);\n                }\n                automationEventList.add(createLinearRampToValueAutomationEvent(value, endTime));\n                nativeAudioParam.linearRampToValueAtTime(value, endTime);\n                return audioParam;\n            },\n            setTargetAtTime(target, startTime, timeConstant) {\n                if (audioParamRenderer === null) {\n                    automationEventList.flush(audioNode.context.currentTime);\n                }\n                automationEventList.add(createSetTargetAutomationEvent(target, startTime, timeConstant));\n                nativeAudioParam.setTargetAtTime(target, startTime, timeConstant);\n                return audioParam;\n            },\n            setValueAtTime(value, startTime) {\n                if (audioParamRenderer === null) {\n                    automationEventList.flush(audioNode.context.currentTime);\n                }\n                automationEventList.add(createSetValueAutomationEvent(value, startTime));\n                nativeAudioParam.setValueAtTime(value, startTime);\n                return audioParam;\n            },\n            setValueCurveAtTime(values, startTime, duration) {\n                /*\n                 * Bug #152: Safari does not correctly interpolate the values of the curve.\n                 * @todo Unfortunately there is no way to test for this behavior in synchronous fashion which is why testing for the\n                 * existence of the webkitAudioContext is used as a workaround here.\n                 */\n                if (nativeAudioContextConstructor !== null && nativeAudioContextConstructor.name === 'webkitAudioContext') {\n                    const endTime = startTime + duration;\n                    const sampleRate = audioNode.context.sampleRate;\n                    const firstSample = Math.ceil(startTime * sampleRate);\n                    const lastSample = Math.floor((endTime) * sampleRate);\n                    const numberOfInterpolatedValues = lastSample - firstSample;\n                    const interpolatedValues = new Float32Array(numberOfInterpolatedValues);\n                    for (let i = 0; i < numberOfInterpolatedValues; i += 1) {\n                        const theoreticIndex = ((values.length - 1) / duration) * (((firstSample + i) / sampleRate) - startTime);\n                        const lowerIndex = Math.floor(theoreticIndex);\n                        const upperIndex = Math.ceil(theoreticIndex);\n                        interpolatedValues[i] = (lowerIndex === upperIndex)\n                            ? values[lowerIndex]\n                            : ((1 - (theoreticIndex - lowerIndex)) * values[lowerIndex])\n                                + ((1 - (upperIndex - theoreticIndex)) * values[upperIndex]);\n                    }\n                    if (audioParamRenderer === null) {\n                        automationEventList.flush(audioNode.context.currentTime);\n                    }\n                    automationEventList.add(createSetValueCurveAutomationEvent(interpolatedValues, startTime, duration));\n                    nativeAudioParam.setValueCurveAtTime(interpolatedValues, startTime, duration);\n                    const timeOfLastSample = lastSample / sampleRate;\n                    if (timeOfLastSample < endTime) {\n                        audioParam.setValueAtTime(interpolatedValues[interpolatedValues.length - 1], timeOfLastSample);\n                    }\n                    audioParam.setValueAtTime(values[values.length - 1], endTime);\n                }\n                else {\n                    if (audioParamRenderer === null) {\n                        automationEventList.flush(audioNode.context.currentTime);\n                    }\n                    automationEventList.add(createSetValueCurveAutomationEvent(values, startTime, duration));\n                    nativeAudioParam.setValueCurveAtTime(values, startTime, duration);\n                }\n                return audioParam;\n            }\n        };\n        audioParamStore.set(audioParam, nativeAudioParam);\n        audioParamAudioNodeStore.set(audioParam, audioNode);\n        addAudioParamConnections(audioParam, audioParamRenderer);\n        return audioParam;\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/audio-param-factory.js.map","export const createAddAudioParamConnections = (audioParamConnectionsStore) => {\n    return (audioParam, audioParamRenderer) => {\n        audioParamConnectionsStore.set(audioParam, { activeInputs: new Set(), passiveInputs: new WeakMap(), renderer: audioParamRenderer });\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/add-audio-param-connections.js.map","export const createAudioParamRenderer = (automationEventList) => {\n    return {\n        replay(audioParam) {\n            for (const automationEvent of automationEventList) {\n                if (automationEvent.type === 'exponentialRampToValue') {\n                    const { endTime, value } = automationEvent;\n                    audioParam.exponentialRampToValueAtTime(value, endTime);\n                }\n                else if (automationEvent.type === 'linearRampToValue') {\n                    const { endTime, value } = automationEvent;\n                    audioParam.linearRampToValueAtTime(value, endTime);\n                }\n                else if (automationEvent.type === 'setTarget') {\n                    const { startTime, target, timeConstant } = automationEvent;\n                    audioParam.setTargetAtTime(target, startTime, timeConstant);\n                }\n                else if (automationEvent.type === 'setValue') {\n                    const { startTime, value } = automationEvent;\n                    audioParam.setValueAtTime(value, startTime);\n                }\n                else if (automationEvent.type === 'setValueCurve') {\n                    const { duration, startTime, values } = automationEvent;\n                    audioParam.setValueCurveAtTime(values, startTime, duration);\n                }\n                else {\n                    throw new Error(\"Can't apply an unknown automation.\");\n                }\n            }\n        }\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/audio-param-renderer.js.map","export const createCancelScheduledValuesAutomationEvent = (cancelTime) => {\n    return { cancelTime, type: 'cancelScheduledValues' };\n};\n//# sourceMappingURL=/build/es2019/functions/create-cancel-scheduled-values-automation-event.js.map","export const createExponentialRampToValueAutomationEvent = (value, endTime) => {\n    return { endTime, type: 'exponentialRampToValue', value };\n};\n//# sourceMappingURL=/build/es2019/functions/create-exponential-ramp-to-value-automation-event.js.map","export const createLinearRampToValueAutomationEvent = (value, endTime) => {\n    return { endTime, type: 'linearRampToValue', value };\n};\n//# sourceMappingURL=/build/es2019/functions/create-linear-ramp-to-value-automation-event.js.map","export const createSetTargetAutomationEvent = (target, startTime, timeConstant) => {\n    return { startTime, target, timeConstant, type: 'setTarget' };\n};\n//# sourceMappingURL=/build/es2019/functions/create-set-target-automation-event.js.map","import { assignNativeAudioNodeAudioParamValue } from '../helpers/assign-native-audio-node-audio-param-value';\nimport { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nexport const createNativeGainNodeFactory = (createNativeAudioNode) => {\n    return (nativeContext, options) => {\n        const nativeGainNode = createNativeAudioNode(nativeContext, (ntvCntxt) => ntvCntxt.createGain());\n        assignNativeAudioNodeOptions(nativeGainNode, options);\n        assignNativeAudioNodeAudioParamValue(nativeGainNode, options, 'gain');\n        return nativeGainNode;\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/native-gain-node-factory.js.map","export const createAudioDestinationNodeConstructor = (audioNodeConstructor, createAudioDestinationNodeRenderer, createIndexSizeError, createInvalidStateError, createNativeAudioDestinationNode, getNativeContext, isNativeOfflineAudioContext, renderInputsOfAudioNode) => {\n    return class AudioDestinationNode extends audioNodeConstructor {\n        constructor(context, channelCount) {\n            const nativeContext = getNativeContext(context);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            const nativeAudioDestinationNode = createNativeAudioDestinationNode(nativeContext, channelCount, isOffline);\n            const audioDestinationNodeRenderer = ((isOffline)\n                ? createAudioDestinationNodeRenderer(renderInputsOfAudioNode)\n                : null);\n            super(context, false, nativeAudioDestinationNode, audioDestinationNodeRenderer);\n            this._isNodeOfNativeOfflineAudioContext = isOffline;\n            this._nativeAudioDestinationNode = nativeAudioDestinationNode;\n        }\n        get channelCount() {\n            return this._nativeAudioDestinationNode.channelCount;\n        }\n        set channelCount(value) {\n            // Bug #52: Chrome, Edge, Opera & Safari do not throw an exception at all.\n            // Bug #54: Firefox does throw an IndexSizeError.\n            if (this._isNodeOfNativeOfflineAudioContext) {\n                throw createInvalidStateError();\n            }\n            // Bug #47: The AudioDestinationNode in Edge and Safari do not initialize the maxChannelCount property correctly.\n            if (value > this._nativeAudioDestinationNode.maxChannelCount) {\n                throw createIndexSizeError();\n            }\n            this._nativeAudioDestinationNode.channelCount = value;\n        }\n        get channelCountMode() {\n            return this._nativeAudioDestinationNode.channelCountMode;\n        }\n        set channelCountMode(value) {\n            // Bug #53: No browser does throw an exception yet.\n            if (this._isNodeOfNativeOfflineAudioContext) {\n                throw createInvalidStateError();\n            }\n            this._nativeAudioDestinationNode.channelCountMode = value;\n        }\n        get maxChannelCount() {\n            return this._nativeAudioDestinationNode.maxChannelCount;\n        }\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/audio-destination-node-constructor.js.map","export const createAudioDestinationNodeRenderer = (renderInputsOfAudioNode) => {\n    let nativeAudioDestinationNodePromise = null;\n    const createAudioDestinationNode = async (proxy, nativeOfflineAudioContext, trace) => {\n        const nativeAudioDestinationNode = nativeOfflineAudioContext.destination;\n        await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeAudioDestinationNode, trace);\n        return nativeAudioDestinationNode;\n    };\n    return {\n        render(proxy, nativeOfflineAudioContext, trace) {\n            if (nativeAudioDestinationNodePromise === null) {\n                nativeAudioDestinationNodePromise = createAudioDestinationNode(proxy, nativeOfflineAudioContext, trace);\n            }\n            return nativeAudioDestinationNodePromise;\n        }\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/audio-destination-node-renderer-factory.js.map","export const createNativeAudioDestinationNodeFactory = (createNativeGainNode, overwriteAccessors) => {\n    return (nativeContext, channelCount, isNodeOfNativeOfflineAudioContext) => {\n        const nativeAudioDestinationNode = nativeContext.destination;\n        // Bug #132: Edge & Safari do not have the correct channelCount.\n        if (nativeAudioDestinationNode.channelCount !== channelCount) {\n            try {\n                nativeAudioDestinationNode.channelCount = channelCount;\n            }\n            catch {\n                // Bug #169: Safari throws an error on each attempt to change the channelCount.\n            }\n        }\n        // Bug #83: Edge & Safari do not have the correct channelCountMode.\n        if (isNodeOfNativeOfflineAudioContext && nativeAudioDestinationNode.channelCountMode !== 'explicit') {\n            nativeAudioDestinationNode.channelCountMode = 'explicit';\n        }\n        // Bug #47: The AudioDestinationNode in Edge and Safari does not initialize the maxChannelCount property correctly.\n        if (nativeAudioDestinationNode.maxChannelCount === 0) {\n            Object.defineProperty(nativeAudioDestinationNode, 'maxChannelCount', {\n                value: channelCount\n            });\n        }\n        // Bug #168: No browser does yet have an AudioDestinationNode with an output.\n        const gainNode = createNativeGainNode(nativeContext, {\n            channelCount,\n            channelCountMode: nativeAudioDestinationNode.channelCountMode,\n            channelInterpretation: nativeAudioDestinationNode.channelInterpretation,\n            gain: 1\n        });\n        overwriteAccessors(gainNode, 'channelCount', (get) => () => get.call(gainNode), (set) => (value) => {\n            set.call(gainNode, value);\n            try {\n                nativeAudioDestinationNode.channelCount = value;\n            }\n            catch (err) {\n                // Bug #169: Safari throws an error on each attempt to change the channelCount.\n                if (value > nativeAudioDestinationNode.maxChannelCount) {\n                    throw err;\n                }\n            }\n        });\n        overwriteAccessors(gainNode, 'channelCountMode', (get) => () => get.call(gainNode), (set) => (value) => {\n            set.call(gainNode, value);\n            nativeAudioDestinationNode.channelCountMode = value;\n        });\n        overwriteAccessors(gainNode, 'channelInterpretation', (get) => () => get.call(gainNode), (set) => (value) => {\n            set.call(gainNode, value);\n            nativeAudioDestinationNode.channelInterpretation = value;\n        });\n        Object.defineProperty(gainNode, 'maxChannelCount', {\n            get: () => nativeAudioDestinationNode.maxChannelCount\n        });\n        // @todo This should be disconnected when the context is closed.\n        gainNode.connect(nativeAudioDestinationNode);\n        return gainNode;\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/native-audio-destination-node.js.map","import { assignNativeAudioNodeAudioParamValue } from '../helpers/assign-native-audio-node-audio-param-value';\nimport { assignNativeAudioNodeOption } from '../helpers/assign-native-audio-node-option';\nimport { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nexport const createNativeBiquadFilterNodeFactory = (createNativeAudioNode) => {\n    return (nativeContext, options) => {\n        const nativeBiquadFilterNode = createNativeAudioNode(nativeContext, (ntvCntxt) => ntvCntxt.createBiquadFilter());\n        assignNativeAudioNodeOptions(nativeBiquadFilterNode, options);\n        assignNativeAudioNodeAudioParamValue(nativeBiquadFilterNode, options, 'Q');\n        assignNativeAudioNodeAudioParamValue(nativeBiquadFilterNode, options, 'detune');\n        assignNativeAudioNodeAudioParamValue(nativeBiquadFilterNode, options, 'frequency');\n        assignNativeAudioNodeAudioParamValue(nativeBiquadFilterNode, options, 'gain');\n        assignNativeAudioNodeOption(nativeBiquadFilterNode, options, 'type');\n        return nativeBiquadFilterNode;\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/native-biquad-filter-node-factory.js.map","import { isOwnedByContext } from '../helpers/is-owned-by-context';\nexport const createBiquadFilterNodeRendererFactory = (connectAudioParam, createNativeBiquadFilterNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode) => {\n    return () => {\n        const renderedNativeBiquadFilterNodes = new WeakMap();\n        const createBiquadFilterNode = async (proxy, nativeOfflineAudioContext, trace) => {\n            let nativeBiquadFilterNode = getNativeAudioNode(proxy);\n            /*\n             * If the initially used nativeBiquadFilterNode was not constructed on the same OfflineAudioContext it needs to be created\n             * again.\n             */\n            const nativeBiquadFilterNodeIsOwnedByContext = isOwnedByContext(nativeBiquadFilterNode, nativeOfflineAudioContext);\n            if (!nativeBiquadFilterNodeIsOwnedByContext) {\n                const options = {\n                    Q: nativeBiquadFilterNode.Q.value,\n                    channelCount: nativeBiquadFilterNode.channelCount,\n                    channelCountMode: nativeBiquadFilterNode.channelCountMode,\n                    channelInterpretation: nativeBiquadFilterNode.channelInterpretation,\n                    detune: nativeBiquadFilterNode.detune.value,\n                    frequency: nativeBiquadFilterNode.frequency.value,\n                    gain: nativeBiquadFilterNode.gain.value,\n                    type: nativeBiquadFilterNode.type\n                };\n                nativeBiquadFilterNode = createNativeBiquadFilterNode(nativeOfflineAudioContext, options);\n            }\n            renderedNativeBiquadFilterNodes.set(nativeOfflineAudioContext, nativeBiquadFilterNode);\n            if (!nativeBiquadFilterNodeIsOwnedByContext) {\n                await renderAutomation(nativeOfflineAudioContext, proxy.Q, nativeBiquadFilterNode.Q, trace);\n                await renderAutomation(nativeOfflineAudioContext, proxy.detune, nativeBiquadFilterNode.detune, trace);\n                await renderAutomation(nativeOfflineAudioContext, proxy.frequency, nativeBiquadFilterNode.frequency, trace);\n                await renderAutomation(nativeOfflineAudioContext, proxy.gain, nativeBiquadFilterNode.gain, trace);\n            }\n            else {\n                await connectAudioParam(nativeOfflineAudioContext, proxy.Q, nativeBiquadFilterNode.Q, trace);\n                await connectAudioParam(nativeOfflineAudioContext, proxy.detune, nativeBiquadFilterNode.detune, trace);\n                await connectAudioParam(nativeOfflineAudioContext, proxy.frequency, nativeBiquadFilterNode.frequency, trace);\n                await connectAudioParam(nativeOfflineAudioContext, proxy.gain, nativeBiquadFilterNode.gain, trace);\n            }\n            await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeBiquadFilterNode, trace);\n            return nativeBiquadFilterNode;\n        };\n        return {\n            render(proxy, nativeOfflineAudioContext, trace) {\n                const renderedNativeBiquadFilterNode = renderedNativeBiquadFilterNodes.get(nativeOfflineAudioContext);\n                if (renderedNativeBiquadFilterNode !== undefined) {\n                    return Promise.resolve(renderedNativeBiquadFilterNode);\n                }\n                return createBiquadFilterNode(proxy, nativeOfflineAudioContext, trace);\n            }\n        };\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/biquad-filter-node-renderer-factory.js.map","export const createMonitorConnections = (insertElementInSet, isNativeAudioNode) => {\n    return (nativeAudioNode, whenConnected, whenDisconnected) => {\n        const connections = new Set();\n        nativeAudioNode.connect = ((connect) => {\n            return (destination, output = 0, input = 0) => {\n                const wasDisconnected = connections.size === 0;\n                if (isNativeAudioNode(destination)) {\n                    // @todo TypeScript cannot infer the overloaded signature with 3 arguments yet.\n                    connect.call(nativeAudioNode, destination, output, input);\n                    insertElementInSet(connections, [destination, output, input], (connection) => (connection[0] === destination && connection[1] === output && connection[2] === input), true);\n                    if (wasDisconnected) {\n                        whenConnected();\n                    }\n                    return destination;\n                }\n                connect.call(nativeAudioNode, destination, output);\n                insertElementInSet(connections, [destination, output], (connection) => (connection[0] === destination && connection[1] === output), true);\n                if (wasDisconnected) {\n                    whenConnected();\n                }\n                return;\n            };\n        })(nativeAudioNode.connect);\n        nativeAudioNode.disconnect = ((disconnect) => {\n            return (destinationOrOutput, output, input) => {\n                const wasConnected = connections.size > 0;\n                if (destinationOrOutput === undefined) {\n                    disconnect.apply(nativeAudioNode);\n                    connections.clear();\n                }\n                else if (typeof destinationOrOutput === 'number') {\n                    // @todo TypeScript cannot infer the overloaded signature with 1 argument yet.\n                    disconnect.call(nativeAudioNode, destinationOrOutput);\n                    for (const connection of connections) {\n                        if (connection[1] === destinationOrOutput) {\n                            connections.delete(connection);\n                        }\n                    }\n                }\n                else {\n                    if (isNativeAudioNode(destinationOrOutput)) {\n                        // @todo TypeScript cannot infer the overloaded signature with 3 arguments yet.\n                        disconnect.call(nativeAudioNode, destinationOrOutput, output, input);\n                    }\n                    else {\n                        // @todo TypeScript cannot infer the overloaded signature with 2 arguments yet.\n                        disconnect.call(nativeAudioNode, destinationOrOutput, output);\n                    }\n                    for (const connection of connections) {\n                        if (connection[0] === destinationOrOutput\n                            && (output === undefined || connection[1] === output)\n                            && (input === undefined || connection[2] === input)) {\n                            connections.delete(connection);\n                        }\n                    }\n                }\n                const isDisconnected = connections.size === 0;\n                if (wasConnected && isDisconnected) {\n                    whenDisconnected();\n                }\n            };\n        })(nativeAudioNode.disconnect);\n        return nativeAudioNode;\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/monitor-connections.js.map","export const createWrapChannelMergerNode = (createInvalidStateError, createNativeAudioNode, monitorConnectionsFunction) => {\n    return (nativeContext, channelMergerNode) => {\n        channelMergerNode.channelCount = 1;\n        channelMergerNode.channelCountMode = 'explicit';\n        Object.defineProperty(channelMergerNode, 'channelCount', {\n            get: () => 1,\n            set: () => {\n                throw createInvalidStateError();\n            }\n        });\n        Object.defineProperty(channelMergerNode, 'channelCountMode', {\n            get: () => 'explicit',\n            set: () => {\n                throw createInvalidStateError();\n            }\n        });\n        // Bug #20: Safari requires a connection of any kind to treat the input signal correctly.\n        const audioBufferSourceNode = createNativeAudioNode(nativeContext, (ntvCntxt) => ntvCntxt.createBufferSource());\n        const whenConnected = () => {\n            const length = channelMergerNode.numberOfInputs;\n            for (let i = 0; i < length; i += 1) {\n                audioBufferSourceNode.connect(channelMergerNode, 0, i);\n            }\n        };\n        const whenDisconnected = () => audioBufferSourceNode.disconnect(channelMergerNode);\n        monitorConnectionsFunction(channelMergerNode, whenConnected, whenDisconnected);\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/wrap-channel-merger-node.js.map","import { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nexport const createNativeChannelMergerNodeFactory = (createNativeAudioNode, wrapChannelMergerNode) => {\n    return (nativeContext, options) => {\n        const nativeChannelMergerNode = createNativeAudioNode(nativeContext, (ntvCntxt) => {\n            return ntvCntxt.createChannelMerger(options.numberOfInputs);\n        });\n        // Bug #15: Safari does not return the default properties.\n        if (nativeChannelMergerNode.channelCount !== 1 &&\n            nativeChannelMergerNode.channelCountMode !== 'explicit') {\n            wrapChannelMergerNode(nativeContext, nativeChannelMergerNode);\n        }\n        assignNativeAudioNodeOptions(nativeChannelMergerNode, options);\n        return nativeChannelMergerNode;\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/native-channel-merger-node-factory.js.map","import { isOwnedByContext } from '../helpers/is-owned-by-context';\nexport const createChannelMergerNodeRendererFactory = (createNativeChannelMergerNode, getNativeAudioNode, renderInputsOfAudioNode) => {\n    return () => {\n        const renderedNativeAudioNodes = new WeakMap();\n        const createAudioNode = async (proxy, nativeOfflineAudioContext, trace) => {\n            let nativeAudioNode = getNativeAudioNode(proxy);\n            // If the initially used nativeAudioNode was not constructed on the same OfflineAudioContext it needs to be created again.\n            const nativeAudioNodeIsOwnedByContext = isOwnedByContext(nativeAudioNode, nativeOfflineAudioContext);\n            if (!nativeAudioNodeIsOwnedByContext) {\n                const options = {\n                    channelCount: nativeAudioNode.channelCount,\n                    channelCountMode: nativeAudioNode.channelCountMode,\n                    channelInterpretation: nativeAudioNode.channelInterpretation,\n                    numberOfInputs: nativeAudioNode.numberOfInputs\n                };\n                nativeAudioNode = createNativeChannelMergerNode(nativeOfflineAudioContext, options);\n            }\n            renderedNativeAudioNodes.set(nativeOfflineAudioContext, nativeAudioNode);\n            await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeAudioNode, trace);\n            return nativeAudioNode;\n        };\n        return {\n            render(proxy, nativeOfflineAudioContext, trace) {\n                const renderedNativeAudioNode = renderedNativeAudioNodes.get(nativeOfflineAudioContext);\n                if (renderedNativeAudioNode !== undefined) {\n                    return Promise.resolve(renderedNativeAudioNode);\n                }\n                return createAudioNode(proxy, nativeOfflineAudioContext, trace);\n            }\n        };\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/channel-merger-node-renderer-factory.js.map","import { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nimport { wrapChannelSplitterNode } from '../helpers/wrap-channel-splitter-node';\nexport const createNativeChannelSplitterNodeFactory = (createNativeAudioNode) => {\n    return (nativeContext, options) => {\n        const nativeChannelSplitterNode = createNativeAudioNode(nativeContext, (ntvCntxt) => {\n            return ntvCntxt.createChannelSplitter(options.numberOfOutputs);\n        });\n        // Bug #96: Safari does not have the correct channelCount.\n        // Bug #29: Edge & Safari do not have the correct channelCountMode.\n        // Bug #31: Edge & Safari do not have the correct channelInterpretation.\n        assignNativeAudioNodeOptions(nativeChannelSplitterNode, options);\n        // Bug #29, #30, #31, #32, #96 & #97: Only Chrome, Firefox & Opera partially support the spec yet.\n        wrapChannelSplitterNode(nativeChannelSplitterNode);\n        return nativeChannelSplitterNode;\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/native-channel-splitter-node-factory.js.map","import { createInvalidStateError } from '../factories/invalid-state-error';\nexport const wrapChannelSplitterNode = (channelSplitterNode) => {\n    const channelCount = channelSplitterNode.numberOfOutputs;\n    // Bug #97: Safari does not throw an error when attempting to change the channelCount to something other than its initial value.\n    Object.defineProperty(channelSplitterNode, 'channelCount', {\n        get: () => channelCount,\n        set: (value) => {\n            if (value !== channelCount) {\n                throw createInvalidStateError();\n            }\n        }\n    });\n    /*\n     * Bug #30: Only Chrome, Firefox & Opera throw an error when attempting to change the channelCountMode to something other than\n     * explicit.\n     */\n    Object.defineProperty(channelSplitterNode, 'channelCountMode', {\n        get: () => 'explicit',\n        set: (value) => {\n            if (value !== 'explicit') {\n                throw createInvalidStateError();\n            }\n        }\n    });\n    /*\n     * Bug #32: Only Chrome, Firefox & Opera throws an error when attempting to change the channelInterpretation to something other than\n     * discrete.\n     */\n    Object.defineProperty(channelSplitterNode, 'channelInterpretation', {\n        get: () => 'discrete',\n        set: (value) => {\n            if (value !== 'discrete') {\n                throw createInvalidStateError();\n            }\n        }\n    });\n};\n//# sourceMappingURL=/build/es2019/helpers/wrap-channel-splitter-node.js.map","import { isOwnedByContext } from '../helpers/is-owned-by-context';\nexport const createChannelSplitterNodeRendererFactory = (createNativeChannelSplitterNode, getNativeAudioNode, renderInputsOfAudioNode) => {\n    return () => {\n        const renderedNativeAudioNodes = new WeakMap();\n        const createAudioNode = async (proxy, nativeOfflineAudioContext, trace) => {\n            let nativeAudioNode = getNativeAudioNode(proxy);\n            // If the initially used nativeAudioNode was not constructed on the same OfflineAudioContext it needs to be created again.\n            const nativeAudioNodeIsOwnedByContext = isOwnedByContext(nativeAudioNode, nativeOfflineAudioContext);\n            if (!nativeAudioNodeIsOwnedByContext) {\n                const options = {\n                    channelCount: nativeAudioNode.channelCount,\n                    channelCountMode: nativeAudioNode.channelCountMode,\n                    channelInterpretation: nativeAudioNode.channelInterpretation,\n                    numberOfOutputs: nativeAudioNode.numberOfOutputs\n                };\n                nativeAudioNode = createNativeChannelSplitterNode(nativeOfflineAudioContext, options);\n            }\n            renderedNativeAudioNodes.set(nativeOfflineAudioContext, nativeAudioNode);\n            await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeAudioNode, trace);\n            return nativeAudioNode;\n        };\n        return {\n            render(proxy, nativeOfflineAudioContext, trace) {\n                const renderedNativeAudioNode = renderedNativeAudioNodes.get(nativeOfflineAudioContext);\n                if (renderedNativeAudioNode !== undefined) {\n                    return Promise.resolve(renderedNativeAudioNode);\n                }\n                return createAudioNode(proxy, nativeOfflineAudioContext, trace);\n            }\n        };\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/channel-splitter-node-renderer-factory.js.map","import { assignNativeAudioNodeAudioParamValue } from '../helpers/assign-native-audio-node-audio-param-value';\nimport { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nimport { wrapAudioScheduledSourceNodeStartMethodNegativeParameters } from '../helpers/wrap-audio-scheduled-source-node-start-method-negative-parameters';\nimport { wrapAudioScheduledSourceNodeStopMethodNegativeParameters } from '../helpers/wrap-audio-scheduled-source-node-stop-method-negative-parameters';\nexport const createNativeConstantSourceNodeFactory = (cacheTestResult, createNativeAudioNode, createNativeConstantSourceNodeFaker, testAudioScheduledSourceNodeStartMethodNegativeParametersSupport, testAudioScheduledSourceNodeStopMethodNegativeParametersSupport) => {\n    return (nativeContext, options) => {\n        // Bug #62: Edge & Safari do not support ConstantSourceNodes.\n        if (nativeContext.createConstantSource === undefined) {\n            return createNativeConstantSourceNodeFaker(nativeContext, options);\n        }\n        const nativeConstantSourceNode = createNativeAudioNode(nativeContext, (ntvCntxt) => {\n            return ntvCntxt.createConstantSource();\n        });\n        assignNativeAudioNodeOptions(nativeConstantSourceNode, options);\n        assignNativeAudioNodeAudioParamValue(nativeConstantSourceNode, options, 'offset');\n        // Bug #44: Only Chrome, Firefox & Opera throw a RangeError yet.\n        if (!cacheTestResult(testAudioScheduledSourceNodeStartMethodNegativeParametersSupport, () => testAudioScheduledSourceNodeStartMethodNegativeParametersSupport(nativeContext))) {\n            wrapAudioScheduledSourceNodeStartMethodNegativeParameters(nativeConstantSourceNode);\n        }\n        // Bug #44: Only Firefox does not throw a RangeError yet.\n        if (!cacheTestResult(testAudioScheduledSourceNodeStopMethodNegativeParametersSupport, () => testAudioScheduledSourceNodeStopMethodNegativeParametersSupport(nativeContext))) {\n            wrapAudioScheduledSourceNodeStopMethodNegativeParameters(nativeConstantSourceNode);\n        }\n        return nativeConstantSourceNode;\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/native-constant-source-node-factory.js.map","import { interceptConnections } from '../helpers/intercept-connections';\nexport const createNativeConstantSourceNodeFakerFactory = (createNativeAudioBufferSourceNode, createNativeGainNode, monitorConnections) => {\n    return (nativeContext, { offset, ...audioNodeOptions }) => {\n        const audioBuffer = nativeContext.createBuffer(1, 2, nativeContext.sampleRate);\n        const audioBufferSourceNode = createNativeAudioBufferSourceNode(nativeContext);\n        const gainNode = createNativeGainNode(nativeContext, { ...audioNodeOptions, gain: offset });\n        // Bug #5: Safari does not support copyFromChannel() and copyToChannel().\n        const channelData = audioBuffer.getChannelData(0);\n        // Bug #95: Safari does not play or loop one sample buffers.\n        channelData[0] = 1;\n        channelData[1] = 1;\n        audioBufferSourceNode.buffer = audioBuffer;\n        audioBufferSourceNode.loop = true;\n        const nativeConstantSourceNodeFaker = {\n            get bufferSize() {\n                return undefined;\n            },\n            get channelCount() {\n                return gainNode.channelCount;\n            },\n            set channelCount(value) {\n                gainNode.channelCount = value;\n            },\n            get channelCountMode() {\n                return gainNode.channelCountMode;\n            },\n            set channelCountMode(value) {\n                gainNode.channelCountMode = value;\n            },\n            get channelInterpretation() {\n                return gainNode.channelInterpretation;\n            },\n            set channelInterpretation(value) {\n                gainNode.channelInterpretation = value;\n            },\n            get context() {\n                return gainNode.context;\n            },\n            get inputs() {\n                return [];\n            },\n            get numberOfInputs() {\n                return audioBufferSourceNode.numberOfInputs;\n            },\n            get numberOfOutputs() {\n                return gainNode.numberOfOutputs;\n            },\n            get offset() {\n                return gainNode.gain;\n            },\n            get onended() {\n                return audioBufferSourceNode.onended;\n            },\n            set onended(value) {\n                audioBufferSourceNode.onended = value;\n            },\n            addEventListener(...args) {\n                return audioBufferSourceNode.addEventListener(args[0], args[1], args[2]);\n            },\n            dispatchEvent(...args) {\n                return audioBufferSourceNode.dispatchEvent(args[0]);\n            },\n            removeEventListener(...args) {\n                return audioBufferSourceNode.removeEventListener(args[0], args[1], args[2]);\n            },\n            start(when = 0) {\n                audioBufferSourceNode.start.call(audioBufferSourceNode, when);\n            },\n            stop(when = 0) {\n                audioBufferSourceNode.stop.call(audioBufferSourceNode, when);\n            }\n        };\n        const whenConnected = () => audioBufferSourceNode.connect(gainNode);\n        const whenDisconnected = () => audioBufferSourceNode.disconnect(gainNode);\n        return monitorConnections(interceptConnections(nativeConstantSourceNodeFaker, gainNode), whenConnected, whenDisconnected);\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/native-constant-source-node-faker-factory.js.map","import { isOwnedByContext } from '../helpers/is-owned-by-context';\nexport const createConstantSourceNodeRendererFactory = (connectAudioParam, createNativeConstantSourceNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode) => {\n    return () => {\n        const renderedNativeConstantSourceNodes = new WeakMap();\n        let start = null;\n        let stop = null;\n        const createConstantSourceNode = async (proxy, nativeOfflineAudioContext, trace) => {\n            let nativeConstantSourceNode = getNativeAudioNode(proxy);\n            /*\n             * If the initially used nativeConstantSourceNode was not constructed on the same OfflineAudioContext it needs to be created\n             * again.\n             */\n            const nativeConstantSourceNodeIsOwnedByContext = isOwnedByContext(nativeConstantSourceNode, nativeOfflineAudioContext);\n            if (!nativeConstantSourceNodeIsOwnedByContext) {\n                const options = {\n                    channelCount: nativeConstantSourceNode.channelCount,\n                    channelCountMode: nativeConstantSourceNode.channelCountMode,\n                    channelInterpretation: nativeConstantSourceNode.channelInterpretation,\n                    offset: nativeConstantSourceNode.offset.value\n                };\n                nativeConstantSourceNode = createNativeConstantSourceNode(nativeOfflineAudioContext, options);\n                if (start !== null) {\n                    nativeConstantSourceNode.start(start);\n                }\n                if (stop !== null) {\n                    nativeConstantSourceNode.stop(stop);\n                }\n            }\n            renderedNativeConstantSourceNodes.set(nativeOfflineAudioContext, nativeConstantSourceNode);\n            if (!nativeConstantSourceNodeIsOwnedByContext) {\n                await renderAutomation(nativeOfflineAudioContext, proxy.offset, nativeConstantSourceNode.offset, trace);\n            }\n            else {\n                await connectAudioParam(nativeOfflineAudioContext, proxy.offset, nativeConstantSourceNode.offset, trace);\n            }\n            await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeConstantSourceNode, trace);\n            return nativeConstantSourceNode;\n        };\n        return {\n            set start(value) {\n                start = value;\n            },\n            set stop(value) {\n                stop = value;\n            },\n            render(proxy, nativeOfflineAudioContext, trace) {\n                const renderedNativeConstantSourceNode = renderedNativeConstantSourceNodes.get(nativeOfflineAudioContext);\n                if (renderedNativeConstantSourceNode !== undefined) {\n                    return Promise.resolve(renderedNativeConstantSourceNode);\n                }\n                return createConstantSourceNode(proxy, nativeOfflineAudioContext, trace);\n            }\n        };\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/constant-source-node-renderer-factory.js.map","import { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nimport { interceptConnections } from '../helpers/intercept-connections';\nexport const createNativeConvolverNodeFakerFactory = (createNativeAudioNode, createNativeGainNode, monitorConnections) => {\n    return (nativeContext, { buffer, channelCount, channelCountMode, channelInterpretation, disableNormalization }) => {\n        const convolverNode = createNativeAudioNode(nativeContext, (ntvCntxt) => ntvCntxt.createConvolver());\n        assignNativeAudioNodeOptions(convolverNode, {\n            // Bug #166: Chrome & Opera do not allow yet to set the channelCount to 1.\n            channelCount: Math.max(channelCount, 2),\n            // Bug #167: Chrome & Opera do not allow yet to set the channelCountMode to 'explicit'.\n            channelCountMode: (channelCountMode === 'max') ? channelCountMode : 'clamped-max',\n            channelInterpretation\n        });\n        const gainNode = createNativeGainNode(nativeContext, { channelCount, channelCountMode, channelInterpretation, gain: 1 });\n        const nativeConvolverNodeFaker = {\n            get buffer() {\n                return convolverNode.buffer;\n            },\n            set buffer(value) {\n                convolverNode.buffer = value;\n            },\n            get bufferSize() {\n                return undefined;\n            },\n            get channelCount() {\n                return gainNode.channelCount;\n            },\n            set channelCount(value) {\n                // Bug #166: Chrome & Opera do not allow yet to set the channelCount to 1.\n                if (value > 2) {\n                    convolverNode.channelCount = value;\n                }\n                gainNode.channelCount = value;\n            },\n            get channelCountMode() {\n                return gainNode.channelCountMode;\n            },\n            set channelCountMode(value) {\n                // Bug #167: Chrome & Opera do not allow yet to set the channelCountMode to 'explicit'.\n                if (value === 'max') {\n                    convolverNode.channelCountMode = value;\n                }\n                gainNode.channelCountMode = value;\n            },\n            get channelInterpretation() {\n                return convolverNode.channelInterpretation;\n            },\n            set channelInterpretation(value) {\n                convolverNode.channelInterpretation = value;\n                gainNode.channelInterpretation = value;\n            },\n            get context() {\n                return convolverNode.context;\n            },\n            get inputs() {\n                return [convolverNode];\n            },\n            get numberOfInputs() {\n                return convolverNode.numberOfInputs;\n            },\n            get numberOfOutputs() {\n                return convolverNode.numberOfOutputs;\n            },\n            get normalize() {\n                return convolverNode.normalize;\n            },\n            set normalize(value) {\n                convolverNode.normalize = value;\n            },\n            addEventListener(...args) {\n                return convolverNode.addEventListener(args[0], args[1], args[2]);\n            },\n            dispatchEvent(...args) {\n                return convolverNode.dispatchEvent(args[0]);\n            },\n            removeEventListener(...args) {\n                return convolverNode.removeEventListener(args[0], args[1], args[2]);\n            }\n        };\n        // The normalize property needs to be set before setting the buffer.\n        if (disableNormalization === nativeConvolverNodeFaker.normalize) {\n            nativeConvolverNodeFaker.normalize = !disableNormalization;\n        }\n        if (buffer !== nativeConvolverNodeFaker.buffer) {\n            nativeConvolverNodeFaker.buffer = buffer;\n        }\n        const whenConnected = () => convolverNode.connect(gainNode);\n        const whenDisconnected = () => convolverNode.disconnect(gainNode);\n        return monitorConnections(interceptConnections(nativeConvolverNodeFaker, gainNode), whenConnected, whenDisconnected);\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/native-convolver-node-faker-factory.js.map","import { assignNativeAudioNodeOption } from '../helpers/assign-native-audio-node-option';\nimport { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nexport const createNativeConvolverNodeFactory = (createNativeAudioNode, createNativeConvolverNodeFaker, createNotSupportedError, overwriteAccessors) => {\n    return (nativeContext, options) => {\n        const nativeConvolverNode = createNativeAudioNode(nativeContext, (ntvCntxt) => ntvCntxt.createConvolver());\n        try {\n            // Bug #166: Chrome & Opera do not allow yet to set the channelCount to 1.\n            nativeConvolverNode.channelCount = 1;\n        }\n        catch (err) {\n            return createNativeConvolverNodeFaker(nativeContext, options);\n        }\n        assignNativeAudioNodeOptions(nativeConvolverNode, options);\n        // The normalize property needs to be set before setting the buffer.\n        if (options.disableNormalization === nativeConvolverNode.normalize) {\n            nativeConvolverNode.normalize = !options.disableNormalization;\n        }\n        assignNativeAudioNodeOption(nativeConvolverNode, options, 'buffer');\n        // Bug #113: Edge & Safari allow to set the channelCount to a value larger than 2.\n        if (options.channelCount > 2) {\n            throw createNotSupportedError();\n        }\n        overwriteAccessors(nativeConvolverNode, 'channelCount', (get) => () => get.call(nativeConvolverNode), (set) => (value) => {\n            if (value > 2) {\n                throw createNotSupportedError();\n            }\n            return set.call(nativeConvolverNode, value);\n        });\n        // Bug #114: Edge & Safari allow to set the channelCountMode to 'max'.\n        if (options.channelCountMode === 'max') {\n            throw createNotSupportedError();\n        }\n        overwriteAccessors(nativeConvolverNode, 'channelCountMode', (get) => () => get.call(nativeConvolverNode), (set) => (value) => {\n            if (value === 'max') {\n                throw createNotSupportedError();\n            }\n            return set.call(nativeConvolverNode, value);\n        });\n        return nativeConvolverNode;\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/native-convolver-node-factory.js.map","import { isNativeAudioNodeFaker } from '../guards/native-audio-node-faker';\nimport { isOwnedByContext } from '../helpers/is-owned-by-context';\nexport const createConvolverNodeRendererFactory = (createNativeConvolverNode, getNativeAudioNode, renderInputsOfAudioNode) => {\n    return () => {\n        const renderedNativeConvolverNodes = new WeakMap();\n        const createConvolverNode = async (proxy, nativeOfflineAudioContext, trace) => {\n            let nativeConvolverNode = getNativeAudioNode(proxy);\n            // If the initially used nativeConvolverNode was not constructed on the same OfflineAudioContext it needs to be created again.\n            const nativeConvolverNodeIsOwnedByContext = isOwnedByContext(nativeConvolverNode, nativeOfflineAudioContext);\n            if (!nativeConvolverNodeIsOwnedByContext) {\n                const options = {\n                    buffer: nativeConvolverNode.buffer,\n                    channelCount: nativeConvolverNode.channelCount,\n                    channelCountMode: nativeConvolverNode.channelCountMode,\n                    channelInterpretation: nativeConvolverNode.channelInterpretation,\n                    disableNormalization: !nativeConvolverNode.normalize\n                };\n                nativeConvolverNode = createNativeConvolverNode(nativeOfflineAudioContext, options);\n            }\n            renderedNativeConvolverNodes.set(nativeOfflineAudioContext, nativeConvolverNode);\n            if (isNativeAudioNodeFaker(nativeConvolverNode)) {\n                await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeConvolverNode.inputs[0], trace);\n            }\n            else {\n                await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeConvolverNode, trace);\n            }\n            return nativeConvolverNode;\n        };\n        return {\n            render(proxy, nativeOfflineAudioContext, trace) {\n                const renderedNativeConvolverNode = renderedNativeConvolverNodes.get(nativeOfflineAudioContext);\n                if (renderedNativeConvolverNode !== undefined) {\n                    return Promise.resolve(renderedNativeConvolverNode);\n                }\n                return createConvolverNode(proxy, nativeOfflineAudioContext, trace);\n            }\n        };\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/convolver-node-renderer-factory.js.map","import { assignNativeAudioNodeAudioParamValue } from '../helpers/assign-native-audio-node-audio-param-value';\nimport { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nexport const createNativeDelayNodeFactory = (createNativeAudioNode) => {\n    return (nativeContext, options) => {\n        const nativeDelayNode = createNativeAudioNode(nativeContext, (ntvCntxt) => ntvCntxt.createDelay(options.maxDelayTime));\n        assignNativeAudioNodeOptions(nativeDelayNode, options);\n        assignNativeAudioNodeAudioParamValue(nativeDelayNode, options, 'delayTime');\n        return nativeDelayNode;\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/native-delay-node-factory.js.map","import { isOwnedByContext } from '../helpers/is-owned-by-context';\nexport const createDelayNodeRendererFactory = (connectAudioParam, createNativeDelayNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode) => {\n    return (maxDelayTime) => {\n        const renderedNativeDelayNodes = new WeakMap();\n        const createDelayNode = async (proxy, nativeOfflineAudioContext, trace) => {\n            let nativeDelayNode = getNativeAudioNode(proxy);\n            // If the initially used nativeDelayNode was not constructed on the same OfflineAudioContext it needs to be created again.\n            const nativeDelayNodeIsOwnedByContext = isOwnedByContext(nativeDelayNode, nativeOfflineAudioContext);\n            if (!nativeDelayNodeIsOwnedByContext) {\n                const options = {\n                    channelCount: nativeDelayNode.channelCount,\n                    channelCountMode: nativeDelayNode.channelCountMode,\n                    channelInterpretation: nativeDelayNode.channelInterpretation,\n                    delayTime: nativeDelayNode.delayTime.value,\n                    maxDelayTime\n                };\n                nativeDelayNode = createNativeDelayNode(nativeOfflineAudioContext, options);\n            }\n            renderedNativeDelayNodes.set(nativeOfflineAudioContext, nativeDelayNode);\n            if (!nativeDelayNodeIsOwnedByContext) {\n                await renderAutomation(nativeOfflineAudioContext, proxy.delayTime, nativeDelayNode.delayTime, trace);\n            }\n            else {\n                await connectAudioParam(nativeOfflineAudioContext, proxy.delayTime, nativeDelayNode.delayTime, trace);\n            }\n            await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeDelayNode, trace);\n            return nativeDelayNode;\n        };\n        return {\n            render(proxy, nativeOfflineAudioContext, trace) {\n                const renderedNativeDelayNode = renderedNativeDelayNodes.get(nativeOfflineAudioContext);\n                if (renderedNativeDelayNode !== undefined) {\n                    return Promise.resolve(renderedNativeDelayNode);\n                }\n                return createDelayNode(proxy, nativeOfflineAudioContext, trace);\n            }\n        };\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/delay-node-renderer-factory.js.map","import { assignNativeAudioNodeAudioParamValue } from '../helpers/assign-native-audio-node-audio-param-value';\nimport { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nexport const createNativeDynamicsCompressorNodeFactory = (createNativeAudioNode, createNotSupportedError) => {\n    return (nativeContext, options) => {\n        const nativeDynamicsCompressorNode = createNativeAudioNode(nativeContext, (ntvCntxt) => ntvCntxt.createDynamicsCompressor());\n        assignNativeAudioNodeOptions(nativeDynamicsCompressorNode, options);\n        // Bug #108: Only Chrome, Firefox and Opera disallow a channelCount of three and above yet.\n        if (options.channelCount > 2) {\n            throw createNotSupportedError();\n        }\n        // Bug #109: Only Chrome, Firefox and Opera disallow a channelCountMode of 'max'.\n        if (options.channelCountMode === 'max') {\n            throw createNotSupportedError();\n        }\n        assignNativeAudioNodeAudioParamValue(nativeDynamicsCompressorNode, options, 'attack');\n        assignNativeAudioNodeAudioParamValue(nativeDynamicsCompressorNode, options, 'knee');\n        assignNativeAudioNodeAudioParamValue(nativeDynamicsCompressorNode, options, 'ratio');\n        assignNativeAudioNodeAudioParamValue(nativeDynamicsCompressorNode, options, 'release');\n        assignNativeAudioNodeAudioParamValue(nativeDynamicsCompressorNode, options, 'threshold');\n        return nativeDynamicsCompressorNode;\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/native-dynamics-compressor-node-factory.js.map","import { isOwnedByContext } from '../helpers/is-owned-by-context';\nexport const createDynamicsCompressorNodeRendererFactory = (connectAudioParam, createNativeDynamicsCompressorNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode) => {\n    return () => {\n        const renderedNativeDynamicsCompressorNodes = new WeakMap();\n        const createDynamicsCompressorNode = async (proxy, nativeOfflineAudioContext, trace) => {\n            let nativeDynamicsCompressorNode = getNativeAudioNode(proxy);\n            /*\n             * If the initially used nativeDynamicsCompressorNode was not constructed on the same OfflineAudioContext it needs to be\n             * created again.\n             */\n            const nativeDynamicsCompressorNodeIsOwnedByContext = isOwnedByContext(nativeDynamicsCompressorNode, nativeOfflineAudioContext);\n            if (!nativeDynamicsCompressorNodeIsOwnedByContext) {\n                const options = {\n                    attack: nativeDynamicsCompressorNode.attack.value,\n                    channelCount: nativeDynamicsCompressorNode.channelCount,\n                    channelCountMode: nativeDynamicsCompressorNode.channelCountMode,\n                    channelInterpretation: nativeDynamicsCompressorNode.channelInterpretation,\n                    knee: nativeDynamicsCompressorNode.knee.value,\n                    ratio: nativeDynamicsCompressorNode.ratio.value,\n                    release: nativeDynamicsCompressorNode.release.value,\n                    threshold: nativeDynamicsCompressorNode.threshold.value\n                };\n                nativeDynamicsCompressorNode = createNativeDynamicsCompressorNode(nativeOfflineAudioContext, options);\n            }\n            renderedNativeDynamicsCompressorNodes.set(nativeOfflineAudioContext, nativeDynamicsCompressorNode);\n            if (!nativeDynamicsCompressorNodeIsOwnedByContext) {\n                await renderAutomation(nativeOfflineAudioContext, proxy.attack, nativeDynamicsCompressorNode.attack, trace);\n                await renderAutomation(nativeOfflineAudioContext, proxy.knee, nativeDynamicsCompressorNode.knee, trace);\n                await renderAutomation(nativeOfflineAudioContext, proxy.ratio, nativeDynamicsCompressorNode.ratio, trace);\n                await renderAutomation(nativeOfflineAudioContext, proxy.release, nativeDynamicsCompressorNode.release, trace);\n                await renderAutomation(nativeOfflineAudioContext, proxy.threshold, nativeDynamicsCompressorNode.threshold, trace);\n            }\n            else {\n                await connectAudioParam(nativeOfflineAudioContext, proxy.attack, nativeDynamicsCompressorNode.attack, trace);\n                await connectAudioParam(nativeOfflineAudioContext, proxy.knee, nativeDynamicsCompressorNode.knee, trace);\n                await connectAudioParam(nativeOfflineAudioContext, proxy.ratio, nativeDynamicsCompressorNode.ratio, trace);\n                await connectAudioParam(nativeOfflineAudioContext, proxy.release, nativeDynamicsCompressorNode.release, trace);\n                await connectAudioParam(nativeOfflineAudioContext, proxy.threshold, nativeDynamicsCompressorNode.threshold, trace);\n            }\n            await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeDynamicsCompressorNode, trace);\n            return nativeDynamicsCompressorNode;\n        };\n        return {\n            render(proxy, nativeOfflineAudioContext, trace) {\n                const renderedNativeDynamicsCompressorNode = renderedNativeDynamicsCompressorNodes.get(nativeOfflineAudioContext);\n                if (renderedNativeDynamicsCompressorNode !== undefined) {\n                    return Promise.resolve(renderedNativeDynamicsCompressorNode);\n                }\n                return createDynamicsCompressorNode(proxy, nativeOfflineAudioContext, trace);\n            }\n        };\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/dynamics-compressor-node-renderer-factory.js.map","import { isOwnedByContext } from '../helpers/is-owned-by-context';\nexport const createGainNodeRendererFactory = (connectAudioParam, createNativeGainNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode) => {\n    return () => {\n        const renderedNativeGainNodes = new WeakMap();\n        const createGainNode = async (proxy, nativeOfflineAudioContext, trace) => {\n            let nativeGainNode = getNativeAudioNode(proxy);\n            // If the initially used nativeGainNode was not constructed on the same OfflineAudioContext it needs to be created again.\n            const nativeGainNodeIsOwnedByContext = isOwnedByContext(nativeGainNode, nativeOfflineAudioContext);\n            if (!nativeGainNodeIsOwnedByContext) {\n                const options = {\n                    channelCount: nativeGainNode.channelCount,\n                    channelCountMode: nativeGainNode.channelCountMode,\n                    channelInterpretation: nativeGainNode.channelInterpretation,\n                    gain: nativeGainNode.gain.value\n                };\n                nativeGainNode = createNativeGainNode(nativeOfflineAudioContext, options);\n            }\n            renderedNativeGainNodes.set(nativeOfflineAudioContext, nativeGainNode);\n            if (!nativeGainNodeIsOwnedByContext) {\n                await renderAutomation(nativeOfflineAudioContext, proxy.gain, nativeGainNode.gain, trace);\n            }\n            else {\n                await connectAudioParam(nativeOfflineAudioContext, proxy.gain, nativeGainNode.gain, trace);\n            }\n            await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeGainNode, trace);\n            return nativeGainNode;\n        };\n        return {\n            render(proxy, nativeOfflineAudioContext, trace) {\n                const renderedNativeGainNode = renderedNativeGainNodes.get(nativeOfflineAudioContext);\n                if (renderedNativeGainNode !== undefined) {\n                    return Promise.resolve(renderedNativeGainNode);\n                }\n                return createGainNode(proxy, nativeOfflineAudioContext, trace);\n            }\n        };\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/gain-node-renderer-factory.js.map","export const createNativeScriptProcessorNodeFactory = (createNativeAudioNode) => {\n    return (nativeContext, bufferSize, numberOfInputChannels, numberOfOutputChannels) => {\n        return createNativeAudioNode(nativeContext, (ntvCntxt) => {\n            return ntvCntxt.createScriptProcessor(bufferSize, numberOfInputChannels, numberOfOutputChannels);\n        });\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/native-script-processor-node-factory.js.map","import { testPromiseSupport } from '../helpers/test-promise-support';\nexport const createRenderNativeOfflineAudioContext = (cacheTestResult, createNativeGainNode, createNativeScriptProcessorNode, testOfflineAudioContextCurrentTimeSupport) => {\n    return (nativeOfflineAudioContext) => {\n        // Bug #21: Safari does not support promises yet.\n        if (cacheTestResult(testPromiseSupport, () => testPromiseSupport(nativeOfflineAudioContext))) {\n            // Bug #158: Edge does not advance currentTime if it is not accessed while rendering the audio.\n            return Promise\n                .resolve(cacheTestResult(testOfflineAudioContextCurrentTimeSupport, testOfflineAudioContextCurrentTimeSupport))\n                .then((isOfflineAudioContextCurrentTimeSupported) => {\n                if (!isOfflineAudioContextCurrentTimeSupported) {\n                    const scriptProcessorNode = createNativeScriptProcessorNode(nativeOfflineAudioContext, 512, 0, 1);\n                    nativeOfflineAudioContext.oncomplete = () => {\n                        scriptProcessorNode.onaudioprocess = null; // tslint:disable-line:deprecation\n                        scriptProcessorNode.disconnect();\n                    };\n                    scriptProcessorNode.onaudioprocess = () => nativeOfflineAudioContext.currentTime; // tslint:disable-line:deprecation\n                    scriptProcessorNode.connect(nativeOfflineAudioContext.destination);\n                }\n                return nativeOfflineAudioContext.startRendering();\n            });\n        }\n        return new Promise((resolve) => {\n            // Bug #48: Safari does not render an OfflineAudioContext without any connected node.\n            const gainNode = createNativeGainNode(nativeOfflineAudioContext, {\n                channelCount: 1,\n                channelCountMode: 'explicit',\n                channelInterpretation: 'discrete',\n                gain: 0\n            });\n            nativeOfflineAudioContext.oncomplete = (event) => {\n                gainNode.disconnect();\n                resolve(event.renderedBuffer);\n            };\n            gainNode.connect(nativeOfflineAudioContext.destination);\n            nativeOfflineAudioContext.startRendering();\n        });\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/render-native-offline-audio-context.js.map","export const createTestOfflineAudioContextCurrentTimeSupport = (createNativeGainNode, nativeOfflineAudioContextConstructor) => {\n    return () => {\n        if (nativeOfflineAudioContextConstructor === null) {\n            return Promise.resolve(false);\n        }\n        const nativeOfflineAudioContext = new nativeOfflineAudioContextConstructor(1, 1, 44100);\n        // Bug #48: Safari does not render an OfflineAudioContext without any connected node.\n        const gainNode = createNativeGainNode(nativeOfflineAudioContext, {\n            channelCount: 1,\n            channelCountMode: 'explicit',\n            channelInterpretation: 'discrete',\n            gain: 0\n        });\n        // Bug #21: Safari does not support promises yet.\n        return new Promise((resolve) => {\n            nativeOfflineAudioContext.oncomplete = () => {\n                gainNode.disconnect();\n                resolve(nativeOfflineAudioContext.currentTime !== 0);\n            };\n            nativeOfflineAudioContext.startRendering();\n        });\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/test-offline-audio-context-current-time-support.js.map","import { filterBuffer } from '../helpers/filter-buffer';\nimport { isOwnedByContext } from '../helpers/is-owned-by-context';\nconst filterFullBuffer = (renderedBuffer, nativeOfflineAudioContext, feedback, feedforward) => {\n    const feedbackLength = feedback.length;\n    const feedforwardLength = feedforward.length;\n    const minLength = Math.min(feedbackLength, feedforwardLength);\n    if (feedback[0] !== 1) {\n        for (let i = 0; i < feedbackLength; i += 1) {\n            feedforward[i] /= feedback[0];\n        }\n        for (let i = 1; i < feedforwardLength; i += 1) {\n            feedback[i] /= feedback[0];\n        }\n    }\n    const bufferLength = 32;\n    const xBuffer = new Float32Array(bufferLength);\n    const yBuffer = new Float32Array(bufferLength);\n    const filteredBuffer = nativeOfflineAudioContext.createBuffer(renderedBuffer.numberOfChannels, renderedBuffer.length, renderedBuffer.sampleRate);\n    const numberOfChannels = renderedBuffer.numberOfChannels;\n    for (let i = 0; i < numberOfChannels; i += 1) {\n        const input = renderedBuffer.getChannelData(i);\n        const output = filteredBuffer.getChannelData(i);\n        xBuffer.fill(0);\n        yBuffer.fill(0);\n        filterBuffer(feedback, feedbackLength, feedforward, feedforwardLength, minLength, xBuffer, yBuffer, 0, bufferLength, input, output);\n    }\n    return filteredBuffer;\n};\nexport const createIIRFilterNodeRendererFactory = (createNativeAudioBufferSourceNode, createNativeAudioNode, getNativeAudioNode, nativeOfflineAudioContextConstructor, renderInputsOfAudioNode, renderNativeOfflineAudioContext) => {\n    return (feedback, feedforward) => {\n        const renderedNativeAudioNodes = new WeakMap();\n        let filteredBufferPromise = null;\n        const createAudioNode = async (proxy, nativeOfflineAudioContext, trace) => {\n            let nativeAudioBufferSourceNode = null;\n            let nativeIIRFilterNode = getNativeAudioNode(proxy);\n            // If the initially used nativeIIRFilterNode was not constructed on the same OfflineAudioContext it needs to be created again.\n            const nativeIIRFilterNodeIsOwnedByContext = isOwnedByContext(nativeIIRFilterNode, nativeOfflineAudioContext);\n            // Bug #9: Safari does not support IIRFilterNodes.\n            if (nativeOfflineAudioContext.createIIRFilter === undefined) {\n                nativeAudioBufferSourceNode = createNativeAudioBufferSourceNode(nativeOfflineAudioContext);\n            }\n            else if (!nativeIIRFilterNodeIsOwnedByContext) {\n                nativeIIRFilterNode = createNativeAudioNode(nativeOfflineAudioContext, (ntvCntxt) => {\n                    return ntvCntxt.createIIRFilter(feedforward, feedback);\n                });\n            }\n            renderedNativeAudioNodes.set(nativeOfflineAudioContext, (nativeAudioBufferSourceNode === null) ? nativeIIRFilterNode : nativeAudioBufferSourceNode);\n            if (nativeAudioBufferSourceNode !== null) {\n                if (filteredBufferPromise === null) {\n                    if (nativeOfflineAudioContextConstructor === null) {\n                        throw new Error('Missing the native OfflineAudioContext constructor.');\n                    }\n                    const partialOfflineAudioContext = new nativeOfflineAudioContextConstructor(\n                    // Bug #47: The AudioDestinationNode in Edge and Safari gets not initialized correctly.\n                    proxy.context.destination.channelCount, \n                    // Bug #17: Safari does not yet expose the length.\n                    proxy.context.length, nativeOfflineAudioContext.sampleRate);\n                    filteredBufferPromise = (async () => {\n                        await renderInputsOfAudioNode(proxy, partialOfflineAudioContext, partialOfflineAudioContext.destination, trace);\n                        const renderedBuffer = await renderNativeOfflineAudioContext(partialOfflineAudioContext);\n                        return filterFullBuffer(renderedBuffer, nativeOfflineAudioContext, feedback, feedforward);\n                    })();\n                }\n                const filteredBuffer = await filteredBufferPromise;\n                nativeAudioBufferSourceNode.buffer = filteredBuffer;\n                nativeAudioBufferSourceNode.start(0);\n                return nativeAudioBufferSourceNode;\n            }\n            await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeIIRFilterNode, trace);\n            return nativeIIRFilterNode;\n        };\n        return {\n            render(proxy, nativeOfflineAudioContext, trace) {\n                const renderedNativeAudioNode = renderedNativeAudioNodes.get(nativeOfflineAudioContext);\n                if (renderedNativeAudioNode !== undefined) {\n                    return Promise.resolve(renderedNativeAudioNode);\n                }\n                return createAudioNode(proxy, nativeOfflineAudioContext, trace);\n            }\n        };\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/iir-filter-node-renderer-factory.js.map","import { createInvalidAccessError } from '../factories/invalid-access-error';\nexport const wrapIIRFilterNodeGetFrequencyResponseMethod = (nativeIIRFilterNode) => {\n    nativeIIRFilterNode.getFrequencyResponse = ((getFrequencyResponse) => {\n        return (frequencyHz, magResponse, phaseResponse) => {\n            if ((frequencyHz.length !== magResponse.length) || (magResponse.length !== phaseResponse.length)) {\n                throw createInvalidAccessError();\n            }\n            return getFrequencyResponse.call(nativeIIRFilterNode, frequencyHz, magResponse, phaseResponse);\n        };\n    })(nativeIIRFilterNode.getFrequencyResponse);\n};\n//# sourceMappingURL=/build/es2019/helpers/wrap-iir-filter-node-get-frequency-response-method.js.map","import { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nexport const createNativeIIRFilterNodeFactory = (createNativeAudioNode, createNativeIIRFilterNodeFaker) => {\n    return (nativeContext, baseLatency, options) => {\n        // Bug #9: Safari does not support IIRFilterNodes.\n        if (nativeContext.createIIRFilter === undefined) {\n            return createNativeIIRFilterNodeFaker(nativeContext, baseLatency, options);\n        }\n        const nativeIIRFilterNode = createNativeAudioNode(nativeContext, (ntvCntxt) => {\n            return ntvCntxt.createIIRFilter(options.feedforward, options.feedback);\n        });\n        assignNativeAudioNodeOptions(nativeIIRFilterNode, options);\n        return nativeIIRFilterNode;\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/native-iir-filter-node-factory.js.map","import { MOST_NEGATIVE_SINGLE_FLOAT, MOST_POSITIVE_SINGLE_FLOAT } from '../constants';\nexport const createAudioListenerFactory = (createAudioParam, createNativeChannelMergerNode, createNativeConstantSourceNode, createNativeScriptProcessorNode, isNativeOfflineAudioContext) => {\n    return (context, nativeContext) => {\n        const nativeListener = nativeContext.listener;\n        // Bug #117: Only Chrome & Opera support the new interface already.\n        const createFakeAudioParams = () => {\n            const channelMergerNode = createNativeChannelMergerNode(nativeContext, { channelCount: 1, channelCountMode: 'explicit', channelInterpretation: 'speakers', numberOfInputs: 9 });\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            const scriptProcessorNode = createNativeScriptProcessorNode(nativeContext, 256, 9, 0);\n            const createFakeAudioParam = (input, value) => {\n                const constantSourceNode = createNativeConstantSourceNode(nativeContext, { channelCount: 1, channelCountMode: 'explicit', channelInterpretation: 'discrete', offset: value });\n                constantSourceNode.connect(channelMergerNode, 0, input);\n                // @todo This should be stopped when the context is closed.\n                constantSourceNode.start();\n                Object.defineProperty(constantSourceNode.offset, 'defaultValue', {\n                    get() {\n                        return value;\n                    }\n                });\n                /*\n                 * Bug #62 & #74: Edge & Safari do not support ConstantSourceNodes and do not export the correct values for maxValue and\n                 * minValue for GainNodes.\n                 */\n                return createAudioParam({ context }, isOffline, constantSourceNode.offset, MOST_POSITIVE_SINGLE_FLOAT, MOST_NEGATIVE_SINGLE_FLOAT);\n            };\n            let lastOrientation = [0, 0, -1, 0, 1, 0];\n            let lastPosition = [0, 0, 0];\n            scriptProcessorNode.onaudioprocess = ({ inputBuffer }) => {\n                const orientation = [\n                    inputBuffer.getChannelData(0)[0],\n                    inputBuffer.getChannelData(1)[0],\n                    inputBuffer.getChannelData(2)[0],\n                    inputBuffer.getChannelData(3)[0],\n                    inputBuffer.getChannelData(4)[0],\n                    inputBuffer.getChannelData(5)[0]\n                ];\n                if (orientation.some((value, index) => (value !== lastOrientation[index]))) {\n                    nativeListener.setOrientation(...orientation); // tslint:disable-line:deprecation\n                    lastOrientation = orientation;\n                }\n                const positon = [\n                    inputBuffer.getChannelData(6)[0],\n                    inputBuffer.getChannelData(7)[0],\n                    inputBuffer.getChannelData(8)[0]\n                ];\n                if (positon.some((value, index) => (value !== lastPosition[index]))) {\n                    nativeListener.setPosition(...positon); // tslint:disable-line:deprecation\n                    lastPosition = positon;\n                }\n            };\n            channelMergerNode.connect(scriptProcessorNode);\n            return {\n                forwardX: createFakeAudioParam(0, 0),\n                forwardY: createFakeAudioParam(1, 0),\n                forwardZ: createFakeAudioParam(2, -1),\n                positionX: createFakeAudioParam(6, 0),\n                positionY: createFakeAudioParam(7, 0),\n                positionZ: createFakeAudioParam(8, 0),\n                upX: createFakeAudioParam(3, 0),\n                upY: createFakeAudioParam(4, 1),\n                upZ: createFakeAudioParam(5, 0)\n            };\n        };\n        const { forwardX, forwardY, forwardZ, positionX, positionY, positionZ, upX, upY, upZ } = (nativeListener.forwardX === undefined)\n            ? createFakeAudioParams()\n            : nativeListener;\n        return {\n            get forwardX() {\n                return forwardX;\n            },\n            get forwardY() {\n                return forwardY;\n            },\n            get forwardZ() {\n                return forwardZ;\n            },\n            get positionX() {\n                return positionX;\n            },\n            get positionY() {\n                return positionY;\n            },\n            get positionZ() {\n                return positionZ;\n            },\n            get upX() {\n                return upX;\n            },\n            get upY() {\n                return upY;\n            },\n            get upZ() {\n                return upZ;\n            }\n        };\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/audio-listener-factory.js.map","import { CONTEXT_STORE } from '../globals';\nexport const createMinimalBaseAudioContextConstructor = (audioDestinationNodeConstructor, createAudioListener, eventTargetConstructor, isNativeOfflineAudioContext, unrenderedAudioWorkletNodeStore, wrapEventListener) => {\n    return class MinimalBaseAudioContext extends eventTargetConstructor {\n        constructor(_nativeContext, numberOfChannels) {\n            super(_nativeContext);\n            this._nativeContext = _nativeContext;\n            CONTEXT_STORE.set(this, _nativeContext);\n            // Bug #93: Edge will set the sampleRate of an AudioContext to zero when it is closed.\n            const sampleRate = _nativeContext.sampleRate;\n            Object.defineProperty(_nativeContext, 'sampleRate', {\n                get: () => sampleRate\n            });\n            if (isNativeOfflineAudioContext(_nativeContext)) {\n                unrenderedAudioWorkletNodeStore.set(_nativeContext, new Set());\n            }\n            this._destination = new audioDestinationNodeConstructor(this, numberOfChannels);\n            this._listener = createAudioListener(this, _nativeContext);\n            this._onstatechange = null;\n        }\n        get currentTime() {\n            return this._nativeContext.currentTime;\n        }\n        get destination() {\n            return this._destination;\n        }\n        get listener() {\n            return this._listener;\n        }\n        get onstatechange() {\n            return this._onstatechange;\n        }\n        set onstatechange(value) {\n            const wrappedListener = (typeof value === 'function') ? wrapEventListener(this, value) : null;\n            this._nativeContext.onstatechange = wrappedListener;\n            const nativeOnStateChange = this._nativeContext.onstatechange;\n            this._onstatechange = (nativeOnStateChange !== null && nativeOnStateChange === wrappedListener)\n                ? value\n                : nativeOnStateChange;\n        }\n        get sampleRate() {\n            return this._nativeContext.sampleRate;\n        }\n        get state() {\n            return this._nativeContext.state;\n        }\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/minimal-base-audio-context-constructor.js.map","import { assignNativeAudioNodeAudioParamValue } from '../helpers/assign-native-audio-node-audio-param-value';\nimport { assignNativeAudioNodeOption } from '../helpers/assign-native-audio-node-option';\nimport { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nimport { wrapAudioScheduledSourceNodeStartMethodNegativeParameters } from '../helpers/wrap-audio-scheduled-source-node-start-method-negative-parameters';\nimport { wrapAudioScheduledSourceNodeStopMethodNegativeParameters } from '../helpers/wrap-audio-scheduled-source-node-stop-method-negative-parameters';\nexport const createNativeOscillatorNodeFactory = (cacheTestResult, createNativeAudioNode, testAudioScheduledSourceNodeStartMethodNegativeParametersSupport, testAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport, testAudioScheduledSourceNodeStopMethodNegativeParametersSupport, wrapAudioScheduledSourceNodeStopMethodConsecutiveCalls) => {\n    return (nativeContext, options) => {\n        const nativeOscillatorNode = createNativeAudioNode(nativeContext, (ntvCntxt) => ntvCntxt.createOscillator());\n        assignNativeAudioNodeOptions(nativeOscillatorNode, options);\n        assignNativeAudioNodeAudioParamValue(nativeOscillatorNode, options, 'detune');\n        assignNativeAudioNodeAudioParamValue(nativeOscillatorNode, options, 'frequency');\n        if (options.periodicWave !== undefined) {\n            nativeOscillatorNode.setPeriodicWave(options.periodicWave);\n        }\n        else {\n            assignNativeAudioNodeOption(nativeOscillatorNode, options, 'type');\n        }\n        // Bug #44: Only Chrome & Opera throw a RangeError yet.\n        if (!cacheTestResult(testAudioScheduledSourceNodeStartMethodNegativeParametersSupport, () => testAudioScheduledSourceNodeStartMethodNegativeParametersSupport(nativeContext))) {\n            wrapAudioScheduledSourceNodeStartMethodNegativeParameters(nativeOscillatorNode);\n        }\n        // Bug #19: Safari does not ignore calls to stop() of an already stopped AudioBufferSourceNode.\n        if (!cacheTestResult(testAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport, () => testAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport(nativeContext))) {\n            wrapAudioScheduledSourceNodeStopMethodConsecutiveCalls(nativeOscillatorNode, nativeContext);\n        }\n        // Bug #44: Only Firefox does not throw a RangeError yet.\n        if (!cacheTestResult(testAudioScheduledSourceNodeStopMethodNegativeParametersSupport, () => testAudioScheduledSourceNodeStopMethodNegativeParametersSupport(nativeContext))) {\n            wrapAudioScheduledSourceNodeStopMethodNegativeParameters(nativeOscillatorNode);\n        }\n        return nativeOscillatorNode;\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/native-oscillator-node-factory.js.map","import { isOwnedByContext } from '../helpers/is-owned-by-context';\nexport const createOscillatorNodeRendererFactory = (connectAudioParam, createNativeOscillatorNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode) => {\n    return () => {\n        const renderedNativeOscillatorNodes = new WeakMap();\n        let periodicWave = null;\n        let start = null;\n        let stop = null;\n        const createOscillatorNode = async (proxy, nativeOfflineAudioContext, trace) => {\n            let nativeOscillatorNode = getNativeAudioNode(proxy);\n            // If the initially used nativeOscillatorNode was not constructed on the same OfflineAudioContext it needs to be created again.\n            const nativeOscillatorNodeIsOwnedByContext = isOwnedByContext(nativeOscillatorNode, nativeOfflineAudioContext);\n            if (!nativeOscillatorNodeIsOwnedByContext) {\n                const options = {\n                    channelCount: nativeOscillatorNode.channelCount,\n                    channelCountMode: nativeOscillatorNode.channelCountMode,\n                    channelInterpretation: nativeOscillatorNode.channelInterpretation,\n                    detune: nativeOscillatorNode.detune.value,\n                    frequency: nativeOscillatorNode.frequency.value,\n                    periodicWave: (periodicWave === null) ? undefined : periodicWave,\n                    type: nativeOscillatorNode.type\n                };\n                nativeOscillatorNode = createNativeOscillatorNode(nativeOfflineAudioContext, options);\n                if (start !== null) {\n                    nativeOscillatorNode.start(start);\n                }\n                if (stop !== null) {\n                    nativeOscillatorNode.stop(stop);\n                }\n            }\n            renderedNativeOscillatorNodes.set(nativeOfflineAudioContext, nativeOscillatorNode);\n            if (!nativeOscillatorNodeIsOwnedByContext) {\n                await renderAutomation(nativeOfflineAudioContext, proxy.detune, nativeOscillatorNode.detune, trace);\n                await renderAutomation(nativeOfflineAudioContext, proxy.frequency, nativeOscillatorNode.frequency, trace);\n            }\n            else {\n                await connectAudioParam(nativeOfflineAudioContext, proxy.detune, nativeOscillatorNode.detune, trace);\n                await connectAudioParam(nativeOfflineAudioContext, proxy.frequency, nativeOscillatorNode.frequency, trace);\n            }\n            await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeOscillatorNode, trace);\n            return nativeOscillatorNode;\n        };\n        return {\n            set periodicWave(value) {\n                periodicWave = value;\n            },\n            set start(value) {\n                start = value;\n            },\n            set stop(value) {\n                stop = value;\n            },\n            render(proxy, nativeOfflineAudioContext, trace) {\n                const renderedNativeOscillatorNode = renderedNativeOscillatorNodes.get(nativeOfflineAudioContext);\n                if (renderedNativeOscillatorNode !== undefined) {\n                    return Promise.resolve(renderedNativeOscillatorNode);\n                }\n                return createOscillatorNode(proxy, nativeOfflineAudioContext, trace);\n            }\n        };\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/oscillator-node-renderer-factory.js.map","export const createConnectedNativeAudioBufferSourceNodeFactory = (createNativeAudioBufferSourceNode) => {\n    return (nativeContext, nativeAudioNode) => {\n        const nativeAudioBufferSourceNode = createNativeAudioBufferSourceNode(nativeContext);\n        const nativeAudioBuffer = nativeContext.createBuffer(1, 2, nativeContext.sampleRate);\n        nativeAudioBufferSourceNode.buffer = nativeAudioBuffer;\n        nativeAudioBufferSourceNode.loop = true;\n        nativeAudioBufferSourceNode.connect(nativeAudioNode);\n        nativeAudioBufferSourceNode.start();\n        return () => {\n            nativeAudioBufferSourceNode.stop();\n            nativeAudioBufferSourceNode.disconnect(nativeAudioNode);\n        };\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/connected-native-audio-buffer-source-node-factory.js.map","import { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nimport { interceptConnections } from '../helpers/intercept-connections';\nexport const createNativeWaveShaperNodeFakerFactory = (createConnectedNativeAudioBufferSourceNode, createInvalidStateError, createNativeAudioNode, createNativeGainNode, isDCCurve, monitorConnections) => {\n    return (nativeContext, { curve, oversample, ...audioNodeOptions }) => {\n        const negativeWaveShaperNode = createNativeAudioNode(nativeContext, (ntvCntxt) => ntvCntxt.createWaveShaper());\n        const positiveWaveShaperNode = createNativeAudioNode(nativeContext, (ntvCntxt) => ntvCntxt.createWaveShaper());\n        assignNativeAudioNodeOptions(negativeWaveShaperNode, audioNodeOptions);\n        assignNativeAudioNodeOptions(positiveWaveShaperNode, audioNodeOptions);\n        const inputGainNode = createNativeGainNode(nativeContext, { ...audioNodeOptions, gain: 1 });\n        const invertGainNode = createNativeGainNode(nativeContext, { ...audioNodeOptions, gain: -1 });\n        const outputGainNode = createNativeGainNode(nativeContext, { ...audioNodeOptions, gain: 1 });\n        const revertGainNode = createNativeGainNode(nativeContext, { ...audioNodeOptions, gain: -1 });\n        let disconnectNativeAudioBufferSourceNode = null;\n        let isConnected = false;\n        let unmodifiedCurve = null;\n        const nativeWaveShaperNodeFaker = {\n            get bufferSize() {\n                return undefined;\n            },\n            get channelCount() {\n                return negativeWaveShaperNode.channelCount;\n            },\n            set channelCount(value) {\n                inputGainNode.channelCount = value;\n                invertGainNode.channelCount = value;\n                negativeWaveShaperNode.channelCount = value;\n                outputGainNode.channelCount = value;\n                positiveWaveShaperNode.channelCount = value;\n                revertGainNode.channelCount = value;\n            },\n            get channelCountMode() {\n                return negativeWaveShaperNode.channelCountMode;\n            },\n            set channelCountMode(value) {\n                inputGainNode.channelCountMode = value;\n                invertGainNode.channelCountMode = value;\n                negativeWaveShaperNode.channelCountMode = value;\n                outputGainNode.channelCountMode = value;\n                positiveWaveShaperNode.channelCountMode = value;\n                revertGainNode.channelCountMode = value;\n            },\n            get channelInterpretation() {\n                return negativeWaveShaperNode.channelInterpretation;\n            },\n            set channelInterpretation(value) {\n                inputGainNode.channelInterpretation = value;\n                invertGainNode.channelInterpretation = value;\n                negativeWaveShaperNode.channelInterpretation = value;\n                outputGainNode.channelInterpretation = value;\n                positiveWaveShaperNode.channelInterpretation = value;\n                revertGainNode.channelInterpretation = value;\n            },\n            get context() {\n                return negativeWaveShaperNode.context;\n            },\n            get curve() {\n                return unmodifiedCurve;\n            },\n            set curve(value) {\n                // Bug #102: Safari does not throw an InvalidStateError when the curve has less than two samples.\n                if (curve !== null && curve.length < 2) {\n                    throw createInvalidStateError();\n                }\n                if (value === null) {\n                    negativeWaveShaperNode.curve = value;\n                    positiveWaveShaperNode.curve = value;\n                }\n                else {\n                    const curveLength = value.length;\n                    const negativeCurve = new Float32Array(curveLength + 2 - (curveLength % 2));\n                    const positiveCurve = new Float32Array(curveLength + 2 - (curveLength % 2));\n                    negativeCurve[0] = value[0];\n                    positiveCurve[0] = -value[curveLength - 1];\n                    const length = Math.ceil((curveLength + 1) / 2);\n                    const centerIndex = ((curveLength + 1) / 2) - 1;\n                    for (let i = 1; i < length; i += 1) {\n                        const theoreticIndex = (i / length) * centerIndex;\n                        const lowerIndex = Math.floor(theoreticIndex);\n                        const upperIndex = Math.ceil(theoreticIndex);\n                        negativeCurve[i] = (lowerIndex === upperIndex)\n                            ? value[lowerIndex]\n                            : ((1 - (theoreticIndex - lowerIndex)) * value[lowerIndex])\n                                + ((1 - (upperIndex - theoreticIndex)) * value[upperIndex]);\n                        positiveCurve[i] = (lowerIndex === upperIndex)\n                            ? -value[curveLength - 1 - lowerIndex]\n                            : -((1 - (theoreticIndex - lowerIndex)) * value[curveLength - 1 - lowerIndex])\n                                - ((1 - (upperIndex - theoreticIndex)) * value[curveLength - 1 - upperIndex]);\n                    }\n                    negativeCurve[length] = (curveLength % 2 === 1) ? value[length - 1] : (value[length - 2] + value[length - 1]) / 2;\n                    negativeWaveShaperNode.curve = negativeCurve;\n                    positiveWaveShaperNode.curve = positiveCurve;\n                }\n                unmodifiedCurve = value;\n                if (isConnected) {\n                    if (isDCCurve(unmodifiedCurve) && disconnectNativeAudioBufferSourceNode === null) {\n                        disconnectNativeAudioBufferSourceNode = createConnectedNativeAudioBufferSourceNode(nativeContext, inputGainNode);\n                    }\n                    else if (disconnectNativeAudioBufferSourceNode !== null) {\n                        disconnectNativeAudioBufferSourceNode();\n                        disconnectNativeAudioBufferSourceNode = null;\n                    }\n                }\n            },\n            get inputs() {\n                return [inputGainNode];\n            },\n            get numberOfInputs() {\n                return negativeWaveShaperNode.numberOfInputs;\n            },\n            get numberOfOutputs() {\n                return negativeWaveShaperNode.numberOfOutputs;\n            },\n            get oversample() {\n                return negativeWaveShaperNode.oversample;\n            },\n            set oversample(value) {\n                negativeWaveShaperNode.oversample = value;\n                positiveWaveShaperNode.oversample = value;\n            },\n            addEventListener(...args) {\n                return inputGainNode.addEventListener(args[0], args[1], args[2]);\n            },\n            dispatchEvent(...args) {\n                return inputGainNode.dispatchEvent(args[0]);\n            },\n            removeEventListener(...args) {\n                return inputGainNode.removeEventListener(args[0], args[1], args[2]);\n            }\n        };\n        if (curve !== nativeWaveShaperNodeFaker.curve) {\n            nativeWaveShaperNodeFaker.curve = curve;\n        }\n        if (oversample !== nativeWaveShaperNodeFaker.oversample) {\n            nativeWaveShaperNodeFaker.oversample = oversample;\n        }\n        const whenConnected = () => {\n            inputGainNode\n                .connect(negativeWaveShaperNode)\n                .connect(outputGainNode);\n            inputGainNode\n                .connect(invertGainNode)\n                .connect(positiveWaveShaperNode)\n                .connect(revertGainNode)\n                .connect(outputGainNode);\n            isConnected = true;\n            if (isDCCurve(unmodifiedCurve)) {\n                disconnectNativeAudioBufferSourceNode = createConnectedNativeAudioBufferSourceNode(nativeContext, inputGainNode);\n            }\n        };\n        const whenDisconnected = () => {\n            inputGainNode.disconnect(negativeWaveShaperNode);\n            negativeWaveShaperNode.disconnect(outputGainNode);\n            inputGainNode.disconnect(invertGainNode);\n            invertGainNode.disconnect(positiveWaveShaperNode);\n            positiveWaveShaperNode.disconnect(revertGainNode);\n            revertGainNode.disconnect(outputGainNode);\n            isConnected = false;\n            if (disconnectNativeAudioBufferSourceNode !== null) {\n                disconnectNativeAudioBufferSourceNode();\n                disconnectNativeAudioBufferSourceNode = null;\n            }\n        };\n        return monitorConnections(interceptConnections(nativeWaveShaperNodeFaker, outputGainNode), whenConnected, whenDisconnected);\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/native-wave-shaper-node-faker-factory.js.map","import { assignNativeAudioNodeOption } from '../helpers/assign-native-audio-node-option';\nimport { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nexport const createNativeWaveShaperNodeFactory = (createConnectedNativeAudioBufferSourceNode, createInvalidStateError, createNativeAudioNode, createNativeWaveShaperNodeFaker, isDCCurve, monitorConnections, overwriteAccessors) => {\n    return (nativeContext, options) => {\n        const nativeWaveShaperNode = createNativeAudioNode(nativeContext, (ntvCntxt) => ntvCntxt.createWaveShaper());\n        try {\n            // Bug #102: Safari does not throw an InvalidStateError when the curve has less than two samples.\n            // Bug #119: Safari does not correctly map the values. Bug #102 is only used to detect Safari in this case.\n            nativeWaveShaperNode.curve = new Float32Array([1]);\n            return createNativeWaveShaperNodeFaker(nativeContext, options);\n        }\n        catch { /* Ignore errors. */ }\n        assignNativeAudioNodeOptions(nativeWaveShaperNode, options);\n        const curve = options.curve;\n        // Bug #104: Chrome will throw an InvalidAccessError when the curve has less than two samples.\n        if (curve !== null && curve.length < 2) {\n            throw createInvalidStateError();\n        }\n        assignNativeAudioNodeOption(nativeWaveShaperNode, options, 'curve');\n        assignNativeAudioNodeOption(nativeWaveShaperNode, options, 'oversample');\n        let disconnectNativeAudioBufferSourceNode = null;\n        let isConnected = false;\n        overwriteAccessors(nativeWaveShaperNode, 'curve', (get) => () => get.call(nativeWaveShaperNode), (set) => (value) => {\n            set.call(nativeWaveShaperNode, value);\n            if (isConnected) {\n                if (isDCCurve(value) && disconnectNativeAudioBufferSourceNode === null) {\n                    disconnectNativeAudioBufferSourceNode = createConnectedNativeAudioBufferSourceNode(nativeContext, nativeWaveShaperNode);\n                }\n                else if (!isDCCurve(value) && disconnectNativeAudioBufferSourceNode !== null) {\n                    disconnectNativeAudioBufferSourceNode();\n                    disconnectNativeAudioBufferSourceNode = null;\n                }\n            }\n            return value;\n        });\n        const whenConnected = () => {\n            isConnected = true;\n            if (isDCCurve(nativeWaveShaperNode.curve)) {\n                disconnectNativeAudioBufferSourceNode = createConnectedNativeAudioBufferSourceNode(nativeContext, nativeWaveShaperNode);\n            }\n        };\n        const whenDisconnected = () => {\n            isConnected = false;\n            if (disconnectNativeAudioBufferSourceNode !== null) {\n                disconnectNativeAudioBufferSourceNode();\n                disconnectNativeAudioBufferSourceNode = null;\n            }\n        };\n        return monitorConnections(nativeWaveShaperNode, whenConnected, whenDisconnected);\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/native-wave-shaper-node-factory.js.map","import { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nimport { interceptConnections } from '../helpers/intercept-connections';\nexport const createNativePannerNodeFakerFactory = (connectNativeAudioNodeToNativeAudioNode, createInvalidStateError, createNativeAudioNode, createNativeChannelMergerNode, createNativeGainNode, createNativeScriptProcessorNode, createNativeWaveShaperNode, createNotSupportedError, disconnectNativeAudioNodeFromNativeAudioNode, monitorConnections) => {\n    return (nativeContext, { coneInnerAngle, coneOuterAngle, coneOuterGain, distanceModel, maxDistance, orientationX, orientationY, orientationZ, panningModel, positionX, positionY, positionZ, refDistance, rolloffFactor, ...audioNodeOptions }) => {\n        const pannerNode = createNativeAudioNode(nativeContext, (ntvCntxt) => ntvCntxt.createPanner());\n        // Bug #125: Safari does not throw an error yet.\n        if (audioNodeOptions.channelCount > 2) {\n            throw createNotSupportedError();\n        }\n        // Bug #126: Safari does not throw an error yet.\n        if (audioNodeOptions.channelCountMode === 'max') {\n            throw createNotSupportedError();\n        }\n        assignNativeAudioNodeOptions(pannerNode, audioNodeOptions);\n        const SINGLE_CHANNEL_OPTIONS = {\n            channelCount: 1,\n            channelCountMode: 'explicit',\n            channelInterpretation: 'discrete'\n        };\n        const channelMergerNode = createNativeChannelMergerNode(nativeContext, { ...SINGLE_CHANNEL_OPTIONS, channelInterpretation: 'speakers', numberOfInputs: 6 });\n        const inputGainNode = createNativeGainNode(nativeContext, { ...audioNodeOptions, gain: 1 });\n        const orientationXGainNode = createNativeGainNode(nativeContext, { ...SINGLE_CHANNEL_OPTIONS, gain: 1 });\n        const orientationYGainNode = createNativeGainNode(nativeContext, { ...SINGLE_CHANNEL_OPTIONS, gain: 0 });\n        const orientationZGainNode = createNativeGainNode(nativeContext, { ...SINGLE_CHANNEL_OPTIONS, gain: 0 });\n        const positionXGainNode = createNativeGainNode(nativeContext, { ...SINGLE_CHANNEL_OPTIONS, gain: 0 });\n        const positionYGainNode = createNativeGainNode(nativeContext, { ...SINGLE_CHANNEL_OPTIONS, gain: 0 });\n        const positionZGainNode = createNativeGainNode(nativeContext, { ...SINGLE_CHANNEL_OPTIONS, gain: 0 });\n        const scriptProcessorNode = createNativeScriptProcessorNode(nativeContext, 256, 6, 1);\n        const waveShaperNode = createNativeWaveShaperNode(nativeContext, { ...SINGLE_CHANNEL_OPTIONS, curve: new Float32Array([1, 1]), oversample: 'none' });\n        let lastOrientation = [orientationX, orientationY, orientationZ];\n        let lastPosition = [positionX, positionY, positionZ];\n        scriptProcessorNode.onaudioprocess = ({ inputBuffer }) => {\n            const orientation = [\n                inputBuffer.getChannelData(0)[0],\n                inputBuffer.getChannelData(1)[0],\n                inputBuffer.getChannelData(2)[0]\n            ];\n            if (orientation.some((value, index) => (value !== lastOrientation[index]))) {\n                pannerNode.setOrientation(...orientation); // tslint:disable-line:deprecation\n                lastOrientation = orientation;\n            }\n            const positon = [\n                inputBuffer.getChannelData(3)[0],\n                inputBuffer.getChannelData(4)[0],\n                inputBuffer.getChannelData(5)[0]\n            ];\n            if (positon.some((value, index) => (value !== lastPosition[index]))) {\n                pannerNode.setPosition(...positon); // tslint:disable-line:deprecation\n                lastPosition = positon;\n            }\n        };\n        Object.defineProperty(orientationYGainNode.gain, 'defaultValue', { get: () => 0 });\n        Object.defineProperty(orientationZGainNode.gain, 'defaultValue', { get: () => 0 });\n        Object.defineProperty(positionXGainNode.gain, 'defaultValue', { get: () => 0 });\n        Object.defineProperty(positionYGainNode.gain, 'defaultValue', { get: () => 0 });\n        Object.defineProperty(positionZGainNode.gain, 'defaultValue', { get: () => 0 });\n        const nativePannerNodeFaker = {\n            get bufferSize() {\n                return undefined;\n            },\n            get channelCount() {\n                return pannerNode.channelCount;\n            },\n            set channelCount(value) {\n                // Bug #125: Safari does not throw an error yet.\n                if (value > 2) {\n                    throw createNotSupportedError();\n                }\n                inputGainNode.channelCount = value;\n                pannerNode.channelCount = value;\n            },\n            get channelCountMode() {\n                return pannerNode.channelCountMode;\n            },\n            set channelCountMode(value) {\n                // Bug #126: Safari does not throw an error yet.\n                if (value === 'max') {\n                    throw createNotSupportedError();\n                }\n                inputGainNode.channelCountMode = value;\n                pannerNode.channelCountMode = value;\n            },\n            get channelInterpretation() {\n                return pannerNode.channelInterpretation;\n            },\n            set channelInterpretation(value) {\n                inputGainNode.channelInterpretation = value;\n                pannerNode.channelInterpretation = value;\n            },\n            get coneInnerAngle() {\n                return pannerNode.coneInnerAngle;\n            },\n            set coneInnerAngle(value) {\n                pannerNode.coneInnerAngle = value;\n            },\n            get coneOuterAngle() {\n                return pannerNode.coneOuterAngle;\n            },\n            set coneOuterAngle(value) {\n                pannerNode.coneOuterAngle = value;\n            },\n            get coneOuterGain() {\n                return pannerNode.coneOuterGain;\n            },\n            set coneOuterGain(value) {\n                // Bug #127: Edge & Safari do not throw an InvalidStateError yet.\n                if (value < 0 || value > 1) {\n                    throw createInvalidStateError();\n                }\n                pannerNode.coneOuterGain = value;\n            },\n            get context() {\n                return pannerNode.context;\n            },\n            get distanceModel() {\n                return pannerNode.distanceModel;\n            },\n            set distanceModel(value) {\n                pannerNode.distanceModel = value;\n            },\n            get inputs() {\n                return [inputGainNode];\n            },\n            get maxDistance() {\n                return pannerNode.maxDistance;\n            },\n            set maxDistance(value) {\n                // Bug #128: Edge & Safari do not throw an error yet.\n                if (value < 0) {\n                    throw new RangeError();\n                }\n                pannerNode.maxDistance = value;\n            },\n            get numberOfInputs() {\n                return pannerNode.numberOfInputs;\n            },\n            get numberOfOutputs() {\n                return pannerNode.numberOfOutputs;\n            },\n            get orientationX() {\n                return orientationXGainNode.gain;\n            },\n            get orientationY() {\n                return orientationYGainNode.gain;\n            },\n            get orientationZ() {\n                return orientationZGainNode.gain;\n            },\n            get panningModel() {\n                return pannerNode.panningModel;\n            },\n            set panningModel(value) {\n                pannerNode.panningModel = value;\n                // Bug #123: Edge does not support HRTF as panningModel.\n                if (pannerNode.panningModel !== value && value === 'HRTF') {\n                    throw createNotSupportedError();\n                }\n            },\n            get positionX() {\n                return positionXGainNode.gain;\n            },\n            get positionY() {\n                return positionYGainNode.gain;\n            },\n            get positionZ() {\n                return positionZGainNode.gain;\n            },\n            get refDistance() {\n                return pannerNode.refDistance;\n            },\n            set refDistance(value) {\n                // Bug #129: Edge & Safari do not throw an error yet.\n                if (value < 0) {\n                    throw new RangeError();\n                }\n                pannerNode.refDistance = value;\n            },\n            get rolloffFactor() {\n                return pannerNode.rolloffFactor;\n            },\n            set rolloffFactor(value) {\n                // Bug #130: Edge & Safari do not throw an error yet.\n                if (value < 0) {\n                    throw new RangeError();\n                }\n                pannerNode.rolloffFactor = value;\n            },\n            addEventListener(...args) {\n                return inputGainNode.addEventListener(args[0], args[1], args[2]);\n            },\n            dispatchEvent(...args) {\n                return inputGainNode.dispatchEvent(args[0]);\n            },\n            removeEventListener(...args) {\n                return inputGainNode.removeEventListener(args[0], args[1], args[2]);\n            }\n        };\n        if (coneInnerAngle !== nativePannerNodeFaker.coneInnerAngle) {\n            nativePannerNodeFaker.coneInnerAngle = coneInnerAngle;\n        }\n        if (coneOuterAngle !== nativePannerNodeFaker.coneOuterAngle) {\n            nativePannerNodeFaker.coneOuterAngle = coneOuterAngle;\n        }\n        if (coneOuterGain !== nativePannerNodeFaker.coneOuterGain) {\n            nativePannerNodeFaker.coneOuterGain = coneOuterGain;\n        }\n        if (distanceModel !== nativePannerNodeFaker.distanceModel) {\n            nativePannerNodeFaker.distanceModel = distanceModel;\n        }\n        if (maxDistance !== nativePannerNodeFaker.maxDistance) {\n            nativePannerNodeFaker.maxDistance = maxDistance;\n        }\n        if (orientationX !== nativePannerNodeFaker.orientationX.value) {\n            nativePannerNodeFaker.orientationX.value = orientationX;\n        }\n        if (orientationY !== nativePannerNodeFaker.orientationY.value) {\n            nativePannerNodeFaker.orientationY.value = orientationY;\n        }\n        if (orientationZ !== nativePannerNodeFaker.orientationZ.value) {\n            nativePannerNodeFaker.orientationZ.value = orientationZ;\n        }\n        if (panningModel !== nativePannerNodeFaker.panningModel) {\n            nativePannerNodeFaker.panningModel = panningModel;\n        }\n        if (positionX !== nativePannerNodeFaker.positionX.value) {\n            nativePannerNodeFaker.positionX.value = positionX;\n        }\n        if (positionY !== nativePannerNodeFaker.positionY.value) {\n            nativePannerNodeFaker.positionY.value = positionY;\n        }\n        if (positionZ !== nativePannerNodeFaker.positionZ.value) {\n            nativePannerNodeFaker.positionZ.value = positionZ;\n        }\n        if (refDistance !== nativePannerNodeFaker.refDistance) {\n            nativePannerNodeFaker.refDistance = refDistance;\n        }\n        if (rolloffFactor !== nativePannerNodeFaker.rolloffFactor) {\n            nativePannerNodeFaker.rolloffFactor = rolloffFactor;\n        }\n        if (lastOrientation[0] !== 1 || lastOrientation[1] !== 0 || lastOrientation[2] !== 0) {\n            pannerNode.setOrientation(...lastOrientation); // tslint:disable-line:deprecation\n        }\n        if (lastPosition[0] !== 0 || lastPosition[1] !== 0 || lastPosition[2] !== 0) {\n            pannerNode.setPosition(...lastPosition); // tslint:disable-line:deprecation\n        }\n        const whenConnected = () => {\n            inputGainNode.connect(pannerNode);\n            // Bug #119: Safari does not fully support the WaveShaperNode.\n            connectNativeAudioNodeToNativeAudioNode(inputGainNode, waveShaperNode, 0, 0);\n            waveShaperNode\n                .connect(orientationXGainNode)\n                .connect(channelMergerNode, 0, 0);\n            waveShaperNode\n                .connect(orientationYGainNode)\n                .connect(channelMergerNode, 0, 1);\n            waveShaperNode\n                .connect(orientationZGainNode)\n                .connect(channelMergerNode, 0, 2);\n            waveShaperNode\n                .connect(positionXGainNode)\n                .connect(channelMergerNode, 0, 3);\n            waveShaperNode\n                .connect(positionYGainNode)\n                .connect(channelMergerNode, 0, 4);\n            waveShaperNode\n                .connect(positionZGainNode)\n                .connect(channelMergerNode, 0, 5);\n            channelMergerNode\n                .connect(scriptProcessorNode)\n                .connect(nativeContext.destination);\n        };\n        const whenDisconnected = () => {\n            inputGainNode.disconnect(pannerNode);\n            // Bug #119: Safari does not fully support the WaveShaperNode.\n            disconnectNativeAudioNodeFromNativeAudioNode(inputGainNode, waveShaperNode, 0, 0);\n            waveShaperNode.disconnect(orientationXGainNode);\n            orientationXGainNode.disconnect(channelMergerNode);\n            waveShaperNode.disconnect(orientationYGainNode);\n            orientationYGainNode.disconnect(channelMergerNode);\n            waveShaperNode.disconnect(orientationZGainNode);\n            orientationZGainNode.disconnect(channelMergerNode);\n            waveShaperNode.disconnect(positionXGainNode);\n            positionXGainNode.disconnect(channelMergerNode);\n            waveShaperNode.disconnect(positionYGainNode);\n            positionYGainNode.disconnect(channelMergerNode);\n            waveShaperNode.disconnect(positionZGainNode);\n            positionZGainNode.disconnect(channelMergerNode);\n            channelMergerNode.disconnect(scriptProcessorNode);\n            scriptProcessorNode.disconnect(nativeContext.destination);\n        };\n        return monitorConnections(interceptConnections(nativePannerNodeFaker, pannerNode), whenConnected, whenDisconnected);\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/native-panner-node-faker-factory.js.map","import { assignNativeAudioNodeAudioParamValue } from '../helpers/assign-native-audio-node-audio-param-value';\nimport { assignNativeAudioNodeOption } from '../helpers/assign-native-audio-node-option';\nimport { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nexport const createNativePannerNodeFactory = (createNativeAudioNode, createNativePannerNodeFaker) => {\n    return (nativeContext, options) => {\n        const nativePannerNode = createNativeAudioNode(nativeContext, (ntvCntxt) => ntvCntxt.createPanner());\n        // Bug #124: Edge & Safari do not support modifying the orientation and the position with AudioParams.\n        if (nativePannerNode.orientationX === undefined) {\n            return createNativePannerNodeFaker(nativeContext, options);\n        }\n        assignNativeAudioNodeOptions(nativePannerNode, options);\n        assignNativeAudioNodeAudioParamValue(nativePannerNode, options, 'orientationX');\n        assignNativeAudioNodeAudioParamValue(nativePannerNode, options, 'orientationY');\n        assignNativeAudioNodeAudioParamValue(nativePannerNode, options, 'orientationZ');\n        assignNativeAudioNodeAudioParamValue(nativePannerNode, options, 'positionX');\n        assignNativeAudioNodeAudioParamValue(nativePannerNode, options, 'positionY');\n        assignNativeAudioNodeAudioParamValue(nativePannerNode, options, 'positionZ');\n        assignNativeAudioNodeOption(nativePannerNode, options, 'coneInnerAngle');\n        assignNativeAudioNodeOption(nativePannerNode, options, 'coneOuterAngle');\n        assignNativeAudioNodeOption(nativePannerNode, options, 'coneOuterGain');\n        assignNativeAudioNodeOption(nativePannerNode, options, 'distanceModel');\n        assignNativeAudioNodeOption(nativePannerNode, options, 'maxDistance');\n        assignNativeAudioNodeOption(nativePannerNode, options, 'panningModel');\n        assignNativeAudioNodeOption(nativePannerNode, options, 'refDistance');\n        assignNativeAudioNodeOption(nativePannerNode, options, 'rolloffFactor');\n        return nativePannerNode;\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/native-panner-node-factory.js.map","import { isNativeAudioNodeFaker } from '../guards/native-audio-node-faker';\nimport { isOwnedByContext } from '../helpers/is-owned-by-context';\nexport const createPannerNodeRendererFactory = (connectAudioParam, createNativeChannelMergerNode, createNativeConstantSourceNode, createNativeGainNode, createNativePannerNode, getNativeAudioNode, nativeOfflineAudioContextConstructor, renderAutomation, renderInputsOfAudioNode, renderNativeOfflineAudioContext) => {\n    return () => {\n        const renderedNativeAudioNodes = new WeakMap();\n        let renderedBufferPromise = null;\n        const createAudioNode = async (proxy, nativeOfflineAudioContext, trace) => {\n            let nativeGainNode = null;\n            let nativePannerNode = getNativeAudioNode(proxy);\n            const commonAudioNodeOptions = {\n                channelCount: nativePannerNode.channelCount,\n                channelCountMode: nativePannerNode.channelCountMode,\n                channelInterpretation: nativePannerNode.channelInterpretation\n            };\n            const commonNativePannerNodeOptions = {\n                ...commonAudioNodeOptions,\n                coneInnerAngle: nativePannerNode.coneInnerAngle,\n                coneOuterAngle: nativePannerNode.coneOuterAngle,\n                coneOuterGain: nativePannerNode.coneOuterGain,\n                distanceModel: nativePannerNode.distanceModel,\n                maxDistance: nativePannerNode.maxDistance,\n                panningModel: nativePannerNode.panningModel,\n                refDistance: nativePannerNode.refDistance,\n                rolloffFactor: nativePannerNode.rolloffFactor\n            };\n            // If the initially used nativePannerNode was not constructed on the same OfflineAudioContext it needs to be created again.\n            const nativePannerNodeIsOwnedByContext = isOwnedByContext(nativePannerNode, nativeOfflineAudioContext);\n            // Bug #124: Edge & Safari do not support modifying the orientation and the position with AudioParams.\n            if ('bufferSize' in nativePannerNode) {\n                nativeGainNode = createNativeGainNode(nativeOfflineAudioContext, { ...commonAudioNodeOptions, gain: 1 });\n            }\n            else if (!nativePannerNodeIsOwnedByContext) {\n                const options = {\n                    ...commonNativePannerNodeOptions,\n                    orientationX: nativePannerNode.orientationX.value,\n                    orientationY: nativePannerNode.orientationY.value,\n                    orientationZ: nativePannerNode.orientationZ.value,\n                    positionX: nativePannerNode.positionX.value,\n                    positionY: nativePannerNode.positionY.value,\n                    positionZ: nativePannerNode.positionZ.value\n                };\n                nativePannerNode = createNativePannerNode(nativeOfflineAudioContext, options);\n            }\n            renderedNativeAudioNodes.set(nativeOfflineAudioContext, (nativeGainNode === null) ? nativePannerNode : nativeGainNode);\n            if (nativeGainNode !== null) {\n                if (renderedBufferPromise === null) {\n                    if (nativeOfflineAudioContextConstructor === null) {\n                        throw new Error('Missing the native OfflineAudioContext constructor.');\n                    }\n                    const partialOfflineAudioContext = new nativeOfflineAudioContextConstructor(6, \n                    // Bug #17: Safari does not yet expose the length.\n                    proxy.context.length, nativeOfflineAudioContext.sampleRate);\n                    const nativeChannelMergerNode = createNativeChannelMergerNode(partialOfflineAudioContext, {\n                        channelCount: 1,\n                        channelCountMode: 'explicit',\n                        channelInterpretation: 'speakers',\n                        numberOfInputs: 6\n                    });\n                    nativeChannelMergerNode.connect(partialOfflineAudioContext.destination);\n                    renderedBufferPromise = (async () => {\n                        const nativeConstantSourceNodes = await Promise\n                            .all([\n                            proxy.orientationX,\n                            proxy.orientationY,\n                            proxy.orientationZ,\n                            proxy.positionX,\n                            proxy.positionY,\n                            proxy.positionZ\n                        ]\n                            .map(async (audioParam, index) => {\n                            const nativeConstantSourceNode = createNativeConstantSourceNode(partialOfflineAudioContext, {\n                                channelCount: 1,\n                                channelCountMode: 'explicit',\n                                channelInterpretation: 'discrete',\n                                offset: (index === 0) ? 1 : 0\n                            });\n                            await renderAutomation(partialOfflineAudioContext, audioParam, nativeConstantSourceNode.offset, trace);\n                            return nativeConstantSourceNode;\n                        }));\n                        for (let i = 0; i < 6; i += 1) {\n                            nativeConstantSourceNodes[i].connect(nativeChannelMergerNode, 0, i);\n                            nativeConstantSourceNodes[i].start(0);\n                        }\n                        return renderNativeOfflineAudioContext(partialOfflineAudioContext);\n                    })();\n                }\n                const renderedBuffer = await renderedBufferPromise;\n                const inputGainNode = createNativeGainNode(nativeOfflineAudioContext, { ...commonAudioNodeOptions, gain: 1 });\n                await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, inputGainNode, trace);\n                const channelDatas = [];\n                for (let i = 0; i < renderedBuffer.numberOfChannels; i += 1) {\n                    channelDatas.push(renderedBuffer.getChannelData(i));\n                }\n                let lastOrientation = [channelDatas[0][0], channelDatas[1][0], channelDatas[2][0]];\n                let lastPosition = [channelDatas[3][0], channelDatas[4][0], channelDatas[5][0]];\n                let gateGainNode = createNativeGainNode(nativeOfflineAudioContext, { ...commonAudioNodeOptions, gain: 1 });\n                let partialPannerNode = createNativePannerNode(nativeOfflineAudioContext, {\n                    ...commonNativePannerNodeOptions,\n                    orientationX: lastOrientation[0],\n                    orientationY: lastOrientation[1],\n                    orientationZ: lastOrientation[2],\n                    positionX: lastPosition[0],\n                    positionY: lastPosition[1],\n                    positionZ: lastPosition[2]\n                });\n                inputGainNode\n                    .connect(gateGainNode)\n                    .connect(partialPannerNode.inputs[0]);\n                partialPannerNode.connect(nativeGainNode);\n                for (let i = 128; i < renderedBuffer.length; i += 128) {\n                    const orientation = [channelDatas[0][i], channelDatas[1][i], channelDatas[2][i]];\n                    const positon = [channelDatas[3][i], channelDatas[4][i], channelDatas[5][i]];\n                    if (orientation.some((value, index) => (value !== lastOrientation[index]))\n                        || positon.some((value, index) => (value !== lastPosition[index]))) {\n                        lastOrientation = orientation;\n                        lastPosition = positon;\n                        const currentTime = i / nativeOfflineAudioContext.sampleRate;\n                        gateGainNode.gain.setValueAtTime(0, currentTime);\n                        gateGainNode = createNativeGainNode(nativeOfflineAudioContext, { ...commonAudioNodeOptions, gain: 0 });\n                        partialPannerNode = createNativePannerNode(nativeOfflineAudioContext, {\n                            ...commonNativePannerNodeOptions,\n                            orientationX: lastOrientation[0],\n                            orientationY: lastOrientation[1],\n                            orientationZ: lastOrientation[2],\n                            positionX: lastPosition[0],\n                            positionY: lastPosition[1],\n                            positionZ: lastPosition[2]\n                        });\n                        gateGainNode.gain.setValueAtTime(1, currentTime);\n                        inputGainNode\n                            .connect(gateGainNode)\n                            .connect(partialPannerNode.inputs[0]);\n                        partialPannerNode.connect(nativeGainNode);\n                    }\n                }\n                return nativeGainNode;\n            }\n            if (!nativePannerNodeIsOwnedByContext) {\n                await renderAutomation(nativeOfflineAudioContext, proxy.orientationX, nativePannerNode.orientationX, trace);\n                await renderAutomation(nativeOfflineAudioContext, proxy.orientationY, nativePannerNode.orientationY, trace);\n                await renderAutomation(nativeOfflineAudioContext, proxy.orientationZ, nativePannerNode.orientationZ, trace);\n                await renderAutomation(nativeOfflineAudioContext, proxy.positionX, nativePannerNode.positionX, trace);\n                await renderAutomation(nativeOfflineAudioContext, proxy.positionY, nativePannerNode.positionY, trace);\n                await renderAutomation(nativeOfflineAudioContext, proxy.positionZ, nativePannerNode.positionZ, trace);\n            }\n            else {\n                await connectAudioParam(nativeOfflineAudioContext, proxy.orientationX, nativePannerNode.orientationX, trace);\n                await connectAudioParam(nativeOfflineAudioContext, proxy.orientationY, nativePannerNode.orientationY, trace);\n                await connectAudioParam(nativeOfflineAudioContext, proxy.orientationZ, nativePannerNode.orientationZ, trace);\n                await connectAudioParam(nativeOfflineAudioContext, proxy.positionX, nativePannerNode.positionX, trace);\n                await connectAudioParam(nativeOfflineAudioContext, proxy.positionY, nativePannerNode.positionY, trace);\n                await connectAudioParam(nativeOfflineAudioContext, proxy.positionZ, nativePannerNode.positionZ, trace);\n            }\n            if (isNativeAudioNodeFaker(nativePannerNode)) {\n                await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativePannerNode.inputs[0], trace);\n            }\n            else {\n                await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativePannerNode, trace);\n            }\n            return nativePannerNode;\n        };\n        return {\n            render(proxy, nativeOfflineAudioContext, trace) {\n                const renderedNativeGainNodeOrNativePannerNode = renderedNativeAudioNodes.get(nativeOfflineAudioContext);\n                if (renderedNativeGainNodeOrNativePannerNode !== undefined) {\n                    return Promise.resolve(renderedNativeGainNodeOrNativePannerNode);\n                }\n                return createAudioNode(proxy, nativeOfflineAudioContext, trace);\n            }\n        };\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/panner-node-renderer-factory.js.map","export const createNativePeriodicWaveFactory = (getBackupNativeContext) => {\n    return (nativeContext, { disableNormalization, imag, real }) => {\n        // Bug #50: Only Edge does currently not allow to create AudioNodes (and other objects) on a closed context yet.\n        const backupNativeContext = getBackupNativeContext(nativeContext);\n        // @todo Edge, Firefox & Safari do only accept Float32Arrays.\n        const wrappedImag = new Float32Array(imag);\n        const wrappedReal = new Float32Array(real);\n        if (backupNativeContext !== null) {\n            return backupNativeContext.createPeriodicWave(wrappedReal, wrappedImag, { disableNormalization });\n        }\n        return nativeContext.createPeriodicWave(wrappedReal, wrappedImag, { disableNormalization });\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/native-periodic-wave-factory.js.map","import { assignNativeAudioNodeAudioParamValue } from '../helpers/assign-native-audio-node-audio-param-value';\nimport { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nexport const createNativeStereoPannerNodeFactory = (createNativeAudioNode, createNativeStereoPannerNodeFaker, createNotSupportedError) => {\n    return (nativeContext, options) => createNativeAudioNode(nativeContext, (ntvCntxt) => {\n        const channelCountMode = options.channelCountMode;\n        /*\n         * Bug #105: The channelCountMode of 'clamped-max' should be supported. However it is not possible to write a polyfill for Safari\n         * which supports it and therefore it can't be supported at all.\n         */\n        if (channelCountMode === 'clamped-max') {\n            throw createNotSupportedError();\n        }\n        // Bug #105: Safari does not support the StereoPannerNode.\n        if (nativeContext.createStereoPanner === undefined) {\n            return createNativeStereoPannerNodeFaker(nativeContext, options);\n        }\n        const nativeStereoPannerNode = ntvCntxt.createStereoPanner();\n        assignNativeAudioNodeOptions(nativeStereoPannerNode, options);\n        assignNativeAudioNodeAudioParamValue(nativeStereoPannerNode, options, 'pan');\n        /*\n         * Bug #105: The channelCountMode of 'clamped-max' should be supported. However it is not possible to write a polyfill for Safari\n         * which supports it and therefore it can't be supported at all.\n         */\n        Object.defineProperty(nativeStereoPannerNode, 'channelCountMode', {\n            get: () => channelCountMode,\n            set: (value) => {\n                if (value !== channelCountMode) {\n                    throw createNotSupportedError();\n                }\n            }\n        });\n        return nativeStereoPannerNode;\n    });\n};\n//# sourceMappingURL=/build/es2019/factories/native-stereo-panner-node-factory.js.map","import { interceptConnections } from '../helpers/intercept-connections';\nexport const createNativeStereoPannerNodeFakerFactory = (createNativeChannelMergerNode, createNativeChannelSplitterNode, createNativeGainNode, createNativeWaveShaperNode, createNotSupportedError, monitorConnections) => {\n    // The curve has a size of 14bit plus 1 value to have an exact representation for zero. This value has been determined experimentally.\n    const CURVE_SIZE = 16385;\n    const DC_CURVE = new Float32Array([1, 1]);\n    const HALF_PI = Math.PI / 2;\n    const SINGLE_CHANNEL_OPTIONS = { channelCount: 1, channelCountMode: 'explicit', channelInterpretation: 'discrete' };\n    const SINGLE_CHANNEL_WAVE_SHAPER_OPTIONS = { ...SINGLE_CHANNEL_OPTIONS, oversample: 'none' };\n    const buildInternalGraphForMono = (nativeContext, inputGainNode, panGainNode, channelMergerNode) => {\n        const leftWaveShaperCurve = new Float32Array(CURVE_SIZE);\n        const rightWaveShaperCurve = new Float32Array(CURVE_SIZE);\n        for (let i = 0; i < CURVE_SIZE; i += 1) {\n            const x = (i / (CURVE_SIZE - 1)) * HALF_PI;\n            leftWaveShaperCurve[i] = Math.cos(x);\n            rightWaveShaperCurve[i] = Math.sin(x);\n        }\n        const leftGainNode = createNativeGainNode(nativeContext, { ...SINGLE_CHANNEL_OPTIONS, gain: 0 });\n        // Bug #119: Safari does not fully support the WaveShaperNode.\n        const leftWaveShaperNode = createNativeWaveShaperNode(nativeContext, { ...SINGLE_CHANNEL_WAVE_SHAPER_OPTIONS, curve: leftWaveShaperCurve });\n        // Bug #119: Safari does not fully support the WaveShaperNode.\n        const panWaveShaperNode = createNativeWaveShaperNode(nativeContext, { ...SINGLE_CHANNEL_WAVE_SHAPER_OPTIONS, curve: DC_CURVE });\n        const rightGainNode = createNativeGainNode(nativeContext, { ...SINGLE_CHANNEL_OPTIONS, gain: 0 });\n        // Bug #119: Safari does not fully support the WaveShaperNode.\n        const rightWaveShaperNode = createNativeWaveShaperNode(nativeContext, { ...SINGLE_CHANNEL_WAVE_SHAPER_OPTIONS, curve: rightWaveShaperCurve });\n        return {\n            connectGraph() {\n                inputGainNode.connect(leftGainNode);\n                inputGainNode.connect(panWaveShaperNode.inputs[0]);\n                inputGainNode.connect(rightGainNode);\n                panWaveShaperNode.connect(panGainNode);\n                panGainNode.connect(leftWaveShaperNode.inputs[0]);\n                panGainNode.connect(rightWaveShaperNode.inputs[0]);\n                leftWaveShaperNode.connect(leftGainNode.gain);\n                rightWaveShaperNode.connect(rightGainNode.gain);\n                leftGainNode.connect(channelMergerNode, 0, 0);\n                rightGainNode.connect(channelMergerNode, 0, 1);\n            },\n            disconnectGraph() {\n                inputGainNode.disconnect(leftGainNode);\n                inputGainNode.disconnect(panWaveShaperNode.inputs[0]);\n                inputGainNode.disconnect(rightGainNode);\n                panWaveShaperNode.disconnect(panGainNode);\n                panGainNode.disconnect(leftWaveShaperNode.inputs[0]);\n                panGainNode.disconnect(rightWaveShaperNode.inputs[0]);\n                leftWaveShaperNode.disconnect(leftGainNode.gain);\n                rightWaveShaperNode.disconnect(rightGainNode.gain);\n                leftGainNode.disconnect(channelMergerNode, 0, 0);\n                rightGainNode.disconnect(channelMergerNode, 0, 1);\n            }\n        };\n    };\n    const buildInternalGraphForStereo = (nativeContext, inputGainNode, panGainNode, channelMergerNode) => {\n        const leftInputForLeftOutputWaveShaperCurve = new Float32Array(CURVE_SIZE);\n        const leftInputForRightOutputWaveShaperCurve = new Float32Array(CURVE_SIZE);\n        const rightInputForLeftOutputWaveShaperCurve = new Float32Array(CURVE_SIZE);\n        const rightInputForRightOutputWaveShaperCurve = new Float32Array(CURVE_SIZE);\n        const centerIndex = Math.floor(CURVE_SIZE / 2);\n        for (let i = 0; i < CURVE_SIZE; i += 1) {\n            if (i > centerIndex) {\n                const x = ((i - centerIndex) / (CURVE_SIZE - 1 - centerIndex)) * HALF_PI;\n                leftInputForLeftOutputWaveShaperCurve[i] = Math.cos(x);\n                leftInputForRightOutputWaveShaperCurve[i] = Math.sin(x);\n                rightInputForLeftOutputWaveShaperCurve[i] = 0;\n                rightInputForRightOutputWaveShaperCurve[i] = 1;\n            }\n            else {\n                const x = (i / (CURVE_SIZE - 1 - centerIndex)) * HALF_PI;\n                leftInputForLeftOutputWaveShaperCurve[i] = 1;\n                leftInputForRightOutputWaveShaperCurve[i] = 0;\n                rightInputForLeftOutputWaveShaperCurve[i] = Math.cos(x);\n                rightInputForRightOutputWaveShaperCurve[i] = Math.sin(x);\n            }\n        }\n        const channelSplitterNode = createNativeChannelSplitterNode(nativeContext, {\n            channelCount: 2,\n            channelCountMode: 'explicit',\n            channelInterpretation: 'discrete',\n            numberOfOutputs: 2\n        });\n        const leftInputForLeftOutputGainNode = createNativeGainNode(nativeContext, { ...SINGLE_CHANNEL_OPTIONS, gain: 0 });\n        // Bug #119: Safari does not fully support the WaveShaperNode.\n        const leftInputForLeftOutputWaveShaperNode = createNativeWaveShaperNode(nativeContext, { ...SINGLE_CHANNEL_WAVE_SHAPER_OPTIONS, curve: leftInputForLeftOutputWaveShaperCurve });\n        const leftInputForRightOutputGainNode = createNativeGainNode(nativeContext, { ...SINGLE_CHANNEL_OPTIONS, gain: 0 });\n        // Bug #119: Safari does not fully support the WaveShaperNode.\n        const leftInputForRightOutputWaveShaperNode = createNativeWaveShaperNode(nativeContext, { ...SINGLE_CHANNEL_WAVE_SHAPER_OPTIONS, curve: leftInputForRightOutputWaveShaperCurve });\n        // Bug #119: Safari does not fully support the WaveShaperNode.\n        const panWaveShaperNode = createNativeWaveShaperNode(nativeContext, { ...SINGLE_CHANNEL_WAVE_SHAPER_OPTIONS, curve: DC_CURVE });\n        const rightInputForLeftOutputGainNode = createNativeGainNode(nativeContext, { ...SINGLE_CHANNEL_OPTIONS, gain: 0 });\n        // Bug #119: Safari does not fully support the WaveShaperNode.\n        const rightInputForLeftOutputWaveShaperNode = createNativeWaveShaperNode(nativeContext, { ...SINGLE_CHANNEL_WAVE_SHAPER_OPTIONS, curve: rightInputForLeftOutputWaveShaperCurve });\n        const rightInputForRightOutputGainNode = createNativeGainNode(nativeContext, { ...SINGLE_CHANNEL_OPTIONS, gain: 0 });\n        // Bug #119: Safari does not fully support the WaveShaperNode.\n        const rightInputForRightOutputWaveShaperNode = createNativeWaveShaperNode(nativeContext, { ...SINGLE_CHANNEL_WAVE_SHAPER_OPTIONS, curve: rightInputForRightOutputWaveShaperCurve });\n        return {\n            connectGraph() {\n                inputGainNode.connect(channelSplitterNode);\n                inputGainNode.connect(panWaveShaperNode.inputs[0]);\n                channelSplitterNode.connect(leftInputForLeftOutputGainNode, 1);\n                channelSplitterNode.connect(leftInputForRightOutputGainNode, 1);\n                channelSplitterNode.connect(rightInputForLeftOutputGainNode, 1);\n                channelSplitterNode.connect(rightInputForRightOutputGainNode, 1);\n                panWaveShaperNode.connect(panGainNode);\n                panGainNode.connect(leftInputForLeftOutputWaveShaperNode.inputs[0]);\n                panGainNode.connect(leftInputForRightOutputWaveShaperNode.inputs[0]);\n                panGainNode.connect(rightInputForLeftOutputWaveShaperNode.inputs[0]);\n                panGainNode.connect(rightInputForRightOutputWaveShaperNode.inputs[0]);\n                leftInputForLeftOutputWaveShaperNode.connect(leftInputForLeftOutputGainNode.gain);\n                leftInputForRightOutputWaveShaperNode.connect(leftInputForRightOutputGainNode.gain);\n                rightInputForLeftOutputWaveShaperNode.connect(rightInputForLeftOutputGainNode.gain);\n                rightInputForRightOutputWaveShaperNode.connect(rightInputForRightOutputGainNode.gain);\n                leftInputForLeftOutputGainNode.connect(channelMergerNode, 0, 0);\n                rightInputForLeftOutputGainNode.connect(channelMergerNode, 0, 0);\n                leftInputForRightOutputGainNode.connect(channelMergerNode, 0, 1);\n                rightInputForRightOutputGainNode.connect(channelMergerNode, 0, 1);\n            },\n            disconnectGraph() {\n                inputGainNode.disconnect(channelSplitterNode);\n                inputGainNode.disconnect(panWaveShaperNode.inputs[0]);\n                channelSplitterNode.disconnect(leftInputForLeftOutputGainNode, 1);\n                channelSplitterNode.disconnect(leftInputForRightOutputGainNode, 1);\n                channelSplitterNode.disconnect(rightInputForLeftOutputGainNode, 1);\n                channelSplitterNode.disconnect(rightInputForRightOutputGainNode, 1);\n                panWaveShaperNode.disconnect(panGainNode);\n                panGainNode.disconnect(leftInputForLeftOutputWaveShaperNode.inputs[0]);\n                panGainNode.disconnect(leftInputForRightOutputWaveShaperNode.inputs[0]);\n                panGainNode.disconnect(rightInputForLeftOutputWaveShaperNode.inputs[0]);\n                panGainNode.disconnect(rightInputForRightOutputWaveShaperNode.inputs[0]);\n                leftInputForLeftOutputWaveShaperNode.disconnect(leftInputForLeftOutputGainNode.gain);\n                leftInputForRightOutputWaveShaperNode.disconnect(leftInputForRightOutputGainNode.gain);\n                rightInputForLeftOutputWaveShaperNode.disconnect(rightInputForLeftOutputGainNode.gain);\n                rightInputForRightOutputWaveShaperNode.disconnect(rightInputForRightOutputGainNode.gain);\n                leftInputForLeftOutputGainNode.disconnect(channelMergerNode, 0, 0);\n                rightInputForLeftOutputGainNode.disconnect(channelMergerNode, 0, 0);\n                leftInputForRightOutputGainNode.disconnect(channelMergerNode, 0, 1);\n                rightInputForRightOutputGainNode.disconnect(channelMergerNode, 0, 1);\n            }\n        };\n    };\n    const buildInternalGraph = (nativeContext, channelCount, inputGainNode, panGainNode, channelMergerNode) => {\n        if (channelCount === 1) {\n            return buildInternalGraphForMono(nativeContext, inputGainNode, panGainNode, channelMergerNode);\n        }\n        if (channelCount === 2) {\n            return buildInternalGraphForStereo(nativeContext, inputGainNode, panGainNode, channelMergerNode);\n        }\n        throw createNotSupportedError();\n    };\n    return (nativeContext, { channelCount, channelCountMode, pan, ...audioNodeOptions }) => {\n        if (channelCountMode === 'max') {\n            throw createNotSupportedError();\n        }\n        const channelMergerNode = createNativeChannelMergerNode(nativeContext, {\n            ...audioNodeOptions,\n            channelCount: 1,\n            channelCountMode,\n            numberOfInputs: 2\n        });\n        const inputGainNode = createNativeGainNode(nativeContext, { ...audioNodeOptions, channelCount, channelCountMode, gain: 1 });\n        const panGainNode = createNativeGainNode(nativeContext, {\n            channelCount: 1,\n            channelCountMode: 'explicit',\n            channelInterpretation: 'discrete',\n            gain: pan\n        });\n        let { connectGraph, disconnectGraph } = buildInternalGraph(nativeContext, channelCount, inputGainNode, panGainNode, channelMergerNode);\n        Object.defineProperty(panGainNode.gain, 'defaultValue', { get: () => 0 });\n        const nativeStereoPannerNodeFakerFactory = {\n            get bufferSize() {\n                return undefined;\n            },\n            get channelCount() {\n                return inputGainNode.channelCount;\n            },\n            set channelCount(value) {\n                if (inputGainNode.channelCount !== value) {\n                    if (isConnected) {\n                        disconnectGraph();\n                    }\n                    ({ connectGraph, disconnectGraph } = buildInternalGraph(nativeContext, value, inputGainNode, panGainNode, channelMergerNode));\n                    if (isConnected) {\n                        connectGraph();\n                    }\n                }\n                inputGainNode.channelCount = value;\n            },\n            get channelCountMode() {\n                return inputGainNode.channelCountMode;\n            },\n            set channelCountMode(value) {\n                if (value === 'clamped-max' || value === 'max') {\n                    throw createNotSupportedError();\n                }\n                inputGainNode.channelCountMode = value;\n            },\n            get channelInterpretation() {\n                return inputGainNode.channelInterpretation;\n            },\n            set channelInterpretation(value) {\n                inputGainNode.channelInterpretation = value;\n            },\n            get context() {\n                return inputGainNode.context;\n            },\n            get inputs() {\n                return [inputGainNode];\n            },\n            get numberOfInputs() {\n                return inputGainNode.numberOfInputs;\n            },\n            get numberOfOutputs() {\n                return inputGainNode.numberOfOutputs;\n            },\n            get pan() {\n                return panGainNode.gain;\n            },\n            addEventListener(...args) {\n                return inputGainNode.addEventListener(args[0], args[1], args[2]);\n            },\n            dispatchEvent(...args) {\n                return inputGainNode.dispatchEvent(args[0]);\n            },\n            removeEventListener(...args) {\n                return inputGainNode.removeEventListener(args[0], args[1], args[2]);\n            }\n        };\n        let isConnected = false;\n        const whenConnected = () => {\n            connectGraph();\n            isConnected = true;\n        };\n        const whenDisconnected = () => {\n            disconnectGraph();\n            isConnected = false;\n        };\n        return monitorConnections(interceptConnections(nativeStereoPannerNodeFakerFactory, channelMergerNode), whenConnected, whenDisconnected);\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/native-stereo-panner-node-faker-factory.js.map","import { isNativeAudioNodeFaker } from '../guards/native-audio-node-faker';\nimport { isOwnedByContext } from '../helpers/is-owned-by-context';\nexport const createStereoPannerNodeRendererFactory = (connectAudioParam, createNativeStereoPannerNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode) => {\n    return () => {\n        const renderedNativeStereoPannerNodes = new WeakMap();\n        const createStereoPannerNode = async (proxy, nativeOfflineAudioContext, trace) => {\n            let nativeStereoPannerNode = getNativeAudioNode(proxy);\n            /*\n             * If the initially used nativeStereoPannerNode was not constructed on the same OfflineAudioContext it needs to be created\n             * again.\n             */\n            const nativeStereoPannerNodeIsOwnedByContext = isOwnedByContext(nativeStereoPannerNode, nativeOfflineAudioContext);\n            if (!nativeStereoPannerNodeIsOwnedByContext) {\n                const options = {\n                    channelCount: nativeStereoPannerNode.channelCount,\n                    channelCountMode: nativeStereoPannerNode.channelCountMode,\n                    channelInterpretation: nativeStereoPannerNode.channelInterpretation,\n                    pan: nativeStereoPannerNode.pan.value\n                };\n                nativeStereoPannerNode = createNativeStereoPannerNode(nativeOfflineAudioContext, options);\n            }\n            renderedNativeStereoPannerNodes.set(nativeOfflineAudioContext, nativeStereoPannerNode);\n            if (!nativeStereoPannerNodeIsOwnedByContext) {\n                await renderAutomation(nativeOfflineAudioContext, proxy.pan, nativeStereoPannerNode.pan, trace);\n            }\n            else {\n                await connectAudioParam(nativeOfflineAudioContext, proxy.pan, nativeStereoPannerNode.pan, trace);\n            }\n            if (isNativeAudioNodeFaker(nativeStereoPannerNode)) {\n                await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeStereoPannerNode.inputs[0], trace);\n            }\n            else {\n                await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeStereoPannerNode, trace);\n            }\n            return nativeStereoPannerNode;\n        };\n        return {\n            render(proxy, nativeOfflineAudioContext, trace) {\n                const renderedNativeStereoPannerNode = renderedNativeStereoPannerNodes.get(nativeOfflineAudioContext);\n                if (renderedNativeStereoPannerNode !== undefined) {\n                    return Promise.resolve(renderedNativeStereoPannerNode);\n                }\n                return createStereoPannerNode(proxy, nativeOfflineAudioContext, trace);\n            }\n        };\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/stereo-panner-node-renderer-factory.js.map","import { isNativeAudioNodeFaker } from '../guards/native-audio-node-faker';\nimport { isOwnedByContext } from '../helpers/is-owned-by-context';\nexport const createWaveShaperNodeRendererFactory = (createNativeWaveShaperNode, getNativeAudioNode, renderInputsOfAudioNode) => {\n    return () => {\n        const renderedNativeWaveShaperNodes = new WeakMap();\n        const createWaveShaperNode = async (proxy, nativeOfflineAudioContext, trace) => {\n            let nativeWaveShaperNode = getNativeAudioNode(proxy);\n            // If the initially used nativeWaveShaperNode was not constructed on the same OfflineAudioContext it needs to be created again.\n            const nativeWaveShaperNodeIsOwnedByContext = isOwnedByContext(nativeWaveShaperNode, nativeOfflineAudioContext);\n            if (!nativeWaveShaperNodeIsOwnedByContext) {\n                const options = {\n                    channelCount: nativeWaveShaperNode.channelCount,\n                    channelCountMode: nativeWaveShaperNode.channelCountMode,\n                    channelInterpretation: nativeWaveShaperNode.channelInterpretation,\n                    curve: nativeWaveShaperNode.curve,\n                    oversample: nativeWaveShaperNode.oversample\n                };\n                nativeWaveShaperNode = createNativeWaveShaperNode(nativeOfflineAudioContext, options);\n            }\n            renderedNativeWaveShaperNodes.set(nativeOfflineAudioContext, nativeWaveShaperNode);\n            if (isNativeAudioNodeFaker(nativeWaveShaperNode)) {\n                await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeWaveShaperNode.inputs[0], trace);\n            }\n            else {\n                await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeWaveShaperNode, trace);\n            }\n            return nativeWaveShaperNode;\n        };\n        return {\n            render(proxy, nativeOfflineAudioContext, trace) {\n                const renderedNativeWaveShaperNode = renderedNativeWaveShaperNodes.get(nativeOfflineAudioContext);\n                if (renderedNativeWaveShaperNode !== undefined) {\n                    return Promise.resolve(renderedNativeWaveShaperNode);\n                }\n                return createWaveShaperNode(proxy, nativeOfflineAudioContext, trace);\n            }\n        };\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/wave-shaper-node-renderer-factory.js.map","export const createIsSecureContext = (window) => (window !== null && window.isSecureContext);\n//# sourceMappingURL=/build/es2019/factories/is-secure-context.js.map","export const createExposeCurrentFrameAndCurrentTime = (window) => {\n    return (currentTime, sampleRate, fn) => {\n        Object.defineProperties(window, {\n            currentFrame: {\n                configurable: true,\n                get() {\n                    return Math.round(currentTime * sampleRate);\n                }\n            },\n            currentTime: {\n                configurable: true,\n                get() {\n                    return currentTime;\n                }\n            }\n        });\n        try {\n            return fn();\n        }\n        finally {\n            if (window !== null) {\n                delete window.currentFrame;\n                delete window.currentTime;\n            }\n        }\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/expose-current-frame-and-current-time.js.map","export const createEvaluateSource = (window) => {\n    return (source) => new Promise((resolve, reject) => {\n        if (window === null) {\n            reject(new SyntaxError());\n            return;\n        }\n        const head = window.document.head;\n        if (head === null) {\n            reject(new SyntaxError());\n        }\n        else {\n            const script = window.document.createElement('script');\n            // @todo Safari doesn't like URLs with a type of 'application/javascript; charset=utf-8'.\n            const blob = new Blob([source], { type: 'application/javascript' });\n            const url = URL.createObjectURL(blob);\n            const originalOnErrorHandler = window.onerror;\n            const removeErrorEventListenerAndRevokeUrl = () => {\n                window.onerror = originalOnErrorHandler;\n                URL.revokeObjectURL(url);\n            };\n            window.onerror = (message, src, lineno, colno, error) => {\n                // @todo Edge thinks the source is the one of the html document.\n                if (src === url || (src === window.location.href && lineno === 1 && colno === 1)) {\n                    removeErrorEventListenerAndRevokeUrl();\n                    reject(error);\n                    return false;\n                }\n                if (originalOnErrorHandler !== null) {\n                    return originalOnErrorHandler(message, src, lineno, colno, error);\n                }\n            };\n            script.onerror = () => {\n                removeErrorEventListenerAndRevokeUrl();\n                reject(new SyntaxError());\n            };\n            script.onload = () => {\n                removeErrorEventListenerAndRevokeUrl();\n                resolve();\n            };\n            script.src = url;\n            script.type = 'module';\n            head.appendChild(script);\n        }\n    });\n};\n//# sourceMappingURL=/build/es2019/factories/evaluate-source.js.map","export const createFetchSource = (createAbortError) => {\n    return async (url) => {\n        try {\n            const response = await fetch(url);\n            if (response.ok) {\n                return response.text();\n            }\n        }\n        catch { /* Ignore errors. */ } // tslint:disable-line:no-empty\n        throw createAbortError();\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/fetch-source.js.map","export const createAbortError = () => {\n    try {\n        return new DOMException('', 'AbortError');\n    }\n    catch (err) {\n        // Bug #122: Edge is the only browser that does not yet allow to construct a DOMException.\n        err.code = 20;\n        err.name = 'AbortError';\n        return err;\n    }\n};\n//# sourceMappingURL=/build/es2019/factories/abort-error.js.map","export const createIsNativeContext = (isNativeAudioContext, isNativeOfflineAudioContext) => {\n    return (anything) => {\n        return (isNativeAudioContext(anything) || isNativeOfflineAudioContext(anything));\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/is-native-context.js.map","export const createBaseAudioContextConstructor = (addAudioWorkletModule, analyserNodeConstructor, audioBufferConstructor, audioBufferSourceNodeConstructor, biquadFilterNodeConstructor, channelMergerNodeConstructor, channelSplitterNodeConstructor, constantSourceNodeConstructor, convolverNodeConstructor, decodeAudioData, delayNodeConstructor, dynamicsCompressorNodeConstructor, gainNodeConstructor, iIRFilterNodeConstructor, minimalBaseAudioContextConstructor, oscillatorNodeConstructor, pannerNodeConstructor, periodicWaveConstructor, stereoPannerNodeConstructor, waveShaperNodeConstructor) => {\n    return class BaseAudioContext extends minimalBaseAudioContextConstructor {\n        constructor(_nativeContext, numberOfChannels) {\n            super(_nativeContext, numberOfChannels);\n            this._nativeContext = _nativeContext;\n            this._audioWorklet = (addAudioWorkletModule === undefined) ?\n                undefined :\n                {\n                    addModule: (moduleURL, options) => {\n                        return addAudioWorkletModule(this, moduleURL, options);\n                    }\n                };\n        }\n        get audioWorklet() {\n            return this._audioWorklet;\n        }\n        createAnalyser() {\n            return new analyserNodeConstructor(this);\n        }\n        createBiquadFilter() {\n            return new biquadFilterNodeConstructor(this);\n        }\n        createBuffer(numberOfChannels, length, sampleRate) {\n            return new audioBufferConstructor({ length, numberOfChannels, sampleRate });\n        }\n        createBufferSource() {\n            return new audioBufferSourceNodeConstructor(this);\n        }\n        createChannelMerger(numberOfInputs = 6) {\n            return new channelMergerNodeConstructor(this, { numberOfInputs });\n        }\n        createChannelSplitter(numberOfOutputs = 6) {\n            return new channelSplitterNodeConstructor(this, { numberOfOutputs });\n        }\n        createConstantSource() {\n            return new constantSourceNodeConstructor(this);\n        }\n        createConvolver() {\n            return new convolverNodeConstructor(this);\n        }\n        createDelay(maxDelayTime = 1) {\n            return new delayNodeConstructor(this, { maxDelayTime });\n        }\n        createDynamicsCompressor() {\n            return new dynamicsCompressorNodeConstructor(this);\n        }\n        createGain() {\n            return new gainNodeConstructor(this);\n        }\n        createIIRFilter(feedforward, feedback) {\n            return new iIRFilterNodeConstructor(this, { feedback, feedforward });\n        }\n        createOscillator() {\n            return new oscillatorNodeConstructor(this);\n        }\n        createPanner() {\n            return new pannerNodeConstructor(this);\n        }\n        createPeriodicWave(real, imag, constraints = { disableNormalization: false }) {\n            return new periodicWaveConstructor(this, { ...constraints, imag, real });\n        }\n        createStereoPanner() {\n            return new stereoPannerNodeConstructor(this);\n        }\n        createWaveShaper() {\n            return new waveShaperNodeConstructor(this);\n        }\n        decodeAudioData(audioData, successCallback, errorCallback) {\n            return decodeAudioData(this._nativeContext, audioData)\n                .then((audioBuffer) => {\n                if (typeof successCallback === 'function') {\n                    successCallback(audioBuffer);\n                }\n                return audioBuffer;\n            })\n                .catch((err) => {\n                if (typeof errorCallback === 'function') {\n                    errorCallback(err);\n                }\n                throw err;\n            });\n        }\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/base-audio-context-constructor.js.map","import { detachArrayBuffer } from '../helpers/detach-array-buffer';\nimport { wrapAudioBufferGetChannelDataMethod } from '../helpers/wrap-audio-buffer-get-channel-data-method';\nexport const createDecodeAudioData = (audioBufferStore, cacheTestResult, createDataCloneError, createEncodingError, detachedArrayBuffers, getNativeContext, isNativeContext, isNativeOfflineAudioContext, nativeOfflineAudioContextConstructor, testAudioBufferCopyChannelMethodsOutOfBoundsSupport, testPromiseSupport, wrapAudioBufferCopyChannelMethods, wrapAudioBufferCopyChannelMethodsOutOfBounds) => {\n    return (anyContext, audioData) => {\n        const nativeContext = isNativeContext(anyContext) ? anyContext : getNativeContext(anyContext);\n        // Bug #43: Only Chrome and Opera do throw a DataCloneError.\n        if (detachedArrayBuffers.has(audioData)) {\n            const err = createDataCloneError();\n            return Promise.reject(err);\n        }\n        // The audioData parameter maybe of a type which can't be added to a WeakSet.\n        try {\n            detachedArrayBuffers.add(audioData);\n        }\n        catch {\n            // Ignore errors.\n        }\n        // Bug #21: Safari does not support promises yet.\n        if (cacheTestResult(testPromiseSupport, () => testPromiseSupport(nativeContext))) {\n            // Bug #101: Edge does not decode something on a closed OfflineAudioContext.\n            const nativeContextOrBackupNativeContext = (nativeContext.state === 'closed' &&\n                nativeOfflineAudioContextConstructor !== null &&\n                isNativeOfflineAudioContext(nativeContext)) ?\n                new nativeOfflineAudioContextConstructor(1, 1, nativeContext.sampleRate) :\n                nativeContext;\n            const promise = nativeContextOrBackupNativeContext\n                .decodeAudioData(audioData)\n                .catch((err) => {\n                // Bug #27: Edge is rejecting invalid arrayBuffers with a DOMException.\n                if (err instanceof DOMException && err.name === 'NotSupportedError') {\n                    throw new TypeError();\n                }\n                throw err;\n            });\n            return promise\n                .then((audioBuffer) => {\n                // Bug #157: Only Chrome & Opera do allow the bufferOffset to be out-of-bounds.\n                if (!cacheTestResult(testAudioBufferCopyChannelMethodsOutOfBoundsSupport, () => testAudioBufferCopyChannelMethodsOutOfBoundsSupport(audioBuffer))) {\n                    wrapAudioBufferCopyChannelMethodsOutOfBounds(audioBuffer);\n                }\n                audioBufferStore.add(audioBuffer);\n                return audioBuffer;\n            });\n        }\n        // Bug #21: Safari does not return a Promise yet.\n        return new Promise((resolve, reject) => {\n            const complete = () => {\n                // Bug #133: Safari does neuter the ArrayBuffer.\n                try {\n                    detachArrayBuffer(audioData);\n                }\n                catch { /* Ignore errors. */ }\n            };\n            const fail = (err) => {\n                reject(err);\n                complete();\n            };\n            // Bug #26: Safari throws a synchronous error.\n            try {\n                // Bug #1: Safari requires a successCallback.\n                nativeContext.decodeAudioData(audioData, (audioBuffer) => {\n                    // Bug #5: Safari does not support copyFromChannel() and copyToChannel().\n                    // Bug #100: Safari does throw a wrong error when calling getChannelData() with an out-of-bounds value.\n                    if (typeof audioBuffer.copyFromChannel !== 'function') {\n                        wrapAudioBufferCopyChannelMethods(audioBuffer);\n                        wrapAudioBufferGetChannelDataMethod(audioBuffer);\n                    }\n                    audioBufferStore.add(audioBuffer);\n                    complete();\n                    resolve(audioBuffer);\n                }, (err) => {\n                    // Bug #4: Safari returns null instead of an error.\n                    if (err === null) {\n                        fail(createEncodingError());\n                    }\n                    else {\n                        fail(err);\n                    }\n                });\n            }\n            catch (err) {\n                fail(err);\n            }\n        });\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/decode-audio-data.js.map","export const detachArrayBuffer = (arrayBuffer) => {\n    const { port1 } = new MessageChannel();\n    port1.postMessage(arrayBuffer, [arrayBuffer]);\n};\n//# sourceMappingURL=/build/es2019/helpers/detach-array-buffer.js.map","export const createDataCloneError = () => {\n    try {\n        return new DOMException('', 'DataCloneError');\n    }\n    catch (err) {\n        // Bug #122: Edge is the only browser that does not yet allow to construct a DOMException.\n        err.code = 25;\n        err.name = 'DataCloneError';\n        return err;\n    }\n};\n//# sourceMappingURL=/build/es2019/factories/data-clone-error.js.map","export const createEncodingError = () => {\n    try {\n        return new DOMException('', 'EncodingError');\n    }\n    catch (err) {\n        // Bug #122: Edge is the only browser that does not yet allow to construct a DOMException.\n        err.code = 0;\n        err.name = 'EncodingError';\n        return err;\n    }\n};\n//# sourceMappingURL=/build/es2019/factories/encoding-error.js.map","export const createMediaElementAudioSourceNodeConstructor = (audioNodeConstructor, createNativeMediaElementAudioSourceNode, getNativeContext, isNativeOfflineAudioContext) => {\n    return class MediaElementAudioSourceNode extends audioNodeConstructor {\n        constructor(context, options) {\n            const nativeContext = getNativeContext(context);\n            const nativeMediaElementAudioSourceNode = createNativeMediaElementAudioSourceNode(nativeContext, options);\n            // Bug #171: Safari allows to create a MediaElementAudioSourceNode with an OfflineAudioContext.\n            if (isNativeOfflineAudioContext(nativeContext)) {\n                throw TypeError();\n            }\n            super(context, true, nativeMediaElementAudioSourceNode, null);\n            // Bug #63: Edge does not expose the mediaElement yet.\n            this._mediaElement = options.mediaElement;\n            this._nativeMediaElementAudioSourceNode = nativeMediaElementAudioSourceNode;\n        }\n        get mediaElement() {\n            return (this._nativeMediaElementAudioSourceNode.mediaElement === undefined) ?\n                this._mediaElement :\n                this._nativeMediaElementAudioSourceNode.mediaElement;\n        }\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/media-element-audio-source-node-constructor.js.map","export const createNativeMediaElementAudioSourceNodeFactory = (createNativeAudioNode) => {\n    return (nativeAudioContext, options) => createNativeAudioNode(nativeAudioContext, (ntvDCntxt) => {\n        return ntvDCntxt.createMediaElementSource(options.mediaElement);\n    });\n};\n//# sourceMappingURL=/build/es2019/factories/native-media-element-audio-source-node-factory.js.map","import { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nexport const createNativeMediaStreamAudioDestinationNodeFactory = (createNativeAudioNode, createNotSupportedError) => {\n    return (nativeAudioContext, options) => {\n        // Bug #64: Edge does not support MediaStreamAudioDestinationNodes.\n        if (nativeAudioContext.createMediaStreamDestination === undefined) {\n            throw createNotSupportedError();\n        }\n        const nativeMediaStreamAudioDestinationNode = createNativeAudioNode(nativeAudioContext, (ntvDCntxt) => {\n            return ntvDCntxt.createMediaStreamDestination();\n        });\n        assignNativeAudioNodeOptions(nativeMediaStreamAudioDestinationNode, options);\n        // Bug #174: Safari does expose a wrong numberOfOutputs.\n        if (nativeMediaStreamAudioDestinationNode.numberOfOutputs === 1) {\n            Object.defineProperty(nativeMediaStreamAudioDestinationNode, 'numberOfOutputs', { get: () => 0 });\n        }\n        return nativeMediaStreamAudioDestinationNode;\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/native-media-stream-audio-destination-node-factory.js.map","export const createMediaStreamAudioSourceNodeConstructor = (audioNodeConstructor, createNativeMediaStreamAudioSourceNode, getNativeContext, isNativeOfflineAudioContext) => {\n    return class MediaStreamAudioSourceNode extends audioNodeConstructor {\n        constructor(context, options) {\n            const nativeContext = getNativeContext(context);\n            const nativeMediaStreamAudioSourceNode = createNativeMediaStreamAudioSourceNode(nativeContext, options);\n            // Bug #172: Safari allows to create a MediaStreamAudioSourceNode with an OfflineAudioContext.\n            if (isNativeOfflineAudioContext(nativeContext)) {\n                throw new TypeError();\n            }\n            super(context, true, nativeMediaStreamAudioSourceNode, null);\n            this._nativeMediaStreamAudioSourceNode = nativeMediaStreamAudioSourceNode;\n        }\n        get mediaStream() {\n            return this._nativeMediaStreamAudioSourceNode.mediaStream;\n        }\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/media-stream-audio-source-node-constructor.js.map","export const createNativeMediaStreamAudioSourceNodeFactory = (createNativeAudioNode) => {\n    return (nativeAudioContext, { mediaStream }) => {\n        const audioStreamTracks = mediaStream.getAudioTracks();\n        const nativeMediaStreamAudioSourceNode = createNativeAudioNode(nativeAudioContext, (ntvDCntxt) => {\n            /*\n             * Bug #151: Safari does not use the audio track as input anymore if it gets removed from the mediaStream after construction.\n             * Bug #159: Safari picks the first audio track if the MediaStream has more than one audio track.\n             */\n            const filteredAudioStreamTracks = audioStreamTracks\n                .sort((a, b) => ((a.id < b.id) ? -1 : (a.id > b.id) ? 1 : 0))\n                .slice(0, 1);\n            return ntvDCntxt.createMediaStreamSource(new MediaStream(filteredAudioStreamTracks));\n        });\n        // Bug #63: Edge does not expose the mediaStream yet.\n        Object.defineProperty(nativeMediaStreamAudioSourceNode, 'mediaStream', { value: mediaStream });\n        return nativeMediaStreamAudioSourceNode;\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/native-media-stream-audio-source-node-factory.js.map","export const createMediaStreamTrackAudioSourceNodeConstructor = (audioNodeConstructor, createNativeMediaStreamTrackAudioSourceNode, getNativeContext) => {\n    return class MediaStreamTrackAudioSourceNode extends audioNodeConstructor {\n        constructor(context, options) {\n            const nativeContext = getNativeContext(context);\n            const nativeMediaStreamTrackAudioSourceNode = createNativeMediaStreamTrackAudioSourceNode(nativeContext, options);\n            super(context, true, nativeMediaStreamTrackAudioSourceNode, null);\n        }\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/media-stream-track-audio-source-node-constructor.js.map","export const createNativeMediaStreamTrackAudioSourceNodeFactory = (createInvalidStateError, createNativeAudioNode, isNativeOfflineAudioContext) => {\n    return (nativeAudioContext, { mediaStreamTrack }) => {\n        if (typeof nativeAudioContext.createMediaStreamTrackSource === 'function') {\n            return createNativeAudioNode(nativeAudioContext, (ntvDCntxt) => ntvDCntxt.createMediaStreamTrackSource(mediaStreamTrack));\n        }\n        // Bug #121: Only Firefox does yet support the MediaStreamTrackAudioSourceNode.\n        return createNativeAudioNode(nativeAudioContext, (ntvDCntxt) => {\n            const mediaStream = new MediaStream([mediaStreamTrack]);\n            const nativeMediaStreamAudioSourceNode = ntvDCntxt.createMediaStreamSource(mediaStream);\n            // Bug #120: Firefox does not throw an error if the mediaStream has no audio track.\n            if (mediaStreamTrack.kind !== 'audio') {\n                throw createInvalidStateError();\n            }\n            // Bug #172: Safari allows to create a MediaStreamAudioSourceNode with an OfflineAudioContext.\n            if (isNativeOfflineAudioContext(ntvDCntxt)) {\n                throw new TypeError();\n            }\n            return nativeMediaStreamAudioSourceNode;\n        });\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/native-media-stream-track-audio-source-node-factory.js.map","import { isValidLatencyHint } from '../helpers/is-valid-latency-hint';\nexport const createAudioContextConstructor = (baseAudioContextConstructor, createInvalidStateError, createNotSupportedError, createUnknownError, mediaElementAudioSourceNodeConstructor, mediaStreamAudioDestinationNodeConstructor, mediaStreamAudioSourceNodeConstructor, mediaStreamTrackAudioSourceNodeConstructor, nativeAudioContextConstructor) => {\n    return class AudioContext extends baseAudioContextConstructor {\n        constructor(options = {}) {\n            if (nativeAudioContextConstructor === null) {\n                throw new Error('Missing the native AudioContext constructor.');\n            }\n            const nativeAudioContext = new nativeAudioContextConstructor(options);\n            // Bug #131 Safari returns null when there are four other AudioContexts running already.\n            if (nativeAudioContext === null) {\n                throw createUnknownError();\n            }\n            // Bug #51 Only Chrome and Opera throw an error if the given latencyHint is invalid.\n            if (!isValidLatencyHint(options.latencyHint)) {\n                throw new TypeError(`The provided value '${options.latencyHint}' is not a valid enum value of type AudioContextLatencyCategory.`);\n            }\n            // Bug #150 Only Chrome, Firefox and Opera support setting the sampleRate.\n            if (options.sampleRate !== undefined && nativeAudioContext.sampleRate !== options.sampleRate) {\n                throw createNotSupportedError();\n            }\n            super(nativeAudioContext, 2);\n            const { latencyHint } = options;\n            const { sampleRate } = nativeAudioContext;\n            // @todo The values for 'balanced', 'interactive' and 'playback' are just copied from Chrome's implementation.\n            this._baseLatency = (typeof nativeAudioContext.baseLatency === 'number')\n                ? nativeAudioContext.baseLatency\n                : (latencyHint === 'balanced')\n                    ? (512 / sampleRate)\n                    : (latencyHint === 'interactive' || latencyHint === undefined)\n                        ? (256 / sampleRate)\n                        : (latencyHint === 'playback')\n                            ? (1024 / sampleRate)\n                            /*\n                             * @todo The min (256) and max (16384) values are taken from the allowed bufferSize values of a\n                             * ScriptProcessorNode.\n                             */\n                            : ((Math.max(2, Math.min(128, Math.round((latencyHint * sampleRate) / 128))) * 128) / sampleRate);\n            this._nativeAudioContext = nativeAudioContext;\n            this._state = null;\n            /*\n             * Bug #34: Chrome and Opera pretend to be running right away, but fire an onstatechange event when the state actually changes\n             * to 'running'.\n             */\n            if (nativeAudioContext.state === 'running') {\n                this._state = 'suspended';\n                const revokeState = () => {\n                    if (this._state === 'suspended') {\n                        this._state = null;\n                    }\n                    nativeAudioContext.removeEventListener('statechange', revokeState);\n                };\n                nativeAudioContext.addEventListener('statechange', revokeState);\n            }\n        }\n        get baseLatency() {\n            return this._baseLatency;\n        }\n        get state() {\n            return (this._state !== null) ? this._state : this._nativeAudioContext.state;\n        }\n        close() {\n            // Bug #35: Firefox does not throw an error if the AudioContext was closed before.\n            if (this.state === 'closed') {\n                return this._nativeAudioContext\n                    .close()\n                    .then(() => {\n                    throw createInvalidStateError();\n                });\n            }\n            // Bug #34: If the state was set to suspended before it should be revoked now.\n            if (this._state === 'suspended') {\n                this._state = null;\n            }\n            return this._nativeAudioContext.close();\n            /*\n             * Bug #50: Deleting the AudioGraph is currently not possible anymore.\n             * ...then(() => deleteAudioGraph(this, this._nativeAudioContext));\n             */\n        }\n        createMediaElementSource(mediaElement) {\n            return new mediaElementAudioSourceNodeConstructor(this, { mediaElement });\n        }\n        createMediaStreamDestination() {\n            return new mediaStreamAudioDestinationNodeConstructor(this);\n        }\n        createMediaStreamSource(mediaStream) {\n            return new mediaStreamAudioSourceNodeConstructor(this, { mediaStream });\n        }\n        createMediaStreamTrackSource(mediaStreamTrack) {\n            return new mediaStreamTrackAudioSourceNodeConstructor(this, { mediaStreamTrack });\n        }\n        resume() {\n            if (this._state === 'suspended') {\n                return new Promise((resolve, reject) => {\n                    const resolvePromise = () => {\n                        this._nativeAudioContext.removeEventListener('statechange', resolvePromise);\n                        if (this._nativeAudioContext.state === 'running') {\n                            resolve();\n                        }\n                        else {\n                            this\n                                .resume()\n                                .then(resolve, reject);\n                        }\n                    };\n                    this._nativeAudioContext.addEventListener('statechange', resolvePromise);\n                });\n            }\n            return this._nativeAudioContext\n                .resume()\n                .catch((err) => {\n                // Bug #55: Chrome, Edge and Opera do throw an InvalidAccessError instead of an InvalidStateError.\n                // Bug #56: Safari invokes the catch handler but without an error.\n                if (err === undefined || err.code === 15) {\n                    throw createInvalidStateError();\n                }\n                throw err;\n            });\n        }\n        suspend() {\n            return this._nativeAudioContext\n                .suspend()\n                .catch((err) => {\n                // Bug #56: Safari invokes the catch handler but without an error.\n                if (err === undefined) {\n                    throw createInvalidStateError();\n                }\n                throw err;\n            });\n        }\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/audio-context-constructor.js.map","export const isValidLatencyHint = (latencyHint) => {\n    return latencyHint === undefined ||\n        typeof latencyHint === 'number' ||\n        (typeof latencyHint === 'string' && (latencyHint === 'balanced' || latencyHint === 'interactive' || latencyHint === 'playback'));\n};\n//# sourceMappingURL=/build/es2019/helpers/is-valid-latency-hint.js.map","export const createUnknownError = () => {\n    try {\n        return new DOMException('', 'UnknownError');\n    }\n    catch (err) {\n        // Bug #122: Edge is the only browser that does not yet allow to construct a DOMException.\n        err.name = 'UnknownError';\n        return err;\n    }\n};\n//# sourceMappingURL=/build/es2019/factories/unknown-error.js.map","export const createGetUnrenderedAudioWorkletNodes = (unrenderedAudioWorkletNodeStore) => {\n    return (nativeContext) => {\n        const unrenderedAudioWorkletNodes = unrenderedAudioWorkletNodeStore.get(nativeContext);\n        if (unrenderedAudioWorkletNodes === undefined) {\n            throw new Error('The context has no set of AudioWorkletNodes.');\n        }\n        return unrenderedAudioWorkletNodes;\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/get-unrendered-audio-worklet-nodes.js.map","export const createAddUnrenderedAudioWorkletNode = (getUnrenderedAudioWorkletNodes) => {\n    return (nativeContext, audioWorkletNode) => {\n        getUnrenderedAudioWorkletNodes(nativeContext)\n            .add(audioWorkletNode);\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/add-unrendered-audio-worklet-node.js.map","import { isNativeAudioNode } from '../guards/native-audio-node';\nexport const createConnectMultipleOutputs = (createIndexSizeError) => {\n    return (outputAudioNodes, destination, output = 0, input = 0) => {\n        const outputAudioNode = outputAudioNodes[output];\n        if (outputAudioNode === undefined) {\n            throw createIndexSizeError();\n        }\n        if (isNativeAudioNode(destination)) {\n            return outputAudioNode.connect(destination, 0, input);\n        }\n        return outputAudioNode.connect(destination, 0);\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/connect-multiple-outputs.js.map","export const createDeleteUnrenderedAudioWorkletNode = (getUnrenderedAudioWorkletNodes) => {\n    return (nativeContext, audioWorkletNode) => {\n        getUnrenderedAudioWorkletNodes(nativeContext)\n            .delete(audioWorkletNode);\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/delete-unrendered-audio-worklet-node.js.map","import { MOST_NEGATIVE_SINGLE_FLOAT, MOST_POSITIVE_SINGLE_FLOAT } from '../constants';\nimport { computeBufferSize } from '../helpers/compute-buffer-size';\nimport { copyFromChannel } from '../helpers/copy-from-channel';\nimport { copyToChannel } from '../helpers/copy-to-channel';\nimport { createAudioWorkletProcessor } from '../helpers/create-audio-worklet-processor';\nimport { createNestedArrays } from '../helpers/create-nested-arrays';\nimport { ReadOnlyMap } from '../read-only-map';\nexport const createNativeAudioWorkletNodeFakerFactory = (auxiliaryGainNodeStore, connectMultipleOutputs, createIndexSizeError, createInvalidStateError, createNativeChannelMergerNode, createNativeChannelSplitterNode, createNativeConstantSourceNode, createNativeGainNode, createNativeScriptProcessorNode, createNotSupportedError, disconnectMultipleOutputs, exposeCurrentFrameAndCurrentTime, monitorConnections) => {\n    return (nativeContext, baseLatency, processorConstructor, options) => {\n        if (options.numberOfInputs === 0 && options.numberOfOutputs === 0) {\n            throw createNotSupportedError();\n        }\n        if (options.outputChannelCount !== undefined) {\n            // @todo Check if any of the channelCount values is greater than the implementation's maximum number of channels.\n            if (options.outputChannelCount.some((channelCount) => (channelCount < 1))) {\n                throw createNotSupportedError();\n            }\n            if (options.outputChannelCount.length !== options.numberOfOutputs) {\n                throw createIndexSizeError();\n            }\n        }\n        // Bug #61: This is not part of the standard but required for the faker to work.\n        if (options.channelCountMode !== 'explicit') {\n            throw createNotSupportedError();\n        }\n        const numberOfInputChannels = options.channelCount * options.numberOfInputs;\n        const numberOfOutputChannels = options.outputChannelCount.reduce((sum, value) => sum + value, 0);\n        const numberOfParameters = (processorConstructor.parameterDescriptors === undefined)\n            ? 0\n            : processorConstructor.parameterDescriptors.length;\n        // Bug #61: This is not part of the standard but required for the faker to work.\n        if (numberOfInputChannels + numberOfParameters > 6 || numberOfOutputChannels > 6) {\n            throw createNotSupportedError();\n        }\n        const messageChannel = new MessageChannel();\n        const gainNodes = [];\n        const inputChannelSplitterNodes = [];\n        for (let i = 0; i < options.numberOfInputs; i += 1) {\n            gainNodes.push(createNativeGainNode(nativeContext, {\n                channelCount: options.channelCount,\n                channelCountMode: options.channelCountMode,\n                channelInterpretation: options.channelInterpretation,\n                gain: 1\n            }));\n            inputChannelSplitterNodes.push(createNativeChannelSplitterNode(nativeContext, {\n                channelCount: options.channelCount,\n                channelCountMode: 'explicit',\n                channelInterpretation: 'discrete',\n                numberOfOutputs: options.channelCount\n            }));\n        }\n        const constantSourceNodes = [];\n        if (processorConstructor.parameterDescriptors !== undefined) {\n            for (const { defaultValue, maxValue, minValue, name } of processorConstructor.parameterDescriptors) {\n                const constantSourceNode = createNativeConstantSourceNode(nativeContext, {\n                    channelCount: 1,\n                    channelCountMode: 'explicit',\n                    channelInterpretation: 'discrete',\n                    offset: (options.parameterData[name] !== undefined)\n                        ? options.parameterData[name]\n                        : (defaultValue === undefined)\n                            ? 0\n                            : defaultValue\n                });\n                Object.defineProperties(constantSourceNode.offset, {\n                    defaultValue: {\n                        get: () => (defaultValue === undefined) ? 0 : defaultValue\n                    },\n                    maxValue: {\n                        get: () => (maxValue === undefined) ? MOST_POSITIVE_SINGLE_FLOAT : maxValue\n                    },\n                    minValue: {\n                        get: () => (minValue === undefined) ? MOST_NEGATIVE_SINGLE_FLOAT : minValue\n                    }\n                });\n                constantSourceNodes.push(constantSourceNode);\n            }\n        }\n        const inputChannelMergerNode = createNativeChannelMergerNode(nativeContext, {\n            channelCount: 1,\n            channelCountMode: 'explicit',\n            channelInterpretation: 'speakers',\n            numberOfInputs: Math.max(1, numberOfInputChannels + numberOfParameters)\n        });\n        const bufferSize = computeBufferSize(baseLatency, nativeContext.sampleRate);\n        const scriptProcessorNode = createNativeScriptProcessorNode(nativeContext, bufferSize, numberOfInputChannels + numberOfParameters, \n        // Bug #87: Only Firefox will fire an AudioProcessingEvent if there is no connected output.\n        Math.max(1, numberOfOutputChannels));\n        const outputChannelSplitterNode = createNativeChannelSplitterNode(nativeContext, {\n            channelCount: Math.max(1, numberOfOutputChannels),\n            channelCountMode: 'explicit',\n            channelInterpretation: 'discrete',\n            numberOfOutputs: Math.max(1, numberOfOutputChannels)\n        });\n        const outputChannelMergerNodes = [];\n        for (let i = 0; i < options.numberOfOutputs; i += 1) {\n            outputChannelMergerNodes.push(createNativeChannelMergerNode(nativeContext, {\n                channelCount: 1,\n                channelCountMode: 'explicit',\n                channelInterpretation: 'speakers',\n                numberOfInputs: options.outputChannelCount[i]\n            }));\n        }\n        for (let i = 0; i < options.numberOfInputs; i += 1) {\n            gainNodes[i].connect(inputChannelSplitterNodes[i]);\n            for (let j = 0; j < options.channelCount; j += 1) {\n                inputChannelSplitterNodes[i].connect(inputChannelMergerNode, j, (i * options.channelCount) + j);\n            }\n        }\n        const parameterMap = new ReadOnlyMap((processorConstructor.parameterDescriptors === undefined)\n            ? []\n            : processorConstructor.parameterDescriptors\n                .map(({ name }, index) => {\n                const constantSourceNode = constantSourceNodes[index];\n                constantSourceNode.connect(inputChannelMergerNode, 0, numberOfInputChannels + index);\n                constantSourceNode.start(0);\n                return [name, constantSourceNode.offset];\n            }));\n        inputChannelMergerNode.connect(scriptProcessorNode);\n        let channelInterpretation = options.channelInterpretation;\n        let onprocessorerror = null;\n        // Bug #87: Expose at least one output to make this node connectable.\n        const outputAudioNodes = (options.numberOfOutputs === 0) ? [scriptProcessorNode] : outputChannelMergerNodes;\n        const nativeAudioWorkletNodeFaker = {\n            get bufferSize() {\n                return bufferSize;\n            },\n            get channelCount() {\n                return options.channelCount;\n            },\n            set channelCount(_) {\n                // Bug #61: This is not part of the standard but required for the faker to work.\n                throw createInvalidStateError();\n            },\n            get channelCountMode() {\n                return options.channelCountMode;\n            },\n            set channelCountMode(_) {\n                // Bug #61: This is not part of the standard but required for the faker to work.\n                throw createInvalidStateError();\n            },\n            get channelInterpretation() {\n                return channelInterpretation;\n            },\n            set channelInterpretation(value) {\n                for (const gainNode of gainNodes) {\n                    gainNode.channelInterpretation = value;\n                }\n                channelInterpretation = value;\n            },\n            get context() {\n                return scriptProcessorNode.context;\n            },\n            get inputs() {\n                return gainNodes;\n            },\n            get numberOfInputs() {\n                return options.numberOfInputs;\n            },\n            get numberOfOutputs() {\n                return options.numberOfOutputs;\n            },\n            get onprocessorerror() {\n                return onprocessorerror;\n            },\n            set onprocessorerror(value) {\n                if (typeof onprocessorerror === 'function') {\n                    nativeAudioWorkletNodeFaker.removeEventListener('processorerror', onprocessorerror);\n                }\n                onprocessorerror = (typeof value === 'function') ? value : null;\n                if (typeof onprocessorerror === 'function') {\n                    nativeAudioWorkletNodeFaker.addEventListener('processorerror', onprocessorerror);\n                }\n            },\n            get parameters() {\n                return parameterMap;\n            },\n            get port() {\n                return messageChannel.port2;\n            },\n            addEventListener(...args) {\n                return scriptProcessorNode.addEventListener(args[0], args[1], args[2]);\n            },\n            connect: connectMultipleOutputs.bind(null, outputAudioNodes),\n            disconnect: disconnectMultipleOutputs.bind(null, outputAudioNodes),\n            dispatchEvent(...args) {\n                return scriptProcessorNode.dispatchEvent(args[0]);\n            },\n            removeEventListener(...args) {\n                return scriptProcessorNode.removeEventListener(args[0], args[1], args[2]);\n            }\n        };\n        const patchedEventListeners = new Map(); // tslint:disable-line:max-line-length\n        messageChannel.port1.addEventListener = ((addEventListener) => {\n            return (...args) => {\n                if (args[0] === 'message') {\n                    const unpatchedEventListener = (typeof args[1] === 'function')\n                        ? args[1]\n                        : (typeof args[1] === 'object' && args[1] !== null && typeof args[1].handleEvent === 'function')\n                            ? args[1].handleEvent\n                            : null;\n                    if (unpatchedEventListener !== null) {\n                        const patchedEventListener = patchedEventListeners.get(args[1]);\n                        if (patchedEventListener !== undefined) {\n                            args[1] = patchedEventListener;\n                        }\n                        else {\n                            args[1] = (event) => {\n                                exposeCurrentFrameAndCurrentTime(nativeContext.currentTime, nativeContext.sampleRate, () => unpatchedEventListener(event));\n                            };\n                            patchedEventListeners.set(unpatchedEventListener, args[1]);\n                        }\n                    }\n                }\n                return addEventListener.call(messageChannel.port1, args[0], args[1], args[2]);\n            };\n        })(messageChannel.port1.addEventListener);\n        messageChannel.port1.removeEventListener = ((removeEventListener) => {\n            return (...args) => {\n                if (args[0] === 'message') {\n                    const patchedEventListener = patchedEventListeners.get(args[1]);\n                    if (patchedEventListener !== undefined) {\n                        patchedEventListeners.delete(args[1]);\n                        args[1] = patchedEventListener;\n                    }\n                }\n                return removeEventListener.call(messageChannel.port1, args[0], args[1], args[2]);\n            };\n        })(messageChannel.port1.removeEventListener);\n        let onmessage = null;\n        Object.defineProperty(messageChannel.port1, 'onmessage', {\n            get: () => onmessage,\n            set: (value) => {\n                if (typeof onmessage === 'function') {\n                    messageChannel.port1.removeEventListener('message', onmessage);\n                }\n                onmessage = (typeof value === 'function') ? value : null;\n                if (typeof onmessage === 'function') {\n                    messageChannel.port1.addEventListener('message', onmessage);\n                    messageChannel.port1.start();\n                }\n            }\n        });\n        processorConstructor.prototype.port = messageChannel.port1;\n        let audioWorkletProcessor = null;\n        const audioWorkletProcessorPromise = createAudioWorkletProcessor(nativeContext, nativeAudioWorkletNodeFaker, processorConstructor, options);\n        audioWorkletProcessorPromise\n            .then((dWrkltPrcssr) => audioWorkletProcessor = dWrkltPrcssr);\n        const inputs = createNestedArrays(options.numberOfInputs, options.channelCount);\n        const outputs = createNestedArrays(options.numberOfOutputs, options.outputChannelCount);\n        const parameters = (processorConstructor.parameterDescriptors === undefined) ?\n            [] :\n            processorConstructor.parameterDescriptors\n                .reduce((prmtrs, { name }) => ({ ...prmtrs, [name]: new Float32Array(128) }), {});\n        let isActive = true;\n        const disconnectOutputsGraph = () => {\n            if (options.numberOfOutputs > 0) {\n                scriptProcessorNode.disconnect(outputChannelSplitterNode);\n            }\n            for (let i = 0, outputChannelSplitterNodeOutput = 0; i < options.numberOfOutputs; i += 1) {\n                const outputChannelMergerNode = outputChannelMergerNodes[i];\n                for (let j = 0; j < options.outputChannelCount[i]; j += 1) {\n                    outputChannelSplitterNode.disconnect(outputChannelMergerNode, outputChannelSplitterNodeOutput + j, j);\n                }\n                outputChannelSplitterNodeOutput += options.outputChannelCount[i];\n            }\n        };\n        scriptProcessorNode.onaudioprocess = ({ inputBuffer, outputBuffer }) => {\n            if (audioWorkletProcessor !== null) {\n                for (let i = 0; i < bufferSize; i += 128) {\n                    for (let j = 0; j < options.numberOfInputs; j += 1) {\n                        for (let k = 0; k < options.channelCount; k += 1) {\n                            copyFromChannel(inputBuffer, inputs[j], k, k, i);\n                        }\n                    }\n                    if (processorConstructor.parameterDescriptors !== undefined) {\n                        processorConstructor.parameterDescriptors.forEach(({ name }, index) => {\n                            copyFromChannel(inputBuffer, parameters, name, numberOfInputChannels + index, i);\n                        });\n                    }\n                    for (let j = 0; j < options.numberOfInputs; j += 1) {\n                        for (let k = 0; k < options.outputChannelCount[j]; k += 1) {\n                            // The byteLength will be 0 when the ArrayBuffer was transferred.\n                            if (outputs[j][k].byteLength === 0) {\n                                outputs[j][k] = new Float32Array(128);\n                            }\n                        }\n                    }\n                    try {\n                        const potentiallyEmptyInputs = inputs\n                            .map((input, index) => {\n                            const auxiliaryGainNodes = auxiliaryGainNodeStore.get(nativeAudioWorkletNodeFaker);\n                            if (auxiliaryGainNodes === undefined || auxiliaryGainNodes.get(index) === undefined) {\n                                return [];\n                            }\n                            return input;\n                        });\n                        const activeSourceFlag = exposeCurrentFrameAndCurrentTime(nativeContext.currentTime + (i / nativeContext.sampleRate), nativeContext.sampleRate, () => audioWorkletProcessor.process(potentiallyEmptyInputs, outputs, parameters));\n                        isActive = activeSourceFlag;\n                        for (let j = 0, outputChannelSplitterNodeOutput = 0; j < options.numberOfOutputs; j += 1) {\n                            for (let k = 0; k < options.outputChannelCount[j]; k += 1) {\n                                copyToChannel(outputBuffer, outputs[j], k, outputChannelSplitterNodeOutput + k, i);\n                            }\n                            outputChannelSplitterNodeOutput += options.outputChannelCount[j];\n                        }\n                    }\n                    catch (error) {\n                        isActive = false;\n                        nativeAudioWorkletNodeFaker.dispatchEvent(new ErrorEvent('processorerror', { error }));\n                    }\n                    if (!isActive) {\n                        for (let j = 0; j < options.numberOfInputs; j += 1) {\n                            gainNodes[j].disconnect(inputChannelSplitterNodes[j]);\n                            for (let k = 0; k < options.channelCount; k += 1) {\n                                inputChannelSplitterNodes[i].disconnect(inputChannelMergerNode, k, (j * options.channelCount) + k);\n                            }\n                        }\n                        if (processorConstructor.parameterDescriptors !== undefined) {\n                            const length = processorConstructor.parameterDescriptors.length;\n                            for (let j = 0; j < length; j += 1) {\n                                const constantSourceNode = constantSourceNodes[j];\n                                constantSourceNode.disconnect(inputChannelMergerNode, 0, numberOfInputChannels + j);\n                                constantSourceNode.stop();\n                            }\n                        }\n                        inputChannelMergerNode.disconnect(scriptProcessorNode);\n                        scriptProcessorNode.onaudioprocess = null; // tslint:disable-line:deprecation\n                        if (isConnected) {\n                            disconnectOutputsGraph();\n                        }\n                        else {\n                            disconnectFakeGraph();\n                        }\n                        break;\n                    }\n                }\n            }\n        };\n        let isConnected = false;\n        // Bug #87: Only Firefox will fire an AudioProcessingEvent if there is no connected output.\n        const nativeGainNode = createNativeGainNode(nativeContext, { channelCount: 1, channelCountMode: 'explicit', channelInterpretation: 'discrete', gain: 0 });\n        const connectFakeGraph = () => scriptProcessorNode\n            .connect(nativeGainNode)\n            /*\n             * Bug #50: Edge does not yet allow to create AudioNodes on a closed AudioContext. Therefore the context property is used here\n             * to make sure to connect the right destination.\n             */\n            .connect(nativeGainNode.context.destination);\n        const disconnectFakeGraph = () => {\n            scriptProcessorNode.disconnect(nativeGainNode);\n            nativeGainNode.disconnect();\n        };\n        const whenConnected = () => {\n            if (isActive) {\n                disconnectFakeGraph();\n                if (options.numberOfOutputs > 0) {\n                    scriptProcessorNode.connect(outputChannelSplitterNode);\n                }\n                for (let i = 0, outputChannelSplitterNodeOutput = 0; i < options.numberOfOutputs; i += 1) {\n                    const outputChannelMergerNode = outputChannelMergerNodes[i];\n                    for (let j = 0; j < options.outputChannelCount[i]; j += 1) {\n                        outputChannelSplitterNode.connect(outputChannelMergerNode, outputChannelSplitterNodeOutput + j, j);\n                    }\n                    outputChannelSplitterNodeOutput += options.outputChannelCount[i];\n                }\n            }\n            isConnected = true;\n        };\n        const whenDisconnected = () => {\n            if (isActive) {\n                connectFakeGraph();\n                disconnectOutputsGraph();\n            }\n            isConnected = false;\n        };\n        connectFakeGraph();\n        return monitorConnections(nativeAudioWorkletNodeFaker, whenConnected, whenDisconnected);\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/native-audio-worklet-node-faker-factory.js.map","import { NODE_TO_PROCESSOR_MAPS } from '../globals';\nimport { createAudioWorkletProcessorPromise } from './create-audio-worklet-processor-promise';\nexport const createAudioWorkletProcessor = (nativeContext, nativeAudioWorkletNode, processorConstructor, audioWorkletNodeOptions) => {\n    let nodeToProcessorMap = NODE_TO_PROCESSOR_MAPS.get(nativeContext);\n    if (nodeToProcessorMap === undefined) {\n        nodeToProcessorMap = new WeakMap();\n        NODE_TO_PROCESSOR_MAPS.set(nativeContext, nodeToProcessorMap);\n    }\n    const audioWorkletProcessorPromise = createAudioWorkletProcessorPromise(processorConstructor, audioWorkletNodeOptions);\n    nodeToProcessorMap.set(nativeAudioWorkletNode, audioWorkletProcessorPromise);\n    return audioWorkletProcessorPromise;\n};\n//# sourceMappingURL=/build/es2019/helpers/create-audio-worklet-processor.js.map","import { testClonabilityOfAudioWorkletNodeOptions } from '../helpers/test-clonability-of-audio-worklet-node-options';\nexport const createNativeAudioWorkletNodeFactory = (createInvalidStateError, createNativeAudioNode, createNativeAudioWorkletNodeFaker, createNativeGainNode, createNotSupportedError, monitorConnections) => {\n    return (nativeContext, baseLatency, nativeAudioWorkletNodeConstructor, name, processorConstructor, options) => {\n        if (nativeAudioWorkletNodeConstructor !== null) {\n            try {\n                const nativeAudioWorkletNode = createNativeAudioNode(nativeContext, (ntvCntxt) => {\n                    return new nativeAudioWorkletNodeConstructor(ntvCntxt, name, options);\n                });\n                const patchedEventListeners = new Map(); // tslint:disable-line:max-line-length\n                let onprocessorerror = null;\n                Object.defineProperties(nativeAudioWorkletNode, {\n                    /*\n                     * Bug #61: Overwriting the property accessors for channelCount and channelCountMode is necessary as long as some\n                     * browsers have no native implementation to achieve a consistent behavior.\n                     */\n                    channelCount: {\n                        get: () => options.channelCount,\n                        set: () => {\n                            throw createInvalidStateError();\n                        }\n                    },\n                    channelCountMode: {\n                        get: () => 'explicit',\n                        set: () => {\n                            throw createInvalidStateError();\n                        }\n                    },\n                    // Bug #156: Chrome & Opera do not yet fire an ErrorEvent.\n                    onprocessorerror: {\n                        get: () => onprocessorerror,\n                        set: (value) => {\n                            if (typeof onprocessorerror === 'function') {\n                                nativeAudioWorkletNode.removeEventListener('processorerror', onprocessorerror);\n                            }\n                            onprocessorerror = (typeof value === 'function') ? value : null;\n                            if (typeof onprocessorerror === 'function') {\n                                nativeAudioWorkletNode.addEventListener('processorerror', onprocessorerror);\n                            }\n                        }\n                    }\n                });\n                nativeAudioWorkletNode.addEventListener = ((addEventListener) => {\n                    return (...args) => {\n                        if (args[0] === 'processorerror') {\n                            const unpatchedEventListener = (typeof args[1] === 'function')\n                                ? args[1]\n                                : (typeof args[1] === 'object' && args[1] !== null && typeof args[1].handleEvent === 'function')\n                                    ? args[1].handleEvent\n                                    : null;\n                            if (unpatchedEventListener !== null) {\n                                const patchedEventListener = patchedEventListeners.get(args[1]);\n                                if (patchedEventListener !== undefined) {\n                                    args[1] = patchedEventListener;\n                                }\n                                else {\n                                    args[1] = (event) => {\n                                        unpatchedEventListener(new ErrorEvent(args[0], { ...event, error: new Error( /* @todo */) }));\n                                    };\n                                    patchedEventListeners.set(unpatchedEventListener, args[1]);\n                                }\n                            }\n                        }\n                        return addEventListener.call(nativeAudioWorkletNode, args[0], args[1], args[2]);\n                    };\n                })(nativeAudioWorkletNode.addEventListener);\n                nativeAudioWorkletNode.removeEventListener = ((removeEventListener) => {\n                    return (...args) => {\n                        if (args[0] === 'processorerror') {\n                            const patchedEventListener = patchedEventListeners.get(args[1]);\n                            if (patchedEventListener !== undefined) {\n                                patchedEventListeners.delete(args[1]);\n                                args[1] = patchedEventListener;\n                            }\n                        }\n                        return removeEventListener.call(nativeAudioWorkletNode, args[0], args[1], args[2]);\n                    };\n                })(nativeAudioWorkletNode.removeEventListener);\n                /*\n                 * Bug #86: Chrome & Opera do not invoke the process() function if the corresponding AudioWorkletNode is unconnected but has\n                 * an output.\n                 */\n                if (options.numberOfOutputs !== 0) {\n                    const nativeGainNode = createNativeGainNode(nativeContext, { channelCount: 1, channelCountMode: 'explicit', channelInterpretation: 'discrete', gain: 0 });\n                    nativeAudioWorkletNode\n                        .connect(nativeGainNode)\n                        /*\n                         * Bug #50: Edge does not yet allow to create AudioNodes on a closed AudioContext. Therefore the context property is\n                         * used here to make sure to connect the right destination.\n                         */\n                        .connect(nativeGainNode.context.destination);\n                    const whenConnected = () => nativeGainNode.disconnect();\n                    /*\n                     * Bug #50: Edge does not yet allow to create AudioNodes on a closed AudioContext. Therefore the context property is\n                     * used here to make sure to connect the right destination.\n                     */\n                    const whenDisconnected = () => nativeGainNode.connect(nativeGainNode.context.destination);\n                    // @todo Disconnect the connection when the process() function of the AudioWorkletNode returns false.\n                    return monitorConnections(nativeAudioWorkletNode, whenConnected, whenDisconnected);\n                }\n                return nativeAudioWorkletNode;\n            }\n            catch (err) {\n                // Bug #60: Chrome & Opera throw an InvalidStateError instead of a NotSupportedError.\n                if (err.code === 11) {\n                    throw createNotSupportedError();\n                }\n                throw err;\n            }\n        }\n        // Bug #61: Only Chrome & Opera have an implementation of the AudioWorkletNode yet.\n        if (processorConstructor === undefined) {\n            throw createNotSupportedError();\n        }\n        testClonabilityOfAudioWorkletNodeOptions(options);\n        return createNativeAudioWorkletNodeFaker(nativeContext, baseLatency, processorConstructor, options);\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/native-audio-worklet-node-factory.js.map","export const testClonabilityOfAudioWorkletNodeOptions = (audioWorkletNodeOptions) => {\n    const { port1 } = new MessageChannel();\n    try {\n        // This will throw an error if the audioWorkletNodeOptions are not clonable.\n        port1.postMessage(audioWorkletNodeOptions);\n    }\n    finally {\n        port1.close();\n    }\n};\n//# sourceMappingURL=/build/es2019/helpers/test-clonability-of-audio-worklet-node-options.js.map","export const createNativeAudioWorkletNodeConstructor = (window) => {\n    if (window === null) {\n        return null;\n    }\n    return (window.hasOwnProperty('AudioWorkletNode')) ? window.AudioWorkletNode : null;\n};\n//# sourceMappingURL=/build/es2019/factories/native-audio-worklet-node-constructor.js.map","export const createCreateNativeOfflineAudioContext = (createNotSupportedError, nativeOfflineAudioContextConstructor) => {\n    return (numberOfChannels, length, sampleRate) => {\n        if (nativeOfflineAudioContextConstructor === null) {\n            throw new Error('Missing the native OfflineAudioContext constructor.');\n        }\n        try {\n            return new nativeOfflineAudioContextConstructor(numberOfChannels, length, sampleRate);\n        }\n        catch (err) {\n            // Bug #143, #144 & #146: Safari throws a SyntaxError when numberOfChannels, length or sampleRate are invalid.\n            // Bug #143: Edge throws a SyntaxError when numberOfChannels or length are invalid.\n            // Bug #145: Edge throws an IndexSizeError when sampleRate is zero.\n            if (err.name === 'IndexSizeError' || err.name === 'SyntaxError') {\n                throw createNotSupportedError();\n            }\n            throw err;\n        }\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/create-native-offline-audio-context.js.map","import { wrapAudioBufferGetChannelDataMethod } from '../helpers/wrap-audio-buffer-get-channel-data-method';\nexport const createStartRendering = (audioBufferStore, cacheTestResult, getAudioNodeRenderer, getUnrenderedAudioWorkletNodes, renderNativeOfflineAudioContext, testAudioBufferCopyChannelMethodsOutOfBoundsSupport, wrapAudioBufferCopyChannelMethods, wrapAudioBufferCopyChannelMethodsOutOfBounds) => {\n    const trace = [];\n    return (destination, nativeOfflineAudioContext) => getAudioNodeRenderer(destination)\n        .render(destination, nativeOfflineAudioContext, trace)\n        /*\n         * Bug #86 & #87: Invoking the renderer of an AudioWorkletNode might be necessary if it has no direct or indirect connection to the\n         * destination.\n         */\n        .then(() => Promise\n        .all(Array\n        .from(getUnrenderedAudioWorkletNodes(nativeOfflineAudioContext))\n        .map((audioWorkletNode) => getAudioNodeRenderer(audioWorkletNode)\n        .render(audioWorkletNode, nativeOfflineAudioContext, trace))))\n        .then(() => renderNativeOfflineAudioContext(nativeOfflineAudioContext))\n        .then((audioBuffer) => {\n        // Bug #5: Safari does not support copyFromChannel() and copyToChannel().\n        // Bug #100: Safari does throw a wrong error when calling getChannelData() with an out-of-bounds value.\n        if (typeof audioBuffer.copyFromChannel !== 'function') {\n            wrapAudioBufferCopyChannelMethods(audioBuffer);\n            wrapAudioBufferGetChannelDataMethod(audioBuffer);\n            // Bug #157: Only Chrome & Opera do allow the bufferOffset to be out-of-bounds.\n        }\n        else if (!cacheTestResult(testAudioBufferCopyChannelMethodsOutOfBoundsSupport, () => testAudioBufferCopyChannelMethodsOutOfBoundsSupport(audioBuffer))) {\n            wrapAudioBufferCopyChannelMethodsOutOfBounds(audioBuffer);\n        }\n        audioBufferStore.add(audioBuffer);\n        return audioBuffer;\n    });\n};\n//# sourceMappingURL=/build/es2019/factories/start-rendering.js.map","export const createIsAnyAudioContext = (contextStore, isNativeAudioContext) => {\n    return (anything) => {\n        const nativeContext = contextStore.get(anything);\n        return isNativeAudioContext(nativeContext) || isNativeAudioContext(anything);\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/is-any-audio-context.js.map","export const createIsAnyAudioNode = (audioNodeStore, isNativeAudioNode) => {\n    return (anything) => audioNodeStore.has(anything) || isNativeAudioNode(anything);\n};\n//# sourceMappingURL=/build/es2019/factories/is-any-audio-node.js.map","export const createIsAnyAudioParam = (audioParamStore, isNativeAudioParam) => {\n    return (anything) => audioParamStore.has(anything) || isNativeAudioParam(anything);\n};\n//# sourceMappingURL=/build/es2019/factories/is-any-audio-param.js.map","export const createIsAnyOfflineAudioContext = (contextStore, isNativeOfflineAudioContext) => {\n    return (anything) => {\n        const nativeContext = contextStore.get(anything);\n        return isNativeOfflineAudioContext(nativeContext) || isNativeOfflineAudioContext(anything);\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/is-any-offline-audio-context.js.map","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","import * as tslib_1 from \"tslib\";\n/**\n * Assert that the statement is true, otherwise invoke the error.\n * @param statement\n * @param error The message which is passed into an Error\n */\nexport function assert(statement, error) {\n    if (!statement) {\n        throw new Error(error);\n    }\n}\n/**\n * Make sure that the given value is within the range\n */\nexport function assertRange(value, gte, lte) {\n    if (lte === void 0) { lte = Infinity; }\n    if (!(gte <= value && value <= lte)) {\n        throw new RangeError(\"Value must be within [\" + gte + \", \" + lte + \"], got: \" + value);\n    }\n}\n/**\n * Make sure that the given value is within the range\n */\nexport function assertContextRunning(context) {\n    // add a warning if the context is not started\n    if (!context.isOffline && context.state !== \"running\") {\n        warn(\"The AudioContext is \\\"suspended\\\". Invoke Tone.start() from a user action to start the audio.\");\n    }\n}\n/**\n * The default logger is the console\n */\nvar defaultLogger = console;\n/**\n * Set the logging interface\n */\nexport function setLogger(logger) {\n    defaultLogger = logger;\n}\n/**\n * Log anything\n */\nexport function log() {\n    var args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n    }\n    defaultLogger.log.apply(defaultLogger, tslib_1.__spread(args));\n}\n/**\n * Warn anything\n */\nexport function warn() {\n    var args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n    }\n    defaultLogger.warn.apply(defaultLogger, tslib_1.__spread(args));\n}\n//# sourceMappingURL=Debug.js.map","/**\n * Test if the arg is undefined\n */\nexport function isUndef(arg) {\n    return typeof arg === \"undefined\";\n}\n/**\n * Test if the arg is not undefined\n */\nexport function isDefined(arg) {\n    return !isUndef(arg);\n}\n/**\n * Test if the arg is a function\n */\nexport function isFunction(arg) {\n    return typeof arg === \"function\";\n}\n/**\n * Test if the argument is a number.\n */\nexport function isNumber(arg) {\n    return (typeof arg === \"number\");\n}\n/**\n * Test if the given argument is an object literal (i.e. `{}`);\n */\nexport function isObject(arg) {\n    return (Object.prototype.toString.call(arg) === \"[object Object]\" && arg.constructor === Object);\n}\n/**\n * Test if the argument is a boolean.\n */\nexport function isBoolean(arg) {\n    return (typeof arg === \"boolean\");\n}\n/**\n * Test if the argument is an Array\n */\nexport function isArray(arg) {\n    return (Array.isArray(arg));\n}\n/**\n * Test if the argument is a string.\n */\nexport function isString(arg) {\n    return (typeof arg === \"string\");\n}\n/**\n * Test if the argument is in the form of a note in scientific pitch notation.\n * e.g. \"C4\"\n */\nexport function isNote(arg) {\n    return isString(arg) && /^([a-g]{1}(?:b|#|x|bb)?)(-?[0-9]+)/i.test(arg);\n}\n//# sourceMappingURL=TypeCheck.js.map","import { AudioContext as stdAudioContext, AudioWorkletNode as stdAudioWorkletNode, OfflineAudioContext as stdOfflineAudioContext, } from \"standardized-audio-context\";\nimport { assert } from \"../util/Debug\";\nimport { isDefined } from \"../util/TypeCheck\";\n/**\n * Create a new AudioContext\n */\nexport function createAudioContext() {\n    return new stdAudioContext();\n}\n/**\n * Create a new OfflineAudioContext\n */\nexport function createOfflineAudioContext(channels, length, sampleRate) {\n    return new stdOfflineAudioContext(channels, length, sampleRate);\n}\n/**\n * A reference to the window object\n * @hidden\n */\nexport var theWindow = typeof self === \"object\" ? self : null;\n/**\n * If the browser has a window object which has an AudioContext\n * @hidden\n */\nexport var hasAudioContext = theWindow &&\n    (theWindow.hasOwnProperty(\"AudioContext\") || theWindow.hasOwnProperty(\"webkitAudioContext\"));\nexport function createAudioWorkletNode(context, name, options) {\n    assert(isDefined(stdAudioWorkletNode), \"This node only works in a secure context (https or localhost)\");\n    // @ts-ignore\n    return new stdAudioWorkletNode(context, name, options);\n}\n//# sourceMappingURL=AudioContext.js.map","/**\n * A class which provides a reliable callback using either\n * a Web Worker, or if that isn't supported, falls back to setTimeout.\n */\nvar Ticker = /** @class */ (function () {\n    function Ticker(callback, type, updateInterval) {\n        this._callback = callback;\n        this._type = type;\n        this._updateInterval = updateInterval;\n        // create the clock source for the first time\n        this._createClock();\n    }\n    /**\n     * Generate a web worker\n     */\n    Ticker.prototype._createWorker = function () {\n        var blob = new Blob([\n            /* javascript */ \"\\n\\t\\t\\t// the initial timeout time\\n\\t\\t\\tlet timeoutTime =  \" + (this._updateInterval * 1000).toFixed(1) + \";\\n\\t\\t\\t// onmessage callback\\n\\t\\t\\tself.onmessage = function(msg){\\n\\t\\t\\t\\ttimeoutTime = parseInt(msg.data);\\n\\t\\t\\t};\\n\\t\\t\\t// the tick function which posts a message\\n\\t\\t\\t// and schedules a new tick\\n\\t\\t\\tfunction tick(){\\n\\t\\t\\t\\tsetTimeout(tick, timeoutTime);\\n\\t\\t\\t\\tself.postMessage('tick');\\n\\t\\t\\t}\\n\\t\\t\\t// call tick initially\\n\\t\\t\\ttick();\\n\\t\\t\\t\"\n        ], { type: \"text/javascript\" });\n        var blobUrl = URL.createObjectURL(blob);\n        var worker = new Worker(blobUrl);\n        worker.onmessage = this._callback.bind(this);\n        this._worker = worker;\n    };\n    /**\n     * Create a timeout loop\n     */\n    Ticker.prototype._createTimeout = function () {\n        var _this = this;\n        this._timeout = setTimeout(function () {\n            _this._createTimeout();\n            _this._callback();\n        }, this._updateInterval * 1000);\n    };\n    /**\n     * Create the clock source.\n     */\n    Ticker.prototype._createClock = function () {\n        if (this._type === \"worker\") {\n            try {\n                this._createWorker();\n            }\n            catch (e) {\n                // workers not supported, fallback to timeout\n                this._type = \"timeout\";\n                this._createClock();\n            }\n        }\n        else if (this._type === \"timeout\") {\n            this._createTimeout();\n        }\n    };\n    /**\n     * Clean up the current clock source\n     */\n    Ticker.prototype._disposeClock = function () {\n        if (this._timeout) {\n            clearTimeout(this._timeout);\n            this._timeout = 0;\n        }\n        if (this._worker) {\n            this._worker.terminate();\n            this._worker.onmessage = null;\n        }\n    };\n    Object.defineProperty(Ticker.prototype, \"updateInterval\", {\n        /**\n         * The rate in seconds the ticker will update\n         */\n        get: function () {\n            return this._updateInterval;\n        },\n        set: function (interval) {\n            this._updateInterval = Math.max(interval, 128 / 44100);\n            if (this._type === \"worker\") {\n                this._worker.postMessage(Math.max(interval * 1000, 1));\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Ticker.prototype, \"type\", {\n        /**\n         * The type of the ticker, either a worker or a timeout\n         */\n        get: function () {\n            return this._type;\n        },\n        set: function (type) {\n            this._disposeClock();\n            this._type = type;\n            this._createClock();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Clean up\n     */\n    Ticker.prototype.dispose = function () {\n        this._disposeClock();\n    };\n    return Ticker;\n}());\nexport { Ticker };\n//# sourceMappingURL=Ticker.js.map","import { isAnyAudioContext, isAnyAudioNode, isAnyAudioParam, isAnyOfflineAudioContext, } from \"standardized-audio-context\";\n/**\n * Test if the given value is an instanceof AudioParam\n */\nexport function isAudioParam(arg) {\n    return isAnyAudioParam(arg);\n}\n/**\n * Test if the given value is an instanceof AudioNode\n */\nexport function isAudioNode(arg) {\n    return isAnyAudioNode(arg);\n}\n/**\n * Test if the arg is instanceof an OfflineAudioContext\n */\nexport function isOfflineAudioContext(arg) {\n    return isAnyOfflineAudioContext(arg);\n}\n/**\n * Test if the arg is an instanceof AudioContext\n */\nexport function isAudioContext(arg) {\n    return isAnyAudioContext(arg);\n}\n/**\n * Test if the arg is instanceof an AudioBuffer\n */\nexport function isAudioBuffer(arg) {\n    return arg instanceof AudioBuffer;\n}\n//# sourceMappingURL=AdvancedTypeCheck.js.map","import * as tslib_1 from \"tslib\";\nimport { isAudioBuffer, isAudioNode, isAudioParam } from \"./AdvancedTypeCheck\";\nimport { isDefined, isObject, isUndef } from \"./TypeCheck\";\n/**\n * Some objects should not be merged\n */\nfunction noCopy(key, arg) {\n    return key === \"value\" || isAudioParam(arg) || isAudioNode(arg) || isAudioBuffer(arg);\n}\nexport function deepMerge(target) {\n    var _a, _b;\n    var sources = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        sources[_i - 1] = arguments[_i];\n    }\n    if (!sources.length) {\n        return target;\n    }\n    var source = sources.shift();\n    if (isObject(target) && isObject(source)) {\n        for (var key in source) {\n            if (noCopy(key, source[key])) {\n                target[key] = source[key];\n            }\n            else if (isObject(source[key])) {\n                if (!target[key]) {\n                    Object.assign(target, (_a = {}, _a[key] = {}, _a));\n                }\n                deepMerge(target[key], source[key]);\n            }\n            else {\n                Object.assign(target, (_b = {}, _b[key] = source[key], _b));\n            }\n        }\n    }\n    // @ts-ignore\n    return deepMerge.apply(void 0, tslib_1.__spread([target], sources));\n}\n/**\n * Returns true if the two arrays have the same value for each of the elements\n */\nexport function deepEquals(arrayA, arrayB) {\n    return arrayA.length === arrayB.length && arrayA.every(function (element, index) { return arrayB[index] === element; });\n}\n/**\n * Convert an args array into an object.\n */\nexport function optionsFromArguments(defaults, argsArray, keys, objKey) {\n    var _a;\n    if (keys === void 0) { keys = []; }\n    var opts = {};\n    var args = Array.from(argsArray);\n    // if the first argument is an object and has an object key\n    if (isObject(args[0]) && objKey && !Reflect.has(args[0], objKey)) {\n        // if it's not part of the defaults\n        var partOfDefaults = Object.keys(args[0]).some(function (key) { return Reflect.has(defaults, key); });\n        if (!partOfDefaults) {\n            // merge that key\n            deepMerge(opts, (_a = {}, _a[objKey] = args[0], _a));\n            // remove the obj key from the keys\n            keys.splice(keys.indexOf(objKey), 1);\n            // shift the first argument off\n            args.shift();\n        }\n    }\n    if (args.length === 1 && isObject(args[0])) {\n        deepMerge(opts, args[0]);\n    }\n    else {\n        for (var i = 0; i < keys.length; i++) {\n            if (isDefined(args[i])) {\n                opts[keys[i]] = args[i];\n            }\n        }\n    }\n    return deepMerge(defaults, opts);\n}\n/**\n * Return this instances default values by calling Constructor.getDefaults()\n */\nexport function getDefaultsFromInstance(instance) {\n    return instance.constructor.getDefaults();\n}\n/**\n * Returns the fallback if the given object is undefined.\n * Take an array of arguments and return a formatted options object.\n */\nexport function defaultArg(given, fallback) {\n    if (isUndef(given)) {\n        return fallback;\n    }\n    else {\n        return given;\n    }\n}\n/**\n * Remove all of the properties belonging to omit from obj.\n */\nexport function omitFromObject(obj, omit) {\n    omit.forEach(function (prop) {\n        if (Reflect.has(obj, prop)) {\n            delete obj[prop];\n        }\n    });\n    return obj;\n}\n//# sourceMappingURL=Defaults.js.map","import * as tslib_1 from \"tslib\";\n/**\n * Tone.js\n * @author Yotam Mann\n * @license http://opensource.org/licenses/MIT MIT License\n * @copyright 2014-2019 Yotam Mann\n */\nimport { version } from \"../version\";\nimport { theWindow } from \"./context/AudioContext\";\nimport { log } from \"./util/Debug\";\n/**\n * @class  Tone is the base class of all other classes.\n * @constructor\n */\nvar Tone = /** @class */ (function () {\n    function Tone() {\n        //-------------------------------------\n        // \tDEBUGGING\n        //-------------------------------------\n        /**\n         * Set this debug flag to log all events that happen in this class.\n         */\n        this.debug = false;\n        //-------------------------------------\n        // \tDISPOSING\n        //-------------------------------------\n        /**\n         * Indicates if the instance was disposed\n         */\n        this._wasDisposed = false;\n    }\n    /**\n     * Returns all of the default options belonging to the class.\n     */\n    Tone.getDefaults = function () {\n        return {};\n    };\n    /**\n     * Prints the outputs to the console log for debugging purposes.\n     * Prints the contents only if either the object has a property\n     * called `debug` set to true, or a variable called TONE_DEBUG_CLASS\n     * is set to the name of the class.\n     * @example\n     * import { Oscillator } from \"tone\";\n     * const osc = new Oscillator();\n     * // prints all logs originating from this oscillator\n     * osc.debug = true;\n     * // calls to start/stop will print in the console\n     * osc.start();\n     */\n    Tone.prototype.log = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        // if the object is either set to debug = true\n        // or if there is a string on the Tone.global.with the class name\n        if (this.debug || (theWindow && this.toString() === theWindow.TONE_DEBUG_CLASS)) {\n            log.apply(void 0, tslib_1.__spread([this], args));\n        }\n    };\n    /**\n     * disconnect and dispose.\n     */\n    Tone.prototype.dispose = function () {\n        this._wasDisposed = true;\n        return this;\n    };\n    Object.defineProperty(Tone.prototype, \"disposed\", {\n        /**\n         * Indicates if the instance was disposed. 'Disposing' an\n         * instance means that all of the Web Audio nodes that were\n         * created for the instance are disconnected and freed for garbage collection.\n         */\n        get: function () {\n            return this._wasDisposed;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Convert the class to a string\n     * @example\n     * import { Oscillator } from \"tone\";\n     * const osc = new Oscillator();\n     * console.log(osc.toString());\n     */\n    Tone.prototype.toString = function () {\n        return this.name;\n    };\n    /**\n     * The version number semver\n     */\n    Tone.version = version;\n    return Tone;\n}());\nexport { Tone };\n//# sourceMappingURL=Tone.js.map","export var version = \"14.5.43\";\n//# sourceMappingURL=version.js.map","/**\n * The threshold for correctness for operators. Less than one sample even\n * at very high sampling rates (e.g. `1e-6 < 1 / 192000`).\n */\nvar EPSILON = 1e-6;\n/**\n * Test if A is greater than B\n */\nexport function GT(a, b) {\n    return a > b + EPSILON;\n}\n/**\n * Test if A is greater than or equal to B\n */\nexport function GTE(a, b) {\n    return GT(a, b) || EQ(a, b);\n}\n/**\n * Test if A is less than B\n */\nexport function LT(a, b) {\n    return a + EPSILON < b;\n}\n/**\n * Test if A is less than B\n */\nexport function EQ(a, b) {\n    return Math.abs(a - b) < EPSILON;\n}\n/**\n * Clamp the value within the given range\n */\nexport function clamp(value, min, max) {\n    return Math.max(Math.min(value, max), min);\n}\n//# sourceMappingURL=Math.js.map","import * as tslib_1 from \"tslib\";\nimport { Tone } from \"../Tone\";\nimport { optionsFromArguments } from \"./Defaults\";\nimport { assert } from \"./Debug\";\nimport { EQ, GT, GTE, LT } from \"./Math\";\n/**\n * A Timeline class for scheduling and maintaining state\n * along a timeline. All events must have a \"time\" property.\n * Internally, events are stored in time order for fast\n * retrieval.\n */\nvar Timeline = /** @class */ (function (_super) {\n    tslib_1.__extends(Timeline, _super);\n    function Timeline() {\n        var _this = _super.call(this) || this;\n        _this.name = \"Timeline\";\n        /**\n         * The array of scheduled timeline events\n         */\n        _this._timeline = [];\n        var options = optionsFromArguments(Timeline.getDefaults(), arguments, [\"memory\"]);\n        _this.memory = options.memory;\n        _this.increasing = options.increasing;\n        return _this;\n    }\n    Timeline.getDefaults = function () {\n        return {\n            memory: Infinity,\n            increasing: false,\n        };\n    };\n    Object.defineProperty(Timeline.prototype, \"length\", {\n        /**\n         * The number of items in the timeline.\n         */\n        get: function () {\n            return this._timeline.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Insert an event object onto the timeline. Events must have a \"time\" attribute.\n     * @param event  The event object to insert into the timeline.\n     */\n    Timeline.prototype.add = function (event) {\n        // the event needs to have a time attribute\n        assert(Reflect.has(event, \"time\"), \"Timeline: events must have a time attribute\");\n        event.time = event.time.valueOf();\n        if (this.increasing && this.length) {\n            var lastValue = this._timeline[this.length - 1];\n            assert(GTE(event.time, lastValue.time), \"The time must be greater than or equal to the last scheduled time\");\n            this._timeline.push(event);\n        }\n        else {\n            var index = this._search(event.time);\n            this._timeline.splice(index + 1, 0, event);\n        }\n        // if the length is more than the memory, remove the previous ones\n        if (this.length > this.memory) {\n            var diff = this.length - this.memory;\n            this._timeline.splice(0, diff);\n        }\n        return this;\n    };\n    /**\n     * Remove an event from the timeline.\n     * @param  {Object}  event  The event object to remove from the list.\n     * @returns {Timeline} this\n     */\n    Timeline.prototype.remove = function (event) {\n        var index = this._timeline.indexOf(event);\n        if (index !== -1) {\n            this._timeline.splice(index, 1);\n        }\n        return this;\n    };\n    /**\n     * Get the nearest event whose time is less than or equal to the given time.\n     * @param  time  The time to query.\n     */\n    Timeline.prototype.get = function (time, param) {\n        if (param === void 0) { param = \"time\"; }\n        var index = this._search(time, param);\n        if (index !== -1) {\n            return this._timeline[index];\n        }\n        else {\n            return null;\n        }\n    };\n    /**\n     * Return the first event in the timeline without removing it\n     * @returns {Object} The first event object\n     */\n    Timeline.prototype.peek = function () {\n        return this._timeline[0];\n    };\n    /**\n     * Return the first event in the timeline and remove it\n     */\n    Timeline.prototype.shift = function () {\n        return this._timeline.shift();\n    };\n    /**\n     * Get the event which is scheduled after the given time.\n     * @param  time  The time to query.\n     */\n    Timeline.prototype.getAfter = function (time, param) {\n        if (param === void 0) { param = \"time\"; }\n        var index = this._search(time, param);\n        if (index + 1 < this._timeline.length) {\n            return this._timeline[index + 1];\n        }\n        else {\n            return null;\n        }\n    };\n    /**\n     * Get the event before the event at the given time.\n     * @param  time  The time to query.\n     */\n    Timeline.prototype.getBefore = function (time) {\n        var len = this._timeline.length;\n        // if it's after the last item, return the last item\n        if (len > 0 && this._timeline[len - 1].time < time) {\n            return this._timeline[len - 1];\n        }\n        var index = this._search(time);\n        if (index - 1 >= 0) {\n            return this._timeline[index - 1];\n        }\n        else {\n            return null;\n        }\n    };\n    /**\n     * Cancel events at and after the given time\n     * @param  after  The time to query.\n     */\n    Timeline.prototype.cancel = function (after) {\n        if (this._timeline.length > 1) {\n            var index = this._search(after);\n            if (index >= 0) {\n                if (EQ(this._timeline[index].time, after)) {\n                    // get the first item with that time\n                    for (var i = index; i >= 0; i--) {\n                        if (EQ(this._timeline[i].time, after)) {\n                            index = i;\n                        }\n                        else {\n                            break;\n                        }\n                    }\n                    this._timeline = this._timeline.slice(0, index);\n                }\n                else {\n                    this._timeline = this._timeline.slice(0, index + 1);\n                }\n            }\n            else {\n                this._timeline = [];\n            }\n        }\n        else if (this._timeline.length === 1) {\n            // the first item's time\n            if (GTE(this._timeline[0].time, after)) {\n                this._timeline = [];\n            }\n        }\n        return this;\n    };\n    /**\n     * Cancel events before or equal to the given time.\n     * @param  time  The time to cancel before.\n     */\n    Timeline.prototype.cancelBefore = function (time) {\n        var index = this._search(time);\n        if (index >= 0) {\n            this._timeline = this._timeline.slice(index + 1);\n        }\n        return this;\n    };\n    /**\n     * Returns the previous event if there is one. null otherwise\n     * @param  event The event to find the previous one of\n     * @return The event right before the given event\n     */\n    Timeline.prototype.previousEvent = function (event) {\n        var index = this._timeline.indexOf(event);\n        if (index > 0) {\n            return this._timeline[index - 1];\n        }\n        else {\n            return null;\n        }\n    };\n    /**\n     * Does a binary search on the timeline array and returns the\n     * nearest event index whose time is after or equal to the given time.\n     * If a time is searched before the first index in the timeline, -1 is returned.\n     * If the time is after the end, the index of the last item is returned.\n     */\n    Timeline.prototype._search = function (time, param) {\n        if (param === void 0) { param = \"time\"; }\n        if (this._timeline.length === 0) {\n            return -1;\n        }\n        var beginning = 0;\n        var len = this._timeline.length;\n        var end = len;\n        if (len > 0 && this._timeline[len - 1][param] <= time) {\n            return len - 1;\n        }\n        while (beginning < end) {\n            // calculate the midpoint for roughly equal partition\n            var midPoint = Math.floor(beginning + (end - beginning) / 2);\n            var event_1 = this._timeline[midPoint];\n            var nextEvent = this._timeline[midPoint + 1];\n            if (EQ(event_1[param], time)) {\n                // choose the last one that has the same time\n                for (var i = midPoint; i < this._timeline.length; i++) {\n                    var testEvent = this._timeline[i];\n                    if (EQ(testEvent[param], time)) {\n                        midPoint = i;\n                    }\n                    else {\n                        break;\n                    }\n                }\n                return midPoint;\n            }\n            else if (LT(event_1[param], time) && GT(nextEvent[param], time)) {\n                return midPoint;\n            }\n            else if (GT(event_1[param], time)) {\n                // search lower\n                end = midPoint;\n            }\n            else {\n                // search upper\n                beginning = midPoint + 1;\n            }\n        }\n        return -1;\n    };\n    /**\n     * Internal iterator. Applies extra safety checks for\n     * removing items from the array.\n     */\n    Timeline.prototype._iterate = function (callback, lowerBound, upperBound) {\n        if (lowerBound === void 0) { lowerBound = 0; }\n        if (upperBound === void 0) { upperBound = this._timeline.length - 1; }\n        this._timeline.slice(lowerBound, upperBound + 1).forEach(callback);\n    };\n    /**\n     * Iterate over everything in the array\n     * @param  callback The callback to invoke with every item\n     */\n    Timeline.prototype.forEach = function (callback) {\n        this._iterate(callback);\n        return this;\n    };\n    /**\n     * Iterate over everything in the array at or before the given time.\n     * @param  time The time to check if items are before\n     * @param  callback The callback to invoke with every item\n     */\n    Timeline.prototype.forEachBefore = function (time, callback) {\n        // iterate over the items in reverse so that removing an item doesn't break things\n        var upperBound = this._search(time);\n        if (upperBound !== -1) {\n            this._iterate(callback, 0, upperBound);\n        }\n        return this;\n    };\n    /**\n     * Iterate over everything in the array after the given time.\n     * @param  time The time to check if items are before\n     * @param  callback The callback to invoke with every item\n     */\n    Timeline.prototype.forEachAfter = function (time, callback) {\n        // iterate over the items in reverse so that removing an item doesn't break things\n        var lowerBound = this._search(time);\n        this._iterate(callback, lowerBound + 1);\n        return this;\n    };\n    /**\n     * Iterate over everything in the array between the startTime and endTime.\n     * The timerange is inclusive of the startTime, but exclusive of the endTime.\n     * range = [startTime, endTime).\n     * @param  startTime The time to check if items are before\n     * @param  endTime The end of the test interval.\n     * @param  callback The callback to invoke with every item\n     */\n    Timeline.prototype.forEachBetween = function (startTime, endTime, callback) {\n        var lowerBound = this._search(startTime);\n        var upperBound = this._search(endTime);\n        if (lowerBound !== -1 && upperBound !== -1) {\n            if (this._timeline[lowerBound].time !== startTime) {\n                lowerBound += 1;\n            }\n            // exclusive of the end time\n            if (this._timeline[upperBound].time === endTime) {\n                upperBound -= 1;\n            }\n            this._iterate(callback, lowerBound, upperBound);\n        }\n        else if (lowerBound === -1) {\n            this._iterate(callback, 0, upperBound);\n        }\n        return this;\n    };\n    /**\n     * Iterate over everything in the array at or after the given time. Similar to\n     * forEachAfter, but includes the item(s) at the given time.\n     * @param  time The time to check if items are before\n     * @param  callback The callback to invoke with every item\n     */\n    Timeline.prototype.forEachFrom = function (time, callback) {\n        // iterate over the items in reverse so that removing an item doesn't break things\n        var lowerBound = this._search(time);\n        // work backwards until the event time is less than time\n        while (lowerBound >= 0 && this._timeline[lowerBound].time >= time) {\n            lowerBound--;\n        }\n        this._iterate(callback, lowerBound + 1);\n        return this;\n    };\n    /**\n     * Iterate over everything in the array at the given time\n     * @param  time The time to check if items are before\n     * @param  callback The callback to invoke with every item\n     */\n    Timeline.prototype.forEachAtTime = function (time, callback) {\n        // iterate over the items in reverse so that removing an item doesn't break things\n        var upperBound = this._search(time);\n        if (upperBound !== -1 && EQ(this._timeline[upperBound].time, time)) {\n            var lowerBound = upperBound;\n            for (var i = upperBound; i >= 0; i--) {\n                if (EQ(this._timeline[i].time, time)) {\n                    lowerBound = i;\n                }\n                else {\n                    break;\n                }\n            }\n            this._iterate(function (event) {\n                callback(event);\n            }, lowerBound, upperBound);\n        }\n        return this;\n    };\n    /**\n     * Clean up.\n     */\n    Timeline.prototype.dispose = function () {\n        _super.prototype.dispose.call(this);\n        this._timeline = [];\n        return this;\n    };\n    return Timeline;\n}(Tone));\nexport { Timeline };\n//# sourceMappingURL=Timeline.js.map","//-------------------------------------\n// INITIALIZING NEW CONTEXT\n//-------------------------------------\n/**\n * Array of callbacks to invoke when a new context is created\n */\nvar notifyNewContext = [];\n/**\n * Used internally to setup a new Context\n */\nexport function onContextInit(cb) {\n    notifyNewContext.push(cb);\n}\n/**\n * Invoke any classes which need to also be initialized when a new context is created.\n */\nexport function initializeContext(ctx) {\n    // add any additional modules\n    notifyNewContext.forEach(function (cb) { return cb(ctx); });\n}\n/**\n * Array of callbacks to invoke when a new context is created\n */\nvar notifyCloseContext = [];\n/**\n * Used internally to tear down a Context\n */\nexport function onContextClose(cb) {\n    notifyCloseContext.push(cb);\n}\nexport function closeContext(ctx) {\n    // add any additional modules\n    notifyCloseContext.forEach(function (cb) { return cb(ctx); });\n}\n//# sourceMappingURL=ContextInitialization.js.map","import * as tslib_1 from \"tslib\";\nimport { Tone } from \"../Tone\";\nimport { isUndef } from \"./TypeCheck\";\n/**\n * Emitter gives classes which extend it\n * the ability to listen for and emit events.\n * Inspiration and reference from Jerome Etienne's [MicroEvent](https://github.com/jeromeetienne/microevent.js).\n * MIT (c) 2011 Jerome Etienne.\n */\nvar Emitter = /** @class */ (function (_super) {\n    tslib_1.__extends(Emitter, _super);\n    function Emitter() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.name = \"Emitter\";\n        return _this;\n    }\n    /**\n     * Bind a callback to a specific event.\n     * @param  event     The name of the event to listen for.\n     * @param  callback  The callback to invoke when the event is emitted\n     */\n    Emitter.prototype.on = function (event, callback) {\n        var _this = this;\n        // split the event\n        var events = event.split(/\\W+/);\n        events.forEach(function (eventName) {\n            if (isUndef(_this._events)) {\n                _this._events = {};\n            }\n            if (!_this._events.hasOwnProperty(eventName)) {\n                _this._events[eventName] = [];\n            }\n            _this._events[eventName].push(callback);\n        });\n        return this;\n    };\n    /**\n     * Bind a callback which is only invoked once\n     * @param  event     The name of the event to listen for.\n     * @param  callback  The callback to invoke when the event is emitted\n     */\n    Emitter.prototype.once = function (event, callback) {\n        var _this = this;\n        var boundCallback = function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            // invoke the callback\n            callback.apply(void 0, tslib_1.__spread(args));\n            // remove the event\n            _this.off(event, boundCallback);\n        };\n        this.on(event, boundCallback);\n        return this;\n    };\n    /**\n     * Remove the event listener.\n     * @param  event     The event to stop listening to.\n     * @param  callback  The callback which was bound to the event with Emitter.on.\n     *                   If no callback is given, all callbacks events are removed.\n     */\n    Emitter.prototype.off = function (event, callback) {\n        var _this = this;\n        var events = event.split(/\\W+/);\n        events.forEach(function (eventName) {\n            if (isUndef(_this._events)) {\n                _this._events = {};\n            }\n            if (_this._events.hasOwnProperty(event)) {\n                if (isUndef(callback)) {\n                    _this._events[event] = [];\n                }\n                else {\n                    var eventList = _this._events[event];\n                    for (var i = 0; i < eventList.length; i++) {\n                        if (eventList[i] === callback) {\n                            eventList.splice(i, 1);\n                        }\n                    }\n                }\n            }\n        });\n        return this;\n    };\n    /**\n     * Invoke all of the callbacks bound to the event\n     * with any arguments passed in.\n     * @param  event  The name of the event.\n     * @param args The arguments to pass to the functions listening.\n     */\n    Emitter.prototype.emit = function (event) {\n        var args = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            args[_i - 1] = arguments[_i];\n        }\n        if (this._events) {\n            if (this._events.hasOwnProperty(event)) {\n                var eventList = this._events[event].slice(0);\n                for (var i = 0, len = eventList.length; i < len; i++) {\n                    eventList[i].apply(this, args);\n                }\n            }\n        }\n        return this;\n    };\n    /**\n     * Add Emitter functions (on/off/emit) to the object\n     */\n    Emitter.mixin = function (constr) {\n        // instance._events = {};\n        [\"on\", \"once\", \"off\", \"emit\"].forEach(function (name) {\n            var property = Object.getOwnPropertyDescriptor(Emitter.prototype, name);\n            Object.defineProperty(constr.prototype, name, property);\n        });\n    };\n    /**\n     * Clean up\n     */\n    Emitter.prototype.dispose = function () {\n        _super.prototype.dispose.call(this);\n        this._events = undefined;\n        return this;\n    };\n    return Emitter;\n}(Tone));\nexport { Emitter };\n//# sourceMappingURL=Emitter.js.map","import * as tslib_1 from \"tslib\";\nimport { Emitter } from \"../util/Emitter\";\nvar BaseContext = /** @class */ (function (_super) {\n    tslib_1.__extends(BaseContext, _super);\n    function BaseContext() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.isOffline = false;\n        return _this;\n    }\n    return BaseContext;\n}(Emitter));\nexport { BaseContext };\n//# sourceMappingURL=BaseContext.js.map","import * as tslib_1 from \"tslib\";\nimport { Ticker } from \"../clock/Ticker\";\nimport { isAudioContext } from \"../util/AdvancedTypeCheck\";\nimport { optionsFromArguments } from \"../util/Defaults\";\nimport { Timeline } from \"../util/Timeline\";\nimport { isDefined, isString } from \"../util/TypeCheck\";\nimport { createAudioContext, createAudioWorkletNode } from \"./AudioContext\";\nimport { closeContext, initializeContext } from \"./ContextInitialization\";\nimport { BaseContext } from \"./BaseContext\";\nimport { assert } from \"../util/Debug\";\n/**\n * Wrapper around the native AudioContext.\n * @category Core\n */\nvar Context = /** @class */ (function (_super) {\n    tslib_1.__extends(Context, _super);\n    function Context() {\n        var _this = _super.call(this) || this;\n        _this.name = \"Context\";\n        /**\n         * An object containing all of the constants AudioBufferSourceNodes\n         */\n        _this._constants = new Map();\n        /**\n         * All of the setTimeout events.\n         */\n        _this._timeouts = new Timeline();\n        /**\n         * The timeout id counter\n         */\n        _this._timeoutIds = 0;\n        /**\n         * Private indicator if the context has been initialized\n         */\n        _this._initialized = false;\n        /**\n         * Indicates if the context is an OfflineAudioContext or an AudioContext\n         */\n        _this.isOffline = false;\n        //--------------------------------------------\n        // AUDIO WORKLET\n        //--------------------------------------------\n        /**\n         * Maps a module name to promise of the addModule method\n         */\n        _this._workletModules = new Map();\n        var options = optionsFromArguments(Context.getDefaults(), arguments, [\"context\"]);\n        if (options.context) {\n            _this._context = options.context;\n        }\n        else {\n            _this._context = createAudioContext();\n        }\n        _this._latencyHint = options.latencyHint;\n        _this.lookAhead = options.lookAhead;\n        _this._ticker = new Ticker(_this.emit.bind(_this, \"tick\"), options.clockSource, options.updateInterval);\n        _this.on(\"tick\", _this._timeoutLoop.bind(_this));\n        // fwd events from the context\n        _this._context.onstatechange = function () {\n            _this.emit(\"statechange\", _this.state);\n        };\n        return _this;\n    }\n    Context.getDefaults = function () {\n        return {\n            clockSource: \"worker\",\n            latencyHint: \"interactive\",\n            lookAhead: 0.1,\n            updateInterval: 0.05,\n        };\n    };\n    /**\n     * Finish setting up the context. **You usually do not need to do this manually.**\n     */\n    Context.prototype.initialize = function () {\n        if (!this._initialized) {\n            // add any additional modules\n            initializeContext(this);\n            this._initialized = true;\n        }\n        return this;\n    };\n    //---------------------------\n    // BASE AUDIO CONTEXT METHODS\n    //---------------------------\n    Context.prototype.createAnalyser = function () {\n        return this._context.createAnalyser();\n    };\n    Context.prototype.createOscillator = function () {\n        return this._context.createOscillator();\n    };\n    Context.prototype.createBufferSource = function () {\n        return this._context.createBufferSource();\n    };\n    Context.prototype.createBiquadFilter = function () {\n        return this._context.createBiquadFilter();\n    };\n    Context.prototype.createBuffer = function (numberOfChannels, length, sampleRate) {\n        return this._context.createBuffer(numberOfChannels, length, sampleRate);\n    };\n    Context.prototype.createChannelMerger = function (numberOfInputs) {\n        return this._context.createChannelMerger(numberOfInputs);\n    };\n    Context.prototype.createChannelSplitter = function (numberOfOutputs) {\n        return this._context.createChannelSplitter(numberOfOutputs);\n    };\n    Context.prototype.createConstantSource = function () {\n        return this._context.createConstantSource();\n    };\n    Context.prototype.createConvolver = function () {\n        return this._context.createConvolver();\n    };\n    Context.prototype.createDelay = function (maxDelayTime) {\n        return this._context.createDelay(maxDelayTime);\n    };\n    Context.prototype.createDynamicsCompressor = function () {\n        return this._context.createDynamicsCompressor();\n    };\n    Context.prototype.createGain = function () {\n        return this._context.createGain();\n    };\n    Context.prototype.createIIRFilter = function (feedForward, feedback) {\n        // @ts-ignore\n        return this._context.createIIRFilter(feedForward, feedback);\n    };\n    Context.prototype.createPanner = function () {\n        return this._context.createPanner();\n    };\n    Context.prototype.createPeriodicWave = function (real, imag, constraints) {\n        return this._context.createPeriodicWave(real, imag, constraints);\n    };\n    Context.prototype.createStereoPanner = function () {\n        return this._context.createStereoPanner();\n    };\n    Context.prototype.createWaveShaper = function () {\n        return this._context.createWaveShaper();\n    };\n    Context.prototype.createMediaStreamSource = function (stream) {\n        if (isAudioContext(this._context)) {\n            return this._context.createMediaStreamSource(stream);\n        }\n        else {\n            throw new Error(\"Only available on online audio context\");\n        }\n    };\n    Context.prototype.decodeAudioData = function (audioData) {\n        return this._context.decodeAudioData(audioData);\n    };\n    Object.defineProperty(Context.prototype, \"currentTime\", {\n        /**\n         * The current time in seconds of the AudioContext.\n         */\n        get: function () {\n            return this._context.currentTime;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Context.prototype, \"state\", {\n        /**\n         * The current time in seconds of the AudioContext.\n         */\n        get: function () {\n            return this._context.state;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Context.prototype, \"sampleRate\", {\n        /**\n         * The current time in seconds of the AudioContext.\n         */\n        get: function () {\n            return this._context.sampleRate;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Context.prototype, \"listener\", {\n        /**\n         * The listener\n         */\n        get: function () {\n            this.initialize();\n            return this._listener;\n        },\n        set: function (l) {\n            assert(!this._initialized, \"The listener cannot be set after initialization.\");\n            this._listener = l;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Context.prototype, \"transport\", {\n        /**\n         * There is only one Transport per Context. It is created on initialization.\n         */\n        get: function () {\n            this.initialize();\n            return this._transport;\n        },\n        set: function (t) {\n            assert(!this._initialized, \"The transport cannot be set after initialization.\");\n            this._transport = t;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Context.prototype, \"draw\", {\n        /**\n         * This is the Draw object for the context which is useful for synchronizing the draw frame with the Tone.js clock.\n         */\n        get: function () {\n            this.initialize();\n            return this._draw;\n        },\n        set: function (d) {\n            assert(!this._initialized, \"Draw cannot be set after initialization.\");\n            this._draw = d;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Context.prototype, \"destination\", {\n        /**\n         * A reference to the Context's destination node.\n         */\n        get: function () {\n            this.initialize();\n            return this._destination;\n        },\n        set: function (d) {\n            assert(!this._initialized, \"The destination cannot be set after initialization.\");\n            this._destination = d;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Create an audio worklet node from a name and options. The module\n     * must first be loaded using [[addAudioWorkletModule]].\n     */\n    Context.prototype.createAudioWorkletNode = function (name, options) {\n        return createAudioWorkletNode(this.rawContext, name, options);\n    };\n    /**\n     * Add an AudioWorkletProcessor module\n     * @param url The url of the module\n     * @param name The name of the module\n     */\n    Context.prototype.addAudioWorkletModule = function (url, name) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        assert(isDefined(this.rawContext.audioWorklet), \"AudioWorkletNode is only available in a secure context (https or localhost)\");\n                        if (!this._workletModules.has(name)) {\n                            this._workletModules.set(name, this.rawContext.audioWorklet.addModule(url));\n                        }\n                        return [4 /*yield*/, this._workletModules.get(name)];\n                    case 1:\n                        _a.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Returns a promise which resolves when all of the worklets have been loaded on this context\n     */\n    Context.prototype.workletsAreReady = function () {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var promises;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        promises = [];\n                        this._workletModules.forEach(function (promise) { return promises.push(promise); });\n                        return [4 /*yield*/, Promise.all(promises)];\n                    case 1:\n                        _a.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    Object.defineProperty(Context.prototype, \"updateInterval\", {\n        //---------------------------\n        // TICKER\n        //---------------------------\n        /**\n         * How often the interval callback is invoked.\n         * This number corresponds to how responsive the scheduling\n         * can be. context.updateInterval + context.lookAhead gives you the\n         * total latency between scheduling an event and hearing it.\n         */\n        get: function () {\n            return this._ticker.updateInterval;\n        },\n        set: function (interval) {\n            this._ticker.updateInterval = interval;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Context.prototype, \"clockSource\", {\n        /**\n         * What the source of the clock is, either \"worker\" (default),\n         * \"timeout\", or \"offline\" (none).\n         */\n        get: function () {\n            return this._ticker.type;\n        },\n        set: function (type) {\n            this._ticker.type = type;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Context.prototype, \"latencyHint\", {\n        /**\n         * The type of playback, which affects tradeoffs between audio\n         * output latency and responsiveness.\n         * In addition to setting the value in seconds, the latencyHint also\n         * accepts the strings \"interactive\" (prioritizes low latency),\n         * \"playback\" (prioritizes sustained playback), \"balanced\" (balances\n         * latency and performance), and \"fastest\" (lowest latency, might glitch more often).\n         * @example\n         * import * as Tone from \"tone\";\n         * // set the latencyHint to prioritize smooth playback at the expensive of latency\n         * Tone.context.latencyHint = \"playback\";\n         */\n        get: function () {\n            return this._latencyHint;\n        },\n        set: function (hint) {\n            var lookAheadValue = 0;\n            this._latencyHint = hint;\n            if (isString(hint)) {\n                switch (hint) {\n                    case \"interactive\":\n                        lookAheadValue = 0.1;\n                        break;\n                    case \"playback\":\n                        lookAheadValue = 0.8;\n                        break;\n                    case \"balanced\":\n                        lookAheadValue = 0.25;\n                        break;\n                    case \"fastest\":\n                        lookAheadValue = 0.01;\n                        break;\n                }\n            }\n            this.lookAhead = lookAheadValue;\n            this.updateInterval = lookAheadValue / 2;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Context.prototype, \"rawContext\", {\n        /**\n         * The unwrapped AudioContext.\n         */\n        get: function () {\n            return this._context;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * The current audio context time plus a short [[lookAhead]].\n     */\n    Context.prototype.now = function () {\n        return this._context.currentTime + this.lookAhead;\n    };\n    /**\n     * The current audio context time without the [[lookAhead]].\n     * In most cases it is better to use [[now]] instead of [[immediate]] since\n     * with [[now]] the [[lookAhead]] is applied equally to _all_ components including internal components,\n     * to making sure that everything is scheduled in sync. Mixing [[now]] and [[immediate]]\n     * can cause some timing issues. If no lookAhead is desired, you can set the [[lookAhead]] to `0`.\n     */\n    Context.prototype.immediate = function () {\n        return this._context.currentTime;\n    };\n    /**\n     * Starts the audio context from a suspended state. This is required\n     * to initially start the AudioContext.\n     */\n    Context.prototype.resume = function () {\n        if (this._context.state === \"suspended\" && isAudioContext(this._context)) {\n            return this._context.resume();\n        }\n        else {\n            return Promise.resolve();\n        }\n    };\n    /**\n     * Promise which is invoked when the context is running.\n     * Tries to resume the context if it's not started.\n     */\n    Context.prototype.close = function () {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (!isAudioContext(this._context)) return [3 /*break*/, 2];\n                        return [4 /*yield*/, this._context.close()];\n                    case 1:\n                        _a.sent();\n                        _a.label = 2;\n                    case 2:\n                        if (this._initialized) {\n                            closeContext(this);\n                        }\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Generate a looped buffer at some constant value.\n     */\n    Context.prototype.getConstant = function (val) {\n        if (this._constants.has(val)) {\n            return this._constants.get(val);\n        }\n        else {\n            var buffer = this._context.createBuffer(1, 128, this._context.sampleRate);\n            var arr = buffer.getChannelData(0);\n            for (var i = 0; i < arr.length; i++) {\n                arr[i] = val;\n            }\n            var constant = this._context.createBufferSource();\n            constant.channelCount = 1;\n            constant.channelCountMode = \"explicit\";\n            constant.buffer = buffer;\n            constant.loop = true;\n            constant.start(0);\n            this._constants.set(val, constant);\n            return constant;\n        }\n    };\n    /**\n     * Clean up. Also closes the audio context.\n     */\n    Context.prototype.dispose = function () {\n        var _this = this;\n        _super.prototype.dispose.call(this);\n        this._ticker.dispose();\n        this._timeouts.dispose();\n        Object.keys(this._constants).map(function (val) { return _this._constants[val].disconnect(); });\n        return this;\n    };\n    //---------------------------\n    // TIMEOUTS\n    //---------------------------\n    /**\n     * The private loop which keeps track of the context scheduled timeouts\n     * Is invoked from the clock source\n     */\n    Context.prototype._timeoutLoop = function () {\n        var now = this.now();\n        var firstEvent = this._timeouts.peek();\n        while (this._timeouts.length && firstEvent && firstEvent.time <= now) {\n            // invoke the callback\n            firstEvent.callback();\n            // shift the first event off\n            this._timeouts.shift();\n            // get the next one\n            firstEvent = this._timeouts.peek();\n        }\n    };\n    /**\n     * A setTimeout which is guaranteed by the clock source.\n     * Also runs in the offline context.\n     * @param  fn       The callback to invoke\n     * @param  timeout  The timeout in seconds\n     * @returns ID to use when invoking Context.clearTimeout\n     */\n    Context.prototype.setTimeout = function (fn, timeout) {\n        this._timeoutIds++;\n        var now = this.now();\n        this._timeouts.add({\n            callback: fn,\n            id: this._timeoutIds,\n            time: now + timeout,\n        });\n        return this._timeoutIds;\n    };\n    /**\n     * Clears a previously scheduled timeout with Tone.context.setTimeout\n     * @param  id  The ID returned from setTimeout\n     */\n    Context.prototype.clearTimeout = function (id) {\n        var _this = this;\n        this._timeouts.forEach(function (event) {\n            if (event.id === id) {\n                _this._timeouts.remove(event);\n            }\n        });\n        return this;\n    };\n    /**\n     * Clear the function scheduled by [[setInterval]]\n     */\n    Context.prototype.clearInterval = function (id) {\n        return this.clearTimeout(id);\n    };\n    /**\n     * Adds a repeating event to the context's callback clock\n     */\n    Context.prototype.setInterval = function (fn, interval) {\n        var _this = this;\n        var id = ++this._timeoutIds;\n        var intervalFn = function () {\n            var now = _this.now();\n            _this._timeouts.add({\n                callback: function () {\n                    // invoke the callback\n                    fn();\n                    // invoke the event to repeat it\n                    intervalFn();\n                },\n                id: id,\n                time: now + interval,\n            });\n        };\n        // kick it off\n        intervalFn();\n        return id;\n    };\n    return Context;\n}(BaseContext));\nexport { Context };\n//# sourceMappingURL=Context.js.map","import * as tslib_1 from \"tslib\";\nimport { BaseContext } from \"./BaseContext\";\nvar DummyContext = /** @class */ (function (_super) {\n    tslib_1.__extends(DummyContext, _super);\n    function DummyContext() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.lookAhead = 0;\n        _this.latencyHint = 0;\n        _this.isOffline = false;\n        return _this;\n    }\n    //---------------------------\n    // BASE AUDIO CONTEXT METHODS\n    //---------------------------\n    DummyContext.prototype.createAnalyser = function () {\n        return {};\n    };\n    DummyContext.prototype.createOscillator = function () {\n        return {};\n    };\n    DummyContext.prototype.createBufferSource = function () {\n        return {};\n    };\n    DummyContext.prototype.createBiquadFilter = function () {\n        return {};\n    };\n    DummyContext.prototype.createBuffer = function (_numberOfChannels, _length, _sampleRate) {\n        return {};\n    };\n    DummyContext.prototype.createChannelMerger = function (_numberOfInputs) {\n        return {};\n    };\n    DummyContext.prototype.createChannelSplitter = function (_numberOfOutputs) {\n        return {};\n    };\n    DummyContext.prototype.createConstantSource = function () {\n        return {};\n    };\n    DummyContext.prototype.createConvolver = function () {\n        return {};\n    };\n    DummyContext.prototype.createDelay = function (_maxDelayTime) {\n        return {};\n    };\n    DummyContext.prototype.createDynamicsCompressor = function () {\n        return {};\n    };\n    DummyContext.prototype.createGain = function () {\n        return {};\n    };\n    DummyContext.prototype.createIIRFilter = function (_feedForward, _feedback) {\n        return {};\n    };\n    DummyContext.prototype.createPanner = function () {\n        return {};\n    };\n    DummyContext.prototype.createPeriodicWave = function (_real, _imag, _constraints) {\n        return {};\n    };\n    DummyContext.prototype.createStereoPanner = function () {\n        return {};\n    };\n    DummyContext.prototype.createWaveShaper = function () {\n        return {};\n    };\n    DummyContext.prototype.createMediaStreamSource = function (_stream) {\n        return {};\n    };\n    DummyContext.prototype.decodeAudioData = function (_audioData) {\n        return Promise.resolve({});\n    };\n    //---------------------------\n    // TONE AUDIO CONTEXT METHODS\n    //---------------------------\n    DummyContext.prototype.createAudioWorkletNode = function (_name, _options) {\n        return {};\n    };\n    Object.defineProperty(DummyContext.prototype, \"rawContext\", {\n        get: function () {\n            return {};\n        },\n        enumerable: true,\n        configurable: true\n    });\n    DummyContext.prototype.addAudioWorkletModule = function (_url, _name) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                return [2 /*return*/, Promise.resolve()];\n            });\n        });\n    };\n    DummyContext.prototype.resume = function () {\n        return Promise.resolve();\n    };\n    DummyContext.prototype.setTimeout = function (_fn, _timeout) {\n        return 0;\n    };\n    DummyContext.prototype.clearTimeout = function (_id) {\n        return this;\n    };\n    DummyContext.prototype.setInterval = function (_fn, _interval) {\n        return 0;\n    };\n    DummyContext.prototype.clearInterval = function (_id) {\n        return this;\n    };\n    DummyContext.prototype.getConstant = function (_val) {\n        return {};\n    };\n    Object.defineProperty(DummyContext.prototype, \"currentTime\", {\n        get: function () {\n            return 0;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DummyContext.prototype, \"state\", {\n        get: function () {\n            return {};\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DummyContext.prototype, \"sampleRate\", {\n        get: function () {\n            return 0;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DummyContext.prototype, \"listener\", {\n        get: function () {\n            return {};\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DummyContext.prototype, \"transport\", {\n        get: function () {\n            return {};\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DummyContext.prototype, \"draw\", {\n        get: function () {\n            return {};\n        },\n        set: function (_d) { },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DummyContext.prototype, \"destination\", {\n        get: function () {\n            return {};\n        },\n        set: function (_d) { },\n        enumerable: true,\n        configurable: true\n    });\n    DummyContext.prototype.now = function () {\n        return 0;\n    };\n    DummyContext.prototype.immediate = function () {\n        return 0;\n    };\n    return DummyContext;\n}(BaseContext));\nexport { DummyContext };\n//# sourceMappingURL=DummyContext.js.map","import { isArray } from \"./TypeCheck\";\n/**\n * Make the property not writable using `defineProperty`. Internal use only.\n */\nexport function readOnly(target, property) {\n    if (isArray(property)) {\n        property.forEach(function (str) { return readOnly(target, str); });\n    }\n    else {\n        Object.defineProperty(target, property, {\n            enumerable: true,\n            writable: false,\n        });\n    }\n}\n/**\n * Make an attribute writeable. Internal use only.\n */\nexport function writable(target, property) {\n    if (isArray(property)) {\n        property.forEach(function (str) { return writable(target, str); });\n    }\n    else {\n        Object.defineProperty(target, property, {\n            writable: true,\n        });\n    }\n}\nexport var noOp = function () {\n    // no operation here!\n};\n//# sourceMappingURL=Interface.js.map","import * as tslib_1 from \"tslib\";\nimport { getContext } from \"../Global\";\nimport { Tone } from \"../Tone\";\nimport { isAudioBuffer } from \"../util/AdvancedTypeCheck\";\nimport { optionsFromArguments } from \"../util/Defaults\";\nimport { noOp } from \"../util/Interface\";\nimport { isArray, isNumber, isString } from \"../util/TypeCheck\";\nimport { assert } from \"../util/Debug\";\n/**\n * AudioBuffer loading and storage. ToneAudioBuffer is used internally by all\n * classes that make requests for audio files such as Tone.Player,\n * Tone.Sampler and Tone.Convolver.\n * Aside from load callbacks from individual buffers, ToneAudioBuffer\n * provides events which keep track of the loading progress\n * of _all_ of the buffers. These are ToneAudioBuffer.on(\"load\" / \"progress\" / \"error\")\n * @example\n * import { ToneAudioBuffer } from \"tone\";\n * const buffer = new ToneAudioBuffer(\"https://tonejs.github.io/examples/audio/FWDL.mp3\", () => {\n * \tconsole.log(\"loaded\");\n * });\n * @category Core\n */\nvar ToneAudioBuffer = /** @class */ (function (_super) {\n    tslib_1.__extends(ToneAudioBuffer, _super);\n    function ToneAudioBuffer() {\n        var _this = _super.call(this) || this;\n        _this.name = \"ToneAudioBuffer\";\n        /**\n         * Callback when the buffer is loaded.\n         */\n        _this.onload = noOp;\n        var options = optionsFromArguments(ToneAudioBuffer.getDefaults(), arguments, [\"url\", \"onload\", \"onerror\"]);\n        _this.reverse = options.reverse;\n        _this.onload = options.onload;\n        if (options.url && isAudioBuffer(options.url) || options.url instanceof ToneAudioBuffer) {\n            _this.set(options.url);\n        }\n        else if (isString(options.url)) {\n            // initiate the download\n            _this.load(options.url).catch(options.onerror);\n        }\n        return _this;\n    }\n    ToneAudioBuffer.getDefaults = function () {\n        return {\n            onerror: noOp,\n            onload: noOp,\n            reverse: false,\n        };\n    };\n    Object.defineProperty(ToneAudioBuffer.prototype, \"sampleRate\", {\n        /**\n         * The sample rate of the AudioBuffer\n         */\n        get: function () {\n            if (this._buffer) {\n                return this._buffer.sampleRate;\n            }\n            else {\n                return getContext().sampleRate;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Pass in an AudioBuffer or ToneAudioBuffer to set the value of this buffer.\n     */\n    ToneAudioBuffer.prototype.set = function (buffer) {\n        var _this = this;\n        if (buffer instanceof ToneAudioBuffer) {\n            // if it's loaded, set it\n            if (buffer.loaded) {\n                this._buffer = buffer.get();\n            }\n            else {\n                // otherwise when it's loaded, invoke it's callback\n                buffer.onload = function () {\n                    _this.set(buffer);\n                    _this.onload(_this);\n                };\n            }\n        }\n        else {\n            this._buffer = buffer;\n        }\n        // reverse it initially\n        if (this._reversed) {\n            this._reverse();\n        }\n        return this;\n    };\n    /**\n     * The audio buffer stored in the object.\n     */\n    ToneAudioBuffer.prototype.get = function () {\n        return this._buffer;\n    };\n    /**\n     * Makes an fetch request for the selected url then decodes the file as an audio buffer.\n     * Invokes the callback once the audio buffer loads.\n     * @param url The url of the buffer to load. filetype support depends on the browser.\n     * @returns A Promise which resolves with this ToneAudioBuffer\n     */\n    ToneAudioBuffer.prototype.load = function (url) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var doneLoading, index;\n            var _this = this;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        doneLoading = ToneAudioBuffer.load(url).then(function (audioBuffer) {\n                            _this.set(audioBuffer);\n                            // invoke the onload method\n                            _this.onload(_this);\n                        });\n                        ToneAudioBuffer.downloads.push(doneLoading);\n                        _a.label = 1;\n                    case 1:\n                        _a.trys.push([1, , 3, 4]);\n                        return [4 /*yield*/, doneLoading];\n                    case 2:\n                        _a.sent();\n                        return [3 /*break*/, 4];\n                    case 3:\n                        index = ToneAudioBuffer.downloads.indexOf(doneLoading);\n                        ToneAudioBuffer.downloads.splice(index, 1);\n                        return [7 /*endfinally*/];\n                    case 4: return [2 /*return*/, this];\n                }\n            });\n        });\n    };\n    /**\n     * clean up\n     */\n    ToneAudioBuffer.prototype.dispose = function () {\n        _super.prototype.dispose.call(this);\n        this._buffer = undefined;\n        return this;\n    };\n    /**\n     * Set the audio buffer from the array.\n     * To create a multichannel AudioBuffer, pass in a multidimensional array.\n     * @param array The array to fill the audio buffer\n     */\n    ToneAudioBuffer.prototype.fromArray = function (array) {\n        var isMultidimensional = isArray(array) && array[0].length > 0;\n        var channels = isMultidimensional ? array.length : 1;\n        var len = isMultidimensional ? array[0].length : array.length;\n        var context = getContext();\n        var buffer = context.createBuffer(channels, len, context.sampleRate);\n        var multiChannelArray = !isMultidimensional && channels === 1 ?\n            [array] : array;\n        for (var c = 0; c < channels; c++) {\n            buffer.copyToChannel(multiChannelArray[c], c);\n        }\n        this._buffer = buffer;\n        return this;\n    };\n    /**\n     * Sums multiple channels into 1 channel\n     * @param chanNum Optionally only copy a single channel from the array.\n     */\n    ToneAudioBuffer.prototype.toMono = function (chanNum) {\n        if (isNumber(chanNum)) {\n            this.fromArray(this.toArray(chanNum));\n        }\n        else {\n            var outputArray = new Float32Array(this.length);\n            var numChannels_1 = this.numberOfChannels;\n            for (var channel = 0; channel < numChannels_1; channel++) {\n                var channelArray = this.toArray(channel);\n                for (var i = 0; i < channelArray.length; i++) {\n                    outputArray[i] += channelArray[i];\n                }\n            }\n            // divide by the number of channels\n            outputArray = outputArray.map(function (sample) { return sample / numChannels_1; });\n            this.fromArray(outputArray);\n        }\n        return this;\n    };\n    /**\n     * Get the buffer as an array. Single channel buffers will return a 1-dimensional\n     * Float32Array, and multichannel buffers will return multidimensional arrays.\n     * @param channel Optionally only copy a single channel from the array.\n     */\n    ToneAudioBuffer.prototype.toArray = function (channel) {\n        if (isNumber(channel)) {\n            return this.getChannelData(channel);\n        }\n        else if (this.numberOfChannels === 1) {\n            return this.toArray(0);\n        }\n        else {\n            var ret = [];\n            for (var c = 0; c < this.numberOfChannels; c++) {\n                ret[c] = this.getChannelData(c);\n            }\n            return ret;\n        }\n    };\n    /**\n     * Returns the Float32Array representing the PCM audio data for the specific channel.\n     * @param  channel  The channel number to return\n     * @return The audio as a TypedArray\n     */\n    ToneAudioBuffer.prototype.getChannelData = function (channel) {\n        if (this._buffer) {\n            return this._buffer.getChannelData(channel);\n        }\n        else {\n            return new Float32Array(0);\n        }\n    };\n    /**\n     * Cut a subsection of the array and return a buffer of the\n     * subsection. Does not modify the original buffer\n     * @param start The time to start the slice\n     * @param end The end time to slice. If none is given will default to the end of the buffer\n     */\n    ToneAudioBuffer.prototype.slice = function (start, end) {\n        if (end === void 0) { end = this.duration; }\n        var startSamples = Math.floor(start * this.sampleRate);\n        var endSamples = Math.floor(end * this.sampleRate);\n        assert(startSamples < endSamples, \"The start time must be less than the end time\");\n        var length = endSamples - startSamples;\n        var retBuffer = getContext().createBuffer(this.numberOfChannels, length, this.sampleRate);\n        for (var channel = 0; channel < this.numberOfChannels; channel++) {\n            retBuffer.copyToChannel(this.getChannelData(channel).subarray(startSamples, endSamples), channel);\n        }\n        return new ToneAudioBuffer(retBuffer);\n    };\n    /**\n     * Reverse the buffer.\n     */\n    ToneAudioBuffer.prototype._reverse = function () {\n        if (this.loaded) {\n            for (var i = 0; i < this.numberOfChannels; i++) {\n                this.getChannelData(i).reverse();\n            }\n        }\n        return this;\n    };\n    Object.defineProperty(ToneAudioBuffer.prototype, \"loaded\", {\n        /**\n         * If the buffer is loaded or not\n         */\n        get: function () {\n            return this.length > 0;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ToneAudioBuffer.prototype, \"duration\", {\n        /**\n         * The duration of the buffer in seconds.\n         */\n        get: function () {\n            if (this._buffer) {\n                return this._buffer.duration;\n            }\n            else {\n                return 0;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ToneAudioBuffer.prototype, \"length\", {\n        /**\n         * The length of the buffer in samples\n         */\n        get: function () {\n            if (this._buffer) {\n                return this._buffer.length;\n            }\n            else {\n                return 0;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ToneAudioBuffer.prototype, \"numberOfChannels\", {\n        /**\n         * The number of discrete audio channels. Returns 0 if no buffer is loaded.\n         */\n        get: function () {\n            if (this._buffer) {\n                return this._buffer.numberOfChannels;\n            }\n            else {\n                return 0;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ToneAudioBuffer.prototype, \"reverse\", {\n        /**\n         * Reverse the buffer.\n         */\n        get: function () {\n            return this._reversed;\n        },\n        set: function (rev) {\n            if (this._reversed !== rev) {\n                this._reversed = rev;\n                this._reverse();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Create a ToneAudioBuffer from the array. To create a multichannel AudioBuffer,\n     * pass in a multidimensional array.\n     * @param array The array to fill the audio buffer\n     * @return A ToneAudioBuffer created from the array\n     */\n    ToneAudioBuffer.fromArray = function (array) {\n        return (new ToneAudioBuffer()).fromArray(array);\n    };\n    /**\n     * Creates a ToneAudioBuffer from a URL, returns a promise which resolves to a ToneAudioBuffer\n     * @param  url The url to load.\n     * @return A promise which resolves to a ToneAudioBuffer\n     */\n    ToneAudioBuffer.fromUrl = function (url) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var buffer;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        buffer = new ToneAudioBuffer();\n                        return [4 /*yield*/, buffer.load(url)];\n                    case 1: return [2 /*return*/, _a.sent()];\n                }\n            });\n        });\n    };\n    /**\n     * Loads a url using fetch and returns the AudioBuffer.\n     */\n    ToneAudioBuffer.load = function (url) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var matches, extensions, extension, extensions_1, extensions_1_1, ext, baseUrl, response, arrayBuffer, audioBuffer;\n            var e_1, _a;\n            return tslib_1.__generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        matches = url.match(/\\[(.+\\|?)+\\]$/);\n                        if (matches) {\n                            extensions = matches[1].split(\"|\");\n                            extension = extensions[0];\n                            try {\n                                for (extensions_1 = tslib_1.__values(extensions), extensions_1_1 = extensions_1.next(); !extensions_1_1.done; extensions_1_1 = extensions_1.next()) {\n                                    ext = extensions_1_1.value;\n                                    if (ToneAudioBuffer.supportsType(ext)) {\n                                        extension = ext;\n                                        break;\n                                    }\n                                }\n                            }\n                            catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                            finally {\n                                try {\n                                    if (extensions_1_1 && !extensions_1_1.done && (_a = extensions_1.return)) _a.call(extensions_1);\n                                }\n                                finally { if (e_1) throw e_1.error; }\n                            }\n                            url = url.replace(matches[0], extension);\n                        }\n                        baseUrl = ToneAudioBuffer.baseUrl === \"\" || ToneAudioBuffer.baseUrl.endsWith(\"/\") ? ToneAudioBuffer.baseUrl : ToneAudioBuffer.baseUrl + \"/\";\n                        return [4 /*yield*/, fetch(baseUrl + url)];\n                    case 1:\n                        response = _b.sent();\n                        if (!response.ok) {\n                            throw new Error(\"could not load url: \" + url);\n                        }\n                        return [4 /*yield*/, response.arrayBuffer()];\n                    case 2:\n                        arrayBuffer = _b.sent();\n                        return [4 /*yield*/, getContext().decodeAudioData(arrayBuffer)];\n                    case 3:\n                        audioBuffer = _b.sent();\n                        return [2 /*return*/, audioBuffer];\n                }\n            });\n        });\n    };\n    /**\n     * Checks a url's extension to see if the current browser can play that file type.\n     * @param url The url/extension to test\n     * @return If the file extension can be played\n     * @static\n     * @example\n     * import { ToneAudioBuffer } from \"tone\";\n     * ToneAudioBuffer.supportsType(\"wav\"); // returns true\n     * ToneAudioBuffer.supportsType(\"path/to/file.wav\"); // returns true\n     */\n    ToneAudioBuffer.supportsType = function (url) {\n        var extensions = url.split(\".\");\n        var extension = extensions[extensions.length - 1];\n        var response = document.createElement(\"audio\").canPlayType(\"audio/\" + extension);\n        return response !== \"\";\n    };\n    /**\n     * Returns a Promise which resolves when all of the buffers have loaded\n     */\n    ToneAudioBuffer.loaded = function () {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: \n                    // this makes sure that the function is always async\n                    return [4 /*yield*/, Promise.resolve()];\n                    case 1:\n                        // this makes sure that the function is always async\n                        _a.sent();\n                        _a.label = 2;\n                    case 2:\n                        if (!ToneAudioBuffer.downloads.length) return [3 /*break*/, 4];\n                        return [4 /*yield*/, ToneAudioBuffer.downloads[0]];\n                    case 3:\n                        _a.sent();\n                        return [3 /*break*/, 2];\n                    case 4: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    //-------------------------------------\n    // STATIC METHODS\n    //-------------------------------------\n    /**\n     * A path which is prefixed before every url.\n     */\n    ToneAudioBuffer.baseUrl = \"\";\n    /**\n     * All of the downloads\n     */\n    ToneAudioBuffer.downloads = [];\n    return ToneAudioBuffer;\n}(Tone));\nexport { ToneAudioBuffer };\n//# sourceMappingURL=ToneAudioBuffer.js.map","import * as tslib_1 from \"tslib\";\nimport { createOfflineAudioContext } from \"../context/AudioContext\";\nimport { Context } from \"../context/Context\";\nimport { isOfflineAudioContext } from \"../util/AdvancedTypeCheck\";\nimport { ToneAudioBuffer } from \"./ToneAudioBuffer\";\n/**\n * Wrapper around the OfflineAudioContext\n * @category Core\n */\nvar OfflineContext = /** @class */ (function (_super) {\n    tslib_1.__extends(OfflineContext, _super);\n    function OfflineContext() {\n        var _this = _super.call(this, {\n            clockSource: \"offline\",\n            context: isOfflineAudioContext(arguments[0]) ?\n                arguments[0] : createOfflineAudioContext(arguments[0], arguments[1] * arguments[2], arguments[2]),\n            lookAhead: 0,\n            updateInterval: isOfflineAudioContext(arguments[0]) ?\n                128 / arguments[0].sampleRate : 128 / arguments[2],\n        }) || this;\n        _this.name = \"OfflineContext\";\n        /**\n         * An artificial clock source\n         */\n        _this._currentTime = 0;\n        _this.isOffline = true;\n        _this._duration = isOfflineAudioContext(arguments[0]) ?\n            arguments[0].length / arguments[0].sampleRate : arguments[1];\n        return _this;\n    }\n    /**\n     * Override the now method to point to the internal clock time\n     */\n    OfflineContext.prototype.now = function () {\n        return this._currentTime;\n    };\n    Object.defineProperty(OfflineContext.prototype, \"currentTime\", {\n        /**\n         * Same as this.now()\n         */\n        get: function () {\n            return this._currentTime;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Render just the clock portion of the audio context.\n     */\n    OfflineContext.prototype._renderClock = function (asynchronous) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var index, yieldEvery;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        index = 0;\n                        _a.label = 1;\n                    case 1:\n                        if (!(this._duration - this._currentTime >= 0)) return [3 /*break*/, 4];\n                        // invoke all the callbacks on that time\n                        this.emit(\"tick\");\n                        // increment the clock in block-sized chunks\n                        this._currentTime += 128 / this.sampleRate;\n                        // yield once a second of audio\n                        index++;\n                        yieldEvery = Math.floor(this.sampleRate / 128);\n                        if (!(asynchronous && index % yieldEvery === 0)) return [3 /*break*/, 3];\n                        return [4 /*yield*/, new Promise(function (done) { return setTimeout(done, 1); })];\n                    case 2:\n                        _a.sent();\n                        _a.label = 3;\n                    case 3: return [3 /*break*/, 1];\n                    case 4: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Render the output of the OfflineContext\n     * @param asynchronous If the clock should be rendered asynchronously, which will not block the main thread, but be slightly slower.\n     */\n    OfflineContext.prototype.render = function (asynchronous) {\n        if (asynchronous === void 0) { asynchronous = true; }\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var buffer;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.workletsAreReady()];\n                    case 1:\n                        _a.sent();\n                        return [4 /*yield*/, this._renderClock(asynchronous)];\n                    case 2:\n                        _a.sent();\n                        return [4 /*yield*/, this._context.startRendering()];\n                    case 3:\n                        buffer = _a.sent();\n                        return [2 /*return*/, new ToneAudioBuffer(buffer)];\n                }\n            });\n        });\n    };\n    /**\n     * Close the context\n     */\n    OfflineContext.prototype.close = function () {\n        return Promise.resolve();\n    };\n    return OfflineContext;\n}(Context));\nexport { OfflineContext };\n//# sourceMappingURL=OfflineContext.js.map","import { version } from \"../version\";\nimport { hasAudioContext, theWindow } from \"./context/AudioContext\";\nimport { Context } from \"./context/Context\";\nimport { DummyContext } from \"./context/DummyContext\";\nimport { OfflineContext } from \"./context/OfflineContext\";\nimport { isAudioContext, isOfflineAudioContext } from \"./util/AdvancedTypeCheck\";\n/**\n * This dummy context is used to avoid throwing immediate errors when importing in Node.js\n */\nvar dummyContext = new DummyContext();\n/**\n * The global audio context which is getable and assignable through\n * getContext and setContext\n */\nvar globalContext = dummyContext;\n/**\n * Returns the default system-wide [[Context]]\n * @category Core\n */\nexport function getContext() {\n    if (globalContext === dummyContext && hasAudioContext) {\n        setContext(new Context());\n    }\n    return globalContext;\n}\n/**\n * Set the default audio context\n * @category Core\n */\nexport function setContext(context) {\n    if (isAudioContext(context)) {\n        globalContext = new Context(context);\n    }\n    else if (isOfflineAudioContext(context)) {\n        globalContext = new OfflineContext(context);\n    }\n    else {\n        globalContext = context;\n    }\n}\n/**\n * Most browsers will not play _any_ audio until a user\n * clicks something (like a play button). Invoke this method\n * on a click or keypress event handler to start the audio context.\n * More about the Autoplay policy\n * [here](https://developers.google.com/web/updates/2017/09/autoplay-policy-changes#webaudio)\n * @example\n * import * as Tone from \"tone\";\n * document.querySelector(\"button\").addEventListener(\"click\", async () => {\n * \tawait Tone.start();\n * \tconsole.log(\"context started\");\n * });\n * @category Core\n */\nexport function start() {\n    return globalContext.resume();\n}\n/**\n * Log Tone.js + version in the console.\n */\nif (theWindow && !theWindow.TONE_SILENCE_LOGGING) {\n    var prefix = \"v\";\n    if (version === \"dev\") {\n        prefix = \"\";\n    }\n    var printString = \" * Tone.js \" + prefix + version + \" * \";\n    // eslint-disable-next-line no-console\n    console.log(\"%c\" + printString, \"background: #000; color: #fff\");\n}\n//# sourceMappingURL=Global.js.map","/**\n * Equal power gain scale. Good for cross-fading.\n * @param  percent (0-1)\n */\nexport function equalPowerScale(percent) {\n    var piFactor = 0.5 * Math.PI;\n    return Math.sin(percent * piFactor);\n}\n/**\n * Convert decibels into gain.\n */\nexport function dbToGain(db) {\n    return Math.pow(10, db / 20);\n}\n/**\n * Convert gain to decibels.\n */\nexport function gainToDb(gain) {\n    return 20 * (Math.log(gain) / Math.LN10);\n}\n/**\n * Convert an interval (in semitones) to a frequency ratio.\n * @param interval the number of semitones above the base note\n * @example\n * import { intervalToFrequencyRatio } from \"tone\";\n * intervalToFrequencyRatio(0); // 1\n * intervalToFrequencyRatio(12); // 2\n * intervalToFrequencyRatio(-12); // 0.5\n */\nexport function intervalToFrequencyRatio(interval) {\n    return Math.pow(2, (interval / 12));\n}\n/**\n * The Global [concert tuning pitch](https://en.wikipedia.org/wiki/Concert_pitch) which is used\n * to generate all the other pitch values from notes. A4's values in Hertz.\n */\nvar A4 = 440;\nexport function getA4() {\n    return A4;\n}\nexport function setA4(freq) {\n    A4 = freq;\n}\n/**\n * Convert a frequency value to a MIDI note.\n * @param frequency The value to frequency value to convert.\n * @example\n * import { ftom } from \"tone\";\n * ftom(440); // returns 69\n */\nexport function ftom(frequency) {\n    return Math.round(ftomf(frequency));\n}\n/**\n * Convert a frequency to a floating point midi value\n */\nexport function ftomf(frequency) {\n    return 69 + 12 * Math.log2(frequency / A4);\n}\n/**\n * Convert a MIDI note to frequency value.\n * @param  midi The midi number to convert.\n * @return The corresponding frequency value\n * @example\n * import { mtof } from \"tone\";\n * mtof(69); // 440\n */\nexport function mtof(midi) {\n    return A4 * Math.pow(2, (midi - 69) / 12);\n}\n//# sourceMappingURL=Conversions.js.map","import * as tslib_1 from \"tslib\";\nimport { Tone } from \"../Tone\";\nimport { isDefined, isObject, isString, isUndef } from \"../util/TypeCheck\";\n/**\n * TimeBase is a flexible encoding of time which can be evaluated to and from a string.\n */\nvar TimeBaseClass = /** @class */ (function (_super) {\n    tslib_1.__extends(TimeBaseClass, _super);\n    /**\n     * @param context The context associated with the time value. Used to compute\n     * Transport and context-relative timing.\n     * @param  value  The time value as a number, string or object\n     * @param  units  Unit values\n     */\n    function TimeBaseClass(context, value, units) {\n        var _this = _super.call(this) || this;\n        /**\n         * The default units\n         */\n        _this.defaultUnits = \"s\";\n        _this._val = value;\n        _this._units = units;\n        _this.context = context;\n        _this._expressions = _this._getExpressions();\n        return _this;\n    }\n    /**\n     * All of the time encoding expressions\n     */\n    TimeBaseClass.prototype._getExpressions = function () {\n        var _this = this;\n        return {\n            hz: {\n                method: function (value) {\n                    return _this._frequencyToUnits(parseFloat(value));\n                },\n                regexp: /^(\\d+(?:\\.\\d+)?)hz$/i,\n            },\n            i: {\n                method: function (value) {\n                    return _this._ticksToUnits(parseInt(value, 10));\n                },\n                regexp: /^(\\d+)i$/i,\n            },\n            m: {\n                method: function (value) {\n                    return _this._beatsToUnits(parseInt(value, 10) * _this._getTimeSignature());\n                },\n                regexp: /^(\\d+)m$/i,\n            },\n            n: {\n                method: function (value, dot) {\n                    var numericValue = parseInt(value, 10);\n                    var scalar = dot === \".\" ? 1.5 : 1;\n                    if (numericValue === 1) {\n                        return _this._beatsToUnits(_this._getTimeSignature()) * scalar;\n                    }\n                    else {\n                        return _this._beatsToUnits(4 / numericValue) * scalar;\n                    }\n                },\n                regexp: /^(\\d+)n(\\.?)$/i,\n            },\n            number: {\n                method: function (value) {\n                    return _this._expressions[_this.defaultUnits].method.call(_this, value);\n                },\n                regexp: /^(\\d+(?:\\.\\d+)?)$/,\n            },\n            s: {\n                method: function (value) {\n                    return _this._secondsToUnits(parseFloat(value));\n                },\n                regexp: /^(\\d+(?:\\.\\d+)?)s$/,\n            },\n            samples: {\n                method: function (value) {\n                    return parseInt(value, 10) / _this.context.sampleRate;\n                },\n                regexp: /^(\\d+)samples$/,\n            },\n            t: {\n                method: function (value) {\n                    var numericValue = parseInt(value, 10);\n                    return _this._beatsToUnits(8 / (Math.floor(numericValue) * 3));\n                },\n                regexp: /^(\\d+)t$/i,\n            },\n            tr: {\n                method: function (m, q, s) {\n                    var total = 0;\n                    if (m && m !== \"0\") {\n                        total += _this._beatsToUnits(_this._getTimeSignature() * parseFloat(m));\n                    }\n                    if (q && q !== \"0\") {\n                        total += _this._beatsToUnits(parseFloat(q));\n                    }\n                    if (s && s !== \"0\") {\n                        total += _this._beatsToUnits(parseFloat(s) / 4);\n                    }\n                    return total;\n                },\n                regexp: /^(\\d+(?:\\.\\d+)?):(\\d+(?:\\.\\d+)?):?(\\d+(?:\\.\\d+)?)?$/,\n            },\n        };\n    };\n    //-------------------------------------\n    // \tVALUE OF\n    //-------------------------------------\n    /**\n     * Evaluate the time value. Returns the time in seconds.\n     */\n    TimeBaseClass.prototype.valueOf = function () {\n        if (this._val instanceof TimeBaseClass) {\n            this.fromType(this._val);\n        }\n        if (isUndef(this._val)) {\n            return this._noArg();\n        }\n        else if (isString(this._val) && isUndef(this._units)) {\n            for (var units in this._expressions) {\n                if (this._expressions[units].regexp.test(this._val.trim())) {\n                    this._units = units;\n                    break;\n                }\n            }\n        }\n        else if (isObject(this._val)) {\n            var total = 0;\n            for (var typeName in this._val) {\n                if (isDefined(this._val[typeName])) {\n                    var quantity = this._val[typeName];\n                    // @ts-ignore\n                    var time = (new this.constructor(this.context, typeName)).valueOf() * quantity;\n                    total += time;\n                }\n            }\n            return total;\n        }\n        if (isDefined(this._units)) {\n            var expr = this._expressions[this._units];\n            var matching = this._val.toString().trim().match(expr.regexp);\n            if (matching) {\n                return expr.method.apply(this, matching.slice(1));\n            }\n            else {\n                return expr.method.call(this, this._val);\n            }\n        }\n        else if (isString(this._val)) {\n            return parseFloat(this._val);\n        }\n        else {\n            return this._val;\n        }\n    };\n    //-------------------------------------\n    // \tUNIT CONVERSIONS\n    //-------------------------------------\n    /**\n     * Returns the value of a frequency in the current units\n     */\n    TimeBaseClass.prototype._frequencyToUnits = function (freq) {\n        return 1 / freq;\n    };\n    /**\n     * Return the value of the beats in the current units\n     */\n    TimeBaseClass.prototype._beatsToUnits = function (beats) {\n        return (60 / this._getBpm()) * beats;\n    };\n    /**\n     * Returns the value of a second in the current units\n     */\n    TimeBaseClass.prototype._secondsToUnits = function (seconds) {\n        return seconds;\n    };\n    /**\n     * Returns the value of a tick in the current time units\n     */\n    TimeBaseClass.prototype._ticksToUnits = function (ticks) {\n        return (ticks * (this._beatsToUnits(1)) / this._getPPQ());\n    };\n    /**\n     * With no arguments, return 'now'\n     */\n    TimeBaseClass.prototype._noArg = function () {\n        return this._now();\n    };\n    //-------------------------------------\n    // \tTEMPO CONVERSIONS\n    //-------------------------------------\n    /**\n     * Return the bpm\n     */\n    TimeBaseClass.prototype._getBpm = function () {\n        return this.context.transport.bpm.value;\n    };\n    /**\n     * Return the timeSignature\n     */\n    TimeBaseClass.prototype._getTimeSignature = function () {\n        return this.context.transport.timeSignature;\n    };\n    /**\n     * Return the PPQ or 192 if Transport is not available\n     */\n    TimeBaseClass.prototype._getPPQ = function () {\n        return this.context.transport.PPQ;\n    };\n    //-------------------------------------\n    // \tCONVERSION INTERFACE\n    //-------------------------------------\n    /**\n     * Coerce a time type into this units type.\n     * @param type Any time type units\n     */\n    TimeBaseClass.prototype.fromType = function (type) {\n        this._units = undefined;\n        switch (this.defaultUnits) {\n            case \"s\":\n                this._val = type.toSeconds();\n                break;\n            case \"i\":\n                this._val = type.toTicks();\n                break;\n            case \"hz\":\n                this._val = type.toFrequency();\n                break;\n            case \"midi\":\n                this._val = type.toMidi();\n                break;\n        }\n        return this;\n    };\n    /**\n     * Return the value in hertz\n     */\n    TimeBaseClass.prototype.toFrequency = function () {\n        return 1 / this.toSeconds();\n    };\n    /**\n     * Return the time in samples\n     */\n    TimeBaseClass.prototype.toSamples = function () {\n        return this.toSeconds() * this.context.sampleRate;\n    };\n    /**\n     * Return the time in milliseconds.\n     */\n    TimeBaseClass.prototype.toMilliseconds = function () {\n        return this.toSeconds() * 1000;\n    };\n    return TimeBaseClass;\n}(Tone));\nexport { TimeBaseClass };\n//# sourceMappingURL=TimeBase.js.map","import * as tslib_1 from \"tslib\";\nimport { getContext } from \"../Global\";\nimport { ftom } from \"./Conversions\";\nimport { TimeBaseClass } from \"./TimeBase\";\n/**\n * TimeClass is a primitive type for encoding and decoding Time values.\n * TimeClass can be passed into the parameter of any method which takes time as an argument.\n * @param  val    The time value.\n * @param  units  The units of the value.\n * @example\n * import { Time } from \"tone\";\n * const time = Time(\"4n\"); // a quarter note\n * @category Unit\n */\nvar TimeClass = /** @class */ (function (_super) {\n    tslib_1.__extends(TimeClass, _super);\n    function TimeClass() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.name = \"TimeClass\";\n        return _this;\n    }\n    TimeClass.prototype._getExpressions = function () {\n        var _this = this;\n        return Object.assign(_super.prototype._getExpressions.call(this), {\n            now: {\n                method: function (capture) {\n                    return _this._now() + new _this.constructor(_this.context, capture).valueOf();\n                },\n                regexp: /^\\+(.+)/,\n            },\n            quantize: {\n                method: function (capture) {\n                    var quantTo = new TimeClass(_this.context, capture).valueOf();\n                    return _this._secondsToUnits(_this.context.transport.nextSubdivision(quantTo));\n                },\n                regexp: /^@(.+)/,\n            },\n        });\n    };\n    /**\n     * Quantize the time by the given subdivision. Optionally add a\n     * percentage which will move the time value towards the ideal\n     * quantized value by that percentage.\n     * @param  subdiv    The subdivision to quantize to\n     * @param  percent  Move the time value towards the quantized value by a percentage.\n     * @example\n     * import { Time } from \"tone\";\n     * Time(21).quantize(2); // returns 22\n     * Time(0.6).quantize(\"4n\", 0.5); // returns 0.55\n     */\n    TimeClass.prototype.quantize = function (subdiv, percent) {\n        if (percent === void 0) { percent = 1; }\n        var subdivision = new this.constructor(this.context, subdiv).valueOf();\n        var value = this.valueOf();\n        var multiple = Math.round(value / subdivision);\n        var ideal = multiple * subdivision;\n        var diff = ideal - value;\n        return value + diff * percent;\n    };\n    //-------------------------------------\n    // CONVERSIONS\n    //-------------------------------------\n    /**\n     * Convert a Time to Notation. The notation values are will be the\n     * closest representation between 1m to 128th note.\n     * @return {Notation}\n     * @example\n     * import { Time } from \"tone\";\n     * // if the Transport is at 120bpm:\n     * Time(2).toNotation(); // returns \"1m\"\n     */\n    TimeClass.prototype.toNotation = function () {\n        var _this = this;\n        var time = this.toSeconds();\n        var testNotations = [\"1m\"];\n        for (var power = 1; power < 9; power++) {\n            var subdiv = Math.pow(2, power);\n            testNotations.push(subdiv + \"n.\");\n            testNotations.push(subdiv + \"n\");\n            testNotations.push(subdiv + \"t\");\n        }\n        testNotations.push(\"0\");\n        // find the closets notation representation\n        var closest = testNotations[0];\n        var closestSeconds = new TimeClass(this.context, testNotations[0]).toSeconds();\n        testNotations.forEach(function (notation) {\n            var notationSeconds = new TimeClass(_this.context, notation).toSeconds();\n            if (Math.abs(notationSeconds - time) < Math.abs(closestSeconds - time)) {\n                closest = notation;\n                closestSeconds = notationSeconds;\n            }\n        });\n        return closest;\n    };\n    /**\n     * Return the time encoded as Bars:Beats:Sixteenths.\n     */\n    TimeClass.prototype.toBarsBeatsSixteenths = function () {\n        var quarterTime = this._beatsToUnits(1);\n        var quarters = this.valueOf() / quarterTime;\n        quarters = parseFloat(quarters.toFixed(4));\n        var measures = Math.floor(quarters / this._getTimeSignature());\n        var sixteenths = (quarters % 1) * 4;\n        quarters = Math.floor(quarters) % this._getTimeSignature();\n        var sixteenthString = sixteenths.toString();\n        if (sixteenthString.length > 3) {\n            // the additional parseFloat removes insignificant trailing zeroes\n            sixteenths = parseFloat(parseFloat(sixteenthString).toFixed(3));\n        }\n        var progress = [measures, quarters, sixteenths];\n        return progress.join(\":\");\n    };\n    /**\n     * Return the time in ticks.\n     */\n    TimeClass.prototype.toTicks = function () {\n        var quarterTime = this._beatsToUnits(1);\n        var quarters = this.valueOf() / quarterTime;\n        return Math.round(quarters * this._getPPQ());\n    };\n    /**\n     * Return the time in seconds.\n     */\n    TimeClass.prototype.toSeconds = function () {\n        return this.valueOf();\n    };\n    /**\n     * Return the value as a midi note.\n     */\n    TimeClass.prototype.toMidi = function () {\n        return ftom(this.toFrequency());\n    };\n    TimeClass.prototype._now = function () {\n        return this.context.now();\n    };\n    return TimeClass;\n}(TimeBaseClass));\nexport { TimeClass };\n/**\n * Create a TimeClass from a time string or number.\n * @param value A value which reprsents time\n * @param units The value's units if they can't be inferred by the value.\n * @category Unit\n */\nexport function Time(value, units) {\n    return new TimeClass(getContext(), value, units);\n}\n//# sourceMappingURL=Time.js.map","import * as tslib_1 from \"tslib\";\nimport { getContext } from \"../Global\";\nimport { intervalToFrequencyRatio, mtof } from \"./Conversions\";\nimport { ftom, getA4, setA4 } from \"./Conversions\";\nimport { TimeClass } from \"./Time\";\n/**\n * Frequency is a primitive type for encoding Frequency values.\n * Eventually all time values are evaluated to hertz using the `eval` method.\n * @example\n * import { Frequency } from \"tone\";\n * Frequency(\"C3\"); // 261\n * Frequency(38, \"midi\");\n * Frequency(\"C3\").transpose(4);\n * @category Unit\n */\nvar FrequencyClass = /** @class */ (function (_super) {\n    tslib_1.__extends(FrequencyClass, _super);\n    function FrequencyClass() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.name = \"Frequency\";\n        _this.defaultUnits = \"hz\";\n        return _this;\n    }\n    Object.defineProperty(FrequencyClass, \"A4\", {\n        /**\n         * The [concert tuning pitch](https://en.wikipedia.org/wiki/Concert_pitch) which is used\n         * to generate all the other pitch values from notes. A4's values in Hertz.\n         */\n        get: function () {\n            return getA4();\n        },\n        set: function (freq) {\n            setA4(freq);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //-------------------------------------\n    // \tAUGMENT BASE EXPRESSIONS\n    //-------------------------------------\n    FrequencyClass.prototype._getExpressions = function () {\n        return Object.assign({}, _super.prototype._getExpressions.call(this), {\n            midi: {\n                regexp: /^(\\d+(?:\\.\\d+)?midi)/,\n                method: function (value) {\n                    if (this.defaultUnits === \"midi\") {\n                        return value;\n                    }\n                    else {\n                        return FrequencyClass.mtof(value);\n                    }\n                },\n            },\n            note: {\n                regexp: /^([a-g]{1}(?:b|#|x|bb)?)(-?[0-9]+)/i,\n                method: function (pitch, octave) {\n                    var index = noteToScaleIndex[pitch.toLowerCase()];\n                    var noteNumber = index + (parseInt(octave, 10) + 1) * 12;\n                    if (this.defaultUnits === \"midi\") {\n                        return noteNumber;\n                    }\n                    else {\n                        return FrequencyClass.mtof(noteNumber);\n                    }\n                },\n            },\n            tr: {\n                regexp: /^(\\d+(?:\\.\\d+)?):(\\d+(?:\\.\\d+)?):?(\\d+(?:\\.\\d+)?)?/,\n                method: function (m, q, s) {\n                    var total = 1;\n                    if (m && m !== \"0\") {\n                        total *= this._beatsToUnits(this._getTimeSignature() * parseFloat(m));\n                    }\n                    if (q && q !== \"0\") {\n                        total *= this._beatsToUnits(parseFloat(q));\n                    }\n                    if (s && s !== \"0\") {\n                        total *= this._beatsToUnits(parseFloat(s) / 4);\n                    }\n                    return total;\n                },\n            },\n        });\n    };\n    //-------------------------------------\n    // \tEXPRESSIONS\n    //-------------------------------------\n    /**\n     * Transposes the frequency by the given number of semitones.\n     * @return  A new transposed frequency\n     * @example\n     * import { Frequency } from \"tone\";\n     * Frequency(\"A4\").transpose(3); // \"C5\"\n     */\n    FrequencyClass.prototype.transpose = function (interval) {\n        return new FrequencyClass(this.context, this.valueOf() * intervalToFrequencyRatio(interval));\n    };\n    /**\n     * Takes an array of semitone intervals and returns\n     * an array of frequencies transposed by those intervals.\n     * @return  Returns an array of Frequencies\n     * @example\n     * import { Frequency } from \"tone\";\n     * Frequency(\"A4\").harmonize([0, 3, 7]); // [\"A4\", \"C5\", \"E5\"]\n     */\n    FrequencyClass.prototype.harmonize = function (intervals) {\n        var _this = this;\n        return intervals.map(function (interval) {\n            return _this.transpose(interval);\n        });\n    };\n    //-------------------------------------\n    // \tUNIT CONVERSIONS\n    //-------------------------------------\n    /**\n     * Return the value of the frequency as a MIDI note\n     * @example\n     * import { Frequency } from \"tone\";\n     * Frequency(\"C4\").toMidi(); // 60\n     */\n    FrequencyClass.prototype.toMidi = function () {\n        return ftom(this.valueOf());\n    };\n    /**\n     * Return the value of the frequency in Scientific Pitch Notation\n     * @example\n     * import { Frequency } from \"tone\";\n     * Frequency(69, \"midi\").toNote(); // \"A4\"\n     */\n    FrequencyClass.prototype.toNote = function () {\n        var freq = this.toFrequency();\n        var log = Math.log2(freq / FrequencyClass.A4);\n        var noteNumber = Math.round(12 * log) + 57;\n        var octave = Math.floor(noteNumber / 12);\n        if (octave < 0) {\n            noteNumber += -12 * octave;\n        }\n        var noteName = scaleIndexToNote[noteNumber % 12];\n        return noteName + octave.toString();\n    };\n    /**\n     * Return the duration of one cycle in seconds.\n     */\n    FrequencyClass.prototype.toSeconds = function () {\n        return 1 / _super.prototype.toSeconds.call(this);\n    };\n    /**\n     * Return the duration of one cycle in ticks\n     */\n    FrequencyClass.prototype.toTicks = function () {\n        var quarterTime = this._beatsToUnits(1);\n        var quarters = this.valueOf() / quarterTime;\n        return Math.floor(quarters * this._getPPQ());\n    };\n    //-------------------------------------\n    // \tUNIT CONVERSIONS HELPERS\n    //-------------------------------------\n    /**\n     * With no arguments, return 0\n     */\n    FrequencyClass.prototype._noArg = function () {\n        return 0;\n    };\n    /**\n     * Returns the value of a frequency in the current units\n     */\n    FrequencyClass.prototype._frequencyToUnits = function (freq) {\n        return freq;\n    };\n    /**\n     * Returns the value of a tick in the current time units\n     */\n    FrequencyClass.prototype._ticksToUnits = function (ticks) {\n        return 1 / ((ticks * 60) / (this._getBpm() * this._getPPQ()));\n    };\n    /**\n     * Return the value of the beats in the current units\n     */\n    FrequencyClass.prototype._beatsToUnits = function (beats) {\n        return 1 / _super.prototype._beatsToUnits.call(this, beats);\n    };\n    /**\n     * Returns the value of a second in the current units\n     */\n    FrequencyClass.prototype._secondsToUnits = function (seconds) {\n        return 1 / seconds;\n    };\n    /**\n     * Convert a MIDI note to frequency value.\n     * @param  midi The midi number to convert.\n     * @return The corresponding frequency value\n     */\n    FrequencyClass.mtof = function (midi) {\n        return mtof(midi);\n    };\n    /**\n     * Convert a frequency value to a MIDI note.\n     * @param frequency The value to frequency value to convert.\n     */\n    FrequencyClass.ftom = function (frequency) {\n        return ftom(frequency);\n    };\n    return FrequencyClass;\n}(TimeClass));\nexport { FrequencyClass };\n//-------------------------------------\n// \tFREQUENCY CONVERSIONS\n//-------------------------------------\n/**\n * Note to scale index.\n * @hidden\n */\nvar noteToScaleIndex = {\n    cbb: -2, cb: -1, c: 0, \"c#\": 1, cx: 2,\n    dbb: 0, db: 1, d: 2, \"d#\": 3, dx: 4,\n    ebb: 2, eb: 3, e: 4, \"e#\": 5, ex: 6,\n    fbb: 3, fb: 4, f: 5, \"f#\": 6, fx: 7,\n    gbb: 5, gb: 6, g: 7, \"g#\": 8, gx: 9,\n    abb: 7, ab: 8, a: 9, \"a#\": 10, ax: 11,\n    bbb: 9, bb: 10, b: 11, \"b#\": 12, bx: 13,\n};\n/**\n * scale index to note (sharps)\n * @hidden\n */\nvar scaleIndexToNote = [\"C\", \"C#\", \"D\", \"D#\", \"E\", \"F\", \"F#\", \"G\", \"G#\", \"A\", \"A#\", \"B\"];\n/**\n * Convert a value into a FrequencyClass object.\n * @category Unit\n */\nexport function Frequency(value, units) {\n    return new FrequencyClass(getContext(), value, units);\n}\n//# sourceMappingURL=Frequency.js.map","import * as tslib_1 from \"tslib\";\nimport { getContext } from \"../Global\";\nimport { TimeClass } from \"./Time\";\n/**\n * TransportTime is a the time along the Transport's\n * timeline. It is similar to Tone.Time, but instead of evaluating\n * against the AudioContext's clock, it is evaluated against\n * the Transport's position. See [TransportTime wiki](https://github.com/Tonejs/Tone.js/wiki/TransportTime).\n * @category Unit\n */\nvar TransportTimeClass = /** @class */ (function (_super) {\n    tslib_1.__extends(TransportTimeClass, _super);\n    function TransportTimeClass() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.name = \"TransportTime\";\n        return _this;\n    }\n    /**\n     * Return the current time in whichever context is relevant\n     */\n    TransportTimeClass.prototype._now = function () {\n        return this.context.transport.seconds;\n    };\n    return TransportTimeClass;\n}(TimeClass));\nexport { TransportTimeClass };\n/**\n * TransportTime is a the time along the Transport's\n * timeline. It is similar to [[Time]], but instead of evaluating\n * against the AudioContext's clock, it is evaluated against\n * the Transport's position. See [TransportTime wiki](https://github.com/Tonejs/Tone.js/wiki/TransportTime).\n * @category Unit\n */\nexport function TransportTime(value, units) {\n    return new TransportTimeClass(getContext(), value, units);\n}\n//# sourceMappingURL=TransportTime.js.map","import * as tslib_1 from \"tslib\";\nimport { getContext } from \"../Global\";\nimport { Tone } from \"../Tone\";\nimport { FrequencyClass } from \"../type/Frequency\";\nimport { TimeClass } from \"../type/Time\";\nimport { TransportTimeClass } from \"../type/TransportTime\";\nimport { getDefaultsFromInstance, optionsFromArguments } from \"../util/Defaults\";\nimport { isArray, isBoolean, isDefined, isNumber, isString, isUndef } from \"../util/TypeCheck\";\n/**\n * The Base class for all nodes that have an AudioContext.\n */\nvar ToneWithContext = /** @class */ (function (_super) {\n    tslib_1.__extends(ToneWithContext, _super);\n    function ToneWithContext() {\n        var _this = _super.call(this) || this;\n        var options = optionsFromArguments(ToneWithContext.getDefaults(), arguments, [\"context\"]);\n        if (_this.defaultContext) {\n            _this.context = _this.defaultContext;\n        }\n        else {\n            _this.context = options.context;\n        }\n        return _this;\n    }\n    ToneWithContext.getDefaults = function () {\n        return {\n            context: getContext(),\n        };\n    };\n    /**\n     * Return the current time of the Context clock plus the lookAhead.\n     * @example\n     * import { Transport } from \"tone\";\n     * console.log(Transport.now());\n     */\n    ToneWithContext.prototype.now = function () {\n        return this.context.currentTime + this.context.lookAhead;\n    };\n    /**\n     * Return the current time of the Context clock without any lookAhead.\n     * @example\n     * import { Transport } from \"tone\";\n     * console.log(Transport.immediate());\n     */\n    ToneWithContext.prototype.immediate = function () {\n        return this.context.currentTime;\n    };\n    Object.defineProperty(ToneWithContext.prototype, \"sampleTime\", {\n        /**\n         * The duration in seconds of one sample.\n         * @example\n         * import { Transport } from \"tone\";\n         * console.log(Transport.sampleTime);\n         */\n        get: function () {\n            return 1 / this.context.sampleRate;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ToneWithContext.prototype, \"blockTime\", {\n        /**\n         * The number of seconds of 1 processing block (128 samples)\n         * @example\n         * import { Destination } from \"tone\";\n         * console.log(Destination.blockTime);\n         */\n        get: function () {\n            return 128 / this.context.sampleRate;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Convert the incoming time to seconds\n     */\n    ToneWithContext.prototype.toSeconds = function (time) {\n        return new TimeClass(this.context, time).toSeconds();\n    };\n    /**\n     * Convert the input to a frequency number\n     */\n    ToneWithContext.prototype.toFrequency = function (freq) {\n        return new FrequencyClass(this.context, freq).toFrequency();\n    };\n    /**\n     * Convert the input time into ticks\n     */\n    ToneWithContext.prototype.toTicks = function (time) {\n        return new TransportTimeClass(this.context, time).toTicks();\n    };\n    //-------------------------------------\n    // \tGET/SET\n    //-------------------------------------\n    /**\n     * Get a subset of the properties which are in the partial props\n     */\n    ToneWithContext.prototype._getPartialProperties = function (props) {\n        var options = this.get();\n        // remove attributes from the prop that are not in the partial\n        Object.keys(options).forEach(function (name) {\n            if (isUndef(props[name])) {\n                delete options[name];\n            }\n        });\n        return options;\n    };\n    /**\n     * Get the object's attributes.\n     * @example\n     * import { Oscillator } from \"tone\";\n     * const osc = new Oscillator();\n     * console.log(osc.get());\n     * // returns {\"type\" : \"sine\", \"frequency\" : 440, ...etc}\n     */\n    ToneWithContext.prototype.get = function () {\n        var _this = this;\n        var defaults = getDefaultsFromInstance(this);\n        Object.keys(defaults).forEach(function (attribute) {\n            if (Reflect.has(_this, attribute)) {\n                var member = _this[attribute];\n                if (isDefined(member) && isDefined(member.value) && isDefined(member.setValueAtTime)) {\n                    defaults[attribute] = member.value;\n                }\n                else if (member instanceof ToneWithContext) {\n                    defaults[attribute] = member._getPartialProperties(defaults[attribute]);\n                    // otherwise make sure it's a serializable type\n                }\n                else if (isArray(member) || isNumber(member) || isString(member) || isBoolean(member)) {\n                    defaults[attribute] = member;\n                }\n                else {\n                    // remove all undefined and unserializable attributes\n                    delete defaults[attribute];\n                }\n            }\n        });\n        return defaults;\n    };\n    /**\n     * Set multiple properties at once with an object.\n     * @example\n     * import { Filter } from \"tone\";\n     * const filter = new Filter();\n     * // set values using an object\n     * filter.set({\n     * \tfrequency: 300,\n     * \ttype: \"highpass\"\n     * });\n     */\n    ToneWithContext.prototype.set = function (props) {\n        var _this = this;\n        Object.keys(props).forEach(function (attribute) {\n            if (Reflect.has(_this, attribute) && isDefined(_this[attribute])) {\n                if (_this[attribute] && isDefined(_this[attribute].value) && isDefined(_this[attribute].setValueAtTime)) {\n                    // small optimization\n                    if (_this[attribute].value !== props[attribute]) {\n                        _this[attribute].value = props[attribute];\n                    }\n                }\n                else if (_this[attribute] instanceof ToneWithContext) {\n                    _this[attribute].set(props[attribute]);\n                }\n                else {\n                    _this[attribute] = props[attribute];\n                }\n            }\n        });\n        return this;\n    };\n    return ToneWithContext;\n}(Tone));\nexport { ToneWithContext };\n//# sourceMappingURL=ToneWithContext.js.map","import * as tslib_1 from \"tslib\";\nimport { Timeline } from \"./Timeline\";\nimport { assertRange } from \"./Debug\";\n/**\n * A Timeline State. Provides the methods: `setStateAtTime(\"state\", time)` and `getValueAtTime(time)`\n * @param initial The initial state of the StateTimeline.  Defaults to `undefined`\n */\nvar StateTimeline = /** @class */ (function (_super) {\n    tslib_1.__extends(StateTimeline, _super);\n    function StateTimeline(initial) {\n        if (initial === void 0) { initial = \"stopped\"; }\n        var _this = _super.call(this) || this;\n        _this.name = \"StateTimeline\";\n        _this._initial = initial;\n        _this.setStateAtTime(_this._initial, 0);\n        return _this;\n    }\n    /**\n     * Returns the scheduled state scheduled before or at\n     * the given time.\n     * @param  time  The time to query.\n     * @return  The name of the state input in setStateAtTime.\n     */\n    StateTimeline.prototype.getValueAtTime = function (time) {\n        var event = this.get(time);\n        if (event !== null) {\n            return event.state;\n        }\n        else {\n            return this._initial;\n        }\n    };\n    /**\n     * Add a state to the timeline.\n     * @param  state The name of the state to set.\n     * @param  time  The time to query.\n     * @param options Any additional options that are needed in the timeline.\n     */\n    StateTimeline.prototype.setStateAtTime = function (state, time, options) {\n        assertRange(time, 0);\n        this.add(Object.assign({}, options, {\n            state: state,\n            time: time,\n        }));\n        return this;\n    };\n    /**\n     * Return the event before the time with the given state\n     * @param  state The state to look for\n     * @param  time  When to check before\n     * @return  The event with the given state before the time\n     */\n    StateTimeline.prototype.getLastState = function (state, time) {\n        // time = this.toSeconds(time);\n        var index = this._search(time);\n        for (var i = index; i >= 0; i--) {\n            var event_1 = this._timeline[i];\n            if (event_1.state === state) {\n                return event_1;\n            }\n        }\n    };\n    /**\n     * Return the event after the time with the given state\n     * @param  state The state to look for\n     * @param  time  When to check from\n     * @return  The event with the given state after the time\n     */\n    StateTimeline.prototype.getNextState = function (state, time) {\n        // time = this.toSeconds(time);\n        var index = this._search(time);\n        if (index !== -1) {\n            for (var i = index; i < this._timeline.length; i++) {\n                var event_2 = this._timeline[i];\n                if (event_2.state === state) {\n                    return event_2;\n                }\n            }\n        }\n    };\n    return StateTimeline;\n}(Timeline));\nexport { StateTimeline };\n//# sourceMappingURL=StateTimeline.js.map","import * as tslib_1 from \"tslib\";\nimport { dbToGain, gainToDb } from \"../type/Conversions\";\nimport { isAudioParam } from \"../util/AdvancedTypeCheck\";\nimport { optionsFromArguments } from \"../util/Defaults\";\nimport { Timeline } from \"../util/Timeline\";\nimport { isDefined } from \"../util/TypeCheck\";\nimport { ToneWithContext } from \"./ToneWithContext\";\nimport { EQ } from \"../util/Math\";\nimport { assert, assertRange } from \"../util/Debug\";\n/**\n * Param wraps the native Web Audio's AudioParam to provide\n * additional unit conversion functionality. It also\n * serves as a base-class for classes which have a single,\n * automatable parameter.\n */\nvar Param = /** @class */ (function (_super) {\n    tslib_1.__extends(Param, _super);\n    function Param() {\n        var _this = _super.call(this, optionsFromArguments(Param.getDefaults(), arguments, [\"param\", \"units\", \"convert\"])) || this;\n        _this.name = \"Param\";\n        _this.overridden = false;\n        /**\n         * The minimum output value\n         */\n        _this._minOutput = 1e-7;\n        var options = optionsFromArguments(Param.getDefaults(), arguments, [\"param\", \"units\", \"convert\"]);\n        assert(isDefined(options.param) &&\n            (isAudioParam(options.param) || options.param instanceof Param), \"param must be an AudioParam\");\n        while (!isAudioParam(options.param)) {\n            options.param = options.param._param;\n        }\n        _this._swappable = isDefined(options.swappable) ? options.swappable : false;\n        if (_this._swappable) {\n            _this.input = _this.context.createGain();\n            // initialize\n            _this._param = options.param;\n            _this.input.connect(_this._param);\n        }\n        else {\n            _this._param = _this.input = options.param;\n        }\n        _this._events = new Timeline(1000);\n        _this._initialValue = _this._param.defaultValue;\n        _this.units = options.units;\n        _this.convert = options.convert;\n        _this._minValue = options.minValue;\n        _this._maxValue = options.maxValue;\n        // if the value is defined, set it immediately\n        if (isDefined(options.value) && options.value !== _this._toType(_this._initialValue)) {\n            _this.setValueAtTime(options.value, 0);\n        }\n        return _this;\n    }\n    Param.getDefaults = function () {\n        return Object.assign(ToneWithContext.getDefaults(), {\n            convert: true,\n            units: \"number\",\n        });\n    };\n    Object.defineProperty(Param.prototype, \"value\", {\n        get: function () {\n            var now = this.now();\n            return this.getValueAtTime(now);\n        },\n        set: function (value) {\n            this.cancelScheduledValues(this.now());\n            this.setValueAtTime(value, this.now());\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Param.prototype, \"minValue\", {\n        get: function () {\n            // if it's not the default minValue, return it\n            if (isDefined(this._minValue)) {\n                return this._minValue;\n            }\n            else if (this.units === \"time\" || this.units === \"frequency\" ||\n                this.units === \"normalRange\" || this.units === \"positive\" ||\n                this.units === \"transportTime\" || this.units === \"ticks\" ||\n                this.units === \"bpm\" || this.units === \"hertz\" || this.units === \"samples\") {\n                return 0;\n            }\n            else if (this.units === \"audioRange\") {\n                return -1;\n            }\n            else if (this.units === \"decibels\") {\n                return -Infinity;\n            }\n            else {\n                return this._param.minValue;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Param.prototype, \"maxValue\", {\n        get: function () {\n            if (isDefined(this._maxValue)) {\n                return this._maxValue;\n            }\n            else if (this.units === \"normalRange\" ||\n                this.units === \"audioRange\") {\n                return 1;\n            }\n            else {\n                return this._param.maxValue;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Type guard based on the unit name\n     */\n    Param.prototype._is = function (arg, type) {\n        return this.units === type;\n    };\n    /**\n     * Make sure the value is always in the defined range\n     */\n    Param.prototype._assertRange = function (value) {\n        if (isDefined(this.maxValue) && isDefined(this.minValue)) {\n            assertRange(value, this._fromType(this.minValue), this._fromType(this.maxValue));\n        }\n        return value;\n    };\n    /**\n     * Convert the given value from the type specified by Param.units\n     * into the destination value (such as Gain or Frequency).\n     */\n    Param.prototype._fromType = function (val) {\n        if (this.convert && !this.overridden) {\n            if (this._is(val, \"time\")) {\n                return this.toSeconds(val);\n            }\n            else if (this._is(val, \"decibels\")) {\n                return dbToGain(val);\n            }\n            else if (this._is(val, \"frequency\")) {\n                return this.toFrequency(val);\n            }\n            else {\n                return val;\n            }\n        }\n        else if (this.overridden) {\n            // if it's overridden, should only schedule 0s\n            return 0;\n        }\n        else {\n            return val;\n        }\n    };\n    /**\n     * Convert the parameters value into the units specified by Param.units.\n     */\n    Param.prototype._toType = function (val) {\n        if (this.convert && this.units === \"decibels\") {\n            return gainToDb(val);\n        }\n        else {\n            return val;\n        }\n    };\n    //-------------------------------------\n    // ABSTRACT PARAM INTERFACE\n    // all docs are generated from ParamInterface.ts\n    //-------------------------------------\n    Param.prototype.setValueAtTime = function (value, time) {\n        var computedTime = this.toSeconds(time);\n        var numericValue = this._fromType(value);\n        assert(isFinite(numericValue) && isFinite(computedTime), \"Invalid argument(s) to setValueAtTime: \" + JSON.stringify(value) + \", \" + JSON.stringify(time));\n        this._assertRange(numericValue);\n        this.log(this.units, \"setValueAtTime\", value, computedTime);\n        this._events.add({\n            time: computedTime,\n            type: \"setValueAtTime\",\n            value: numericValue,\n        });\n        this._param.setValueAtTime(numericValue, computedTime);\n        return this;\n    };\n    Param.prototype.getValueAtTime = function (time) {\n        var computedTime = Math.max(this.toSeconds(time), 0);\n        var after = this._events.getAfter(computedTime);\n        var before = this._events.get(computedTime);\n        var value = this._initialValue;\n        // if it was set by\n        if (before === null) {\n            value = this._initialValue;\n        }\n        else if (before.type === \"setTargetAtTime\" && (after === null || after.type === \"setValueAtTime\")) {\n            var previous = this._events.getBefore(before.time);\n            var previousVal = void 0;\n            if (previous === null) {\n                previousVal = this._initialValue;\n            }\n            else {\n                previousVal = previous.value;\n            }\n            if (before.type === \"setTargetAtTime\") {\n                value = this._exponentialApproach(before.time, previousVal, before.value, before.constant, computedTime);\n            }\n        }\n        else if (after === null) {\n            value = before.value;\n        }\n        else if (after.type === \"linearRampToValueAtTime\" || after.type === \"exponentialRampToValueAtTime\") {\n            var beforeValue = before.value;\n            if (before.type === \"setTargetAtTime\") {\n                var previous = this._events.getBefore(before.time);\n                if (previous === null) {\n                    beforeValue = this._initialValue;\n                }\n                else {\n                    beforeValue = previous.value;\n                }\n            }\n            if (after.type === \"linearRampToValueAtTime\") {\n                value = this._linearInterpolate(before.time, beforeValue, after.time, after.value, computedTime);\n            }\n            else {\n                value = this._exponentialInterpolate(before.time, beforeValue, after.time, after.value, computedTime);\n            }\n        }\n        else {\n            value = before.value;\n        }\n        return this._toType(value);\n    };\n    Param.prototype.setRampPoint = function (time) {\n        time = this.toSeconds(time);\n        var currentVal = this.getValueAtTime(time);\n        this.cancelAndHoldAtTime(time);\n        if (this._fromType(currentVal) === 0) {\n            currentVal = this._toType(this._minOutput);\n        }\n        this.setValueAtTime(currentVal, time);\n        return this;\n    };\n    Param.prototype.linearRampToValueAtTime = function (value, endTime) {\n        var numericValue = this._fromType(value);\n        var computedTime = this.toSeconds(endTime);\n        assert(isFinite(numericValue) && isFinite(computedTime), \"Invalid argument(s) to linearRampToValueAtTime: \" + JSON.stringify(value) + \", \" + JSON.stringify(endTime));\n        this._assertRange(numericValue);\n        this._events.add({\n            time: computedTime,\n            type: \"linearRampToValueAtTime\",\n            value: numericValue,\n        });\n        this.log(this.units, \"linearRampToValueAtTime\", value, computedTime);\n        this._param.linearRampToValueAtTime(numericValue, computedTime);\n        return this;\n    };\n    Param.prototype.exponentialRampToValueAtTime = function (value, endTime) {\n        var numericValue = this._fromType(value);\n        numericValue = Math.max(this._minOutput, numericValue);\n        this._assertRange(numericValue);\n        var computedTime = this.toSeconds(endTime);\n        assert(isFinite(numericValue) && isFinite(computedTime), \"Invalid argument(s) to exponentialRampToValueAtTime: \" + JSON.stringify(value) + \", \" + JSON.stringify(endTime));\n        // store the event\n        this._events.add({\n            time: computedTime,\n            type: \"exponentialRampToValueAtTime\",\n            value: numericValue,\n        });\n        this.log(this.units, \"exponentialRampToValueAtTime\", value, computedTime);\n        this._param.exponentialRampToValueAtTime(numericValue, computedTime);\n        return this;\n    };\n    Param.prototype.exponentialRampTo = function (value, rampTime, startTime) {\n        startTime = this.toSeconds(startTime);\n        this.setRampPoint(startTime);\n        this.exponentialRampToValueAtTime(value, startTime + this.toSeconds(rampTime));\n        return this;\n    };\n    Param.prototype.linearRampTo = function (value, rampTime, startTime) {\n        startTime = this.toSeconds(startTime);\n        this.setRampPoint(startTime);\n        this.linearRampToValueAtTime(value, startTime + this.toSeconds(rampTime));\n        return this;\n    };\n    Param.prototype.targetRampTo = function (value, rampTime, startTime) {\n        startTime = this.toSeconds(startTime);\n        this.setRampPoint(startTime);\n        this.exponentialApproachValueAtTime(value, startTime, rampTime);\n        return this;\n    };\n    Param.prototype.exponentialApproachValueAtTime = function (value, time, rampTime) {\n        time = this.toSeconds(time);\n        rampTime = this.toSeconds(rampTime);\n        var timeConstant = Math.log(rampTime + 1) / Math.log(200);\n        this.setTargetAtTime(value, time, timeConstant);\n        // at 90% start a linear ramp to the final value\n        this.cancelAndHoldAtTime(time + rampTime * 0.9);\n        this.linearRampToValueAtTime(value, time + rampTime);\n        return this;\n    };\n    Param.prototype.setTargetAtTime = function (value, startTime, timeConstant) {\n        var numericValue = this._fromType(value);\n        // The value will never be able to approach without timeConstant > 0.\n        assert(isFinite(timeConstant) && timeConstant > 0, \"timeConstant must be a number greater than 0\");\n        var computedTime = this.toSeconds(startTime);\n        this._assertRange(numericValue);\n        assert(isFinite(numericValue) && isFinite(computedTime), \"Invalid argument(s) to setTargetAtTime: \" + JSON.stringify(value) + \", \" + JSON.stringify(startTime));\n        this._events.add({\n            constant: timeConstant,\n            time: computedTime,\n            type: \"setTargetAtTime\",\n            value: numericValue,\n        });\n        this.log(this.units, \"setTargetAtTime\", value, computedTime, timeConstant);\n        this._param.setTargetAtTime(numericValue, computedTime, timeConstant);\n        return this;\n    };\n    Param.prototype.setValueCurveAtTime = function (values, startTime, duration, scaling) {\n        if (scaling === void 0) { scaling = 1; }\n        duration = this.toSeconds(duration);\n        startTime = this.toSeconds(startTime);\n        var startingValue = this._fromType(values[0]) * scaling;\n        this.setValueAtTime(this._toType(startingValue), startTime);\n        var segTime = duration / (values.length - 1);\n        for (var i = 1; i < values.length; i++) {\n            var numericValue = this._fromType(values[i]) * scaling;\n            this.linearRampToValueAtTime(this._toType(numericValue), startTime + i * segTime);\n        }\n        return this;\n    };\n    Param.prototype.cancelScheduledValues = function (time) {\n        var computedTime = this.toSeconds(time);\n        assert(isFinite(computedTime), \"Invalid argument to cancelScheduledValues: \" + JSON.stringify(time));\n        this._events.cancel(computedTime);\n        this._param.cancelScheduledValues(computedTime);\n        this.log(this.units, \"cancelScheduledValues\", computedTime);\n        return this;\n    };\n    Param.prototype.cancelAndHoldAtTime = function (time) {\n        var computedTime = this.toSeconds(time);\n        var valueAtTime = this._fromType(this.getValueAtTime(computedTime));\n        // remove the schedule events\n        assert(isFinite(computedTime), \"Invalid argument to cancelAndHoldAtTime: \" + JSON.stringify(time));\n        this.log(this.units, \"cancelAndHoldAtTime\", computedTime, \"value=\" + valueAtTime);\n        // if there is an event at the given computedTime\n        // and that even is not a \"set\"\n        var before = this._events.get(computedTime);\n        var after = this._events.getAfter(computedTime);\n        if (before && EQ(before.time, computedTime)) {\n            // remove everything after\n            if (after) {\n                this._param.cancelScheduledValues(after.time);\n                this._events.cancel(after.time);\n            }\n            else {\n                this._param.cancelAndHoldAtTime(computedTime);\n                this._events.cancel(computedTime + this.sampleTime);\n            }\n        }\n        else if (after) {\n            this._param.cancelScheduledValues(after.time);\n            // cancel the next event(s)\n            this._events.cancel(after.time);\n            if (after.type === \"linearRampToValueAtTime\") {\n                this.linearRampToValueAtTime(this._toType(valueAtTime), computedTime);\n            }\n            else if (after.type === \"exponentialRampToValueAtTime\") {\n                this.exponentialRampToValueAtTime(this._toType(valueAtTime), computedTime);\n            }\n        }\n        // set the value at the given time\n        this._events.add({\n            time: computedTime,\n            type: \"setValueAtTime\",\n            value: valueAtTime,\n        });\n        this._param.setValueAtTime(valueAtTime, computedTime);\n        return this;\n    };\n    Param.prototype.rampTo = function (value, rampTime, startTime) {\n        if (rampTime === void 0) { rampTime = 0.1; }\n        if (this.units === \"frequency\" || this.units === \"bpm\" || this.units === \"decibels\") {\n            this.exponentialRampTo(value, rampTime, startTime);\n        }\n        else {\n            this.linearRampTo(value, rampTime, startTime);\n        }\n        return this;\n    };\n    /**\n     * Apply all of the previously scheduled events to the passed in Param or AudioParam.\n     * The applied values will start at the context's current time and schedule\n     * all of the events which are scheduled on this Param onto the passed in param.\n     */\n    Param.prototype.apply = function (param) {\n        var now = this.context.currentTime;\n        // set the param's value at the current time and schedule everything else\n        param.setValueAtTime(this.getValueAtTime(now), now);\n        // if the previous event was a curve, then set the rest of it\n        var previousEvent = this._events.get(now);\n        if (previousEvent && previousEvent.type === \"setTargetAtTime\") {\n            // approx it until the next event with linear ramps\n            var nextEvent = this._events.getAfter(previousEvent.time);\n            // or for 2 seconds if there is no event\n            var endTime = nextEvent ? nextEvent.time : now + 2;\n            var subdivisions = (endTime - now) / 10;\n            for (var i = now; i < endTime; i += subdivisions) {\n                param.linearRampToValueAtTime(this.getValueAtTime(i), i);\n            }\n        }\n        this._events.forEachAfter(this.context.currentTime, function (event) {\n            if (event.type === \"cancelScheduledValues\") {\n                param.cancelScheduledValues(event.time);\n            }\n            else if (event.type === \"setTargetAtTime\") {\n                param.setTargetAtTime(event.value, event.time, event.constant);\n            }\n            else {\n                param[event.type](event.value, event.time);\n            }\n        });\n        return this;\n    };\n    /**\n     * Replace the Param's internal AudioParam. Will apply scheduled curves\n     * onto the parameter and replace the connections.\n     */\n    Param.prototype.setParam = function (param) {\n        assert(this._swappable, \"The Param must be assigned as 'swappable' in the constructor\");\n        var input = this.input;\n        input.disconnect(this._param);\n        this.apply(param);\n        this._param = param;\n        input.connect(this._param);\n        return this;\n    };\n    Param.prototype.dispose = function () {\n        _super.prototype.dispose.call(this);\n        this._events.dispose();\n        return this;\n    };\n    Object.defineProperty(Param.prototype, \"defaultValue\", {\n        get: function () {\n            return this._toType(this._param.defaultValue);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //-------------------------------------\n    // \tAUTOMATION CURVE CALCULATIONS\n    // \tMIT License, copyright (c) 2014 Jordan Santell\n    //-------------------------------------\n    // Calculates the the value along the curve produced by setTargetAtTime\n    Param.prototype._exponentialApproach = function (t0, v0, v1, timeConstant, t) {\n        return v1 + (v0 - v1) * Math.exp(-(t - t0) / timeConstant);\n    };\n    // Calculates the the value along the curve produced by linearRampToValueAtTime\n    Param.prototype._linearInterpolate = function (t0, v0, t1, v1, t) {\n        return v0 + (v1 - v0) * ((t - t0) / (t1 - t0));\n    };\n    // Calculates the the value along the curve produced by exponentialRampToValueAtTime\n    Param.prototype._exponentialInterpolate = function (t0, v0, t1, v1, t) {\n        return v0 * Math.pow(v1 / v0, (t - t0) / (t1 - t0));\n    };\n    return Param;\n}(ToneWithContext));\nexport { Param };\n//# sourceMappingURL=Param.js.map","import * as tslib_1 from \"tslib\";\nimport { isAudioNode, isAudioParam } from \"../util/AdvancedTypeCheck\";\nimport { isDefined } from \"../util/TypeCheck\";\nimport { Param } from \"./Param\";\nimport { ToneWithContext } from \"./ToneWithContext\";\nimport { assert, warn } from \"../util/Debug\";\n/**\n * ToneAudioNode is the base class for classes which process audio.\n */\nvar ToneAudioNode = /** @class */ (function (_super) {\n    tslib_1.__extends(ToneAudioNode, _super);\n    function ToneAudioNode() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        /**\n         * The name of the class\n         */\n        _this.name = \"ToneAudioNode\";\n        /**\n         * List all of the node that must be set to match the ChannelProperties\n         */\n        _this._internalChannels = [];\n        return _this;\n    }\n    Object.defineProperty(ToneAudioNode.prototype, \"numberOfInputs\", {\n        /**\n         * The number of inputs feeding into the AudioNode.\n         * For source nodes, this will be 0.\n         * @example\n         * import { Gain } from \"tone\";\n         * const node = new Gain();\n         * console.log(node.numberOfInputs);\n         */\n        get: function () {\n            if (isDefined(this.input)) {\n                if (isAudioParam(this.input) || this.input instanceof Param) {\n                    return 1;\n                }\n                else {\n                    return this.input.numberOfInputs;\n                }\n            }\n            else {\n                return 0;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ToneAudioNode.prototype, \"numberOfOutputs\", {\n        /**\n         * The number of outputs of the AudioNode.\n         * * @example\n         * import { Gain } from \"tone\";\n         * const node = new Gain();\n         * console.log(node.numberOfOutputs);\n         */\n        get: function () {\n            if (isDefined(this.output)) {\n                return this.output.numberOfOutputs;\n            }\n            else {\n                return 0;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //-------------------------------------\n    // AUDIO PROPERTIES\n    //-------------------------------------\n    /**\n     * Used to decide which nodes to get/set properties on\n     */\n    ToneAudioNode.prototype._isAudioNode = function (node) {\n        return isDefined(node) && (node instanceof ToneAudioNode || isAudioNode(node));\n    };\n    /**\n     * Get all of the audio nodes (either internal or input/output) which together\n     * make up how the class node responds to channel input/output\n     */\n    ToneAudioNode.prototype._getInternalNodes = function () {\n        var nodeList = this._internalChannels.slice(0);\n        if (this._isAudioNode(this.input)) {\n            nodeList.push(this.input);\n        }\n        if (this._isAudioNode(this.output)) {\n            if (this.input !== this.output) {\n                nodeList.push(this.output);\n            }\n        }\n        return nodeList;\n    };\n    /**\n     * Set the audio options for this node such as channelInterpretation\n     * channelCount, etc.\n     * @param options\n     */\n    ToneAudioNode.prototype._setChannelProperties = function (options) {\n        var nodeList = this._getInternalNodes();\n        nodeList.forEach(function (node) {\n            node.channelCount = options.channelCount;\n            node.channelCountMode = options.channelCountMode;\n            node.channelInterpretation = options.channelInterpretation;\n        });\n    };\n    /**\n     * Get the current audio options for this node such as channelInterpretation\n     * channelCount, etc.\n     */\n    ToneAudioNode.prototype._getChannelProperties = function () {\n        var nodeList = this._getInternalNodes();\n        assert(nodeList.length > 0, \"ToneAudioNode does not have any internal nodes\");\n        // use the first node to get properties\n        // they should all be the same\n        var node = nodeList[0];\n        return {\n            channelCount: node.channelCount,\n            channelCountMode: node.channelCountMode,\n            channelInterpretation: node.channelInterpretation,\n        };\n    };\n    Object.defineProperty(ToneAudioNode.prototype, \"channelCount\", {\n        /**\n         * channelCount is the number of channels used when up-mixing and down-mixing\n         * connections to any inputs to the node. The default value is 2 except for\n         * specific nodes where its value is specially determined.\n         */\n        get: function () {\n            return this._getChannelProperties().channelCount;\n        },\n        set: function (channelCount) {\n            var props = this._getChannelProperties();\n            // merge it with the other properties\n            this._setChannelProperties(Object.assign(props, { channelCount: channelCount }));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ToneAudioNode.prototype, \"channelCountMode\", {\n        /**\n         * channelCountMode determines how channels will be counted when up-mixing and\n         * down-mixing connections to any inputs to the node.\n         * The default value is \"max\". This attribute has no effect for nodes with no inputs.\n         * * \"max\" - computedNumberOfChannels is the maximum of the number of channels of all connections to an input. In this mode channelCount is ignored.\n         * * \"clamped-max\" - computedNumberOfChannels is determined as for \"max\" and then clamped to a maximum value of the given channelCount.\n         * * \"explicit\" - computedNumberOfChannels is the exact value as specified by the channelCount.\n         */\n        get: function () {\n            return this._getChannelProperties().channelCountMode;\n        },\n        set: function (channelCountMode) {\n            var props = this._getChannelProperties();\n            // merge it with the other properties\n            this._setChannelProperties(Object.assign(props, { channelCountMode: channelCountMode }));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ToneAudioNode.prototype, \"channelInterpretation\", {\n        /**\n         * channelInterpretation determines how individual channels will be treated\n         * when up-mixing and down-mixing connections to any inputs to the node.\n         * The default value is \"speakers\".\n         */\n        get: function () {\n            return this._getChannelProperties().channelInterpretation;\n        },\n        set: function (channelInterpretation) {\n            var props = this._getChannelProperties();\n            // merge it with the other properties\n            this._setChannelProperties(Object.assign(props, { channelInterpretation: channelInterpretation }));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //-------------------------------------\n    // CONNECTIONS\n    //-------------------------------------\n    /**\n     * connect the output of a ToneAudioNode to an AudioParam, AudioNode, or ToneAudioNode\n     * @param destination The output to connect to\n     * @param outputNum The output to connect from\n     * @param inputNum The input to connect to\n     */\n    ToneAudioNode.prototype.connect = function (destination, outputNum, inputNum) {\n        if (outputNum === void 0) { outputNum = 0; }\n        if (inputNum === void 0) { inputNum = 0; }\n        connect(this, destination, outputNum, inputNum);\n        return this;\n    };\n    /**\n     * Connect the output to the context's destination node.\n     * @example\n     * import { Oscillator } from \"tone\";\n     * const osc = new Oscillator().start();\n     * osc.toDestination();\n     */\n    ToneAudioNode.prototype.toDestination = function () {\n        this.connect(this.context.destination);\n        return this;\n    };\n    /**\n     * Connect the output to the context's destination node.\n     * See [[toDestination]]\n     * @deprecated\n     */\n    ToneAudioNode.prototype.toMaster = function () {\n        warn(\"toMaster() has been renamed toDestination()\");\n        return this.toDestination();\n    };\n    /**\n     * disconnect the output\n     */\n    ToneAudioNode.prototype.disconnect = function (destination, outputNum, inputNum) {\n        if (outputNum === void 0) { outputNum = 0; }\n        if (inputNum === void 0) { inputNum = 0; }\n        disconnect(this, destination, outputNum, inputNum);\n        return this;\n    };\n    /**\n     * Connect the output of this node to the rest of the nodes in series.\n     * @example\n     * import { Destination, Filter, Oscillator, Volume } from \"tone\";\n     * const osc = new Oscillator().start();\n     * const filter = new Filter();\n     * const volume = new Volume(-8);\n     * // connect a node to the filter, volume and then to the master output\n     * osc.chain(filter, volume, Destination);\n     */\n    ToneAudioNode.prototype.chain = function () {\n        var nodes = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            nodes[_i] = arguments[_i];\n        }\n        connectSeries.apply(void 0, tslib_1.__spread([this], nodes));\n        return this;\n    };\n    /**\n     * connect the output of this node to the rest of the nodes in parallel.\n     */\n    ToneAudioNode.prototype.fan = function () {\n        var _this = this;\n        var nodes = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            nodes[_i] = arguments[_i];\n        }\n        nodes.forEach(function (node) { return _this.connect(node); });\n        return this;\n    };\n    /**\n     * Dispose and disconnect\n     */\n    ToneAudioNode.prototype.dispose = function () {\n        _super.prototype.dispose.call(this);\n        if (isDefined(this.input)) {\n            if (this.input instanceof ToneAudioNode) {\n                this.input.dispose();\n            }\n            else if (isAudioNode(this.input)) {\n                this.input.disconnect();\n            }\n        }\n        if (isDefined(this.output)) {\n            if (this.output instanceof ToneAudioNode) {\n                this.output.dispose();\n            }\n            else if (isAudioNode(this.output)) {\n                this.output.disconnect();\n            }\n        }\n        this._internalChannels = [];\n        return this;\n    };\n    return ToneAudioNode;\n}(ToneWithContext));\nexport { ToneAudioNode };\n//-------------------------------------\n// CONNECTIONS\n//-------------------------------------\n/**\n * connect together all of the arguments in series\n * @param nodes\n */\nexport function connectSeries() {\n    var nodes = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        nodes[_i] = arguments[_i];\n    }\n    var first = nodes.shift();\n    nodes.reduce(function (prev, current) {\n        if (prev instanceof ToneAudioNode) {\n            prev.connect(current);\n        }\n        else if (isAudioNode(prev)) {\n            connect(prev, current);\n        }\n        return current;\n    }, first);\n}\n/**\n * Connect two nodes together so that signal flows from the\n * first node to the second. Optionally specify the input and output channels.\n * @param srcNode The source node\n * @param dstNode The destination node\n * @param outputNumber The output channel of the srcNode\n * @param inputNumber The input channel of the dstNode\n */\nexport function connect(srcNode, dstNode, outputNumber, inputNumber) {\n    if (outputNumber === void 0) { outputNumber = 0; }\n    if (inputNumber === void 0) { inputNumber = 0; }\n    assert(isDefined(srcNode), \"Cannot connect from undefined node\");\n    assert(isDefined(dstNode), \"Cannot connect to undefined node\");\n    if (dstNode instanceof ToneAudioNode || isAudioNode(dstNode)) {\n        assert(dstNode.numberOfInputs > 0, \"Cannot connect to node with no inputs\");\n    }\n    assert(srcNode.numberOfOutputs > 0, \"Cannot connect from node with no outputs\");\n    // resolve the input of the dstNode\n    while ((dstNode instanceof ToneAudioNode || dstNode instanceof Param)) {\n        if (isDefined(dstNode.input)) {\n            dstNode = dstNode.input;\n        }\n    }\n    while (srcNode instanceof ToneAudioNode) {\n        if (isDefined(srcNode.output)) {\n            srcNode = srcNode.output;\n        }\n    }\n    // make the connection\n    if (isAudioParam(dstNode)) {\n        srcNode.connect(dstNode, outputNumber);\n    }\n    else {\n        srcNode.connect(dstNode, outputNumber, inputNumber);\n    }\n}\n/**\n * Disconnect a node from all nodes or optionally include a destination node and input/output channels.\n * @param srcNode The source node\n * @param dstNode The destination node\n * @param outputNumber The output channel of the srcNode\n * @param inputNumber The input channel of the dstNode\n */\nexport function disconnect(srcNode, dstNode, outputNumber, inputNumber) {\n    if (outputNumber === void 0) { outputNumber = 0; }\n    if (inputNumber === void 0) { inputNumber = 0; }\n    // resolve the destination node\n    if (isDefined(dstNode)) {\n        while (dstNode instanceof ToneAudioNode) {\n            dstNode = dstNode.input;\n        }\n    }\n    // resolve the src node\n    while (!(isAudioNode(srcNode))) {\n        if (isDefined(srcNode.output)) {\n            srcNode = srcNode.output;\n        }\n    }\n    if (isAudioParam(dstNode)) {\n        srcNode.disconnect(dstNode, outputNumber);\n    }\n    else if (isAudioNode(dstNode)) {\n        srcNode.disconnect(dstNode, outputNumber, inputNumber);\n    }\n    else {\n        srcNode.disconnect();\n    }\n}\n//# sourceMappingURL=ToneAudioNode.js.map","import * as tslib_1 from \"tslib\";\nimport { Param } from \"../context/Param\";\nimport { optionsFromArguments } from \"../util/Defaults\";\nimport { readOnly } from \"../util/Interface\";\nimport { ToneAudioNode } from \"./ToneAudioNode\";\n/**\n * A thin wrapper around the Native Web Audio GainNode.\n * The GainNode is a basic building block of the Web Audio\n * API and is useful for routing audio and adjusting gains.\n * @category Core\n */\nvar Gain = /** @class */ (function (_super) {\n    tslib_1.__extends(Gain, _super);\n    function Gain() {\n        var _this = _super.call(this, optionsFromArguments(Gain.getDefaults(), arguments, [\"gain\", \"units\"])) || this;\n        _this.name = \"Gain\";\n        /**\n         * The wrapped GainNode.\n         */\n        _this._gainNode = _this.context.createGain();\n        // input = output\n        _this.input = _this._gainNode;\n        _this.output = _this._gainNode;\n        var options = optionsFromArguments(Gain.getDefaults(), arguments, [\"gain\", \"units\"]);\n        _this.gain = new Param({\n            context: _this.context,\n            convert: options.convert,\n            param: _this._gainNode.gain,\n            units: options.units,\n            value: options.gain,\n            minValue: options.minValue,\n            maxValue: options.maxValue,\n        });\n        readOnly(_this, \"gain\");\n        return _this;\n    }\n    Gain.getDefaults = function () {\n        return Object.assign(ToneAudioNode.getDefaults(), {\n            convert: true,\n            gain: 1,\n            units: \"gain\",\n        });\n    };\n    /**\n     * Clean up.\n     */\n    Gain.prototype.dispose = function () {\n        _super.prototype.dispose.call(this);\n        this._gainNode.disconnect();\n        this.gain.dispose();\n        return this;\n    };\n    return Gain;\n}(ToneAudioNode));\nexport { Gain };\n//# sourceMappingURL=Gain.js.map","import * as tslib_1 from \"tslib\";\nimport { Gain } from \"../core/context/Gain\";\nimport { ToneAudioNode } from \"../core/context/ToneAudioNode\";\nimport { noOp } from \"../core/util/Interface\";\nimport { assert } from \"../core/util/Debug\";\n/**\n * Base class for fire-and-forget nodes\n */\nvar OneShotSource = /** @class */ (function (_super) {\n    tslib_1.__extends(OneShotSource, _super);\n    function OneShotSource(options) {\n        var _this = _super.call(this, options) || this;\n        /**\n         * The callback to invoke after the\n         * source is done playing.\n         */\n        _this.onended = noOp;\n        /**\n         * The start time\n         */\n        _this._startTime = -1;\n        /**\n         * The stop time\n         */\n        _this._stopTime = -1;\n        /**\n         * The id of the timeout\n         */\n        _this._timeout = -1;\n        /**\n         * The public output node\n         */\n        _this.output = new Gain({\n            context: _this.context,\n            gain: 0,\n        });\n        /**\n         * The output gain node.\n         */\n        _this._gainNode = _this.output;\n        /**\n         * Get the playback state at the given time\n         */\n        _this.getStateAtTime = function (time) {\n            var computedTime = this.toSeconds(time);\n            if (this._startTime !== -1 && computedTime >= this._startTime &&\n                (this._stopTime === -1 || computedTime <= this._stopTime)) {\n                return \"started\";\n            }\n            else {\n                return \"stopped\";\n            }\n        };\n        _this._fadeIn = options.fadeIn;\n        _this._fadeOut = options.fadeOut;\n        _this._curve = options.curve;\n        _this.onended = options.onended;\n        return _this;\n    }\n    OneShotSource.getDefaults = function () {\n        return Object.assign(ToneAudioNode.getDefaults(), {\n            curve: \"linear\",\n            fadeIn: 0,\n            fadeOut: 0,\n            onended: noOp,\n        });\n    };\n    /**\n     * Start the source at the given time\n     * @param  time When to start the source\n     */\n    OneShotSource.prototype._startGain = function (time, gain) {\n        if (gain === void 0) { gain = 1; }\n        assert(this._startTime === -1, \"Source cannot be started more than once\");\n        // apply a fade in envelope\n        var fadeInTime = this.toSeconds(this._fadeIn);\n        // record the start time\n        this._startTime = time + fadeInTime;\n        this._startTime = Math.max(this._startTime, this.context.currentTime);\n        // schedule the envelope\n        if (fadeInTime > 0) {\n            this._gainNode.gain.setValueAtTime(0, time);\n            if (this._curve === \"linear\") {\n                this._gainNode.gain.linearRampToValueAtTime(gain, time + fadeInTime);\n            }\n            else {\n                this._gainNode.gain.exponentialApproachValueAtTime(gain, time, fadeInTime);\n            }\n        }\n        else {\n            this._gainNode.gain.setValueAtTime(gain, time);\n        }\n        return this;\n    };\n    /**\n     * Stop the source node at the given time.\n     * @param time When to stop the source\n     */\n    OneShotSource.prototype.stop = function (time) {\n        this.log(\"stop\", time);\n        this._stopGain(this.toSeconds(time));\n        return this;\n    };\n    /**\n     * Stop the source at the given time\n     * @param  time When to stop the source\n     */\n    OneShotSource.prototype._stopGain = function (time) {\n        var _this = this;\n        assert(this._startTime !== -1, \"'start' must be called before 'stop'\");\n        // cancel the previous stop\n        this.cancelStop();\n        // the fadeOut time\n        var fadeOutTime = this.toSeconds(this._fadeOut);\n        // schedule the stop callback\n        this._stopTime = this.toSeconds(time) + fadeOutTime;\n        this._stopTime = Math.max(this._stopTime, this.context.currentTime);\n        if (fadeOutTime > 0) {\n            // start the fade out curve at the given time\n            if (this._curve === \"linear\") {\n                this._gainNode.gain.linearRampTo(0, fadeOutTime, time);\n            }\n            else {\n                this._gainNode.gain.targetRampTo(0, fadeOutTime, time);\n            }\n        }\n        else {\n            // stop any ongoing ramps, and set the value to 0\n            this._gainNode.gain.cancelAndHoldAtTime(time);\n            this._gainNode.gain.setValueAtTime(0, time);\n        }\n        this.context.clearTimeout(this._timeout);\n        this._timeout = this.context.setTimeout(function () {\n            // allow additional time for the exponential curve to fully decay\n            var additionalTail = _this._curve === \"exponential\" ? fadeOutTime * 2 : 0;\n            _this._stopSource(_this.now() + additionalTail);\n            _this._onended();\n        }, this._stopTime - this.context.currentTime);\n        return this;\n    };\n    /**\n     * Invoke the onended callback\n     */\n    OneShotSource.prototype._onended = function () {\n        var _this = this;\n        if (this.onended !== noOp) {\n            this.onended(this);\n            // overwrite onended to make sure it only is called once\n            this.onended = noOp;\n            // dispose when it's ended to free up for garbage collection only in the online context\n            if (!this.context.isOffline) {\n                setTimeout(function () { return _this.dispose(); }, 1000);\n            }\n        }\n    };\n    Object.defineProperty(OneShotSource.prototype, \"state\", {\n        /**\n         * Get the playback state at the current time\n         */\n        get: function () {\n            return this.getStateAtTime(this.now());\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Cancel a scheduled stop event\n     */\n    OneShotSource.prototype.cancelStop = function () {\n        this.log(\"cancelStop\");\n        assert(this._startTime !== -1, \"Source is not started\");\n        // cancel the stop envelope\n        this._gainNode.gain.cancelScheduledValues(this._startTime + this.sampleTime);\n        this.context.clearTimeout(this._timeout);\n        this._stopTime = -1;\n        return this;\n    };\n    OneShotSource.prototype.dispose = function () {\n        _super.prototype.dispose.call(this);\n        this._gainNode.disconnect();\n        return this;\n    };\n    return OneShotSource;\n}(ToneAudioNode));\nexport { OneShotSource };\n//# sourceMappingURL=OneShotSource.js.map","import * as tslib_1 from \"tslib\";\nimport { connect } from \"../core/context/ToneAudioNode\";\nimport { Param } from \"../core/context/Param\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { OneShotSource } from \"../source/OneShotSource\";\n/**\n * Wrapper around the native fire-and-forget ConstantSource.\n * Adds the ability to reschedule the stop method.\n * @category Signal\n */\nvar ToneConstantSource = /** @class */ (function (_super) {\n    tslib_1.__extends(ToneConstantSource, _super);\n    function ToneConstantSource() {\n        var _this = _super.call(this, optionsFromArguments(ToneConstantSource.getDefaults(), arguments, [\"offset\"])) || this;\n        _this.name = \"ToneConstantSource\";\n        /**\n         * The signal generator\n         */\n        _this._source = _this.context.createConstantSource();\n        var options = optionsFromArguments(ToneConstantSource.getDefaults(), arguments, [\"offset\"]);\n        connect(_this._source, _this._gainNode);\n        _this.offset = new Param({\n            context: _this.context,\n            convert: options.convert,\n            param: _this._source.offset,\n            units: options.units,\n            value: options.offset,\n            minValue: options.minValue,\n            maxValue: options.maxValue,\n        });\n        return _this;\n    }\n    ToneConstantSource.getDefaults = function () {\n        return Object.assign(OneShotSource.getDefaults(), {\n            convert: true,\n            offset: 1,\n            units: \"number\",\n        });\n    };\n    /**\n     * Start the source node at the given time\n     * @param  time When to start the source\n     */\n    ToneConstantSource.prototype.start = function (time) {\n        var computedTime = this.toSeconds(time);\n        this.log(\"start\", computedTime);\n        this._startGain(computedTime);\n        this._source.start(computedTime);\n        return this;\n    };\n    ToneConstantSource.prototype._stopSource = function (time) {\n        this._source.stop(time);\n    };\n    ToneConstantSource.prototype.dispose = function () {\n        _super.prototype.dispose.call(this);\n        if (this.state === \"started\") {\n            this.stop();\n        }\n        this._source.disconnect();\n        this.offset.dispose();\n        return this;\n    };\n    return ToneConstantSource;\n}(OneShotSource));\nexport { ToneConstantSource };\n//# sourceMappingURL=ToneConstantSource.js.map","import * as tslib_1 from \"tslib\";\nimport { Param } from \"../core/context/Param\";\nimport { ToneAudioNode } from \"../core/context/ToneAudioNode\";\nimport { connect } from \"../core/context/ToneAudioNode\";\nimport { isAudioParam } from \"../core/util/AdvancedTypeCheck\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { ToneConstantSource } from \"./ToneConstantSource\";\n/**\n * A signal is an audio-rate value. Tone.Signal is a core component of the library.\n * Unlike a number, Signals can be scheduled with sample-level accuracy. Tone.Signal\n * has all of the methods available to native Web Audio\n * [AudioParam](http://webaudio.github.io/web-audio-api/#the-audioparam-interface)\n * as well as additional conveniences. Read more about working with signals\n * [here](https://github.com/Tonejs/Tone.js/wiki/Signals).\n *\n * @example\n * import { Oscillator, Signal } from \"tone\";\n * const osc = new Oscillator().toDestination().start();\n * // a scheduleable signal which can be connected to control an AudioParam or another Signal\n * const signal = new Signal({\n * \tvalue: \"C4\",\n * \tunits: \"frequency\"\n * }).connect(osc.frequency);\n * // the scheduled ramp controls the connected signal\n * signal.rampTo(\"C2\", 4, \"+0.5\");\n * @category Signal\n */\nvar Signal = /** @class */ (function (_super) {\n    tslib_1.__extends(Signal, _super);\n    function Signal() {\n        var _this = _super.call(this, optionsFromArguments(Signal.getDefaults(), arguments, [\"value\", \"units\"])) || this;\n        _this.name = \"Signal\";\n        /**\n         * Indicates if the value should be overridden on connection.\n         */\n        _this.override = true;\n        var options = optionsFromArguments(Signal.getDefaults(), arguments, [\"value\", \"units\"]);\n        _this.output = _this._constantSource = new ToneConstantSource({\n            context: _this.context,\n            convert: options.convert,\n            offset: options.value,\n            units: options.units,\n            minValue: options.minValue,\n            maxValue: options.maxValue,\n        });\n        _this._constantSource.start(0);\n        _this.input = _this._param = _this._constantSource.offset;\n        return _this;\n    }\n    Signal.getDefaults = function () {\n        return Object.assign(ToneAudioNode.getDefaults(), {\n            convert: true,\n            units: \"number\",\n            value: 0,\n        });\n    };\n    Signal.prototype.connect = function (destination, outputNum, inputNum) {\n        if (outputNum === void 0) { outputNum = 0; }\n        if (inputNum === void 0) { inputNum = 0; }\n        // start it only when connected to something\n        connectSignal(this, destination, outputNum, inputNum);\n        return this;\n    };\n    Signal.prototype.dispose = function () {\n        _super.prototype.dispose.call(this);\n        this._param.dispose();\n        this._constantSource.dispose();\n        return this;\n    };\n    //-------------------------------------\n    // ABSTRACT PARAM INTERFACE\n    // just a proxy for the ConstantSourceNode's offset AudioParam\n    // all docs are generated from AbstractParam.ts\n    //-------------------------------------\n    Signal.prototype.setValueAtTime = function (value, time) {\n        this._param.setValueAtTime(value, time);\n        return this;\n    };\n    Signal.prototype.getValueAtTime = function (time) {\n        return this._param.getValueAtTime(time);\n    };\n    Signal.prototype.setRampPoint = function (time) {\n        this._param.setRampPoint(time);\n        return this;\n    };\n    Signal.prototype.linearRampToValueAtTime = function (value, time) {\n        this._param.linearRampToValueAtTime(value, time);\n        return this;\n    };\n    Signal.prototype.exponentialRampToValueAtTime = function (value, time) {\n        this._param.exponentialRampToValueAtTime(value, time);\n        return this;\n    };\n    Signal.prototype.exponentialRampTo = function (value, rampTime, startTime) {\n        this._param.exponentialRampTo(value, rampTime, startTime);\n        return this;\n    };\n    Signal.prototype.linearRampTo = function (value, rampTime, startTime) {\n        this._param.linearRampTo(value, rampTime, startTime);\n        return this;\n    };\n    Signal.prototype.targetRampTo = function (value, rampTime, startTime) {\n        this._param.targetRampTo(value, rampTime, startTime);\n        return this;\n    };\n    Signal.prototype.exponentialApproachValueAtTime = function (value, time, rampTime) {\n        this._param.exponentialApproachValueAtTime(value, time, rampTime);\n        return this;\n    };\n    Signal.prototype.setTargetAtTime = function (value, startTime, timeConstant) {\n        this._param.setTargetAtTime(value, startTime, timeConstant);\n        return this;\n    };\n    Signal.prototype.setValueCurveAtTime = function (values, startTime, duration, scaling) {\n        this._param.setValueCurveAtTime(values, startTime, duration, scaling);\n        return this;\n    };\n    Signal.prototype.cancelScheduledValues = function (time) {\n        this._param.cancelScheduledValues(time);\n        return this;\n    };\n    Signal.prototype.cancelAndHoldAtTime = function (time) {\n        this._param.cancelAndHoldAtTime(time);\n        return this;\n    };\n    Signal.prototype.rampTo = function (value, rampTime, startTime) {\n        this._param.rampTo(value, rampTime, startTime);\n        return this;\n    };\n    Object.defineProperty(Signal.prototype, \"value\", {\n        get: function () {\n            return this._param.value;\n        },\n        set: function (value) {\n            this._param.value = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Signal.prototype, \"convert\", {\n        get: function () {\n            return this._param.convert;\n        },\n        set: function (convert) {\n            this._param.convert = convert;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Signal.prototype, \"units\", {\n        get: function () {\n            return this._param.units;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Signal.prototype, \"overridden\", {\n        get: function () {\n            return this._param.overridden;\n        },\n        set: function (overridden) {\n            this._param.overridden = overridden;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Signal.prototype, \"maxValue\", {\n        get: function () {\n            return this._param.maxValue;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Signal.prototype, \"minValue\", {\n        get: function () {\n            return this._param.minValue;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * See [[Param.apply]].\n     */\n    Signal.prototype.apply = function (param) {\n        this._param.apply(param);\n        return this;\n    };\n    return Signal;\n}(ToneAudioNode));\nexport { Signal };\n/**\n * When connecting from a signal, it's necessary to zero out the node destination\n * node if that node is also a signal. If the destination is not 0, then the values\n * will be summed. This method insures that the output of the destination signal will\n * be the same as the source signal, making the destination signal a pass through node.\n * @param signal The output signal to connect from\n * @param destination the destination to connect to\n * @param outputNum the optional output number\n * @param inputNum the input number\n */\nexport function connectSignal(signal, destination, outputNum, inputNum) {\n    if (destination instanceof Param || isAudioParam(destination) ||\n        (destination instanceof Signal && destination.override)) {\n        // cancel changes\n        destination.cancelScheduledValues(0);\n        // reset the value\n        destination.setValueAtTime(0, 0);\n        // mark the value as overridden\n        if (destination instanceof Signal) {\n            destination.overridden = true;\n        }\n    }\n    connect(signal, destination, outputNum, inputNum);\n}\n//# sourceMappingURL=Signal.js.map","import * as tslib_1 from \"tslib\";\nimport { Param } from \"../context/Param\";\nimport { optionsFromArguments } from \"../util/Defaults\";\nimport { Timeline } from \"../util/Timeline\";\nimport { isUndef } from \"../util/TypeCheck\";\n/**\n * A Param class just for computing ticks. Similar to the [[Param]] class,\n * but offers conversion to BPM values as well as ability to compute tick\n * duration and elapsed ticks\n */\nvar TickParam = /** @class */ (function (_super) {\n    tslib_1.__extends(TickParam, _super);\n    function TickParam() {\n        var _this = _super.call(this, optionsFromArguments(TickParam.getDefaults(), arguments, [\"value\"])) || this;\n        _this.name = \"TickParam\";\n        /**\n         * The timeline which tracks all of the automations.\n         */\n        _this._events = new Timeline(Infinity);\n        /**\n         * The internal holder for the multiplier value\n         */\n        _this._multiplier = 1;\n        var options = optionsFromArguments(TickParam.getDefaults(), arguments, [\"value\"]);\n        // set the multiplier\n        _this._multiplier = options.multiplier;\n        // clear the ticks from the beginning\n        _this._events.cancel(0);\n        // set an initial event\n        _this._events.add({\n            ticks: 0,\n            time: 0,\n            type: \"setValueAtTime\",\n            value: _this._fromType(options.value),\n        });\n        _this.setValueAtTime(options.value, 0);\n        return _this;\n    }\n    TickParam.getDefaults = function () {\n        return Object.assign(Param.getDefaults(), {\n            multiplier: 1,\n            units: \"hertz\",\n            value: 1,\n        });\n    };\n    TickParam.prototype.setTargetAtTime = function (value, time, constant) {\n        // approximate it with multiple linear ramps\n        time = this.toSeconds(time);\n        this.setRampPoint(time);\n        var computedValue = this._fromType(value);\n        // start from previously scheduled value\n        var prevEvent = this._events.get(time);\n        var segments = Math.round(Math.max(1 / constant, 1));\n        for (var i = 0; i <= segments; i++) {\n            var segTime = constant * i + time;\n            var rampVal = this._exponentialApproach(prevEvent.time, prevEvent.value, computedValue, constant, segTime);\n            this.linearRampToValueAtTime(this._toType(rampVal), segTime);\n        }\n        return this;\n    };\n    TickParam.prototype.setValueAtTime = function (value, time) {\n        var computedTime = this.toSeconds(time);\n        _super.prototype.setValueAtTime.call(this, value, time);\n        var event = this._events.get(computedTime);\n        var previousEvent = this._events.previousEvent(event);\n        var ticksUntilTime = this._getTicksUntilEvent(previousEvent, computedTime);\n        event.ticks = Math.max(ticksUntilTime, 0);\n        return this;\n    };\n    TickParam.prototype.linearRampToValueAtTime = function (value, time) {\n        var computedTime = this.toSeconds(time);\n        _super.prototype.linearRampToValueAtTime.call(this, value, time);\n        var event = this._events.get(computedTime);\n        var previousEvent = this._events.previousEvent(event);\n        var ticksUntilTime = this._getTicksUntilEvent(previousEvent, computedTime);\n        event.ticks = Math.max(ticksUntilTime, 0);\n        return this;\n    };\n    TickParam.prototype.exponentialRampToValueAtTime = function (value, time) {\n        // aproximate it with multiple linear ramps\n        time = this.toSeconds(time);\n        var computedVal = this._fromType(value);\n        // start from previously scheduled value\n        var prevEvent = this._events.get(time);\n        // approx 10 segments per second\n        var segments = Math.round(Math.max((time - prevEvent.time) * 10, 1));\n        var segmentDur = ((time - prevEvent.time) / segments);\n        for (var i = 0; i <= segments; i++) {\n            var segTime = segmentDur * i + prevEvent.time;\n            var rampVal = this._exponentialInterpolate(prevEvent.time, prevEvent.value, time, computedVal, segTime);\n            this.linearRampToValueAtTime(this._toType(rampVal), segTime);\n        }\n        return this;\n    };\n    /**\n     * Returns the tick value at the time. Takes into account\n     * any automation curves scheduled on the signal.\n     * @param  event The time to get the tick count at\n     * @return The number of ticks which have elapsed at the time given any automations.\n     */\n    TickParam.prototype._getTicksUntilEvent = function (event, time) {\n        if (event === null) {\n            event = {\n                ticks: 0,\n                time: 0,\n                type: \"setValueAtTime\",\n                value: 0,\n            };\n        }\n        else if (isUndef(event.ticks)) {\n            var previousEvent = this._events.previousEvent(event);\n            event.ticks = this._getTicksUntilEvent(previousEvent, event.time);\n        }\n        var val0 = this._fromType(this.getValueAtTime(event.time));\n        var val1 = this._fromType(this.getValueAtTime(time));\n        // if it's right on the line, take the previous value\n        var onTheLineEvent = this._events.get(time);\n        if (onTheLineEvent && onTheLineEvent.time === time && onTheLineEvent.type === \"setValueAtTime\") {\n            val1 = this._fromType(this.getValueAtTime(time - this.sampleTime));\n        }\n        return 0.5 * (time - event.time) * (val0 + val1) + event.ticks;\n    };\n    /**\n     * Returns the tick value at the time. Takes into account\n     * any automation curves scheduled on the signal.\n     * @param  time The time to get the tick count at\n     * @return The number of ticks which have elapsed at the time given any automations.\n     */\n    TickParam.prototype.getTicksAtTime = function (time) {\n        var computedTime = this.toSeconds(time);\n        var event = this._events.get(computedTime);\n        return Math.max(this._getTicksUntilEvent(event, computedTime), 0);\n    };\n    /**\n     * Return the elapsed time of the number of ticks from the given time\n     * @param ticks The number of ticks to calculate\n     * @param  time The time to get the next tick from\n     * @return The duration of the number of ticks from the given time in seconds\n     */\n    TickParam.prototype.getDurationOfTicks = function (ticks, time) {\n        var computedTime = this.toSeconds(time);\n        var currentTick = this.getTicksAtTime(time);\n        return this.getTimeOfTick(currentTick + ticks) - computedTime;\n    };\n    /**\n     * Given a tick, returns the time that tick occurs at.\n     * @return The time that the tick occurs.\n     */\n    TickParam.prototype.getTimeOfTick = function (tick) {\n        var before = this._events.get(tick, \"ticks\");\n        var after = this._events.getAfter(tick, \"ticks\");\n        if (before && before.ticks === tick) {\n            return before.time;\n        }\n        else if (before && after &&\n            after.type === \"linearRampToValueAtTime\" &&\n            before.value !== after.value) {\n            var val0 = this._fromType(this.getValueAtTime(before.time));\n            var val1 = this._fromType(this.getValueAtTime(after.time));\n            var delta = (val1 - val0) / (after.time - before.time);\n            var k = Math.sqrt(Math.pow(val0, 2) - 2 * delta * (before.ticks - tick));\n            var sol1 = (-val0 + k) / delta;\n            var sol2 = (-val0 - k) / delta;\n            return (sol1 > 0 ? sol1 : sol2) + before.time;\n        }\n        else if (before) {\n            if (before.value === 0) {\n                return Infinity;\n            }\n            else {\n                return before.time + (tick - before.ticks) / before.value;\n            }\n        }\n        else {\n            return tick / this._initialValue;\n        }\n    };\n    /**\n     * Convert some number of ticks their the duration in seconds accounting\n     * for any automation curves starting at the given time.\n     * @param  ticks The number of ticks to convert to seconds.\n     * @param  when  When along the automation timeline to convert the ticks.\n     * @return The duration in seconds of the ticks.\n     */\n    TickParam.prototype.ticksToTime = function (ticks, when) {\n        return this.getDurationOfTicks(ticks, when);\n    };\n    /**\n     * The inverse of [[ticksToTime]]. Convert a duration in\n     * seconds to the corresponding number of ticks accounting for any\n     * automation curves starting at the given time.\n     * @param  duration The time interval to convert to ticks.\n     * @param  when When along the automation timeline to convert the ticks.\n     * @return The duration in ticks.\n     */\n    TickParam.prototype.timeToTicks = function (duration, when) {\n        var computedTime = this.toSeconds(when);\n        var computedDuration = this.toSeconds(duration);\n        var startTicks = this.getTicksAtTime(computedTime);\n        var endTicks = this.getTicksAtTime(computedTime + computedDuration);\n        return endTicks - startTicks;\n    };\n    /**\n     * Convert from the type when the unit value is BPM\n     */\n    TickParam.prototype._fromType = function (val) {\n        if (this.units === \"bpm\" && this.multiplier) {\n            return 1 / (60 / val / this.multiplier);\n        }\n        else {\n            return _super.prototype._fromType.call(this, val);\n        }\n    };\n    /**\n     * Special case of type conversion where the units === \"bpm\"\n     */\n    TickParam.prototype._toType = function (val) {\n        if (this.units === \"bpm\" && this.multiplier) {\n            return (val / this.multiplier) * 60;\n        }\n        else {\n            return _super.prototype._toType.call(this, val);\n        }\n    };\n    Object.defineProperty(TickParam.prototype, \"multiplier\", {\n        /**\n         * A multiplier on the bpm value. Useful for setting a PPQ relative to the base frequency value.\n         */\n        get: function () {\n            return this._multiplier;\n        },\n        set: function (m) {\n            // get and reset the current value with the new multiplier\n            // might be necessary to clear all the previous values\n            var currentVal = this.value;\n            this._multiplier = m;\n            this.cancelScheduledValues(0);\n            this.setValueAtTime(currentVal, 0);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return TickParam;\n}(Param));\nexport { TickParam };\n//# sourceMappingURL=TickParam.js.map","import * as tslib_1 from \"tslib\";\nimport { Signal } from \"../../signal/Signal\";\nimport { optionsFromArguments } from \"../util/Defaults\";\nimport { TickParam } from \"./TickParam\";\n/**\n * TickSignal extends Tone.Signal, but adds the capability\n * to calculate the number of elapsed ticks. exponential and target curves\n * are approximated with multiple linear ramps.\n *\n * Thank you Bruno Dias, H. Sofia Pinto, and David M. Matos,\n * for your [WAC paper](https://smartech.gatech.edu/bitstream/handle/1853/54588/WAC2016-49.pdf)\n * describing integrating timing functions for tempo calculations.\n */\nvar TickSignal = /** @class */ (function (_super) {\n    tslib_1.__extends(TickSignal, _super);\n    function TickSignal() {\n        var _this = _super.call(this, optionsFromArguments(TickSignal.getDefaults(), arguments, [\"value\"])) || this;\n        _this.name = \"TickSignal\";\n        var options = optionsFromArguments(TickSignal.getDefaults(), arguments, [\"value\"]);\n        _this.input = _this._param = new TickParam({\n            context: _this.context,\n            convert: options.convert,\n            multiplier: options.multiplier,\n            param: _this._constantSource.offset,\n            units: options.units,\n            value: options.value,\n        });\n        return _this;\n    }\n    TickSignal.getDefaults = function () {\n        return Object.assign(Signal.getDefaults(), {\n            multiplier: 1,\n            units: \"hertz\",\n            value: 1,\n        });\n    };\n    TickSignal.prototype.ticksToTime = function (ticks, when) {\n        return this._param.ticksToTime(ticks, when);\n    };\n    TickSignal.prototype.timeToTicks = function (duration, when) {\n        return this._param.timeToTicks(duration, when);\n    };\n    TickSignal.prototype.getTimeOfTick = function (tick) {\n        return this._param.getTimeOfTick(tick);\n    };\n    TickSignal.prototype.getDurationOfTicks = function (ticks, time) {\n        return this._param.getDurationOfTicks(ticks, time);\n    };\n    TickSignal.prototype.getTicksAtTime = function (time) {\n        return this._param.getTicksAtTime(time);\n    };\n    Object.defineProperty(TickSignal.prototype, \"multiplier\", {\n        /**\n         * A multiplier on the bpm value. Useful for setting a PPQ relative to the base frequency value.\n         */\n        get: function () {\n            return this._param.multiplier;\n        },\n        set: function (m) {\n            this._param.multiplier = m;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    TickSignal.prototype.dispose = function () {\n        _super.prototype.dispose.call(this);\n        this._param.dispose();\n        return this;\n    };\n    return TickSignal;\n}(Signal));\nexport { TickSignal };\n//# sourceMappingURL=TickSignal.js.map","import * as tslib_1 from \"tslib\";\nimport { ToneWithContext } from \"../context/ToneWithContext\";\nimport { optionsFromArguments } from \"../util/Defaults\";\nimport { readOnly } from \"../util/Interface\";\nimport { StateTimeline } from \"../util/StateTimeline\";\nimport { Timeline } from \"../util/Timeline\";\nimport { isDefined } from \"../util/TypeCheck\";\nimport { TickSignal } from \"./TickSignal\";\n/**\n * Uses [TickSignal](TickSignal) to track elapsed ticks with complex automation curves.\n */\nvar TickSource = /** @class */ (function (_super) {\n    tslib_1.__extends(TickSource, _super);\n    function TickSource() {\n        var _this = _super.call(this, optionsFromArguments(TickSource.getDefaults(), arguments, [\"frequency\"])) || this;\n        _this.name = \"TickSource\";\n        /**\n         * The state timeline\n         */\n        _this._state = new StateTimeline();\n        /**\n         * The offset values of the ticks\n         */\n        _this._tickOffset = new Timeline();\n        var options = optionsFromArguments(TickSource.getDefaults(), arguments, [\"frequency\"]);\n        _this.frequency = new TickSignal({\n            context: _this.context,\n            units: options.units,\n            value: options.frequency,\n        });\n        readOnly(_this, \"frequency\");\n        // set the initial state\n        _this._state.setStateAtTime(\"stopped\", 0);\n        // add the first event\n        _this.setTicksAtTime(0, 0);\n        return _this;\n    }\n    TickSource.getDefaults = function () {\n        return Object.assign({\n            frequency: 1,\n            units: \"hertz\",\n        }, ToneWithContext.getDefaults());\n    };\n    Object.defineProperty(TickSource.prototype, \"state\", {\n        /**\n         * Returns the playback state of the source, either \"started\", \"stopped\" or \"paused\".\n         */\n        get: function () {\n            return this.getStateAtTime(this.now());\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Start the clock at the given time. Optionally pass in an offset\n     * of where to start the tick counter from.\n     * @param  time    The time the clock should start\n     * @param offset The number of ticks to start the source at\n     */\n    TickSource.prototype.start = function (time, offset) {\n        var computedTime = this.toSeconds(time);\n        if (this._state.getValueAtTime(computedTime) !== \"started\") {\n            this._state.setStateAtTime(\"started\", computedTime);\n            if (isDefined(offset)) {\n                this.setTicksAtTime(offset, computedTime);\n            }\n        }\n        return this;\n    };\n    /**\n     * Stop the clock. Stopping the clock resets the tick counter to 0.\n     * @param time The time when the clock should stop.\n     */\n    TickSource.prototype.stop = function (time) {\n        var computedTime = this.toSeconds(time);\n        // cancel the previous stop\n        if (this._state.getValueAtTime(computedTime) === \"stopped\") {\n            var event_1 = this._state.get(computedTime);\n            if (event_1 && event_1.time > 0) {\n                this._tickOffset.cancel(event_1.time);\n                this._state.cancel(event_1.time);\n            }\n        }\n        this._state.cancel(computedTime);\n        this._state.setStateAtTime(\"stopped\", computedTime);\n        this.setTicksAtTime(0, computedTime);\n        return this;\n    };\n    /**\n     * Pause the clock. Pausing does not reset the tick counter.\n     * @param time The time when the clock should stop.\n     */\n    TickSource.prototype.pause = function (time) {\n        var computedTime = this.toSeconds(time);\n        if (this._state.getValueAtTime(computedTime) === \"started\") {\n            this._state.setStateAtTime(\"paused\", computedTime);\n        }\n        return this;\n    };\n    /**\n     * Cancel start/stop/pause and setTickAtTime events scheduled after the given time.\n     * @param time When to clear the events after\n     */\n    TickSource.prototype.cancel = function (time) {\n        time = this.toSeconds(time);\n        this._state.cancel(time);\n        this._tickOffset.cancel(time);\n        return this;\n    };\n    /**\n     * Get the elapsed ticks at the given time\n     * @param  time  When to get the tick value\n     * @return The number of ticks\n     */\n    TickSource.prototype.getTicksAtTime = function (time) {\n        var _this = this;\n        var computedTime = this.toSeconds(time);\n        var stopEvent = this._state.getLastState(\"stopped\", computedTime);\n        // this event allows forEachBetween to iterate until the current time\n        var tmpEvent = { state: \"paused\", time: computedTime };\n        this._state.add(tmpEvent);\n        // keep track of the previous offset event\n        var lastState = stopEvent;\n        var elapsedTicks = 0;\n        // iterate through all the events since the last stop\n        this._state.forEachBetween(stopEvent.time, computedTime + this.sampleTime, function (e) {\n            var periodStartTime = lastState.time;\n            // if there is an offset event in this period use that\n            var offsetEvent = _this._tickOffset.get(e.time);\n            if (offsetEvent && offsetEvent.time >= lastState.time) {\n                elapsedTicks = offsetEvent.ticks;\n                periodStartTime = offsetEvent.time;\n            }\n            if (lastState.state === \"started\" && e.state !== \"started\") {\n                elapsedTicks += _this.frequency.getTicksAtTime(e.time) - _this.frequency.getTicksAtTime(periodStartTime);\n            }\n            lastState = e;\n        });\n        // remove the temporary event\n        this._state.remove(tmpEvent);\n        // return the ticks\n        return elapsedTicks;\n    };\n    Object.defineProperty(TickSource.prototype, \"ticks\", {\n        /**\n         * The number of times the callback was invoked. Starts counting at 0\n         * and increments after the callback was invoked. Returns -1 when stopped.\n         */\n        get: function () {\n            return this.getTicksAtTime(this.now());\n        },\n        set: function (t) {\n            this.setTicksAtTime(t, this.now());\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TickSource.prototype, \"seconds\", {\n        /**\n         * The time since ticks=0 that the TickSource has been running. Accounts\n         * for tempo curves\n         */\n        get: function () {\n            return this.getSecondsAtTime(this.now());\n        },\n        set: function (s) {\n            var now = this.now();\n            var ticks = this.frequency.timeToTicks(s, now);\n            this.setTicksAtTime(ticks, now);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Return the elapsed seconds at the given time.\n     * @param  time  When to get the elapsed seconds\n     * @return  The number of elapsed seconds\n     */\n    TickSource.prototype.getSecondsAtTime = function (time) {\n        var _this = this;\n        time = this.toSeconds(time);\n        var stopEvent = this._state.getLastState(\"stopped\", time);\n        // this event allows forEachBetween to iterate until the current time\n        var tmpEvent = { state: \"paused\", time: time };\n        this._state.add(tmpEvent);\n        // keep track of the previous offset event\n        var lastState = stopEvent;\n        var elapsedSeconds = 0;\n        // iterate through all the events since the last stop\n        this._state.forEachBetween(stopEvent.time, time + this.sampleTime, function (e) {\n            var periodStartTime = lastState.time;\n            // if there is an offset event in this period use that\n            var offsetEvent = _this._tickOffset.get(e.time);\n            if (offsetEvent && offsetEvent.time >= lastState.time) {\n                elapsedSeconds = offsetEvent.seconds;\n                periodStartTime = offsetEvent.time;\n            }\n            if (lastState.state === \"started\" && e.state !== \"started\") {\n                elapsedSeconds += e.time - periodStartTime;\n            }\n            lastState = e;\n        });\n        // remove the temporary event\n        this._state.remove(tmpEvent);\n        // return the ticks\n        return elapsedSeconds;\n    };\n    /**\n     * Set the clock's ticks at the given time.\n     * @param  ticks The tick value to set\n     * @param  time  When to set the tick value\n     */\n    TickSource.prototype.setTicksAtTime = function (ticks, time) {\n        time = this.toSeconds(time);\n        this._tickOffset.cancel(time);\n        this._tickOffset.add({\n            seconds: this.frequency.getDurationOfTicks(ticks, time),\n            ticks: ticks,\n            time: time,\n        });\n        return this;\n    };\n    /**\n     * Returns the scheduled state at the given time.\n     * @param  time  The time to query.\n     */\n    TickSource.prototype.getStateAtTime = function (time) {\n        time = this.toSeconds(time);\n        return this._state.getValueAtTime(time);\n    };\n    /**\n     * Get the time of the given tick. The second argument\n     * is when to test before. Since ticks can be set (with setTicksAtTime)\n     * there may be multiple times for a given tick value.\n     * @param  tick The tick number.\n     * @param  before When to measure the tick value from.\n     * @return The time of the tick\n     */\n    TickSource.prototype.getTimeOfTick = function (tick, before) {\n        if (before === void 0) { before = this.now(); }\n        var offset = this._tickOffset.get(before);\n        var event = this._state.get(before);\n        var startTime = Math.max(offset.time, event.time);\n        var absoluteTicks = this.frequency.getTicksAtTime(startTime) + tick - offset.ticks;\n        return this.frequency.getTimeOfTick(absoluteTicks);\n    };\n    /**\n     * Invoke the callback event at all scheduled ticks between the\n     * start time and the end time\n     * @param  startTime  The beginning of the search range\n     * @param  endTime    The end of the search range\n     * @param  callback   The callback to invoke with each tick\n     */\n    TickSource.prototype.forEachTickBetween = function (startTime, endTime, callback) {\n        var _this = this;\n        // only iterate through the sections where it is \"started\"\n        var lastStateEvent = this._state.get(startTime);\n        this._state.forEachBetween(startTime, endTime, function (event) {\n            if (lastStateEvent && lastStateEvent.state === \"started\" && event.state !== \"started\") {\n                _this.forEachTickBetween(Math.max(lastStateEvent.time, startTime), event.time - _this.sampleTime, callback);\n            }\n            lastStateEvent = event;\n        });\n        var error = null;\n        if (lastStateEvent && lastStateEvent.state === \"started\") {\n            var maxStartTime = Math.max(lastStateEvent.time, startTime);\n            // figure out the difference between the frequency ticks and the\n            var startTicks = this.frequency.getTicksAtTime(maxStartTime);\n            var ticksAtStart = this.frequency.getTicksAtTime(lastStateEvent.time);\n            var diff = startTicks - ticksAtStart;\n            var offset = Math.ceil(diff) - diff;\n            var nextTickTime = this.frequency.getTimeOfTick(startTicks + offset);\n            while (nextTickTime < endTime) {\n                try {\n                    callback(nextTickTime, Math.round(this.getTicksAtTime(nextTickTime)));\n                }\n                catch (e) {\n                    error = e;\n                    break;\n                }\n                nextTickTime += this.frequency.getDurationOfTicks(1, nextTickTime);\n            }\n        }\n        if (error) {\n            throw error;\n        }\n        return this;\n    };\n    /**\n     * Clean up\n     */\n    TickSource.prototype.dispose = function () {\n        _super.prototype.dispose.call(this);\n        this._state.dispose();\n        this._tickOffset.dispose();\n        this.frequency.dispose();\n        return this;\n    };\n    return TickSource;\n}(ToneWithContext));\nexport { TickSource };\n//# sourceMappingURL=TickSource.js.map","import * as tslib_1 from \"tslib\";\nimport { ToneWithContext } from \"../context/ToneWithContext\";\nimport { optionsFromArguments } from \"../util/Defaults\";\nimport { Emitter } from \"../util/Emitter\";\nimport { noOp, readOnly } from \"../util/Interface\";\nimport { StateTimeline } from \"../util/StateTimeline\";\nimport { TickSource } from \"./TickSource\";\nimport { assertContextRunning } from \"../util/Debug\";\n/**\n * A sample accurate clock which provides a callback at the given rate.\n * While the callback is not sample-accurate (it is still susceptible to\n * loose JS timing), the time passed in as the argument to the callback\n * is precise. For most applications, it is better to use Tone.Transport\n * instead of the Clock by itself since you can synchronize multiple callbacks.\n * @example\n * import { Clock } from \"tone\";\n * // the callback will be invoked approximately once a second\n * // and will print the time exactly once a second apart.\n * const clock = new Clock(time => {\n * \tconsole.log(time);\n * }, 1);\n * clock.start();\n * @category Core\n */\nvar Clock = /** @class */ (function (_super) {\n    tslib_1.__extends(Clock, _super);\n    function Clock() {\n        var _this = _super.call(this, optionsFromArguments(Clock.getDefaults(), arguments, [\"callback\", \"frequency\"])) || this;\n        _this.name = \"Clock\";\n        /**\n         * The callback function to invoke at the scheduled tick.\n         */\n        _this.callback = noOp;\n        /**\n         * The last time the loop callback was invoked\n         */\n        _this._lastUpdate = 0;\n        /**\n         * Keep track of the playback state\n         */\n        _this._state = new StateTimeline(\"stopped\");\n        /**\n         * Context bound reference to the _loop method\n         * This is necessary to remove the event in the end.\n         */\n        _this._boundLoop = _this._loop.bind(_this);\n        var options = optionsFromArguments(Clock.getDefaults(), arguments, [\"callback\", \"frequency\"]);\n        _this.callback = options.callback;\n        _this._tickSource = new TickSource({\n            context: _this.context,\n            frequency: options.frequency,\n            units: options.units,\n        });\n        _this._lastUpdate = 0;\n        _this.frequency = _this._tickSource.frequency;\n        readOnly(_this, \"frequency\");\n        // add an initial state\n        _this._state.setStateAtTime(\"stopped\", 0);\n        // bind a callback to the worker thread\n        _this.context.on(\"tick\", _this._boundLoop);\n        return _this;\n    }\n    Clock.getDefaults = function () {\n        return Object.assign(ToneWithContext.getDefaults(), {\n            callback: noOp,\n            frequency: 1,\n            units: \"hertz\",\n        });\n    };\n    Object.defineProperty(Clock.prototype, \"state\", {\n        /**\n         * Returns the playback state of the source, either \"started\", \"stopped\" or \"paused\".\n         */\n        get: function () {\n            return this._state.getValueAtTime(this.now());\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Start the clock at the given time. Optionally pass in an offset\n     * of where to start the tick counter from.\n     * @param  time    The time the clock should start\n     * @param offset  Where the tick counter starts counting from.\n     */\n    Clock.prototype.start = function (time, offset) {\n        // make sure the context is running\n        assertContextRunning(this.context);\n        // start the loop\n        var computedTime = this.toSeconds(time);\n        this.log(\"start\", computedTime);\n        if (this._state.getValueAtTime(computedTime) !== \"started\") {\n            this._state.setStateAtTime(\"started\", computedTime);\n            this._tickSource.start(computedTime, offset);\n            if (computedTime < this._lastUpdate) {\n                this.emit(\"start\", computedTime, offset);\n            }\n        }\n        return this;\n    };\n    /**\n     * Stop the clock. Stopping the clock resets the tick counter to 0.\n     * @param time The time when the clock should stop.\n     * @example\n     * import { Clock } from \"tone\";\n     * const clock = new Clock(time => {\n     * \tconsole.log(time);\n     * }, 1);\n     * clock.start();\n     * // stop the clock after 10 seconds\n     * clock.stop(\"+10\");\n     */\n    Clock.prototype.stop = function (time) {\n        var computedTime = this.toSeconds(time);\n        this.log(\"stop\", computedTime);\n        this._state.cancel(computedTime);\n        this._state.setStateAtTime(\"stopped\", computedTime);\n        this._tickSource.stop(computedTime);\n        if (computedTime < this._lastUpdate) {\n            this.emit(\"stop\", computedTime);\n        }\n        return this;\n    };\n    /**\n     * Pause the clock. Pausing does not reset the tick counter.\n     * @param time The time when the clock should stop.\n     */\n    Clock.prototype.pause = function (time) {\n        var computedTime = this.toSeconds(time);\n        if (this._state.getValueAtTime(computedTime) === \"started\") {\n            this._state.setStateAtTime(\"paused\", computedTime);\n            this._tickSource.pause(computedTime);\n            if (computedTime < this._lastUpdate) {\n                this.emit(\"pause\", computedTime);\n            }\n        }\n        return this;\n    };\n    Object.defineProperty(Clock.prototype, \"ticks\", {\n        /**\n         * The number of times the callback was invoked. Starts counting at 0\n         * and increments after the callback was invoked.\n         */\n        get: function () {\n            return Math.ceil(this.getTicksAtTime(this.now()));\n        },\n        set: function (t) {\n            this._tickSource.ticks = t;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Clock.prototype, \"seconds\", {\n        /**\n         * The time since ticks=0 that the Clock has been running. Accounts for tempo curves\n         */\n        get: function () {\n            return this._tickSource.seconds;\n        },\n        set: function (s) {\n            this._tickSource.seconds = s;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Return the elapsed seconds at the given time.\n     * @param  time  When to get the elapsed seconds\n     * @return  The number of elapsed seconds\n     */\n    Clock.prototype.getSecondsAtTime = function (time) {\n        return this._tickSource.getSecondsAtTime(time);\n    };\n    /**\n     * Set the clock's ticks at the given time.\n     * @param  ticks The tick value to set\n     * @param  time  When to set the tick value\n     */\n    Clock.prototype.setTicksAtTime = function (ticks, time) {\n        this._tickSource.setTicksAtTime(ticks, time);\n        return this;\n    };\n    /**\n     * Get the time of the given tick. The second argument\n     * is when to test before. Since ticks can be set (with setTicksAtTime)\n     * there may be multiple times for a given tick value.\n     * @param  tick The tick number.\n     * @param  before When to measure the tick value from.\n     * @return The time of the tick\n     */\n    Clock.prototype.getTimeOfTick = function (tick, before) {\n        if (before === void 0) { before = this.now(); }\n        return this._tickSource.getTimeOfTick(tick, before);\n    };\n    /**\n     * Get the clock's ticks at the given time.\n     * @param  time  When to get the tick value\n     * @return The tick value at the given time.\n     */\n    Clock.prototype.getTicksAtTime = function (time) {\n        return this._tickSource.getTicksAtTime(time);\n    };\n    /**\n     * Get the time of the next tick\n     * @param  offset The tick number.\n     */\n    Clock.prototype.nextTickTime = function (offset, when) {\n        var computedTime = this.toSeconds(when);\n        var currentTick = this.getTicksAtTime(computedTime);\n        return this._tickSource.getTimeOfTick(currentTick + offset, computedTime);\n    };\n    /**\n     * The scheduling loop.\n     */\n    Clock.prototype._loop = function () {\n        var _this = this;\n        var startTime = this._lastUpdate;\n        var endTime = this.now();\n        this._lastUpdate = endTime;\n        this.log(\"loop\", startTime, endTime);\n        if (startTime !== endTime) {\n            // the state change events\n            this._state.forEachBetween(startTime, endTime, function (e) {\n                switch (e.state) {\n                    case \"started\":\n                        var offset = _this._tickSource.getTicksAtTime(e.time);\n                        _this.emit(\"start\", e.time, offset);\n                        break;\n                    case \"stopped\":\n                        if (e.time !== 0) {\n                            _this.emit(\"stop\", e.time);\n                        }\n                        break;\n                    case \"paused\":\n                        _this.emit(\"pause\", e.time);\n                        break;\n                }\n            });\n            // the tick callbacks\n            this._tickSource.forEachTickBetween(startTime, endTime, function (time, ticks) {\n                _this.callback(time, ticks);\n            });\n        }\n    };\n    /**\n     * Returns the scheduled state at the given time.\n     * @param  time  The time to query.\n     * @return  The name of the state input in setStateAtTime.\n     * @example\n     * import { Clock } from \"tone\";\n     * const clock = new Clock();\n     * clock.start(\"+0.1\");\n     * clock.getStateAtTime(\"+0.1\"); // returns \"started\"\n     */\n    Clock.prototype.getStateAtTime = function (time) {\n        var computedTime = this.toSeconds(time);\n        return this._state.getValueAtTime(computedTime);\n    };\n    /**\n     * Clean up\n     */\n    Clock.prototype.dispose = function () {\n        _super.prototype.dispose.call(this);\n        this.context.off(\"tick\", this._boundLoop);\n        this._tickSource.dispose();\n        this._state.dispose();\n        return this;\n    };\n    return Clock;\n}(ToneWithContext));\nexport { Clock };\nEmitter.mixin(Clock);\n//# sourceMappingURL=Clock.js.map","import * as tslib_1 from \"tslib\";\nimport { Timeline } from \"./Timeline\";\nimport { Tone } from \"../Tone\";\n/**\n * Represents a single value which is gettable and settable in a timed way\n */\nvar TimelineValue = /** @class */ (function (_super) {\n    tslib_1.__extends(TimelineValue, _super);\n    /**\n     * @param initialValue The value to return if there is no scheduled values\n     */\n    function TimelineValue(initialValue) {\n        var _this = _super.call(this) || this;\n        _this.name = \"TimelineValue\";\n        /**\n         * The timeline which stores the values\n         */\n        _this._timeline = new Timeline({ memory: 10 });\n        _this._initialValue = initialValue;\n        return _this;\n    }\n    /**\n     * Set the value at the given time\n     */\n    TimelineValue.prototype.set = function (value, time) {\n        this._timeline.add({\n            value: value, time: time\n        });\n        return this;\n    };\n    /**\n     * Get the value at the given time\n     */\n    TimelineValue.prototype.get = function (time) {\n        var event = this._timeline.get(time);\n        if (event) {\n            return event.value;\n        }\n        else {\n            return this._initialValue;\n        }\n    };\n    return TimelineValue;\n}(Tone));\nexport { TimelineValue };\n//# sourceMappingURL=TimelineValue.js.map","import * as tslib_1 from \"tslib\";\nimport { getContext } from \"../Global\";\nimport { TransportTimeClass } from \"./TransportTime\";\n/**\n * Ticks is a primitive type for encoding Time values.\n * Ticks can be constructed with or without the `new` keyword. Ticks can be passed\n * into the parameter of any method which takes time as an argument.\n * @example\n * import { Ticks } from \"tone\";\n * const t = Ticks(\"4n\"); // a quarter note as ticks\n * @category Unit\n */\nvar TicksClass = /** @class */ (function (_super) {\n    tslib_1.__extends(TicksClass, _super);\n    function TicksClass() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.name = \"Ticks\";\n        _this.defaultUnits = \"i\";\n        return _this;\n    }\n    /**\n     * Get the current time in the given units\n     */\n    TicksClass.prototype._now = function () {\n        return this.context.transport.ticks;\n    };\n    /**\n     * Return the value of the beats in the current units\n     */\n    TicksClass.prototype._beatsToUnits = function (beats) {\n        return this._getPPQ() * beats;\n    };\n    /**\n     * Returns the value of a second in the current units\n     */\n    TicksClass.prototype._secondsToUnits = function (seconds) {\n        return Math.floor(seconds / (60 / this._getBpm()) * this._getPPQ());\n    };\n    /**\n     * Returns the value of a tick in the current time units\n     */\n    TicksClass.prototype._ticksToUnits = function (ticks) {\n        return ticks;\n    };\n    /**\n     * Return the time in ticks\n     */\n    TicksClass.prototype.toTicks = function () {\n        return this.valueOf();\n    };\n    /**\n     * Return the time in seconds\n     */\n    TicksClass.prototype.toSeconds = function () {\n        return (this.valueOf() / this._getPPQ()) * (60 / this._getBpm());\n    };\n    return TicksClass;\n}(TransportTimeClass));\nexport { TicksClass };\n/**\n * Convert a time representation to ticks\n * @category Unit\n */\nexport function Ticks(value, units) {\n    return new TicksClass(getContext(), value, units);\n}\n//# sourceMappingURL=Ticks.js.map","import * as tslib_1 from \"tslib\";\nimport { Tone } from \"../Tone\";\nimport { isDefined } from \"./TypeCheck\";\nimport { assert } from \"./Debug\";\n/**\n * Similar to Tone.Timeline, but all events represent\n * intervals with both \"time\" and \"duration\" times. The\n * events are placed in a tree structure optimized\n * for querying an intersection point with the timeline\n * events. Internally uses an [Interval Tree](https://en.wikipedia.org/wiki/Interval_tree)\n * to represent the data.\n */\nvar IntervalTimeline = /** @class */ (function (_super) {\n    tslib_1.__extends(IntervalTimeline, _super);\n    function IntervalTimeline() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.name = \"IntervalTimeline\";\n        /**\n         * The root node of the inteval tree\n         */\n        _this._root = null;\n        /**\n         * Keep track of the length of the timeline.\n         */\n        _this._length = 0;\n        return _this;\n    }\n    /**\n     * The event to add to the timeline. All events must\n     * have a time and duration value\n     * @param  event  The event to add to the timeline\n     */\n    IntervalTimeline.prototype.add = function (event) {\n        assert(isDefined(event.time), \"Events must have a time property\");\n        assert(isDefined(event.duration), \"Events must have a duration parameter\");\n        event.time = event.time.valueOf();\n        var node = new IntervalNode(event.time, event.time + event.duration, event);\n        if (this._root === null) {\n            this._root = node;\n        }\n        else {\n            this._root.insert(node);\n        }\n        this._length++;\n        // Restructure tree to be balanced\n        while (node !== null) {\n            node.updateHeight();\n            node.updateMax();\n            this._rebalance(node);\n            node = node.parent;\n        }\n        return this;\n    };\n    /**\n     * Remove an event from the timeline.\n     * @param  event  The event to remove from the timeline\n     */\n    IntervalTimeline.prototype.remove = function (event) {\n        var e_1, _a;\n        if (this._root !== null) {\n            var results = [];\n            this._root.search(event.time, results);\n            try {\n                for (var results_1 = tslib_1.__values(results), results_1_1 = results_1.next(); !results_1_1.done; results_1_1 = results_1.next()) {\n                    var node = results_1_1.value;\n                    if (node.event === event) {\n                        this._removeNode(node);\n                        this._length--;\n                        break;\n                    }\n                }\n            }\n            catch (e_1_1) { e_1 = { error: e_1_1 }; }\n            finally {\n                try {\n                    if (results_1_1 && !results_1_1.done && (_a = results_1.return)) _a.call(results_1);\n                }\n                finally { if (e_1) throw e_1.error; }\n            }\n        }\n        return this;\n    };\n    Object.defineProperty(IntervalTimeline.prototype, \"length\", {\n        /**\n         * The number of items in the timeline.\n         * @readOnly\n         */\n        get: function () {\n            return this._length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Remove events whose time time is after the given time\n     * @param  after  The time to query.\n     */\n    IntervalTimeline.prototype.cancel = function (after) {\n        var _this = this;\n        this.forEachFrom(after, function (event) { return _this.remove(event); });\n        return this;\n    };\n    /**\n     * Set the root node as the given node\n     */\n    IntervalTimeline.prototype._setRoot = function (node) {\n        this._root = node;\n        if (this._root !== null) {\n            this._root.parent = null;\n        }\n    };\n    /**\n     * Replace the references to the node in the node's parent\n     * with the replacement node.\n     */\n    IntervalTimeline.prototype._replaceNodeInParent = function (node, replacement) {\n        if (node.parent !== null) {\n            if (node.isLeftChild()) {\n                node.parent.left = replacement;\n            }\n            else {\n                node.parent.right = replacement;\n            }\n            this._rebalance(node.parent);\n        }\n        else {\n            this._setRoot(replacement);\n        }\n    };\n    /**\n     * Remove the node from the tree and replace it with\n     * a successor which follows the schema.\n     */\n    IntervalTimeline.prototype._removeNode = function (node) {\n        if (node.left === null && node.right === null) {\n            this._replaceNodeInParent(node, null);\n        }\n        else if (node.right === null) {\n            this._replaceNodeInParent(node, node.left);\n        }\n        else if (node.left === null) {\n            this._replaceNodeInParent(node, node.right);\n        }\n        else {\n            var balance = node.getBalance();\n            var replacement = void 0;\n            var temp = null;\n            if (balance > 0) {\n                if (node.left.right === null) {\n                    replacement = node.left;\n                    replacement.right = node.right;\n                    temp = replacement;\n                }\n                else {\n                    replacement = node.left.right;\n                    while (replacement.right !== null) {\n                        replacement = replacement.right;\n                    }\n                    if (replacement.parent) {\n                        replacement.parent.right = replacement.left;\n                        temp = replacement.parent;\n                        replacement.left = node.left;\n                        replacement.right = node.right;\n                    }\n                }\n            }\n            else if (node.right.left === null) {\n                replacement = node.right;\n                replacement.left = node.left;\n                temp = replacement;\n            }\n            else {\n                replacement = node.right.left;\n                while (replacement.left !== null) {\n                    replacement = replacement.left;\n                }\n                if (replacement.parent) {\n                    replacement.parent.left = replacement.right;\n                    temp = replacement.parent;\n                    replacement.left = node.left;\n                    replacement.right = node.right;\n                }\n            }\n            if (node.parent !== null) {\n                if (node.isLeftChild()) {\n                    node.parent.left = replacement;\n                }\n                else {\n                    node.parent.right = replacement;\n                }\n            }\n            else {\n                this._setRoot(replacement);\n            }\n            if (temp) {\n                this._rebalance(temp);\n            }\n        }\n        node.dispose();\n    };\n    /**\n     * Rotate the tree to the left\n     */\n    IntervalTimeline.prototype._rotateLeft = function (node) {\n        var parent = node.parent;\n        var isLeftChild = node.isLeftChild();\n        // Make node.right the new root of this sub tree (instead of node)\n        var pivotNode = node.right;\n        if (pivotNode) {\n            node.right = pivotNode.left;\n            pivotNode.left = node;\n        }\n        if (parent !== null) {\n            if (isLeftChild) {\n                parent.left = pivotNode;\n            }\n            else {\n                parent.right = pivotNode;\n            }\n        }\n        else {\n            this._setRoot(pivotNode);\n        }\n    };\n    /**\n     * Rotate the tree to the right\n     */\n    IntervalTimeline.prototype._rotateRight = function (node) {\n        var parent = node.parent;\n        var isLeftChild = node.isLeftChild();\n        // Make node.left the new root of this sub tree (instead of node)\n        var pivotNode = node.left;\n        if (pivotNode) {\n            node.left = pivotNode.right;\n            pivotNode.right = node;\n        }\n        if (parent !== null) {\n            if (isLeftChild) {\n                parent.left = pivotNode;\n            }\n            else {\n                parent.right = pivotNode;\n            }\n        }\n        else {\n            this._setRoot(pivotNode);\n        }\n    };\n    /**\n     * Balance the BST\n     */\n    IntervalTimeline.prototype._rebalance = function (node) {\n        var balance = node.getBalance();\n        if (balance > 1 && node.left) {\n            if (node.left.getBalance() < 0) {\n                this._rotateLeft(node.left);\n            }\n            else {\n                this._rotateRight(node);\n            }\n        }\n        else if (balance < -1 && node.right) {\n            if (node.right.getBalance() > 0) {\n                this._rotateRight(node.right);\n            }\n            else {\n                this._rotateLeft(node);\n            }\n        }\n    };\n    /**\n     * Get an event whose time and duration span the give time. Will\n     * return the match whose \"time\" value is closest to the given time.\n     * @return  The event which spans the desired time\n     */\n    IntervalTimeline.prototype.get = function (time) {\n        if (this._root !== null) {\n            var results = [];\n            this._root.search(time, results);\n            if (results.length > 0) {\n                var max = results[0];\n                for (var i = 1; i < results.length; i++) {\n                    if (results[i].low > max.low) {\n                        max = results[i];\n                    }\n                }\n                return max.event;\n            }\n        }\n        return null;\n    };\n    /**\n     * Iterate over everything in the timeline.\n     * @param  callback The callback to invoke with every item\n     */\n    IntervalTimeline.prototype.forEach = function (callback) {\n        if (this._root !== null) {\n            var allNodes_1 = [];\n            this._root.traverse(function (node) { return allNodes_1.push(node); });\n            allNodes_1.forEach(function (node) {\n                if (node.event) {\n                    callback(node.event);\n                }\n            });\n        }\n        return this;\n    };\n    /**\n     * Iterate over everything in the array in which the given time\n     * overlaps with the time and duration time of the event.\n     * @param  time The time to check if items are overlapping\n     * @param  callback The callback to invoke with every item\n     */\n    IntervalTimeline.prototype.forEachAtTime = function (time, callback) {\n        if (this._root !== null) {\n            var results = [];\n            this._root.search(time, results);\n            results.forEach(function (node) {\n                if (node.event) {\n                    callback(node.event);\n                }\n            });\n        }\n        return this;\n    };\n    /**\n     * Iterate over everything in the array in which the time is greater\n     * than or equal to the given time.\n     * @param  time The time to check if items are before\n     * @param  callback The callback to invoke with every item\n     */\n    IntervalTimeline.prototype.forEachFrom = function (time, callback) {\n        if (this._root !== null) {\n            var results = [];\n            this._root.searchAfter(time, results);\n            results.forEach(function (node) {\n                if (node.event) {\n                    callback(node.event);\n                }\n            });\n        }\n        return this;\n    };\n    /**\n     * Clean up\n     */\n    IntervalTimeline.prototype.dispose = function () {\n        _super.prototype.dispose.call(this);\n        if (this._root !== null) {\n            this._root.traverse(function (node) { return node.dispose(); });\n        }\n        this._root = null;\n        return this;\n    };\n    return IntervalTimeline;\n}(Tone));\nexport { IntervalTimeline };\n//-------------------------------------\n// \tINTERVAL NODE HELPER\n//-------------------------------------\n/**\n * Represents a node in the binary search tree, with the addition\n * of a \"high\" value which keeps track of the highest value of\n * its children.\n * References:\n * https://brooknovak.wordpress.com/2013/12/07/augmented-interval-tree-in-c/\n * http://www.mif.vu.lt/~valdas/ALGORITMAI/LITERATURA/Cormen/Cormen.pdf\n * @param low\n * @param high\n */\nvar IntervalNode = /** @class */ (function () {\n    function IntervalNode(low, high, event) {\n        // the nodes to the left\n        this._left = null;\n        // the nodes to the right\n        this._right = null;\n        // the parent node\n        this.parent = null;\n        // the number of child nodes\n        this.height = 0;\n        this.event = event;\n        // the low value\n        this.low = low;\n        // the high value\n        this.high = high;\n        // the high value for this and all child nodes\n        this.max = this.high;\n    }\n    /**\n     * Insert a node into the correct spot in the tree\n     */\n    IntervalNode.prototype.insert = function (node) {\n        if (node.low <= this.low) {\n            if (this.left === null) {\n                this.left = node;\n            }\n            else {\n                this.left.insert(node);\n            }\n        }\n        else if (this.right === null) {\n            this.right = node;\n        }\n        else {\n            this.right.insert(node);\n        }\n    };\n    /**\n     * Search the tree for nodes which overlap\n     * with the given point\n     * @param  point  The point to query\n     * @param  results  The array to put the results\n     */\n    IntervalNode.prototype.search = function (point, results) {\n        // If p is to the right of the rightmost point of any interval\n        // in this node and all children, there won't be any matches.\n        if (point > this.max) {\n            return;\n        }\n        // Search left children\n        if (this.left !== null) {\n            this.left.search(point, results);\n        }\n        // Check this node\n        if (this.low <= point && this.high > point) {\n            results.push(this);\n        }\n        // If p is to the left of the time of this interval,\n        // then it can't be in any child to the right.\n        if (this.low > point) {\n            return;\n        }\n        // Search right children\n        if (this.right !== null) {\n            this.right.search(point, results);\n        }\n    };\n    /**\n     * Search the tree for nodes which are less\n     * than the given point\n     * @param  point  The point to query\n     * @param  results  The array to put the results\n     */\n    IntervalNode.prototype.searchAfter = function (point, results) {\n        // Check this node\n        if (this.low >= point) {\n            results.push(this);\n            if (this.left !== null) {\n                this.left.searchAfter(point, results);\n            }\n        }\n        // search the right side\n        if (this.right !== null) {\n            this.right.searchAfter(point, results);\n        }\n    };\n    /**\n     * Invoke the callback on this element and both it's branches\n     * @param  {Function}  callback\n     */\n    IntervalNode.prototype.traverse = function (callback) {\n        callback(this);\n        if (this.left !== null) {\n            this.left.traverse(callback);\n        }\n        if (this.right !== null) {\n            this.right.traverse(callback);\n        }\n    };\n    /**\n     * Update the height of the node\n     */\n    IntervalNode.prototype.updateHeight = function () {\n        if (this.left !== null && this.right !== null) {\n            this.height = Math.max(this.left.height, this.right.height) + 1;\n        }\n        else if (this.right !== null) {\n            this.height = this.right.height + 1;\n        }\n        else if (this.left !== null) {\n            this.height = this.left.height + 1;\n        }\n        else {\n            this.height = 0;\n        }\n    };\n    /**\n     * Update the height of the node\n     */\n    IntervalNode.prototype.updateMax = function () {\n        this.max = this.high;\n        if (this.left !== null) {\n            this.max = Math.max(this.max, this.left.max);\n        }\n        if (this.right !== null) {\n            this.max = Math.max(this.max, this.right.max);\n        }\n    };\n    /**\n     * The balance is how the leafs are distributed on the node\n     * @return  Negative numbers are balanced to the right\n     */\n    IntervalNode.prototype.getBalance = function () {\n        var balance = 0;\n        if (this.left !== null && this.right !== null) {\n            balance = this.left.height - this.right.height;\n        }\n        else if (this.left !== null) {\n            balance = this.left.height + 1;\n        }\n        else if (this.right !== null) {\n            balance = -(this.right.height + 1);\n        }\n        return balance;\n    };\n    /**\n     * @returns true if this node is the left child of its parent\n     */\n    IntervalNode.prototype.isLeftChild = function () {\n        return this.parent !== null && this.parent.left === this;\n    };\n    Object.defineProperty(IntervalNode.prototype, \"left\", {\n        /**\n         * get/set the left node\n         */\n        get: function () {\n            return this._left;\n        },\n        set: function (node) {\n            this._left = node;\n            if (node !== null) {\n                node.parent = this;\n            }\n            this.updateHeight();\n            this.updateMax();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(IntervalNode.prototype, \"right\", {\n        /**\n         * get/set the right node\n         */\n        get: function () {\n            return this._right;\n        },\n        set: function (node) {\n            this._right = node;\n            if (node !== null) {\n                node.parent = this;\n            }\n            this.updateHeight();\n            this.updateMax();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * null out references.\n     */\n    IntervalNode.prototype.dispose = function () {\n        this.parent = null;\n        this._left = null;\n        this._right = null;\n        this.event = null;\n    };\n    return IntervalNode;\n}());\n//# sourceMappingURL=IntervalTimeline.js.map","import { noOp } from \"../util/Interface\";\n/**\n * TransportEvent is an internal class used by [[Transport]]\n * to schedule events. Do no invoke this class directly, it is\n * handled from within Tone.Transport.\n */\nvar TransportEvent = /** @class */ (function () {\n    /**\n     * @param transport The transport object which the event belongs to\n     */\n    function TransportEvent(transport, opts) {\n        /**\n         * The unique id of the event\n         */\n        this.id = TransportEvent._eventId++;\n        var options = Object.assign(TransportEvent.getDefaults(), opts);\n        this.transport = transport;\n        this.callback = options.callback;\n        this._once = options.once;\n        this.time = options.time;\n    }\n    TransportEvent.getDefaults = function () {\n        return {\n            callback: noOp,\n            once: false,\n            time: 0,\n        };\n    };\n    /**\n     * Invoke the event callback.\n     * @param  time  The AudioContext time in seconds of the event\n     */\n    TransportEvent.prototype.invoke = function (time) {\n        if (this.callback) {\n            this.callback(time);\n            if (this._once) {\n                this.transport.clear(this.id);\n            }\n        }\n    };\n    /**\n     * Clean up\n     */\n    TransportEvent.prototype.dispose = function () {\n        this.callback = undefined;\n        return this;\n    };\n    /**\n     * Current ID counter\n     */\n    TransportEvent._eventId = 0;\n    return TransportEvent;\n}());\nexport { TransportEvent };\n//# sourceMappingURL=TransportEvent.js.map","import * as tslib_1 from \"tslib\";\nimport { TicksClass } from \"../type/Ticks\";\nimport { TransportEvent } from \"./TransportEvent\";\n/**\n * TransportRepeatEvent is an internal class used by Tone.Transport\n * to schedule repeat events. This class should not be instantiated directly.\n */\nvar TransportRepeatEvent = /** @class */ (function (_super) {\n    tslib_1.__extends(TransportRepeatEvent, _super);\n    /**\n     * @param transport The transport object which the event belongs to\n     */\n    function TransportRepeatEvent(transport, opts) {\n        var _this = _super.call(this, transport, opts) || this;\n        /**\n         * The ID of the current timeline event\n         */\n        _this._currentId = -1;\n        /**\n         * The ID of the next timeline event\n         */\n        _this._nextId = -1;\n        /**\n         * The time of the next event\n         */\n        _this._nextTick = _this.time;\n        /**\n         * a reference to the bound start method\n         */\n        _this._boundRestart = _this._restart.bind(_this);\n        var options = Object.assign(TransportRepeatEvent.getDefaults(), opts);\n        _this.duration = new TicksClass(transport.context, options.duration).valueOf();\n        _this._interval = new TicksClass(transport.context, options.interval).valueOf();\n        _this._nextTick = options.time;\n        _this.transport.on(\"start\", _this._boundRestart);\n        _this.transport.on(\"loopStart\", _this._boundRestart);\n        _this.context = _this.transport.context;\n        _this._restart();\n        return _this;\n    }\n    TransportRepeatEvent.getDefaults = function () {\n        return Object.assign({}, TransportEvent.getDefaults(), {\n            duration: Infinity,\n            interval: 1,\n            once: false,\n        });\n    };\n    /**\n     * Invoke the callback. Returns the tick time which\n     * the next event should be scheduled at.\n     * @param  time  The AudioContext time in seconds of the event\n     */\n    TransportRepeatEvent.prototype.invoke = function (time) {\n        // create more events if necessary\n        this._createEvents(time);\n        // call the super class\n        _super.prototype.invoke.call(this, time);\n    };\n    /**\n     * Push more events onto the timeline to keep up with the position of the timeline\n     */\n    TransportRepeatEvent.prototype._createEvents = function (time) {\n        // schedule the next event\n        var ticks = this.transport.getTicksAtTime(time);\n        if (ticks >= this.time && ticks >= this._nextTick && this._nextTick + this._interval < this.time + this.duration) {\n            this._nextTick += this._interval;\n            this._currentId = this._nextId;\n            this._nextId = this.transport.scheduleOnce(this.invoke.bind(this), new TicksClass(this.context, this._nextTick).toSeconds());\n        }\n    };\n    /**\n     * Push more events onto the timeline to keep up with the position of the timeline\n     */\n    TransportRepeatEvent.prototype._restart = function (time) {\n        this.transport.clear(this._currentId);\n        this.transport.clear(this._nextId);\n        this._nextTick = this.time;\n        var ticks = this.transport.getTicksAtTime(time);\n        if (ticks > this.time) {\n            this._nextTick = this.time + Math.ceil((ticks - this.time) / this._interval) * this._interval;\n        }\n        this._currentId = this.transport.scheduleOnce(this.invoke.bind(this), new TicksClass(this.context, this._nextTick).toSeconds());\n        this._nextTick += this._interval;\n        this._nextId = this.transport.scheduleOnce(this.invoke.bind(this), new TicksClass(this.context, this._nextTick).toSeconds());\n    };\n    /**\n     * Clean up\n     */\n    TransportRepeatEvent.prototype.dispose = function () {\n        _super.prototype.dispose.call(this);\n        this.transport.clear(this._currentId);\n        this.transport.clear(this._nextId);\n        this.transport.off(\"start\", this._boundRestart);\n        this.transport.off(\"loopStart\", this._boundRestart);\n        return this;\n    };\n    return TransportRepeatEvent;\n}(TransportEvent));\nexport { TransportRepeatEvent };\n//# sourceMappingURL=TransportRepeatEvent.js.map","import * as tslib_1 from \"tslib\";\nimport { TimeClass } from \"../../core/type/Time\";\nimport { TimelineValue } from \"../../core/util/TimelineValue\";\nimport { onContextClose, onContextInit } from \"../context/ContextInitialization\";\nimport { Gain } from \"../context/Gain\";\nimport { ToneWithContext } from \"../context/ToneWithContext\";\nimport { TicksClass } from \"../type/Ticks\";\nimport { TransportTimeClass } from \"../type/TransportTime\";\nimport { optionsFromArguments } from \"../util/Defaults\";\nimport { Emitter } from \"../util/Emitter\";\nimport { readOnly, writable } from \"../util/Interface\";\nimport { IntervalTimeline } from \"../util/IntervalTimeline\";\nimport { Timeline } from \"../util/Timeline\";\nimport { isArray, isDefined } from \"../util/TypeCheck\";\nimport { Clock } from \"./Clock\";\nimport { TransportEvent } from \"./TransportEvent\";\nimport { TransportRepeatEvent } from \"./TransportRepeatEvent\";\n/**\n * Transport for timing musical events.\n * Supports tempo curves and time changes. Unlike browser-based timing (setInterval, requestAnimationFrame)\n * Transport timing events pass in the exact time of the scheduled event\n * in the argument of the callback function. Pass that time value to the object\n * you're scheduling. <br><br>\n * A single transport is created for you when the library is initialized.\n * <br><br>\n * The transport emits the events: \"start\", \"stop\", \"pause\", and \"loop\" which are\n * called with the time of that event as the argument.\n *\n * @example\n * import { Oscillator, Transport } from \"tone\";\n * const osc = new Oscillator().toDestination();\n * // repeated event every 8th note\n * Transport.scheduleRepeat((time) => {\n * \t// use the callback time to schedule events\n * \tosc.start(time).stop(time + 0.1);\n * }, \"8n\");\n * // transport must be started before it starts invoking events\n * Transport.start();\n * @category Core\n */\nvar Transport = /** @class */ (function (_super) {\n    tslib_1.__extends(Transport, _super);\n    function Transport() {\n        var _this = _super.call(this, optionsFromArguments(Transport.getDefaults(), arguments)) || this;\n        _this.name = \"Transport\";\n        //-------------------------------------\n        // \tLOOPING\n        //-------------------------------------\n        /**\n         * If the transport loops or not.\n         */\n        _this._loop = new TimelineValue(false);\n        /**\n         * The loop start position in ticks\n         */\n        _this._loopStart = 0;\n        /**\n         * The loop end position in ticks\n         */\n        _this._loopEnd = 0;\n        //-------------------------------------\n        // \tTIMELINE EVENTS\n        //-------------------------------------\n        /**\n         * All the events in an object to keep track by ID\n         */\n        _this._scheduledEvents = {};\n        /**\n         * The scheduled events.\n         */\n        _this._timeline = new Timeline();\n        /**\n         * Repeated events\n         */\n        _this._repeatedEvents = new IntervalTimeline();\n        /**\n         * All of the synced Signals\n         */\n        _this._syncedSignals = [];\n        /**\n         * The swing amount\n         */\n        _this._swingAmount = 0;\n        var options = optionsFromArguments(Transport.getDefaults(), arguments);\n        // CLOCK/TEMPO\n        _this._ppq = options.ppq;\n        _this._clock = new Clock({\n            callback: _this._processTick.bind(_this),\n            context: _this.context,\n            frequency: 0,\n            units: \"bpm\",\n        });\n        _this._bindClockEvents();\n        _this.bpm = _this._clock.frequency;\n        _this._clock.frequency.multiplier = options.ppq;\n        _this.bpm.setValueAtTime(options.bpm, 0);\n        readOnly(_this, \"bpm\");\n        _this._timeSignature = options.timeSignature;\n        // SWING\n        _this._swingTicks = options.ppq / 2; // 8n\n        return _this;\n    }\n    Transport.getDefaults = function () {\n        return Object.assign(ToneWithContext.getDefaults(), {\n            bpm: 120,\n            loopEnd: \"4m\",\n            loopStart: 0,\n            ppq: 192,\n            swing: 0,\n            swingSubdivision: \"8n\",\n            timeSignature: 4,\n        });\n    };\n    //-------------------------------------\n    // \tTICKS\n    //-------------------------------------\n    /**\n     * called on every tick\n     * @param  tickTime clock relative tick time\n     */\n    Transport.prototype._processTick = function (tickTime, ticks) {\n        // handle swing\n        if (this._swingAmount > 0 &&\n            ticks % this._ppq !== 0 && // not on a downbeat\n            ticks % (this._swingTicks * 2) !== 0) {\n            // add some swing\n            var progress = (ticks % (this._swingTicks * 2)) / (this._swingTicks * 2);\n            var amount = Math.sin((progress) * Math.PI) * this._swingAmount;\n            tickTime += new TicksClass(this.context, this._swingTicks * 2 / 3).toSeconds() * amount;\n        }\n        // do the loop test\n        if (this._loop.get(tickTime)) {\n            if (ticks >= this._loopEnd) {\n                this.emit(\"loopEnd\", tickTime);\n                this._clock.setTicksAtTime(this._loopStart, tickTime);\n                ticks = this._loopStart;\n                this.emit(\"loopStart\", tickTime, this._clock.getSecondsAtTime(tickTime));\n                this.emit(\"loop\", tickTime);\n            }\n        }\n        // invoke the timeline events scheduled on this tick\n        this._timeline.forEachAtTime(ticks, function (event) { return event.invoke(tickTime); });\n    };\n    //-------------------------------------\n    // \tSCHEDULABLE EVENTS\n    //-------------------------------------\n    /**\n     * Schedule an event along the timeline.\n     * @param callback The callback to be invoked at the time.\n     * @param time The time to invoke the callback at.\n     * @return The id of the event which can be used for canceling the event.\n     * @example\n     * import { Transport } from \"tone\";\n     * // schedule an event on the 16th measure\n     * Transport.schedule((time) => {\n     * \t// invoked on measure 16\n     * \tconsole.log(\"measure 16!\");\n     * }, \"16:0:0\");\n     */\n    Transport.prototype.schedule = function (callback, time) {\n        var event = new TransportEvent(this, {\n            callback: callback,\n            time: new TransportTimeClass(this.context, time).toTicks(),\n        });\n        return this._addEvent(event, this._timeline);\n    };\n    /**\n     * Schedule a repeated event along the timeline. The event will fire\n     * at the `interval` starting at the `startTime` and for the specified\n     * `duration`.\n     * @param  callback   The callback to invoke.\n     * @param  interval   The duration between successive callbacks. Must be a positive number.\n     * @param  startTime  When along the timeline the events should start being invoked.\n     * @param  duration How long the event should repeat.\n     * @return  The ID of the scheduled event. Use this to cancel the event.\n     * @example\n     * import { Oscillator, Transport } from \"tone\";\n     * const osc = new Oscillator().toDestination().start();\n     * // a callback invoked every eighth note after the first measure\n     * Transport.scheduleRepeat((time) => {\n     * \tosc.start(time).stop(time + 0.1);\n     * }, \"8n\", \"1m\");\n     */\n    Transport.prototype.scheduleRepeat = function (callback, interval, startTime, duration) {\n        if (duration === void 0) { duration = Infinity; }\n        var event = new TransportRepeatEvent(this, {\n            callback: callback,\n            duration: new TimeClass(this.context, duration).toTicks(),\n            interval: new TimeClass(this.context, interval).toTicks(),\n            time: new TransportTimeClass(this.context, startTime).toTicks(),\n        });\n        // kick it off if the Transport is started\n        // @ts-ignore\n        return this._addEvent(event, this._repeatedEvents);\n    };\n    /**\n     * Schedule an event that will be removed after it is invoked.\n     * @param callback The callback to invoke once.\n     * @param time The time the callback should be invoked.\n     * @returns The ID of the scheduled event.\n     */\n    Transport.prototype.scheduleOnce = function (callback, time) {\n        var event = new TransportEvent(this, {\n            callback: callback,\n            once: true,\n            time: new TransportTimeClass(this.context, time).toTicks(),\n        });\n        return this._addEvent(event, this._timeline);\n    };\n    /**\n     * Clear the passed in event id from the timeline\n     * @param eventId The id of the event.\n     */\n    Transport.prototype.clear = function (eventId) {\n        if (this._scheduledEvents.hasOwnProperty(eventId)) {\n            var item = this._scheduledEvents[eventId.toString()];\n            item.timeline.remove(item.event);\n            item.event.dispose();\n            delete this._scheduledEvents[eventId.toString()];\n        }\n        return this;\n    };\n    /**\n     * Add an event to the correct timeline. Keep track of the\n     * timeline it was added to.\n     * @returns the event id which was just added\n     */\n    Transport.prototype._addEvent = function (event, timeline) {\n        this._scheduledEvents[event.id.toString()] = {\n            event: event,\n            timeline: timeline,\n        };\n        timeline.add(event);\n        return event.id;\n    };\n    /**\n     * Remove scheduled events from the timeline after\n     * the given time. Repeated events will be removed\n     * if their startTime is after the given time\n     * @param after Clear all events after this time.\n     */\n    Transport.prototype.cancel = function (after) {\n        var _this = this;\n        if (after === void 0) { after = 0; }\n        var computedAfter = this.toTicks(after);\n        this._timeline.forEachFrom(computedAfter, function (event) { return _this.clear(event.id); });\n        this._repeatedEvents.forEachFrom(computedAfter, function (event) { return _this.clear(event.id); });\n        return this;\n    };\n    //-------------------------------------\n    // \tSTART/STOP/PAUSE\n    //-------------------------------------\n    /**\n     * Bind start/stop/pause events from the clock and emit them.\n     */\n    Transport.prototype._bindClockEvents = function () {\n        var _this = this;\n        this._clock.on(\"start\", function (time, offset) {\n            offset = new TicksClass(_this.context, offset).toSeconds();\n            _this.emit(\"start\", time, offset);\n        });\n        this._clock.on(\"stop\", function (time) {\n            _this.emit(\"stop\", time);\n        });\n        this._clock.on(\"pause\", function (time) {\n            _this.emit(\"pause\", time);\n        });\n    };\n    Object.defineProperty(Transport.prototype, \"state\", {\n        /**\n         * Returns the playback state of the source, either \"started\", \"stopped\", or \"paused\"\n         */\n        get: function () {\n            return this._clock.getStateAtTime(this.now());\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Start the transport and all sources synced to the transport.\n     * @param  time The time when the transport should start.\n     * @param  offset The timeline offset to start the transport.\n     * @example\n     * import { Transport } from \"tone\";\n     * // start the transport in one second starting at beginning of the 5th measure.\n     * Transport.start(\"+1\", \"4:0:0\");\n     */\n    Transport.prototype.start = function (time, offset) {\n        var offsetTicks;\n        if (isDefined(offset)) {\n            offsetTicks = this.toTicks(offset);\n        }\n        // start the clock\n        this._clock.start(time, offsetTicks);\n        return this;\n    };\n    /**\n     * Stop the transport and all sources synced to the transport.\n     * @param time The time when the transport should stop.\n     * @example\n     * import { Transport } from \"tone\";\n     * Transport.stop();\n     */\n    Transport.prototype.stop = function (time) {\n        this._clock.stop(time);\n        return this;\n    };\n    /**\n     * Pause the transport and all sources synced to the transport.\n     */\n    Transport.prototype.pause = function (time) {\n        this._clock.pause(time);\n        return this;\n    };\n    /**\n     * Toggle the current state of the transport. If it is\n     * started, it will stop it, otherwise it will start the Transport.\n     * @param  time The time of the event\n     */\n    Transport.prototype.toggle = function (time) {\n        time = this.toSeconds(time);\n        if (this._clock.getStateAtTime(time) !== \"started\") {\n            this.start(time);\n        }\n        else {\n            this.stop(time);\n        }\n        return this;\n    };\n    Object.defineProperty(Transport.prototype, \"timeSignature\", {\n        //-------------------------------------\n        // \tSETTERS/GETTERS\n        //-------------------------------------\n        /**\n         * The time signature as just the numerator over 4.\n         * For example 4/4 would be just 4 and 6/8 would be 3.\n         * @example\n         * import { Transport } from \"tone\";\n         * // common time\n         * Transport.timeSignature = 4;\n         * // 7/8\n         * Transport.timeSignature = [7, 8];\n         * // this will be reduced to a single number\n         * Transport.timeSignature; // returns 3.5\n         */\n        get: function () {\n            return this._timeSignature;\n        },\n        set: function (timeSig) {\n            if (isArray(timeSig)) {\n                timeSig = (timeSig[0] / timeSig[1]) * 4;\n            }\n            this._timeSignature = timeSig;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Transport.prototype, \"loopStart\", {\n        /**\n         * When the Transport.loop = true, this is the starting position of the loop.\n         */\n        get: function () {\n            return new TimeClass(this.context, this._loopStart, \"i\").toSeconds();\n        },\n        set: function (startPosition) {\n            this._loopStart = this.toTicks(startPosition);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Transport.prototype, \"loopEnd\", {\n        /**\n         * When the Transport.loop = true, this is the ending position of the loop.\n         */\n        get: function () {\n            return new TimeClass(this.context, this._loopEnd, \"i\").toSeconds();\n        },\n        set: function (endPosition) {\n            this._loopEnd = this.toTicks(endPosition);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Transport.prototype, \"loop\", {\n        /**\n         * If the transport loops or not.\n         */\n        get: function () {\n            return this._loop.get(this.now());\n        },\n        set: function (loop) {\n            this._loop.set(loop, this.now());\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Set the loop start and stop at the same time.\n     * @example\n     * import { Transport } from \"tone\";\n     * // loop over the first measure\n     * Transport.setLoopPoints(0, \"1m\");\n     * Transport.loop = true;\n     */\n    Transport.prototype.setLoopPoints = function (startPosition, endPosition) {\n        this.loopStart = startPosition;\n        this.loopEnd = endPosition;\n        return this;\n    };\n    Object.defineProperty(Transport.prototype, \"swing\", {\n        /**\n         * The swing value. Between 0-1 where 1 equal to the note + half the subdivision.\n         */\n        get: function () {\n            return this._swingAmount;\n        },\n        set: function (amount) {\n            // scale the values to a normal range\n            this._swingAmount = amount;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Transport.prototype, \"swingSubdivision\", {\n        /**\n         * Set the subdivision which the swing will be applied to.\n         * The default value is an 8th note. Value must be less\n         * than a quarter note.\n         */\n        get: function () {\n            return new TicksClass(this.context, this._swingTicks).toNotation();\n        },\n        set: function (subdivision) {\n            this._swingTicks = this.toTicks(subdivision);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Transport.prototype, \"position\", {\n        /**\n         * The Transport's position in Bars:Beats:Sixteenths.\n         * Setting the value will jump to that position right away.\n         */\n        get: function () {\n            var now = this.now();\n            var ticks = this._clock.getTicksAtTime(now);\n            return new TicksClass(this.context, ticks).toBarsBeatsSixteenths();\n        },\n        set: function (progress) {\n            var ticks = this.toTicks(progress);\n            this.ticks = ticks;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Transport.prototype, \"seconds\", {\n        /**\n         * The Transport's position in seconds\n         * Setting the value will jump to that position right away.\n         */\n        get: function () {\n            return this._clock.seconds;\n        },\n        set: function (s) {\n            var now = this.now();\n            var ticks = this._clock.frequency.timeToTicks(s, now);\n            this.ticks = ticks;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Transport.prototype, \"progress\", {\n        /**\n         * The Transport's loop position as a normalized value. Always\n         * returns 0 if the transport if loop is not true.\n         */\n        get: function () {\n            if (this.loop) {\n                var now = this.now();\n                var ticks = this._clock.getTicksAtTime(now);\n                return (ticks - this._loopStart) / (this._loopEnd - this._loopStart);\n            }\n            else {\n                return 0;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Transport.prototype, \"ticks\", {\n        /**\n         * The transports current tick position.\n         */\n        get: function () {\n            return this._clock.ticks;\n        },\n        set: function (t) {\n            if (this._clock.ticks !== t) {\n                var now = this.now();\n                // stop everything synced to the transport\n                if (this.state === \"started\") {\n                    var ticks = this._clock.getTicksAtTime(now);\n                    // schedule to start on the next tick, #573\n                    var time = this._clock.getTimeOfTick(Math.ceil(ticks));\n                    this.emit(\"stop\", time);\n                    this._clock.setTicksAtTime(t, time);\n                    // restart it with the new time\n                    this.emit(\"start\", time, this._clock.getSecondsAtTime(time));\n                }\n                else {\n                    this._clock.setTicksAtTime(t, now);\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Get the clock's ticks at the given time.\n     * @param  time  When to get the tick value\n     * @return The tick value at the given time.\n     */\n    Transport.prototype.getTicksAtTime = function (time) {\n        return Math.round(this._clock.getTicksAtTime(time));\n    };\n    /**\n     * Return the elapsed seconds at the given time.\n     * @param  time  When to get the elapsed seconds\n     * @return  The number of elapsed seconds\n     */\n    Transport.prototype.getSecondsAtTime = function (time) {\n        return this._clock.getSecondsAtTime(time);\n    };\n    Object.defineProperty(Transport.prototype, \"PPQ\", {\n        /**\n         * Pulses Per Quarter note. This is the smallest resolution\n         * the Transport timing supports. This should be set once\n         * on initialization and not set again. Changing this value\n         * after other objects have been created can cause problems.\n         */\n        get: function () {\n            return this._clock.frequency.multiplier;\n        },\n        set: function (ppq) {\n            this._clock.frequency.multiplier = ppq;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //-------------------------------------\n    // \tSYNCING\n    //-------------------------------------\n    /**\n     * Returns the time aligned to the next subdivision\n     * of the Transport. If the Transport is not started,\n     * it will return 0.\n     * Note: this will not work precisely during tempo ramps.\n     * @param  subdivision  The subdivision to quantize to\n     * @return  The context time of the next subdivision.\n     * @example\n     * import { Transport } from \"tone\";\n     * // the transport must be started, otherwise returns 0\n     * Transport.start();\n     * Transport.nextSubdivision(\"4n\");\n     */\n    Transport.prototype.nextSubdivision = function (subdivision) {\n        subdivision = this.toTicks(subdivision);\n        if (this.state !== \"started\") {\n            // if the transport's not started, return 0\n            return 0;\n        }\n        else {\n            var now = this.now();\n            // the remainder of the current ticks and the subdivision\n            var transportPos = this.getTicksAtTime(now);\n            var remainingTicks = subdivision - transportPos % subdivision;\n            return this._clock.nextTickTime(remainingTicks, now);\n        }\n    };\n    /**\n     * Attaches the signal to the tempo control signal so that\n     * any changes in the tempo will change the signal in the same\n     * ratio.\n     *\n     * @param signal\n     * @param ratio Optionally pass in the ratio between the two signals.\n     * \t\t\tOtherwise it will be computed based on their current values.\n     */\n    Transport.prototype.syncSignal = function (signal, ratio) {\n        if (!ratio) {\n            // get the sync ratio\n            var now = this.now();\n            if (signal.getValueAtTime(now) !== 0) {\n                var bpm = this.bpm.getValueAtTime(now);\n                var computedFreq = 1 / (60 / bpm / this.PPQ);\n                ratio = signal.getValueAtTime(now) / computedFreq;\n            }\n            else {\n                ratio = 0;\n            }\n        }\n        var ratioSignal = new Gain(ratio);\n        // @ts-ignore\n        this.bpm.connect(ratioSignal);\n        // @ts-ignore\n        ratioSignal.connect(signal._param);\n        this._syncedSignals.push({\n            initial: signal.value,\n            ratio: ratioSignal,\n            signal: signal,\n        });\n        signal.value = 0;\n        return this;\n    };\n    /**\n     * Unsyncs a previously synced signal from the transport's control.\n     * See Transport.syncSignal.\n     */\n    Transport.prototype.unsyncSignal = function (signal) {\n        for (var i = this._syncedSignals.length - 1; i >= 0; i--) {\n            var syncedSignal = this._syncedSignals[i];\n            if (syncedSignal.signal === signal) {\n                syncedSignal.ratio.dispose();\n                syncedSignal.signal.value = syncedSignal.initial;\n                this._syncedSignals.splice(i, 1);\n            }\n        }\n        return this;\n    };\n    /**\n     * Clean up.\n     */\n    Transport.prototype.dispose = function () {\n        _super.prototype.dispose.call(this);\n        this._clock.dispose();\n        writable(this, \"bpm\");\n        this._timeline.dispose();\n        this._repeatedEvents.dispose();\n        return this;\n    };\n    return Transport;\n}(ToneWithContext));\nexport { Transport };\nEmitter.mixin(Transport);\n//-------------------------------------\n// \tINITIALIZATION\n//-------------------------------------\nonContextInit(function (context) {\n    context.transport = new Transport({ context: context });\n});\nonContextClose(function (context) {\n    context.transport.dispose();\n});\n//# sourceMappingURL=Transport.js.map","import * as tslib_1 from \"tslib\";\nimport { Param } from \"../context/Param\";\nimport { optionsFromArguments } from \"../util/Defaults\";\nimport { readOnly } from \"../util/Interface\";\nimport { ToneAudioNode } from \"./ToneAudioNode\";\n/**\n * Wrapper around Web Audio's native [DelayNode](http://webaudio.github.io/web-audio-api/#the-delaynode-interface).\n * @category Core\n */\nvar Delay = /** @class */ (function (_super) {\n    tslib_1.__extends(Delay, _super);\n    function Delay() {\n        var _this = _super.call(this, optionsFromArguments(Delay.getDefaults(), arguments, [\"delayTime\", \"maxDelay\"])) || this;\n        _this.name = \"Delay\";\n        var options = optionsFromArguments(Delay.getDefaults(), arguments, [\"delayTime\", \"maxDelay\"]);\n        var maxDelayInSeconds = _this.toSeconds(options.maxDelay);\n        _this._maxDelay = Math.max(maxDelayInSeconds, _this.toSeconds(options.delayTime));\n        _this._delayNode = _this.input = _this.output = _this.context.createDelay(maxDelayInSeconds);\n        _this.delayTime = new Param({\n            context: _this.context,\n            param: _this._delayNode.delayTime,\n            units: \"time\",\n            value: options.delayTime,\n            minValue: 0,\n            maxValue: _this.maxDelay,\n        });\n        readOnly(_this, \"delayTime\");\n        return _this;\n    }\n    Delay.getDefaults = function () {\n        return Object.assign(ToneAudioNode.getDefaults(), {\n            delayTime: 0,\n            maxDelay: 1,\n        });\n    };\n    Object.defineProperty(Delay.prototype, \"maxDelay\", {\n        /**\n         * The maximum delay time. This cannot be changed after\n         * the value is passed into the constructor.\n         */\n        get: function () {\n            return this._maxDelay;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Clean up.\n     */\n    Delay.prototype.dispose = function () {\n        _super.prototype.dispose.call(this);\n        this._delayNode.disconnect();\n        this.delayTime.dispose();\n        return this;\n    };\n    return Delay;\n}(ToneAudioNode));\nexport { Delay };\n//# sourceMappingURL=Delay.js.map","import * as tslib_1 from \"tslib\";\nimport { Gain } from \"../../core/context/Gain\";\nimport { ToneAudioNode } from \"../../core/context/ToneAudioNode\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { readOnly } from \"../../core/util/Interface\";\n/**\n * Volume is a simple volume node, useful for creating a volume fader.\n *\n * @example\n * import { Oscillator, Volume } from \"tone\";\n * const vol = new Volume(-12).toDestination();\n * const osc = new Oscillator().connect(vol).start();\n * @category Component\n */\nvar Volume = /** @class */ (function (_super) {\n    tslib_1.__extends(Volume, _super);\n    function Volume() {\n        var _this = _super.call(this, optionsFromArguments(Volume.getDefaults(), arguments, [\"volume\"])) || this;\n        _this.name = \"Volume\";\n        var options = optionsFromArguments(Volume.getDefaults(), arguments, [\"volume\"]);\n        _this.input = _this.output = new Gain({\n            context: _this.context,\n            gain: options.volume,\n            units: \"decibels\",\n        });\n        _this.volume = _this.output.gain;\n        readOnly(_this, \"volume\");\n        _this._unmutedVolume = options.volume;\n        // set the mute initially\n        _this.mute = options.mute;\n        return _this;\n    }\n    Volume.getDefaults = function () {\n        return Object.assign(ToneAudioNode.getDefaults(), {\n            mute: false,\n            volume: 0,\n        });\n    };\n    Object.defineProperty(Volume.prototype, \"mute\", {\n        /**\n         * Mute the output.\n         * @example\n         * import { Oscillator, Volume } from \"tone\";\n         * const vol = new Volume(-12).toDestination();\n         * const osc = new Oscillator().connect(vol).start();\n         * // mute the output\n         * vol.mute = true;\n         */\n        get: function () {\n            return this.volume.value === -Infinity;\n        },\n        set: function (mute) {\n            if (!this.mute && mute) {\n                this._unmutedVolume = this.volume.value;\n                // maybe it should ramp here?\n                this.volume.value = -Infinity;\n            }\n            else if (this.mute && !mute) {\n                this.volume.value = this._unmutedVolume;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * clean up\n     */\n    Volume.prototype.dispose = function () {\n        _super.prototype.dispose.call(this);\n        this.input.dispose();\n        this.volume.dispose();\n        return this;\n    };\n    return Volume;\n}(ToneAudioNode));\nexport { Volume };\n//# sourceMappingURL=Volume.js.map","import * as tslib_1 from \"tslib\";\nimport { Volume } from \"../../component/channel/Volume\";\nimport { optionsFromArguments } from \"../util/Defaults\";\nimport { onContextClose, onContextInit } from \"./ContextInitialization\";\nimport { Gain } from \"./Gain\";\nimport { connectSeries, ToneAudioNode } from \"./ToneAudioNode\";\n/**\n * A single master output which is connected to the\n * AudioDestinationNode (aka your speakers).\n * It provides useful conveniences such as the ability\n * to set the volume and mute the entire application.\n * It also gives you the ability to apply master effects to your application.\n *\n * @example\n * import { Destination, Oscillator } from \"tone\";\n * const oscillator = new Oscillator().start();\n * // the audio will go from the oscillator to the speakers\n * oscillator.connect(Destination);\n * // a convenience for connecting to the master output is also provided:\n * oscillator.toDestination();\n * // these two are equivalent.\n * @category Core\n */\nvar Destination = /** @class */ (function (_super) {\n    tslib_1.__extends(Destination, _super);\n    function Destination() {\n        var _this = _super.call(this, optionsFromArguments(Destination.getDefaults(), arguments)) || this;\n        _this.name = \"Destination\";\n        _this.input = new Volume({ context: _this.context });\n        _this.output = new Gain({ context: _this.context });\n        /**\n         * The volume of the master output.\n         */\n        _this.volume = _this.input.volume;\n        var options = optionsFromArguments(Destination.getDefaults(), arguments);\n        connectSeries(_this.input, _this.output, _this.context.rawContext.destination);\n        _this.mute = options.mute;\n        _this._internalChannels = [_this.input, _this.context.rawContext.destination, _this.output];\n        return _this;\n    }\n    Destination.getDefaults = function () {\n        return Object.assign(ToneAudioNode.getDefaults(), {\n            mute: false,\n            volume: 0,\n        });\n    };\n    Object.defineProperty(Destination.prototype, \"mute\", {\n        /**\n         * Mute the output.\n         * @example\n         * import { Destination, Oscillator } from \"tone\";\n         * const oscillator = new Oscillator().start().toDestination();\n         * // mute the output\n         * Destination.mute = true;\n         */\n        get: function () {\n            return this.input.mute;\n        },\n        set: function (mute) {\n            this.input.mute = mute;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Add a master effects chain. NOTE: this will disconnect any nodes which were previously\n     * chained in the master effects chain.\n     * @param args All arguments will be connected in a row and the Master will be routed through it.\n     * @return  {Destination}  this\n     * @example\n     * import { Compressor, Destination, Filter } from \"tone\";\n     * // some overall compression to keep the levels in check\n     * const masterCompressor = new Compressor({\n     * \tthreshold: -6,\n     * \tratio: 3,\n     * \tattack: 0.5,\n     * \trelease: 0.1\n     * });\n     * // give a little boost to the lows\n     * const lowBump = new Filter(200, \"lowshelf\");\n     * // route everything through the filter and compressor before going to the speakers\n     * Destination.chain(lowBump, masterCompressor);\n     */\n    Destination.prototype.chain = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        this.input.disconnect();\n        args.unshift(this.input);\n        args.push(this.output);\n        connectSeries.apply(void 0, tslib_1.__spread(args));\n        return this;\n    };\n    Object.defineProperty(Destination.prototype, \"maxChannelCount\", {\n        /**\n         * The maximum number of channels the system can output\n         */\n        get: function () {\n            return this.context.rawContext.destination.maxChannelCount;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Clean up\n     */\n    Destination.prototype.dispose = function () {\n        _super.prototype.dispose.call(this);\n        this.volume.dispose();\n        return this;\n    };\n    return Destination;\n}(ToneAudioNode));\nexport { Destination };\n//-------------------------------------\n// \tINITIALIZATION\n//-------------------------------------\nonContextInit(function (context) {\n    context.destination = new Destination({ context: context });\n});\nonContextClose(function (context) {\n    context.destination.dispose();\n});\n//# sourceMappingURL=Destination.js.map","import * as tslib_1 from \"tslib\";\nimport { Tone } from \"../Tone\";\nimport { optionsFromArguments } from \"../util/Defaults\";\nimport { noOp } from \"../util/Interface\";\nimport { isString } from \"../util/TypeCheck\";\nimport { ToneAudioBuffer } from \"./ToneAudioBuffer\";\nimport { assert } from \"../util/Debug\";\n/**\n * A data structure for holding multiple buffers in a Map-like datastructure.\n *\n * @example\n * import { Player, ToneAudioBuffers } from \"tone\";\n * const pianoSamples = new ToneAudioBuffers({\n * \tC1: \"https://tonejs.github.io/examples/audio/casio/C1.mp3\",\n * \tC2: \"https://tonejs.github.io/examples/audio/casio/C2.mp3\",\n * }, () => {\n * \tconst player = new Player().toDestination();\n * \t// play one of the samples when they all load\n * \tplayer.buffer = pianoSamples.get(\"C2\");\n * \tplayer.start();\n * });\n * @example\n * import { ToneAudioBuffers } from \"tone\";\n * // To pass in additional parameters in the second parameter\n * const buffers = new ToneAudioBuffers({\n * \t urls: {\n * \t\t C1: \"C1.mp3\",\n * \t\t C2: \"C2.mp3\",\n * \t },\n * \t onload: () => console.log(\"loaded\"),\n * \t baseUrl: \"https://tonejs.github.io/examples/audio/casio/\"\n * });\n * @category Core\n */\nvar ToneAudioBuffers = /** @class */ (function (_super) {\n    tslib_1.__extends(ToneAudioBuffers, _super);\n    function ToneAudioBuffers() {\n        var _this = _super.call(this) || this;\n        _this.name = \"ToneAudioBuffers\";\n        /**\n         * All of the buffers\n         */\n        _this._buffers = new Map();\n        /**\n         * Keep track of the number of loaded buffers\n         */\n        _this._loadingCount = 0;\n        var options = optionsFromArguments(ToneAudioBuffers.getDefaults(), arguments, [\"urls\", \"onload\", \"baseUrl\"], \"urls\");\n        _this.baseUrl = options.baseUrl;\n        // add each one\n        Object.keys(options.urls).forEach(function (name) {\n            _this._loadingCount++;\n            var url = options.urls[name];\n            _this.add(name, url, _this._bufferLoaded.bind(_this, options.onload), options.onerror);\n        });\n        return _this;\n    }\n    ToneAudioBuffers.getDefaults = function () {\n        return {\n            baseUrl: \"\",\n            onerror: noOp,\n            onload: noOp,\n            urls: {},\n        };\n    };\n    /**\n     * True if the buffers object has a buffer by that name.\n     * @param  name  The key or index of the buffer.\n     */\n    ToneAudioBuffers.prototype.has = function (name) {\n        return this._buffers.has(name.toString());\n    };\n    /**\n     * Get a buffer by name. If an array was loaded,\n     * then use the array index.\n     * @param  name  The key or index of the buffer.\n     */\n    ToneAudioBuffers.prototype.get = function (name) {\n        assert(this.has(name), \"ToneAudioBuffers has no buffer named: \" + name);\n        return this._buffers.get(name.toString());\n    };\n    /**\n     * A buffer was loaded. decrement the counter.\n     */\n    ToneAudioBuffers.prototype._bufferLoaded = function (callback) {\n        this._loadingCount--;\n        if (this._loadingCount === 0 && callback) {\n            callback();\n        }\n    };\n    Object.defineProperty(ToneAudioBuffers.prototype, \"loaded\", {\n        /**\n         * If the buffers are loaded or not\n         */\n        get: function () {\n            return Array.from(this._buffers).every(function (_a) {\n                var _b = tslib_1.__read(_a, 2), _ = _b[0], buffer = _b[1];\n                return buffer.loaded;\n            });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Add a buffer by name and url to the Buffers\n     * @param  name      A unique name to give the buffer\n     * @param  url  Either the url of the bufer, or a buffer which will be added with the given name.\n     * @param  callback  The callback to invoke when the url is loaded.\n     * @param  onerror  Invoked if the buffer can't be loaded\n     */\n    ToneAudioBuffers.prototype.add = function (name, url, callback, onerror) {\n        if (callback === void 0) { callback = noOp; }\n        if (onerror === void 0) { onerror = noOp; }\n        if (isString(url)) {\n            this._buffers.set(name.toString(), new ToneAudioBuffer(this.baseUrl + url, callback, onerror));\n        }\n        else {\n            this._buffers.set(name.toString(), new ToneAudioBuffer(url, callback, onerror));\n        }\n        return this;\n    };\n    ToneAudioBuffers.prototype.dispose = function () {\n        _super.prototype.dispose.call(this);\n        this._buffers.forEach(function (buffer) { return buffer.dispose(); });\n        this._buffers.clear();\n        return this;\n    };\n    return ToneAudioBuffers;\n}(Tone));\nexport { ToneAudioBuffers };\n//# sourceMappingURL=ToneAudioBuffers.js.map","import * as tslib_1 from \"tslib\";\nimport { getContext } from \"../Global\";\nimport { ftom, mtof } from \"./Conversions\";\nimport { FrequencyClass } from \"./Frequency\";\n/**\n * Midi is a primitive type for encoding Time values.\n * Midi can be constructed with or without the `new` keyword. Midi can be passed\n * into the parameter of any method which takes time as an argument.\n * @category Unit\n */\nvar MidiClass = /** @class */ (function (_super) {\n    tslib_1.__extends(MidiClass, _super);\n    function MidiClass() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.name = \"MidiClass\";\n        _this.defaultUnits = \"midi\";\n        return _this;\n    }\n    /**\n     * Returns the value of a frequency in the current units\n     */\n    MidiClass.prototype._frequencyToUnits = function (freq) {\n        return ftom(_super.prototype._frequencyToUnits.call(this, freq));\n    };\n    /**\n     * Returns the value of a tick in the current time units\n     */\n    MidiClass.prototype._ticksToUnits = function (ticks) {\n        return ftom(_super.prototype._ticksToUnits.call(this, ticks));\n    };\n    /**\n     * Return the value of the beats in the current units\n     */\n    MidiClass.prototype._beatsToUnits = function (beats) {\n        return ftom(_super.prototype._beatsToUnits.call(this, beats));\n    };\n    /**\n     * Returns the value of a second in the current units\n     */\n    MidiClass.prototype._secondsToUnits = function (seconds) {\n        return ftom(_super.prototype._secondsToUnits.call(this, seconds));\n    };\n    /**\n     * Return the value of the frequency as a MIDI note\n     * @example\n     * import { Midi } from \"tone\";\n     * Midi(60).toMidi(); // 60\n     */\n    MidiClass.prototype.toMidi = function () {\n        return this.valueOf();\n    };\n    /**\n     * Return the value of the frequency as a MIDI note\n     * @example\n     * import { Midi } from \"tone\";\n     * Midi(60).toFrequency(); // 261.6255653005986\n     */\n    MidiClass.prototype.toFrequency = function () {\n        return mtof(this.toMidi());\n    };\n    /**\n     * Transposes the frequency by the given number of semitones.\n     * @return A new transposed MidiClass\n     * @example\n     * import { Midi } from \"tone\";\n     * Midi(\"A4\").transpose(3); // \"C5\"\n     */\n    MidiClass.prototype.transpose = function (interval) {\n        return new MidiClass(this.context, this.toMidi() + interval);\n    };\n    return MidiClass;\n}(FrequencyClass));\nexport { MidiClass };\n/**\n * Convert a value into a FrequencyClass object.\n * @category Unit\n */\nexport function Midi(value, units) {\n    return new MidiClass(getContext(), value, units);\n}\n//# sourceMappingURL=Midi.js.map","import * as tslib_1 from \"tslib\";\nimport { ToneWithContext } from \"../context/ToneWithContext\";\nimport { Timeline } from \"./Timeline\";\nimport { onContextClose, onContextInit } from \"../context/ContextInitialization\";\n/**\n * Draw is useful for synchronizing visuals and audio events.\n * Callbacks from Tone.Transport or any of the Tone.Event classes\n * always happen _before_ the scheduled time and are not synchronized\n * to the animation frame so they are not good for triggering tightly\n * synchronized visuals and sound. Draw makes it easy to schedule\n * callbacks using the AudioContext time and uses requestAnimationFrame.\n * @example\n * import { Draw, Transport } from \"tone\";\n * Transport.schedule((time) => {\n *  \t// use the time argument to schedule a callback with Draw\n *  \tDraw.schedule(() => {\n *  \t\t// do drawing or DOM manipulation here\n *  \t}, time);\n * }, \"+0.5\");\n * @category Core\n */\nvar Draw = /** @class */ (function (_super) {\n    tslib_1.__extends(Draw, _super);\n    function Draw() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.name = \"Draw\";\n        /**\n         * The duration after which events are not invoked.\n         */\n        _this.expiration = 0.25;\n        /**\n         * The amount of time before the scheduled time\n         * that the callback can be invoked. Default is\n         * half the time of an animation frame (0.008 seconds).\n         */\n        _this.anticipation = 0.008;\n        /**\n         * All of the events.\n         */\n        _this._events = new Timeline();\n        /**\n         * The draw loop\n         */\n        _this._boundDrawLoop = _this._drawLoop.bind(_this);\n        /**\n         * The animation frame id\n         */\n        _this._animationFrame = -1;\n        return _this;\n    }\n    /**\n     * Schedule a function at the given time to be invoked\n     * on the nearest animation frame.\n     * @param  callback  Callback is invoked at the given time.\n     * @param  time      The time relative to the AudioContext time to invoke the callback.\n     */\n    Draw.prototype.schedule = function (callback, time) {\n        this._events.add({\n            callback: callback,\n            time: this.toSeconds(time),\n        });\n        // start the draw loop on the first event\n        if (this._events.length === 1) {\n            this._animationFrame = requestAnimationFrame(this._boundDrawLoop);\n        }\n        return this;\n    };\n    /**\n     * Cancel events scheduled after the given time\n     * @param  after  Time after which scheduled events will be removed from the scheduling timeline.\n     */\n    Draw.prototype.cancel = function (after) {\n        this._events.cancel(this.toSeconds(after));\n        return this;\n    };\n    /**\n     * The draw loop\n     */\n    Draw.prototype._drawLoop = function () {\n        var now = this.context.currentTime;\n        while (this._events.length && this._events.peek().time - this.anticipation <= now) {\n            var event_1 = this._events.shift();\n            if (event_1 && now - event_1.time <= this.expiration) {\n                event_1.callback();\n            }\n        }\n        if (this._events.length > 0) {\n            this._animationFrame = requestAnimationFrame(this._boundDrawLoop);\n        }\n    };\n    Draw.prototype.dispose = function () {\n        _super.prototype.dispose.call(this);\n        this._events.dispose();\n        cancelAnimationFrame(this._animationFrame);\n        return this;\n    };\n    return Draw;\n}(ToneWithContext));\nexport { Draw };\n//-------------------------------------\n// \tINITIALIZATION\n//-------------------------------------\nonContextInit(function (context) {\n    context.draw = new Draw({ context: context });\n});\nonContextClose(function (context) {\n    context.draw.dispose();\n});\n//# sourceMappingURL=Draw.js.map","import * as tslib_1 from \"tslib\";\nimport { Volume } from \"../component/channel/Volume\";\nimport \"../core/context/Destination\";\nimport \"../core/clock/Transport\";\nimport { ToneAudioNode } from \"../core/context/ToneAudioNode\";\nimport { defaultArg } from \"../core/util/Defaults\";\nimport { noOp, readOnly } from \"../core/util/Interface\";\nimport { StateTimeline } from \"../core/util/StateTimeline\";\nimport { isDefined, isUndef } from \"../core/util/TypeCheck\";\nimport { assert, assertContextRunning } from \"../core/util/Debug\";\nimport { GT } from \"../core/util/Math\";\n/**\n * Base class for sources.\n * start/stop of this.context.transport.\n *\n * ```\n * // Multiple state change events can be chained together,\n * // but must be set in the correct order and with ascending times\n * // OK\n * state.start().stop(\"+0.2\");\n * // OK\n * state.start().stop(\"+0.2\").start(\"+0.4\").stop(\"+0.7\")\n * // BAD\n * state.stop(\"+0.2\").start();\n * // BAD\n * state.start(\"+0.3\").stop(\"+0.2\");\n * ```\n */\nvar Source = /** @class */ (function (_super) {\n    tslib_1.__extends(Source, _super);\n    function Source(options) {\n        var _this = _super.call(this, options) || this;\n        /**\n         * Sources have no inputs\n         */\n        _this.input = undefined;\n        /**\n         * Keep track of the scheduled state.\n         */\n        _this._state = new StateTimeline(\"stopped\");\n        /**\n         * The synced `start` callback function from the transport\n         */\n        _this._synced = false;\n        /**\n         * Keep track of all of the scheduled event ids\n         */\n        _this._scheduled = [];\n        /**\n         * Placeholder functions for syncing/unsyncing to transport\n         */\n        _this._syncedStart = noOp;\n        _this._syncedStop = noOp;\n        _this._state.memory = 100;\n        _this._state.increasing = true;\n        _this._volume = _this.output = new Volume({\n            context: _this.context,\n            mute: options.mute,\n            volume: options.volume,\n        });\n        _this.volume = _this._volume.volume;\n        readOnly(_this, \"volume\");\n        _this.onstop = options.onstop;\n        return _this;\n    }\n    Source.getDefaults = function () {\n        return Object.assign(ToneAudioNode.getDefaults(), {\n            mute: false,\n            onstop: noOp,\n            volume: 0,\n        });\n    };\n    Object.defineProperty(Source.prototype, \"state\", {\n        /**\n         * Returns the playback state of the source, either \"started\" or \"stopped\".\n         * @example\n         * import { Player } from \"tone\";\n         * const player = new Player(\"https://tonejs.github.io/examples/audio/FWDL.mp3\", () => {\n         * \tplayer.start();\n         * \tconsole.log(player.state);\n         * }).toDestination();\n         */\n        get: function () {\n            if (this._synced) {\n                if (this.context.transport.state === \"started\") {\n                    return this._state.getValueAtTime(this.context.transport.seconds);\n                }\n                else {\n                    return \"stopped\";\n                }\n            }\n            else {\n                return this._state.getValueAtTime(this.now());\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Source.prototype, \"mute\", {\n        /**\n         * Mute the output.\n         * @example\n         * import { Oscillator } from \"tone\";\n         * const osc = new Oscillator().toDestination().start();\n         * // mute the output\n         * osc.mute = true;\n         */\n        get: function () {\n            return this._volume.mute;\n        },\n        set: function (mute) {\n            this._volume.mute = mute;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Ensure that the scheduled time is not before the current time.\n     * Should only be used when scheduled unsynced.\n     */\n    Source.prototype._clampToCurrentTime = function (time) {\n        if (this._synced) {\n            return time;\n        }\n        else {\n            return Math.max(time, this.context.currentTime);\n        }\n    };\n    /**\n     * Start the source at the specified time. If no time is given,\n     * start the source now.\n     * @param  time When the source should be started.\n     * @example\n     * import { Oscillator } from \"tone\";\n     * const source = new Oscillator().toDestination();\n     * source.start(\"+0.5\"); // starts the source 0.5 seconds from now\n     */\n    Source.prototype.start = function (time, offset, duration) {\n        var _this = this;\n        var computedTime = isUndef(time) && this._synced ? this.context.transport.seconds : this.toSeconds(time);\n        computedTime = this._clampToCurrentTime(computedTime);\n        // if it's started, stop it and restart it\n        if (this._state.getValueAtTime(computedTime) === \"started\") {\n            // time should be strictly greater than the previous start time\n            assert(GT(computedTime, this._state.get(computedTime).time), \"Start time must be strictly greater than previous start time\");\n            this._state.cancel(computedTime);\n            this._state.setStateAtTime(\"started\", computedTime);\n            this.log(\"restart\", computedTime);\n            this.restart(computedTime, offset, duration);\n        }\n        else {\n            this.log(\"start\", computedTime);\n            this._state.setStateAtTime(\"started\", computedTime);\n            if (this._synced) {\n                // add the offset time to the event\n                var event_1 = this._state.get(computedTime);\n                if (event_1) {\n                    event_1.offset = this.toSeconds(defaultArg(offset, 0));\n                    event_1.duration = duration ? this.toSeconds(duration) : undefined;\n                }\n                var sched = this.context.transport.schedule(function (t) {\n                    _this._start(t, offset, duration);\n                }, computedTime);\n                this._scheduled.push(sched);\n                // if it's already started\n                if (this.context.transport.state === \"started\") {\n                    this._syncedStart(this.now(), this.context.transport.seconds);\n                }\n            }\n            else {\n                this._start(computedTime, offset, duration);\n            }\n            assertContextRunning(this.context);\n        }\n        return this;\n    };\n    /**\n     * Stop the source at the specified time. If no time is given,\n     * stop the source now.\n     * @param  time When the source should be stopped.\n     * @example\n     * import { Oscillator } from \"tone\";\n     * const source = new Oscillator().toDestination();\n     * source.start();\n     * source.stop(\"+0.5\"); // stops the source 0.5 seconds from now\n     */\n    Source.prototype.stop = function (time) {\n        var computedTime = isUndef(time) && this._synced ? this.context.transport.seconds : this.toSeconds(time);\n        computedTime = this._clampToCurrentTime(computedTime);\n        if (this._state.getValueAtTime(computedTime) === \"started\" || isDefined(this._state.getNextState(\"started\", computedTime))) {\n            this.log(\"stop\", computedTime);\n            if (!this._synced) {\n                this._stop(computedTime);\n            }\n            else {\n                var sched = this.context.transport.schedule(this._stop.bind(this), computedTime);\n                this._scheduled.push(sched);\n            }\n            this._state.cancel(computedTime);\n            this._state.setStateAtTime(\"stopped\", computedTime);\n        }\n        return this;\n    };\n    /**\n     * Restart the source.\n     */\n    Source.prototype.restart = function (time, offset, duration) {\n        time = this.toSeconds(time);\n        if (this._state.getValueAtTime(time) === \"started\") {\n            this._state.cancel(time);\n            this._restart(time, offset, duration);\n        }\n        return this;\n    };\n    /**\n     * Sync the source to the Transport so that all subsequent\n     * calls to `start` and `stop` are synced to the TransportTime\n     * instead of the AudioContext time.\n     *\n     * @example\n     * import { Oscillator, Transport } from \"tone\";\n     * const osc = new Oscillator().toDestination();\n     * // sync the source so that it plays between 0 and 0.3 on the Transport's timeline\n     * osc.sync().start(0).stop(0.3);\n     * // start the transport.\n     * Transport.start();\n     * // set it to loop once a second\n     * Transport.loop = true;\n     * Transport.loopEnd = 1;\n     */\n    Source.prototype.sync = function () {\n        var _this = this;\n        if (!this._synced) {\n            this._synced = true;\n            this._syncedStart = function (time, offset) {\n                if (offset > 0) {\n                    // get the playback state at that time\n                    var stateEvent = _this._state.get(offset);\n                    // listen for start events which may occur in the middle of the sync'ed time\n                    if (stateEvent && stateEvent.state === \"started\" && stateEvent.time !== offset) {\n                        // get the offset\n                        var startOffset = offset - _this.toSeconds(stateEvent.time);\n                        var duration = void 0;\n                        if (stateEvent.duration) {\n                            duration = _this.toSeconds(stateEvent.duration) - startOffset;\n                        }\n                        _this._start(time, _this.toSeconds(stateEvent.offset) + startOffset, duration);\n                    }\n                }\n            };\n            this._syncedStop = function (time) {\n                var seconds = _this.context.transport.getSecondsAtTime(Math.max(time - _this.sampleTime, 0));\n                if (_this._state.getValueAtTime(seconds) === \"started\") {\n                    _this._stop(time);\n                }\n            };\n            this.context.transport.on(\"start\", this._syncedStart);\n            this.context.transport.on(\"loopStart\", this._syncedStart);\n            this.context.transport.on(\"stop\", this._syncedStop);\n            this.context.transport.on(\"pause\", this._syncedStop);\n            this.context.transport.on(\"loopEnd\", this._syncedStop);\n        }\n        return this;\n    };\n    /**\n     * Unsync the source to the Transport. See Source.sync\n     */\n    Source.prototype.unsync = function () {\n        var _this = this;\n        if (this._synced) {\n            this.context.transport.off(\"stop\", this._syncedStop);\n            this.context.transport.off(\"pause\", this._syncedStop);\n            this.context.transport.off(\"loopEnd\", this._syncedStop);\n            this.context.transport.off(\"start\", this._syncedStart);\n            this.context.transport.off(\"loopStart\", this._syncedStart);\n        }\n        this._synced = false;\n        // clear all of the scheduled ids\n        this._scheduled.forEach(function (id) { return _this.context.transport.clear(id); });\n        this._scheduled = [];\n        this._state.cancel(0);\n        return this;\n    };\n    /**\n     * Clean up.\n     */\n    Source.prototype.dispose = function () {\n        _super.prototype.dispose.call(this);\n        this.onstop = noOp;\n        this.unsync();\n        this._volume.dispose();\n        this._state.dispose();\n        return this;\n    };\n    return Source;\n}(ToneAudioNode));\nexport { Source };\n//# sourceMappingURL=Source.js.map","import * as tslib_1 from \"tslib\";\nimport { connect } from \"../../core/context/ToneAudioNode\";\nimport { Param } from \"../../core/context/Param\";\nimport { ToneAudioBuffer } from \"../../core/context/ToneAudioBuffer\";\nimport { defaultArg, optionsFromArguments } from \"../../core/util/Defaults\";\nimport { noOp } from \"../../core/util/Interface\";\nimport { isDefined } from \"../../core/util/TypeCheck\";\nimport { assert } from \"../../core/util/Debug\";\nimport { OneShotSource } from \"../OneShotSource\";\nimport { EQ, GTE, LT } from \"../../core/util/Math\";\n/**\n * Wrapper around the native BufferSourceNode.\n * @category Source\n */\nvar ToneBufferSource = /** @class */ (function (_super) {\n    tslib_1.__extends(ToneBufferSource, _super);\n    function ToneBufferSource() {\n        var _this = _super.call(this, optionsFromArguments(ToneBufferSource.getDefaults(), arguments, [\"url\", \"onload\"])) || this;\n        _this.name = \"ToneBufferSource\";\n        /**\n         * The oscillator\n         */\n        _this._source = _this.context.createBufferSource();\n        _this._internalChannels = [_this._source];\n        /**\n         * indicators if the source has started/stopped\n         */\n        _this._sourceStarted = false;\n        _this._sourceStopped = false;\n        var options = optionsFromArguments(ToneBufferSource.getDefaults(), arguments, [\"url\", \"onload\"]);\n        connect(_this._source, _this._gainNode);\n        _this._source.onended = function () { return _this._stopSource(); };\n        /**\n         * The playbackRate of the buffer\n         */\n        _this.playbackRate = new Param({\n            context: _this.context,\n            param: _this._source.playbackRate,\n            units: \"positive\",\n            value: options.playbackRate,\n        });\n        // set some values initially\n        _this.loop = options.loop;\n        _this.loopStart = options.loopStart;\n        _this.loopEnd = options.loopEnd;\n        _this._buffer = new ToneAudioBuffer(options.url, options.onload, options.onerror);\n        _this._internalChannels.push(_this._source);\n        return _this;\n    }\n    ToneBufferSource.getDefaults = function () {\n        return Object.assign(OneShotSource.getDefaults(), {\n            url: new ToneAudioBuffer(),\n            loop: false,\n            loopEnd: 0,\n            loopStart: 0,\n            onload: noOp,\n            onerror: noOp,\n            playbackRate: 1,\n        });\n    };\n    Object.defineProperty(ToneBufferSource.prototype, \"fadeIn\", {\n        /**\n         * The fadeIn time of the amplitude envelope.\n         */\n        get: function () {\n            return this._fadeIn;\n        },\n        set: function (t) {\n            this._fadeIn = t;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ToneBufferSource.prototype, \"fadeOut\", {\n        /**\n         * The fadeOut time of the amplitude envelope.\n         */\n        get: function () {\n            return this._fadeOut;\n        },\n        set: function (t) {\n            this._fadeOut = t;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ToneBufferSource.prototype, \"curve\", {\n        /**\n         * The curve applied to the fades, either \"linear\" or \"exponential\"\n         */\n        get: function () {\n            return this._curve;\n        },\n        set: function (t) {\n            this._curve = t;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Start the buffer\n     * @param  time When the player should start.\n     * @param  offset The offset from the beginning of the sample to start at.\n     * @param  duration How long the sample should play. If no duration is given, it will default to the full length of the sample (minus any offset)\n     * @param  gain  The gain to play the buffer back at.\n     */\n    ToneBufferSource.prototype.start = function (time, offset, duration, gain) {\n        if (gain === void 0) { gain = 1; }\n        assert(this.buffer.loaded, \"buffer is either not set or not loaded\");\n        var computedTime = this.toSeconds(time);\n        // apply the gain envelope\n        this._startGain(computedTime, gain);\n        // if it's a loop the default offset is the loopstart point\n        if (this.loop) {\n            offset = defaultArg(offset, this.loopStart);\n        }\n        else {\n            // otherwise the default offset is 0\n            offset = defaultArg(offset, 0);\n        }\n        // make sure the offset is not less than 0\n        var computedOffset = Math.max(this.toSeconds(offset), 0);\n        // start the buffer source\n        if (this.loop) {\n            // modify the offset if it's greater than the loop time\n            var loopEnd = this.toSeconds(this.loopEnd) || this.buffer.duration;\n            var loopStart = this.toSeconds(this.loopStart);\n            var loopDuration = loopEnd - loopStart;\n            // move the offset back\n            if (GTE(computedOffset, loopEnd)) {\n                computedOffset = ((computedOffset - loopStart) % loopDuration) + loopStart;\n            }\n            // when the offset is very close to the duration, set it to 0\n            if (EQ(computedOffset, this.buffer.duration)) {\n                computedOffset = 0;\n            }\n        }\n        // this.buffer.loaded would have return false if the AudioBuffer was undefined\n        this._source.buffer = this.buffer.get();\n        this._source.loopEnd = this.toSeconds(this.loopEnd) || this.buffer.duration;\n        if (LT(computedOffset, this.buffer.duration)) {\n            this._sourceStarted = true;\n            this._source.start(computedTime, computedOffset);\n        }\n        // if a duration is given, schedule a stop\n        if (isDefined(duration)) {\n            var computedDur = this.toSeconds(duration);\n            // make sure it's never negative\n            computedDur = Math.max(computedDur, 0);\n            this.stop(computedTime + computedDur);\n        }\n        return this;\n    };\n    ToneBufferSource.prototype._stopSource = function (time) {\n        if (!this._sourceStopped && this._sourceStarted) {\n            this._sourceStopped = true;\n            this._source.stop(this.toSeconds(time));\n            this._onended();\n        }\n    };\n    Object.defineProperty(ToneBufferSource.prototype, \"loopStart\", {\n        /**\n         * If loop is true, the loop will start at this position.\n         */\n        get: function () {\n            return this._source.loopStart;\n        },\n        set: function (loopStart) {\n            this._source.loopStart = this.toSeconds(loopStart);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ToneBufferSource.prototype, \"loopEnd\", {\n        /**\n         * If loop is true, the loop will end at this position.\n         */\n        get: function () {\n            return this._source.loopEnd;\n        },\n        set: function (loopEnd) {\n            this._source.loopEnd = this.toSeconds(loopEnd);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ToneBufferSource.prototype, \"buffer\", {\n        /**\n         * The audio buffer belonging to the player.\n         */\n        get: function () {\n            return this._buffer;\n        },\n        set: function (buffer) {\n            this._buffer.set(buffer);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ToneBufferSource.prototype, \"loop\", {\n        /**\n         * If the buffer should loop once it's over.\n         */\n        get: function () {\n            return this._source.loop;\n        },\n        set: function (loop) {\n            this._source.loop = loop;\n            if (this._sourceStarted) {\n                this.cancelStop();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Clean up.\n     */\n    ToneBufferSource.prototype.dispose = function () {\n        _super.prototype.dispose.call(this);\n        this._source.onended = null;\n        this._source.disconnect();\n        this._buffer.dispose();\n        this.playbackRate.dispose();\n        return this;\n    };\n    return ToneBufferSource;\n}(OneShotSource));\nexport { ToneBufferSource };\n//# sourceMappingURL=ToneBufferSource.js.map","import * as tslib_1 from \"tslib\";\nimport { ToneAudioBuffer } from \"../core/context/ToneAudioBuffer\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { assert } from \"../core/util/Debug\";\nimport { Source } from \"../source/Source\";\nimport { ToneBufferSource } from \"./buffer/ToneBufferSource\";\n/**\n * Noise is a noise generator. It uses looped noise buffers to save on performance.\n * Noise supports the noise types: \"pink\", \"white\", and \"brown\". Read more about\n * colors of noise on [Wikipedia](https://en.wikipedia.org/wiki/Colors_of_noise).\n *\n * @example\n * import { AutoFilter, Noise } from \"tone\";\n * // initialize the noise and start\n * const noise = new Noise(\"pink\").start();\n * // make an autofilter to shape the noise\n * const autoFilter = new AutoFilter({\n * \tfrequency: \"8n\",\n * \tbaseFrequency: 200,\n * \toctaves: 8\n * }).toDestination().start();\n * // connect the noise\n * noise.connect(autoFilter);\n * // start the autofilter LFO\n * autoFilter.start();\n * @category Source\n */\nvar Noise = /** @class */ (function (_super) {\n    tslib_1.__extends(Noise, _super);\n    function Noise() {\n        var _this = _super.call(this, optionsFromArguments(Noise.getDefaults(), arguments, [\"type\"])) || this;\n        _this.name = \"Noise\";\n        /**\n         * Private reference to the source\n         */\n        _this._source = null;\n        var options = optionsFromArguments(Noise.getDefaults(), arguments, [\"type\"]);\n        _this._playbackRate = options.playbackRate;\n        _this.type = options.type;\n        _this._fadeIn = options.fadeIn;\n        _this._fadeOut = options.fadeOut;\n        return _this;\n    }\n    Noise.getDefaults = function () {\n        return Object.assign(Source.getDefaults(), {\n            fadeIn: 0,\n            fadeOut: 0,\n            playbackRate: 1,\n            type: \"white\",\n        });\n    };\n    Object.defineProperty(Noise.prototype, \"type\", {\n        /**\n         * The type of the noise. Can be \"white\", \"brown\", or \"pink\".\n         * @example\n         * import { Noise } from \"tone\";\n         * const noise = new Noise().toDestination().start();\n         * noise.type = \"brown\";\n         */\n        get: function () {\n            return this._type;\n        },\n        set: function (type) {\n            assert(type in _noiseBuffers, \"Noise: invalid type: \" + type);\n            if (this._type !== type) {\n                this._type = type;\n                // if it's playing, stop and restart it\n                if (this.state === \"started\") {\n                    var now = this.now();\n                    this._stop(now);\n                    this._start(now);\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Noise.prototype, \"playbackRate\", {\n        /**\n         * The playback rate of the noise. Affects\n         * the \"frequency\" of the noise.\n         */\n        get: function () {\n            return this._playbackRate;\n        },\n        set: function (rate) {\n            this._playbackRate = rate;\n            if (this._source) {\n                this._source.playbackRate.value = rate;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * internal start method\n     */\n    Noise.prototype._start = function (time) {\n        var _this = this;\n        var buffer = _noiseBuffers[this._type];\n        this._source = new ToneBufferSource({\n            url: buffer,\n            context: this.context,\n            fadeIn: this._fadeIn,\n            fadeOut: this._fadeOut,\n            loop: true,\n            onended: function () { return _this.onstop(_this); },\n            playbackRate: this._playbackRate,\n        }).connect(this.output);\n        this._source.start(this.toSeconds(time), Math.random() * (buffer.duration - 0.001));\n    };\n    /**\n     * internal stop method\n     */\n    Noise.prototype._stop = function (time) {\n        if (this._source) {\n            this._source.stop(this.toSeconds(time));\n            this._source = null;\n        }\n    };\n    Object.defineProperty(Noise.prototype, \"fadeIn\", {\n        /**\n         * The fadeIn time of the amplitude envelope.\n         */\n        get: function () {\n            return this._fadeIn;\n        },\n        set: function (time) {\n            this._fadeIn = time;\n            if (this._source) {\n                this._source.fadeIn = this._fadeIn;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Noise.prototype, \"fadeOut\", {\n        /**\n         * The fadeOut time of the amplitude envelope.\n         */\n        get: function () {\n            return this._fadeOut;\n        },\n        set: function (time) {\n            this._fadeOut = time;\n            if (this._source) {\n                this._source.fadeOut = this._fadeOut;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Noise.prototype._restart = function (time) {\n        // TODO could be optimized by cancelling the buffer source 'stop'\n        this._stop(time);\n        this._start(time);\n    };\n    /**\n     * Clean up.\n     */\n    Noise.prototype.dispose = function () {\n        _super.prototype.dispose.call(this);\n        if (this._source) {\n            this._source.disconnect();\n        }\n        return this;\n    };\n    return Noise;\n}(Source));\nexport { Noise };\n//--------------------\n// THE NOISE BUFFERS\n//--------------------\n// Noise buffer stats\nvar BUFFER_LENGTH = 44100 * 5;\nvar NUM_CHANNELS = 2;\n/**\n * Cache the noise buffers\n */\nvar _noiseCache = {\n    brown: null,\n    pink: null,\n    white: null,\n};\n/**\n * The noise arrays. Generated on initialization.\n * borrowed heavily from https://github.com/zacharydenton/noise.js\n * (c) 2013 Zach Denton (MIT)\n */\nvar _noiseBuffers = {\n    get brown() {\n        if (!_noiseCache.brown) {\n            var buffer = [];\n            for (var channelNum = 0; channelNum < NUM_CHANNELS; channelNum++) {\n                var channel = new Float32Array(BUFFER_LENGTH);\n                buffer[channelNum] = channel;\n                var lastOut = 0.0;\n                for (var i = 0; i < BUFFER_LENGTH; i++) {\n                    var white = Math.random() * 2 - 1;\n                    channel[i] = (lastOut + (0.02 * white)) / 1.02;\n                    lastOut = channel[i];\n                    channel[i] *= 3.5; // (roughly) compensate for gain\n                }\n            }\n            _noiseCache.brown = new ToneAudioBuffer().fromArray(buffer);\n        }\n        return _noiseCache.brown;\n    },\n    get pink() {\n        if (!_noiseCache.pink) {\n            var buffer = [];\n            for (var channelNum = 0; channelNum < NUM_CHANNELS; channelNum++) {\n                var channel = new Float32Array(BUFFER_LENGTH);\n                buffer[channelNum] = channel;\n                var b0 = void 0, b1 = void 0, b2 = void 0, b3 = void 0, b4 = void 0, b5 = void 0, b6 = void 0;\n                b0 = b1 = b2 = b3 = b4 = b5 = b6 = 0.0;\n                for (var i = 0; i < BUFFER_LENGTH; i++) {\n                    var white = Math.random() * 2 - 1;\n                    b0 = 0.99886 * b0 + white * 0.0555179;\n                    b1 = 0.99332 * b1 + white * 0.0750759;\n                    b2 = 0.96900 * b2 + white * 0.1538520;\n                    b3 = 0.86650 * b3 + white * 0.3104856;\n                    b4 = 0.55000 * b4 + white * 0.5329522;\n                    b5 = -0.7616 * b5 - white * 0.0168980;\n                    channel[i] = b0 + b1 + b2 + b3 + b4 + b5 + b6 + white * 0.5362;\n                    channel[i] *= 0.11; // (roughly) compensate for gain\n                    b6 = white * 0.115926;\n                }\n            }\n            _noiseCache.pink = new ToneAudioBuffer().fromArray(buffer);\n        }\n        return _noiseCache.pink;\n    },\n    get white() {\n        if (!_noiseCache.white) {\n            var buffer = [];\n            for (var channelNum = 0; channelNum < NUM_CHANNELS; channelNum++) {\n                var channel = new Float32Array(BUFFER_LENGTH);\n                buffer[channelNum] = channel;\n                for (var i = 0; i < BUFFER_LENGTH; i++) {\n                    channel[i] = Math.random() * 2 - 1;\n                }\n            }\n            _noiseCache.white = new ToneAudioBuffer().fromArray(buffer);\n        }\n        return _noiseCache.white;\n    },\n};\n//# sourceMappingURL=Noise.js.map","import * as tslib_1 from \"tslib\";\nimport { connect, ToneAudioNode } from \"../core/context/ToneAudioNode\";\nimport { Volume } from \"../component/channel/Volume\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { assert } from \"../core/util/Debug\";\nimport { readOnly } from \"../core/util/Interface\";\nimport { isDefined, isNumber } from \"../core/util/TypeCheck\";\n/**\n * UserMedia uses MediaDevices.getUserMedia to open up and external microphone or audio input.\n * Check [MediaDevices API Support](https://developer.mozilla.org/en-US/docs/Web/API/MediaDevices/getUserMedia)\n * to see which browsers are supported. Access to an external input\n * is limited to secure (HTTPS) connections.\n * @example\n * import { UserMedia } from \"tone\";\n * const mic = new UserMedia();\n * mic.open().then(() => {\n * \t// promise resolves when input is available\n * });\n * @category Source\n */\nvar UserMedia = /** @class */ (function (_super) {\n    tslib_1.__extends(UserMedia, _super);\n    function UserMedia() {\n        var _this = _super.call(this, optionsFromArguments(UserMedia.getDefaults(), arguments, [\"volume\"])) || this;\n        _this.name = \"UserMedia\";\n        var options = optionsFromArguments(UserMedia.getDefaults(), arguments, [\"volume\"]);\n        _this._volume = _this.output = new Volume({\n            context: _this.context,\n            volume: options.volume,\n        });\n        _this.volume = _this._volume.volume;\n        readOnly(_this, \"volume\");\n        _this.mute = options.mute;\n        return _this;\n    }\n    UserMedia.getDefaults = function () {\n        return Object.assign(ToneAudioNode.getDefaults(), {\n            mute: false,\n            volume: 0\n        });\n    };\n    /**\n     * Open the media stream. If a string is passed in, it is assumed\n     * to be the label or id of the stream, if a number is passed in,\n     * it is the input number of the stream.\n     * @param  labelOrId The label or id of the audio input media device.\n     *                   With no argument, the default stream is opened.\n     * @return The promise is resolved when the stream is open.\n     */\n    UserMedia.prototype.open = function (labelOrId) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var devices, constraints, stream, mediaStreamNode;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        assert(UserMedia.supported, \"UserMedia is not supported\");\n                        // close the previous stream\n                        if (this.state === \"started\") {\n                            this.close();\n                        }\n                        return [4 /*yield*/, UserMedia.enumerateDevices()];\n                    case 1:\n                        devices = _a.sent();\n                        if (isNumber(labelOrId)) {\n                            this._device = devices[labelOrId];\n                        }\n                        else {\n                            this._device = devices.find(function (device) {\n                                return device.label === labelOrId || device.deviceId === labelOrId;\n                            });\n                            // didn't find a matching device\n                            if (!this._device && devices.length > 0) {\n                                this._device = devices[0];\n                            }\n                            assert(isDefined(this._device), \"No matching device \" + labelOrId);\n                        }\n                        constraints = {\n                            audio: {\n                                echoCancellation: false,\n                                sampleRate: this.context.sampleRate,\n                                noiseSuppression: false,\n                                mozNoiseSuppression: false,\n                            }\n                        };\n                        if (this._device) {\n                            // @ts-ignore\n                            constraints.audio.deviceId = this._device.deviceId;\n                        }\n                        return [4 /*yield*/, navigator.mediaDevices.getUserMedia(constraints)];\n                    case 2:\n                        stream = _a.sent();\n                        // start a new source only if the previous one is closed\n                        if (!this._stream) {\n                            this._stream = stream;\n                            mediaStreamNode = this.context.createMediaStreamSource(stream);\n                            // Connect the MediaStreamSourceNode to a gate gain node\n                            connect(mediaStreamNode, this.output);\n                            this._mediaStream = mediaStreamNode;\n                        }\n                        return [2 /*return*/, this];\n                }\n            });\n        });\n    };\n    /**\n     * Close the media stream\n     */\n    UserMedia.prototype.close = function () {\n        if (this._stream && this._mediaStream) {\n            this._stream.getAudioTracks().forEach(function (track) {\n                track.stop();\n            });\n            this._stream = undefined;\n            // remove the old media stream\n            this._mediaStream.disconnect();\n            this._mediaStream = undefined;\n        }\n        this._device = undefined;\n        return this;\n    };\n    /**\n     * Returns a promise which resolves with the list of audio input devices available.\n     * @return The promise that is resolved with the devices\n     * @example\n     * import { UserMedia } from \"tone\";\n     * UserMedia.enumerateDevices().then((devices) => {\n     * \t// print the device labels\n     * \tconsole.log(devices.map(device => device.label));\n     * });\n     */\n    UserMedia.enumerateDevices = function () {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var allDevices;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, navigator.mediaDevices.enumerateDevices()];\n                    case 1:\n                        allDevices = _a.sent();\n                        return [2 /*return*/, allDevices.filter(function (device) {\n                                return device.kind === \"audioinput\";\n                            })];\n                }\n            });\n        });\n    };\n    Object.defineProperty(UserMedia.prototype, \"state\", {\n        /**\n         * Returns the playback state of the source, \"started\" when the microphone is open\n         * and \"stopped\" when the mic is closed.\n         */\n        get: function () {\n            return this._stream && this._stream.active ? \"started\" : \"stopped\";\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(UserMedia.prototype, \"deviceId\", {\n        /**\n         * Returns an identifier for the represented device that is\n         * persisted across sessions. It is un-guessable by other applications and\n         * unique to the origin of the calling application. It is reset when the\n         * user clears cookies (for Private Browsing, a different identifier is\n         * used that is not persisted across sessions). Returns undefined when the\n         * device is not open.\n         */\n        get: function () {\n            if (this._device) {\n                return this._device.deviceId;\n            }\n            else {\n                return undefined;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(UserMedia.prototype, \"groupId\", {\n        /**\n         * Returns a group identifier. Two devices have the\n         * same group identifier if they belong to the same physical device.\n         * Returns null  when the device is not open.\n         */\n        get: function () {\n            if (this._device) {\n                return this._device.groupId;\n            }\n            else {\n                return undefined;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(UserMedia.prototype, \"label\", {\n        /**\n         * Returns a label describing this device (for example \"Built-in Microphone\").\n         * Returns undefined when the device is not open or label is not available\n         * because of permissions.\n         */\n        get: function () {\n            if (this._device) {\n                return this._device.label;\n            }\n            else {\n                return undefined;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(UserMedia.prototype, \"mute\", {\n        /**\n         * Mute the output.\n         * @example\n         * import { UserMedia } from \"tone\";\n         * const mic = new UserMedia();\n         * mic.open().then(() => {\n         * \t// promise resolves when input is available\n         * });\n         * // mute the output\n         * mic.mute = true;\n         */\n        get: function () {\n            return this._volume.mute;\n        },\n        set: function (mute) {\n            this._volume.mute = mute;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    UserMedia.prototype.dispose = function () {\n        _super.prototype.dispose.call(this);\n        this.close();\n        this._volume.dispose();\n        this.volume.dispose();\n        return this;\n    };\n    Object.defineProperty(UserMedia, \"supported\", {\n        /**\n         * If getUserMedia is supported by the browser.\n         */\n        get: function () {\n            return isDefined(navigator.mediaDevices) &&\n                isDefined(navigator.mediaDevices.getUserMedia);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return UserMedia;\n}(ToneAudioNode));\nexport { UserMedia };\n//# sourceMappingURL=UserMedia.js.map","import * as tslib_1 from \"tslib\";\nimport { OfflineContext } from \"../../core/context/OfflineContext\";\n/**\n * Render a segment of the oscillator to an offline context and return the results as an array\n */\nexport function generateWaveform(instance, length) {\n    return tslib_1.__awaiter(this, void 0, void 0, function () {\n        var duration, context, clone, buffer;\n        return tslib_1.__generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    duration = length / instance.context.sampleRate;\n                    context = new OfflineContext(1, duration, instance.context.sampleRate);\n                    clone = new instance.constructor(Object.assign(instance.get(), {\n                        // should do 2 iterations\n                        frequency: 2 / duration,\n                        // zero out the detune\n                        detune: 0,\n                        context: context\n                    })).toDestination();\n                    clone.start(0);\n                    return [4 /*yield*/, context.render()];\n                case 1:\n                    buffer = _a.sent();\n                    return [2 /*return*/, buffer.getChannelData(0)];\n            }\n        });\n    });\n}\n//# sourceMappingURL=OscillatorInterface.js.map","import * as tslib_1 from \"tslib\";\nimport { connect } from \"../../core/context/ToneAudioNode\";\nimport { Param } from \"../../core/context/Param\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { OneShotSource } from \"../OneShotSource\";\n/**\n * Wrapper around the native fire-and-forget OscillatorNode.\n * Adds the ability to reschedule the stop method.\n * ***[[Oscillator]] is better for most use-cases***\n * @category Source\n */\nvar ToneOscillatorNode = /** @class */ (function (_super) {\n    tslib_1.__extends(ToneOscillatorNode, _super);\n    function ToneOscillatorNode() {\n        var _this = _super.call(this, optionsFromArguments(ToneOscillatorNode.getDefaults(), arguments, [\"frequency\", \"type\"])) || this;\n        _this.name = \"ToneOscillatorNode\";\n        /**\n         * The oscillator\n         */\n        _this._oscillator = _this.context.createOscillator();\n        _this._internalChannels = [_this._oscillator];\n        var options = optionsFromArguments(ToneOscillatorNode.getDefaults(), arguments, [\"frequency\", \"type\"]);\n        connect(_this._oscillator, _this._gainNode);\n        _this.type = options.type;\n        _this.frequency = new Param({\n            context: _this.context,\n            param: _this._oscillator.frequency,\n            units: \"frequency\",\n            value: options.frequency,\n        });\n        _this.detune = new Param({\n            context: _this.context,\n            param: _this._oscillator.detune,\n            units: \"cents\",\n            value: options.detune,\n        });\n        return _this;\n    }\n    ToneOscillatorNode.getDefaults = function () {\n        return Object.assign(OneShotSource.getDefaults(), {\n            detune: 0,\n            frequency: 440,\n            type: \"sine\",\n        });\n    };\n    /**\n     * Start the oscillator node at the given time\n     * @param  time When to start the oscillator\n     */\n    ToneOscillatorNode.prototype.start = function (time) {\n        var computedTime = this.toSeconds(time);\n        this.log(\"start\", computedTime);\n        this._startGain(computedTime);\n        this._oscillator.start(computedTime);\n        return this;\n    };\n    ToneOscillatorNode.prototype._stopSource = function (time) {\n        this._oscillator.stop(time);\n    };\n    /**\n     * Sets an arbitrary custom periodic waveform given a PeriodicWave.\n     * @param  periodicWave PeriodicWave should be created with context.createPeriodicWave\n     */\n    ToneOscillatorNode.prototype.setPeriodicWave = function (periodicWave) {\n        this._oscillator.setPeriodicWave(periodicWave);\n        return this;\n    };\n    Object.defineProperty(ToneOscillatorNode.prototype, \"type\", {\n        /**\n         * The oscillator type. Either 'sine', 'sawtooth', 'square', or 'triangle'\n         */\n        get: function () {\n            return this._oscillator.type;\n        },\n        set: function (type) {\n            this._oscillator.type = type;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Clean up.\n     */\n    ToneOscillatorNode.prototype.dispose = function () {\n        _super.prototype.dispose.call(this);\n        if (this.state === \"started\") {\n            this.stop();\n        }\n        this._oscillator.disconnect();\n        this.frequency.dispose();\n        this.detune.dispose();\n        return this;\n    };\n    return ToneOscillatorNode;\n}(OneShotSource));\nexport { ToneOscillatorNode };\n//# sourceMappingURL=ToneOscillatorNode.js.map","import * as tslib_1 from \"tslib\";\nimport { deepEquals, optionsFromArguments } from \"../../core/util/Defaults\";\nimport { readOnly } from \"../../core/util/Interface\";\nimport { isDefined } from \"../../core/util/TypeCheck\";\nimport { Signal } from \"../../signal/Signal\";\nimport { Source } from \"../Source\";\nimport { generateWaveform } from \"./OscillatorInterface\";\nimport { ToneOscillatorNode } from \"./ToneOscillatorNode\";\nimport { assertRange } from \"../../core/util/Debug\";\nimport { clamp } from \"../../core/util/Math\";\n/**\n * Oscillator supports a number of features including\n * phase rotation, multiple oscillator types (see Oscillator.type),\n * and Transport syncing (see Oscillator.syncFrequency).\n *\n * @example\n * import { Oscillator } from \"tone\";\n * // make and start a 440hz sine tone\n * const osc = new Oscillator(440, \"sine\").toDestination().start();\n * @category Source\n */\nvar Oscillator = /** @class */ (function (_super) {\n    tslib_1.__extends(Oscillator, _super);\n    function Oscillator() {\n        var _this = _super.call(this, optionsFromArguments(Oscillator.getDefaults(), arguments, [\"frequency\", \"type\"])) || this;\n        _this.name = \"Oscillator\";\n        /**\n         * the main oscillator\n         */\n        _this._oscillator = null;\n        var options = optionsFromArguments(Oscillator.getDefaults(), arguments, [\"frequency\", \"type\"]);\n        _this.frequency = new Signal({\n            context: _this.context,\n            units: \"frequency\",\n            value: options.frequency,\n        });\n        readOnly(_this, \"frequency\");\n        _this.detune = new Signal({\n            context: _this.context,\n            units: \"cents\",\n            value: options.detune,\n        });\n        readOnly(_this, \"detune\");\n        _this._partials = options.partials;\n        _this._partialCount = options.partialCount;\n        _this._type = options.type;\n        if (options.partialCount && options.type !== \"custom\") {\n            _this._type = _this.baseType + options.partialCount.toString();\n        }\n        _this.phase = options.phase;\n        return _this;\n    }\n    Oscillator.getDefaults = function () {\n        return Object.assign(Source.getDefaults(), {\n            detune: 0,\n            frequency: 440,\n            partialCount: 0,\n            partials: [],\n            phase: 0,\n            type: \"sine\",\n        });\n    };\n    /**\n     * start the oscillator\n     */\n    Oscillator.prototype._start = function (time) {\n        var _this = this;\n        var computedTime = this.toSeconds(time);\n        // new oscillator with previous values\n        var oscillator = new ToneOscillatorNode({\n            context: this.context,\n            onended: function () { return _this.onstop(_this); },\n        });\n        this._oscillator = oscillator;\n        if (this._wave) {\n            this._oscillator.setPeriodicWave(this._wave);\n        }\n        else {\n            this._oscillator.type = this._type;\n        }\n        // connect the control signal to the oscillator frequency & detune\n        this._oscillator.connect(this.output);\n        this.frequency.connect(this._oscillator.frequency);\n        this.detune.connect(this._oscillator.detune);\n        // start the oscillator\n        this._oscillator.start(computedTime);\n    };\n    /**\n     * stop the oscillator\n     */\n    Oscillator.prototype._stop = function (time) {\n        var computedTime = this.toSeconds(time);\n        if (this._oscillator) {\n            this._oscillator.stop(computedTime);\n        }\n    };\n    /**\n     * Restart the oscillator. Does not stop the oscillator, but instead\n     * just cancels any scheduled 'stop' from being invoked.\n     */\n    Oscillator.prototype._restart = function (time) {\n        var computedTime = this.toSeconds(time);\n        this.log(\"restart\", computedTime);\n        if (this._oscillator) {\n            this._oscillator.cancelStop();\n        }\n        this._state.cancel(computedTime);\n        return this;\n    };\n    /**\n     * Sync the signal to the Transport's bpm. Any changes to the transports bpm,\n     * will also affect the oscillators frequency.\n     * @example\n     * import { Oscillator, Transport } from \"tone\";\n     * const osc = new Oscillator().toDestination().start();\n     * osc.frequency.value = 440;\n     * // the ratio between the bpm and the frequency will be maintained\n     * osc.syncFrequency();\n     * // double the tempo\n     * Transport.bpm.value *= 2;\n     * // the frequency of the oscillator is doubled to 880\n     */\n    Oscillator.prototype.syncFrequency = function () {\n        this.context.transport.syncSignal(this.frequency);\n        return this;\n    };\n    /**\n     * Unsync the oscillator's frequency from the Transport.\n     * See Oscillator.syncFrequency\n     */\n    Oscillator.prototype.unsyncFrequency = function () {\n        this.context.transport.unsyncSignal(this.frequency);\n        return this;\n    };\n    /**\n     * Get a cached periodic wave. Avoids having to recompute\n     * the oscillator values when they have already been computed\n     * with the same values.\n     */\n    Oscillator.prototype._getCachedPeriodicWave = function () {\n        var _this = this;\n        if (this._type === \"custom\") {\n            var oscProps = Oscillator._periodicWaveCache.find(function (description) {\n                return description.phase === _this._phase &&\n                    deepEquals(description.partials, _this._partials);\n            });\n            return oscProps;\n        }\n        else {\n            var oscProps = Oscillator._periodicWaveCache.find(function (description) {\n                return description.type === _this._type &&\n                    description.phase === _this._phase;\n            });\n            this._partialCount = oscProps ? oscProps.partialCount : this._partialCount;\n            return oscProps;\n        }\n    };\n    Object.defineProperty(Oscillator.prototype, \"type\", {\n        get: function () {\n            return this._type;\n        },\n        set: function (type) {\n            this._type = type;\n            var isBasicType = [\"sine\", \"square\", \"sawtooth\", \"triangle\"].indexOf(type) !== -1;\n            if (this._phase === 0 && isBasicType) {\n                this._wave = undefined;\n                this._partialCount = 0;\n                // just go with the basic approach\n                if (this._oscillator !== null) {\n                    // already tested that it's a basic type\n                    this._oscillator.type = type;\n                }\n            }\n            else {\n                // first check if the value is cached\n                var cache = this._getCachedPeriodicWave();\n                if (isDefined(cache)) {\n                    var partials = cache.partials, wave = cache.wave;\n                    this._wave = wave;\n                    this._partials = partials;\n                    if (this._oscillator !== null) {\n                        this._oscillator.setPeriodicWave(this._wave);\n                    }\n                }\n                else {\n                    var _a = tslib_1.__read(this._getRealImaginary(type, this._phase), 2), real = _a[0], imag = _a[1];\n                    var periodicWave = this.context.createPeriodicWave(real, imag);\n                    this._wave = periodicWave;\n                    if (this._oscillator !== null) {\n                        this._oscillator.setPeriodicWave(this._wave);\n                    }\n                    // set the cache\n                    Oscillator._periodicWaveCache.push({\n                        imag: imag,\n                        partialCount: this._partialCount,\n                        partials: this._partials,\n                        phase: this._phase,\n                        real: real,\n                        type: this._type,\n                        wave: this._wave,\n                    });\n                    if (Oscillator._periodicWaveCache.length > 100) {\n                        Oscillator._periodicWaveCache.shift();\n                    }\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Oscillator.prototype, \"baseType\", {\n        get: function () {\n            return this._type.replace(this.partialCount.toString(), \"\");\n        },\n        set: function (baseType) {\n            if (this.partialCount && this._type !== \"custom\" && baseType !== \"custom\") {\n                this.type = baseType + this.partialCount;\n            }\n            else {\n                this.type = baseType;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Oscillator.prototype, \"partialCount\", {\n        get: function () {\n            return this._partialCount;\n        },\n        set: function (p) {\n            assertRange(p, 0);\n            var type = this._type;\n            var partial = /^(sine|triangle|square|sawtooth)(\\d+)$/.exec(this._type);\n            if (partial) {\n                type = partial[1];\n            }\n            if (this._type !== \"custom\") {\n                if (p === 0) {\n                    this.type = type;\n                }\n                else {\n                    this.type = type + p.toString();\n                }\n            }\n            else {\n                // extend or shorten the partials array\n                var fullPartials_1 = new Float32Array(p);\n                // copy over the partials array\n                this._partials.forEach(function (v, i) { return fullPartials_1[i] = v; });\n                this._partials = Array.from(fullPartials_1);\n                this.type = this._type;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Returns the real and imaginary components based\n     * on the oscillator type.\n     * @returns [real: Float32Array, imaginary: Float32Array]\n     */\n    Oscillator.prototype._getRealImaginary = function (type, phase) {\n        var fftSize = 4096;\n        var periodicWaveSize = fftSize / 2;\n        var real = new Float32Array(periodicWaveSize);\n        var imag = new Float32Array(periodicWaveSize);\n        var partialCount = 1;\n        if (type === \"custom\") {\n            partialCount = this._partials.length + 1;\n            this._partialCount = this._partials.length;\n            periodicWaveSize = partialCount;\n            // if the partial count is 0, don't bother doing any computation\n            if (this._partials.length === 0) {\n                return [real, imag];\n            }\n        }\n        else {\n            var partial = /^(sine|triangle|square|sawtooth)(\\d+)$/.exec(type);\n            if (partial) {\n                partialCount = parseInt(partial[2], 10) + 1;\n                this._partialCount = parseInt(partial[2], 10);\n                type = partial[1];\n                partialCount = Math.max(partialCount, 2);\n                periodicWaveSize = partialCount;\n            }\n            else {\n                this._partialCount = 0;\n            }\n            this._partials = [];\n        }\n        for (var n = 1; n < periodicWaveSize; ++n) {\n            var piFactor = 2 / (n * Math.PI);\n            var b = void 0;\n            switch (type) {\n                case \"sine\":\n                    b = (n <= partialCount) ? 1 : 0;\n                    this._partials[n - 1] = b;\n                    break;\n                case \"square\":\n                    b = (n & 1) ? 2 * piFactor : 0;\n                    this._partials[n - 1] = b;\n                    break;\n                case \"sawtooth\":\n                    b = piFactor * ((n & 1) ? 1 : -1);\n                    this._partials[n - 1] = b;\n                    break;\n                case \"triangle\":\n                    if (n & 1) {\n                        b = 2 * (piFactor * piFactor) * ((((n - 1) >> 1) & 1) ? -1 : 1);\n                    }\n                    else {\n                        b = 0;\n                    }\n                    this._partials[n - 1] = b;\n                    break;\n                case \"custom\":\n                    b = this._partials[n - 1];\n                    break;\n                default:\n                    throw new TypeError(\"Oscillator: invalid type: \" + type);\n            }\n            if (b !== 0) {\n                real[n] = -b * Math.sin(phase * n);\n                imag[n] = b * Math.cos(phase * n);\n            }\n            else {\n                real[n] = 0;\n                imag[n] = 0;\n            }\n        }\n        return [real, imag];\n    };\n    /**\n     * Compute the inverse FFT for a given phase.\n     */\n    Oscillator.prototype._inverseFFT = function (real, imag, phase) {\n        var sum = 0;\n        var len = real.length;\n        for (var i = 0; i < len; i++) {\n            sum += real[i] * Math.cos(i * phase) + imag[i] * Math.sin(i * phase);\n        }\n        return sum;\n    };\n    /**\n     * Returns the initial value of the oscillator when stopped.\n     * E.g. a \"sine\" oscillator with phase = 90 would return an initial value of -1.\n     */\n    Oscillator.prototype.getInitialValue = function () {\n        var _a = tslib_1.__read(this._getRealImaginary(this._type, 0), 2), real = _a[0], imag = _a[1];\n        var maxValue = 0;\n        var twoPi = Math.PI * 2;\n        var testPositions = 32;\n        // check for peaks in 16 places\n        for (var i = 0; i < testPositions; i++) {\n            maxValue = Math.max(this._inverseFFT(real, imag, (i / testPositions) * twoPi), maxValue);\n        }\n        return clamp(-this._inverseFFT(real, imag, this._phase) / maxValue, -1, 1);\n    };\n    Object.defineProperty(Oscillator.prototype, \"partials\", {\n        get: function () {\n            return this._partials.slice(0, this.partialCount);\n        },\n        set: function (partials) {\n            this._partials = partials;\n            this._partialCount = this._partials.length;\n            if (partials.length) {\n                this.type = \"custom\";\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Oscillator.prototype, \"phase\", {\n        get: function () {\n            return this._phase * (180 / Math.PI);\n        },\n        set: function (phase) {\n            this._phase = phase * Math.PI / 180;\n            // reset the type\n            this.type = this._type;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Oscillator.prototype.asArray = function (length) {\n        if (length === void 0) { length = 1024; }\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                return [2 /*return*/, generateWaveform(this, length)];\n            });\n        });\n    };\n    Oscillator.prototype.dispose = function () {\n        _super.prototype.dispose.call(this);\n        if (this._oscillator !== null) {\n            this._oscillator.dispose();\n        }\n        this._wave = undefined;\n        this.frequency.dispose();\n        this.detune.dispose();\n        return this;\n    };\n    /**\n     * Cache the periodic waves to avoid having to redo computations\n     */\n    Oscillator._periodicWaveCache = [];\n    return Oscillator;\n}(Source));\nexport { Oscillator };\n//# sourceMappingURL=Oscillator.js.map","import * as tslib_1 from \"tslib\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { ToneAudioNode } from \"../core/context/ToneAudioNode\";\nimport { connectSignal } from \"./Signal\";\n/**\n * A signal operator has an input and output and modifies the signal.\n */\nvar SignalOperator = /** @class */ (function (_super) {\n    tslib_1.__extends(SignalOperator, _super);\n    function SignalOperator() {\n        return _super.call(this, Object.assign(optionsFromArguments(SignalOperator.getDefaults(), arguments, [\"context\"]))) || this;\n    }\n    SignalOperator.prototype.connect = function (destination, outputNum, inputNum) {\n        if (outputNum === void 0) { outputNum = 0; }\n        if (inputNum === void 0) { inputNum = 0; }\n        connectSignal(this, destination, outputNum, inputNum);\n        return this;\n    };\n    return SignalOperator;\n}(ToneAudioNode));\nexport { SignalOperator };\n//# sourceMappingURL=SignalOperator.js.map","import * as tslib_1 from \"tslib\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { isArray, isFunction } from \"../core/util/TypeCheck\";\nimport { assert } from \"../core/util/Debug\";\nimport { Signal } from \"./Signal\";\nimport { SignalOperator } from \"./SignalOperator\";\n/**\n * Wraps the native Web Audio API\n * [WaveShaperNode](http://webaudio.github.io/web-audio-api/#the-waveshapernode-interface).\n *\n * @example\n * import { Oscillator, Signal, WaveShaper } from \"tone\";\n * const osc = new Oscillator().toDestination().start();\n * // multiply the output of the signal by 2 using the waveshaper's function\n * const timesTwo = new WaveShaper((val) => val * 2, 2048).connect(osc.frequency);\n * const signal = new Signal(440).connect(timesTwo);\n * @category Signal\n */\nvar WaveShaper = /** @class */ (function (_super) {\n    tslib_1.__extends(WaveShaper, _super);\n    function WaveShaper() {\n        var _this = _super.call(this, Object.assign(optionsFromArguments(WaveShaper.getDefaults(), arguments, [\"mapping\", \"length\"]))) || this;\n        _this.name = \"WaveShaper\";\n        /**\n         * the waveshaper node\n         */\n        _this._shaper = _this.context.createWaveShaper();\n        /**\n         * The input to the waveshaper node.\n         */\n        _this.input = _this._shaper;\n        /**\n         * The output from the waveshaper node\n         */\n        _this.output = _this._shaper;\n        var options = optionsFromArguments(WaveShaper.getDefaults(), arguments, [\"mapping\", \"length\"]);\n        if (isArray(options.mapping) || options.mapping instanceof Float32Array) {\n            _this.curve = Float32Array.from(options.mapping);\n        }\n        else if (isFunction(options.mapping)) {\n            _this.setMap(options.mapping, options.length);\n        }\n        return _this;\n    }\n    WaveShaper.getDefaults = function () {\n        return Object.assign(Signal.getDefaults(), {\n            length: 1024,\n        });\n    };\n    /**\n     * Uses a mapping function to set the value of the curve.\n     * @param mapping The function used to define the values.\n     *                The mapping function take two arguments:\n     *                the first is the value at the current position\n     *                which goes from -1 to 1 over the number of elements\n     *                in the curve array. The second argument is the array position.\n     * @example\n     * import { WaveShaper } from \"tone\";\n     * const shaper = new WaveShaper();\n     * // map the input signal from [-1, 1] to [0, 10]\n     * shaper.setMap((val, index) => (val + 1) * 5);\n     */\n    WaveShaper.prototype.setMap = function (mapping, length) {\n        if (length === void 0) { length = 1024; }\n        var array = new Float32Array(length);\n        for (var i = 0, len = length; i < len; i++) {\n            var normalized = (i / (len - 1)) * 2 - 1;\n            array[i] = mapping(normalized, i);\n        }\n        this.curve = array;\n        return this;\n    };\n    Object.defineProperty(WaveShaper.prototype, \"curve\", {\n        /**\n         * The array to set as the waveshaper curve. For linear curves\n         * array length does not make much difference, but for complex curves\n         * longer arrays will provide smoother interpolation.\n         */\n        get: function () {\n            return this._shaper.curve;\n        },\n        set: function (mapping) {\n            this._shaper.curve = mapping;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(WaveShaper.prototype, \"oversample\", {\n        /**\n         * Specifies what type of oversampling (if any) should be used when\n         * applying the shaping curve. Can either be \"none\", \"2x\" or \"4x\".\n         */\n        get: function () {\n            return this._shaper.oversample;\n        },\n        set: function (oversampling) {\n            var isOverSampleType = [\"none\", \"2x\", \"4x\"].some(function (str) { return str.includes(oversampling); });\n            assert(isOverSampleType, \"oversampling must be either 'none', '2x', or '4x'\");\n            this._shaper.oversample = oversampling;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Clean up.\n     */\n    WaveShaper.prototype.dispose = function () {\n        _super.prototype.dispose.call(this);\n        this._shaper.disconnect();\n        return this;\n    };\n    return WaveShaper;\n}(SignalOperator));\nexport { WaveShaper };\n//# sourceMappingURL=WaveShaper.js.map","import * as tslib_1 from \"tslib\";\nimport { SignalOperator } from \"./SignalOperator\";\nimport { WaveShaper } from \"./WaveShaper\";\n/**\n * AudioToGain converts an input in AudioRange [-1,1] to NormalRange [0,1].\n * See {@link GainToAudio}.\n * @category Signal\n */\nvar AudioToGain = /** @class */ (function (_super) {\n    tslib_1.__extends(AudioToGain, _super);\n    function AudioToGain() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.name = \"AudioToGain\";\n        /**\n         * The node which converts the audio ranges\n         */\n        _this._norm = new WaveShaper({\n            context: _this.context,\n            mapping: function (x) { return (x + 1) / 2; },\n        });\n        /**\n         * The AudioRange input [-1, 1]\n         */\n        _this.input = _this._norm;\n        /**\n         * The GainRange output [0, 1]\n         */\n        _this.output = _this._norm;\n        return _this;\n    }\n    /**\n     * clean up\n     */\n    AudioToGain.prototype.dispose = function () {\n        _super.prototype.dispose.call(this);\n        this._norm.dispose();\n        return this;\n    };\n    return AudioToGain;\n}(SignalOperator));\nexport { AudioToGain };\n//# sourceMappingURL=AudioToGain.js.map","import * as tslib_1 from \"tslib\";\nimport { Gain } from \"../core/context/Gain\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { Signal } from \"./Signal\";\n/**\n * Multiply two incoming signals. Or, if a number is given in the constructor,\n * multiplies the incoming signal by that value.\n *\n * @example\n * import { Multiply, Signal } from \"tone\";\n * // multiply two signals\n * const mult = new Multiply();\n * const sigA = new Signal(3);\n * const sigB = new Signal(4);\n * sigA.connect(mult);\n * sigB.connect(mult.factor);\n * // output of mult is 12.\n * @example\n * import { Multiply, Signal } from \"tone\";\n * // multiply a signal and a number\n * const mult = new Multiply(10);\n * const sig = new Signal(2).connect(mult);\n * // the output of mult is 20.\n * @category Signal\n */\nvar Multiply = /** @class */ (function (_super) {\n    tslib_1.__extends(Multiply, _super);\n    function Multiply() {\n        var _this = _super.call(this, Object.assign(optionsFromArguments(Multiply.getDefaults(), arguments, [\"value\"]))) || this;\n        _this.name = \"Multiply\";\n        /**\n         * Indicates if the value should be overridden on connection\n         */\n        _this.override = false;\n        var options = optionsFromArguments(Multiply.getDefaults(), arguments, [\"value\"]);\n        _this._mult = _this.input = _this.output = new Gain({\n            context: _this.context,\n            minValue: options.minValue,\n            maxValue: options.maxValue,\n        });\n        _this.factor = _this._param = _this._mult.gain;\n        _this.factor.setValueAtTime(options.value, 0);\n        return _this;\n    }\n    Multiply.getDefaults = function () {\n        return Object.assign(Signal.getDefaults(), {\n            value: 0,\n        });\n    };\n    Multiply.prototype.dispose = function () {\n        _super.prototype.dispose.call(this);\n        this._mult.dispose();\n        return this;\n    };\n    return Multiply;\n}(Signal));\nexport { Multiply };\n//# sourceMappingURL=Multiply.js.map","import * as tslib_1 from \"tslib\";\nimport { Gain } from \"../../core/context/Gain\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { readOnly } from \"../../core/util/Interface\";\nimport { AudioToGain } from \"../../signal/AudioToGain\";\nimport { Multiply } from \"../../signal/Multiply\";\nimport { Source } from \"../Source\";\nimport { Oscillator } from \"./Oscillator\";\nimport { generateWaveform } from \"./OscillatorInterface\";\n/**\n * An amplitude modulated oscillator node. It is implemented with\n * two oscillators, one which modulators the other's amplitude\n * through a gain node.\n * ```\n *    +-------------+       +----------+\n *    | Carrier Osc +>------> GainNode |\n *    +-------------+       |          +--->Output\n *                      +---> gain     |\n * +---------------+    |   +----------+\n * | Modulator Osc +>---+\n * +---------------+\n * ```\n *\n * @example\n * import { AMOscillator } from \"tone\";\n * // a sine oscillator amplitude-modulated by a square wave\n * const amOsc = new AMOscillator(\"Ab3\", \"sine\", \"square\").toDestination().start().stop(\"+5\");\n * // schedule a series of notes\n * amOsc.frequency.setValueAtTime(\"F3\", \"+0.25\");\n * amOsc.frequency.setValueAtTime(\"C4\", \"+0.5\");\n * amOsc.frequency.setValueAtTime(\"Bb3\", \"+1\");\n * // schedule harmonicity changes along with those notes\n * amOsc.harmonicity.setValueAtTime(0.5, \"+0.25\");\n * amOsc.harmonicity.setValueAtTime(1, \"+1\");\n * amOsc.harmonicity.linearRampTo(1.1, 2, \"+1\");\n * // fade it out all the way at the end\n * amOsc.volume.exponentialRampTo(-Infinity, 3, \"+2,\");\n * @category Source\n */\nvar AMOscillator = /** @class */ (function (_super) {\n    tslib_1.__extends(AMOscillator, _super);\n    function AMOscillator() {\n        var _this = _super.call(this, optionsFromArguments(AMOscillator.getDefaults(), arguments, [\"frequency\", \"type\", \"modulationType\"])) || this;\n        _this.name = \"AMOscillator\";\n        /**\n         * convert the -1,1 output to 0,1\n         */\n        _this._modulationScale = new AudioToGain({ context: _this.context });\n        /**\n         * the node where the modulation happens\n         */\n        _this._modulationNode = new Gain({\n            context: _this.context,\n        });\n        var options = optionsFromArguments(AMOscillator.getDefaults(), arguments, [\"frequency\", \"type\", \"modulationType\"]);\n        _this._carrier = new Oscillator({\n            context: _this.context,\n            detune: options.detune,\n            frequency: options.frequency,\n            onstop: function () { return _this.onstop(_this); },\n            phase: options.phase,\n            type: options.type,\n        });\n        _this.frequency = _this._carrier.frequency,\n            _this.detune = _this._carrier.detune;\n        _this._modulator = new Oscillator({\n            context: _this.context,\n            phase: options.phase,\n            type: options.modulationType,\n        });\n        _this.harmonicity = new Multiply({\n            context: _this.context,\n            units: \"positive\",\n            value: options.harmonicity,\n        });\n        // connections\n        _this.frequency.chain(_this.harmonicity, _this._modulator.frequency);\n        _this._modulator.chain(_this._modulationScale, _this._modulationNode.gain);\n        _this._carrier.chain(_this._modulationNode, _this.output);\n        readOnly(_this, [\"frequency\", \"detune\", \"harmonicity\"]);\n        return _this;\n    }\n    AMOscillator.getDefaults = function () {\n        return Object.assign(Oscillator.getDefaults(), {\n            harmonicity: 1,\n            modulationType: \"square\",\n        });\n    };\n    /**\n     * start the oscillator\n     */\n    AMOscillator.prototype._start = function (time) {\n        this._modulator.start(time);\n        this._carrier.start(time);\n    };\n    /**\n     * stop the oscillator\n     */\n    AMOscillator.prototype._stop = function (time) {\n        this._modulator.stop(time);\n        this._carrier.stop(time);\n    };\n    AMOscillator.prototype._restart = function (time) {\n        this._modulator.restart(time);\n        this._carrier.restart(time);\n    };\n    Object.defineProperty(AMOscillator.prototype, \"type\", {\n        /**\n         * The type of the carrier oscillator\n         */\n        get: function () {\n            return this._carrier.type;\n        },\n        set: function (type) {\n            this._carrier.type = type;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AMOscillator.prototype, \"baseType\", {\n        get: function () {\n            return this._carrier.baseType;\n        },\n        set: function (baseType) {\n            this._carrier.baseType = baseType;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AMOscillator.prototype, \"partialCount\", {\n        get: function () {\n            return this._carrier.partialCount;\n        },\n        set: function (partialCount) {\n            this._carrier.partialCount = partialCount;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AMOscillator.prototype, \"modulationType\", {\n        /**\n         * The type of the modulator oscillator\n         */\n        get: function () {\n            return this._modulator.type;\n        },\n        set: function (type) {\n            this._modulator.type = type;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AMOscillator.prototype, \"phase\", {\n        get: function () {\n            return this._carrier.phase;\n        },\n        set: function (phase) {\n            this._carrier.phase = phase;\n            this._modulator.phase = phase;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AMOscillator.prototype, \"partials\", {\n        get: function () {\n            return this._carrier.partials;\n        },\n        set: function (partials) {\n            this._carrier.partials = partials;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    AMOscillator.prototype.asArray = function (length) {\n        if (length === void 0) { length = 1024; }\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                return [2 /*return*/, generateWaveform(this, length)];\n            });\n        });\n    };\n    /**\n     * Clean up.\n     */\n    AMOscillator.prototype.dispose = function () {\n        _super.prototype.dispose.call(this);\n        this.frequency.dispose();\n        this.detune.dispose();\n        this.harmonicity.dispose();\n        this._carrier.dispose();\n        this._modulator.dispose();\n        this._modulationNode.dispose();\n        this._modulationScale.dispose();\n        return this;\n    };\n    return AMOscillator;\n}(Source));\nexport { AMOscillator };\n//# sourceMappingURL=AMOscillator.js.map","import * as tslib_1 from \"tslib\";\nimport { Gain } from \"../../core/context/Gain\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { readOnly } from \"../../core/util/Interface\";\nimport { Multiply } from \"../../signal/Multiply\";\nimport { Signal } from \"../../signal/Signal\";\nimport { Source } from \"../Source\";\nimport { Oscillator } from \"./Oscillator\";\nimport { generateWaveform } from \"./OscillatorInterface\";\n/**\n * FMOscillator implements a frequency modulation synthesis\n * ```\n *                                              +-------------+\n * +---------------+        +-------------+     | Carrier Osc |\n * | Modulator Osc +>-------> GainNode    |     |             +--->Output\n * +---------------+        |             +>----> frequency   |\n *                       +--> gain        |     +-------------+\n *                       |  +-------------+\n * +-----------------+   |\n * | modulationIndex +>--+\n * +-----------------+\n * ```\n *\n * @example\n * import { FMOscillator } from \"tone\";\n * // a sine oscillator frequency-modulated by a square wave\n * const fmOsc = new FMOscillator(\"Ab3\", \"sine\", \"square\").toDestination().start();\n * @category Source\n */\nvar FMOscillator = /** @class */ (function (_super) {\n    tslib_1.__extends(FMOscillator, _super);\n    function FMOscillator() {\n        var _this = _super.call(this, optionsFromArguments(FMOscillator.getDefaults(), arguments, [\"frequency\", \"type\", \"modulationType\"])) || this;\n        _this.name = \"FMOscillator\";\n        /**\n         * the node where the modulation happens\n         */\n        _this._modulationNode = new Gain({\n            context: _this.context,\n            gain: 0,\n        });\n        var options = optionsFromArguments(FMOscillator.getDefaults(), arguments, [\"frequency\", \"type\", \"modulationType\"]);\n        _this._carrier = new Oscillator({\n            context: _this.context,\n            detune: options.detune,\n            frequency: 0,\n            onstop: function () { return _this.onstop(_this); },\n            phase: options.phase,\n            type: options.type,\n        });\n        _this.detune = _this._carrier.detune;\n        _this.frequency = new Signal({\n            context: _this.context,\n            units: \"frequency\",\n            value: options.frequency,\n        });\n        _this._modulator = new Oscillator({\n            context: _this.context,\n            phase: options.phase,\n            type: options.modulationType,\n        });\n        _this.harmonicity = new Multiply({\n            context: _this.context,\n            units: \"positive\",\n            value: options.harmonicity,\n        });\n        _this.modulationIndex = new Multiply({\n            context: _this.context,\n            units: \"positive\",\n            value: options.modulationIndex,\n        });\n        // connections\n        _this.frequency.connect(_this._carrier.frequency);\n        _this.frequency.chain(_this.harmonicity, _this._modulator.frequency);\n        _this.frequency.chain(_this.modulationIndex, _this._modulationNode);\n        _this._modulator.connect(_this._modulationNode.gain);\n        _this._modulationNode.connect(_this._carrier.frequency);\n        _this._carrier.connect(_this.output);\n        _this.detune.connect(_this._modulator.detune);\n        readOnly(_this, [\"modulationIndex\", \"frequency\", \"detune\", \"harmonicity\"]);\n        return _this;\n    }\n    FMOscillator.getDefaults = function () {\n        return Object.assign(Oscillator.getDefaults(), {\n            harmonicity: 1,\n            modulationIndex: 2,\n            modulationType: \"square\",\n        });\n    };\n    /**\n     * start the oscillator\n     */\n    FMOscillator.prototype._start = function (time) {\n        this._modulator.start(time);\n        this._carrier.start(time);\n    };\n    /**\n     * stop the oscillator\n     */\n    FMOscillator.prototype._stop = function (time) {\n        this._modulator.stop(time);\n        this._carrier.stop(time);\n    };\n    FMOscillator.prototype._restart = function (time) {\n        this._modulator.restart(time);\n        this._carrier.restart(time);\n        return this;\n    };\n    Object.defineProperty(FMOscillator.prototype, \"type\", {\n        get: function () {\n            return this._carrier.type;\n        },\n        set: function (type) {\n            this._carrier.type = type;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FMOscillator.prototype, \"baseType\", {\n        get: function () {\n            return this._carrier.baseType;\n        },\n        set: function (baseType) {\n            this._carrier.baseType = baseType;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FMOscillator.prototype, \"partialCount\", {\n        get: function () {\n            return this._carrier.partialCount;\n        },\n        set: function (partialCount) {\n            this._carrier.partialCount = partialCount;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FMOscillator.prototype, \"modulationType\", {\n        /**\n         * The type of the modulator oscillator\n         */\n        get: function () {\n            return this._modulator.type;\n        },\n        set: function (type) {\n            this._modulator.type = type;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FMOscillator.prototype, \"phase\", {\n        get: function () {\n            return this._carrier.phase;\n        },\n        set: function (phase) {\n            this._carrier.phase = phase;\n            this._modulator.phase = phase;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FMOscillator.prototype, \"partials\", {\n        get: function () {\n            return this._carrier.partials;\n        },\n        set: function (partials) {\n            this._carrier.partials = partials;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    FMOscillator.prototype.asArray = function (length) {\n        if (length === void 0) { length = 1024; }\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                return [2 /*return*/, generateWaveform(this, length)];\n            });\n        });\n    };\n    /**\n     * Clean up.\n     */\n    FMOscillator.prototype.dispose = function () {\n        _super.prototype.dispose.call(this);\n        this.frequency.dispose();\n        this.harmonicity.dispose();\n        this._carrier.dispose();\n        this._modulator.dispose();\n        this._modulationNode.dispose();\n        this.modulationIndex.dispose();\n        return this;\n    };\n    return FMOscillator;\n}(Source));\nexport { FMOscillator };\n//# sourceMappingURL=FMOscillator.js.map","import * as tslib_1 from \"tslib\";\nimport { Gain } from \"../../core/context/Gain\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { readOnly } from \"../../core/util/Interface\";\nimport { Signal } from \"../../signal/Signal\";\nimport { WaveShaper } from \"../../signal/WaveShaper\";\nimport { Source } from \"../Source\";\nimport { Oscillator } from \"./Oscillator\";\nimport { generateWaveform } from \"./OscillatorInterface\";\n/**\n * PulseOscillator is an oscillator with control over pulse width,\n * also known as the duty cycle. At 50% duty cycle (width = 0) the wave is\n * a square wave.\n * [Read more](https://wigglewave.wordpress.com/2014/08/16/pulse-waveforms-and-harmonics/).\n * ```\n *    width = -0.25        width = 0.0          width = 0.25\n *\n *   +-----+            +-------+       +    +-------+     +-+\n *   |     |            |       |       |            |     |\n *   |     |            |       |       |            |     |\n * +-+     +-------+    +       +-------+            +-----+\n *\n *\n *    width = -0.5                              width = 0.5\n *\n *     +---+                                 +-------+   +---+\n *     |   |                                         |   |\n *     |   |                                         |   |\n * +---+   +-------+                                 +---+\n *\n *\n *    width = -0.75                             width = 0.75\n *\n *       +-+                                 +-------+ +-----+\n *       | |                                         | |\n *       | |                                         | |\n * +-----+ +-------+                                 +-+\n * ```\n * @example\n * import { PulseOscillator } from \"tone\";\n * const pulse = new PulseOscillator(\"E5\", 0.4).toDestination().start();\n * @category Source\n */\nvar PulseOscillator = /** @class */ (function (_super) {\n    tslib_1.__extends(PulseOscillator, _super);\n    function PulseOscillator() {\n        var _this = _super.call(this, optionsFromArguments(PulseOscillator.getDefaults(), arguments, [\"frequency\", \"width\"])) || this;\n        _this.name = \"PulseOscillator\";\n        /**\n         * gate the width amount\n         */\n        _this._widthGate = new Gain({\n            context: _this.context,\n            gain: 0,\n        });\n        /**\n         * Threshold the signal to turn it into a square\n         */\n        _this._thresh = new WaveShaper({\n            context: _this.context,\n            mapping: function (val) { return val <= 0 ? -1 : 1; },\n        });\n        var options = optionsFromArguments(PulseOscillator.getDefaults(), arguments, [\"frequency\", \"width\"]);\n        _this.width = new Signal({\n            context: _this.context,\n            units: \"audioRange\",\n            value: options.width,\n        });\n        _this._sawtooth = new Oscillator({\n            context: _this.context,\n            detune: options.detune,\n            frequency: options.frequency,\n            onstop: function () { return _this.onstop(_this); },\n            phase: options.phase,\n            type: \"sawtooth\",\n        });\n        _this.frequency = _this._sawtooth.frequency;\n        _this.detune = _this._sawtooth.detune;\n        // connections\n        _this._sawtooth.chain(_this._thresh, _this.output);\n        _this.width.chain(_this._widthGate, _this._thresh);\n        readOnly(_this, [\"width\", \"frequency\", \"detune\"]);\n        return _this;\n    }\n    PulseOscillator.getDefaults = function () {\n        return Object.assign(Source.getDefaults(), {\n            detune: 0,\n            frequency: 440,\n            phase: 0,\n            type: \"pulse\",\n            width: 0.2,\n        });\n    };\n    /**\n     * start the oscillator\n     */\n    PulseOscillator.prototype._start = function (time) {\n        time = this.toSeconds(time);\n        this._sawtooth.start(time);\n        this._widthGate.gain.setValueAtTime(1, time);\n    };\n    /**\n     * stop the oscillator\n     */\n    PulseOscillator.prototype._stop = function (time) {\n        time = this.toSeconds(time);\n        this._sawtooth.stop(time);\n        // the width is still connected to the output.\n        // that needs to be stopped also\n        this._widthGate.gain.cancelScheduledValues(time);\n        this._widthGate.gain.setValueAtTime(0, time);\n    };\n    PulseOscillator.prototype._restart = function (time) {\n        this._sawtooth.restart(time);\n        this._widthGate.gain.cancelScheduledValues(time);\n        this._widthGate.gain.setValueAtTime(1, time);\n    };\n    Object.defineProperty(PulseOscillator.prototype, \"phase\", {\n        /**\n         * The phase of the oscillator in degrees.\n         */\n        get: function () {\n            return this._sawtooth.phase;\n        },\n        set: function (phase) {\n            this._sawtooth.phase = phase;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PulseOscillator.prototype, \"type\", {\n        /**\n         * The type of the oscillator. Always returns \"pulse\".\n         */\n        get: function () {\n            return \"pulse\";\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PulseOscillator.prototype, \"baseType\", {\n        /**\n         * The baseType of the oscillator. Always returns \"pulse\".\n         */\n        get: function () {\n            return \"pulse\";\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PulseOscillator.prototype, \"partials\", {\n        /**\n         * The partials of the waveform. Cannot set partials for this waveform type\n         */\n        get: function () {\n            return [];\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PulseOscillator.prototype, \"partialCount\", {\n        /**\n         * No partials for this waveform type.\n         */\n        get: function () {\n            return 0;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PulseOscillator.prototype.asArray = function (length) {\n        if (length === void 0) { length = 1024; }\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                return [2 /*return*/, generateWaveform(this, length)];\n            });\n        });\n    };\n    /**\n     * Clean up method.\n     */\n    PulseOscillator.prototype.dispose = function () {\n        _super.prototype.dispose.call(this);\n        this._sawtooth.dispose();\n        this.width.dispose();\n        this._widthGate.dispose();\n        this._thresh.dispose();\n        return this;\n    };\n    return PulseOscillator;\n}(Source));\nexport { PulseOscillator };\n//# sourceMappingURL=PulseOscillator.js.map","import * as tslib_1 from \"tslib\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { noOp, readOnly } from \"../../core/util/Interface\";\nimport { Signal } from \"../../signal/Signal\";\nimport { Source } from \"../Source\";\nimport { Oscillator } from \"./Oscillator\";\nimport { generateWaveform } from \"./OscillatorInterface\";\nimport { assertRange } from \"../../core/util/Debug\";\n/**\n * FatOscillator is an array of oscillators with detune spread between the oscillators\n * @example\n * import { FatOscillator } from \"tone\";\n * const fatOsc = new FatOscillator(\"Ab3\", \"sawtooth\", 40).toDestination().start();\n * @category Source\n */\nvar FatOscillator = /** @class */ (function (_super) {\n    tslib_1.__extends(FatOscillator, _super);\n    function FatOscillator() {\n        var _this = _super.call(this, optionsFromArguments(FatOscillator.getDefaults(), arguments, [\"frequency\", \"type\", \"spread\"])) || this;\n        _this.name = \"FatOscillator\";\n        /**\n         * The array of oscillators\n         */\n        _this._oscillators = [];\n        var options = optionsFromArguments(FatOscillator.getDefaults(), arguments, [\"frequency\", \"type\", \"spread\"]);\n        _this.frequency = new Signal({\n            context: _this.context,\n            units: \"frequency\",\n            value: options.frequency,\n        });\n        _this.detune = new Signal({\n            context: _this.context,\n            units: \"cents\",\n            value: options.detune,\n        });\n        _this._spread = options.spread;\n        _this._type = options.type;\n        _this._phase = options.phase;\n        _this._partials = options.partials;\n        _this._partialCount = options.partialCount;\n        // set the count initially\n        _this.count = options.count;\n        readOnly(_this, [\"frequency\", \"detune\"]);\n        return _this;\n    }\n    FatOscillator.getDefaults = function () {\n        return Object.assign(Oscillator.getDefaults(), {\n            count: 3,\n            spread: 20,\n            type: \"sawtooth\",\n        });\n    };\n    /**\n     * start the oscillator\n     */\n    FatOscillator.prototype._start = function (time) {\n        time = this.toSeconds(time);\n        this._forEach(function (osc) { return osc.start(time); });\n    };\n    /**\n     * stop the oscillator\n     */\n    FatOscillator.prototype._stop = function (time) {\n        time = this.toSeconds(time);\n        this._forEach(function (osc) { return osc.stop(time); });\n    };\n    FatOscillator.prototype._restart = function (time) {\n        this._forEach(function (osc) { return osc.restart(time); });\n    };\n    /**\n     * Iterate over all of the oscillators\n     */\n    FatOscillator.prototype._forEach = function (iterator) {\n        for (var i = 0; i < this._oscillators.length; i++) {\n            iterator(this._oscillators[i], i);\n        }\n    };\n    Object.defineProperty(FatOscillator.prototype, \"type\", {\n        /**\n         * The type of the oscillator\n         */\n        get: function () {\n            return this._type;\n        },\n        set: function (type) {\n            this._type = type;\n            this._forEach(function (osc) { return osc.type = type; });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FatOscillator.prototype, \"spread\", {\n        /**\n         * The detune spread between the oscillators. If \"count\" is\n         * set to 3 oscillators and the \"spread\" is set to 40,\n         * the three oscillators would be detuned like this: [-20, 0, 20]\n         * for a total detune spread of 40 cents.\n         * @example\n         * import { FatOscillator } from \"tone\";\n         * const fatOsc = new FatOscillator().toDestination().start();\n         * fatOsc.spread = 70;\n         */\n        get: function () {\n            return this._spread;\n        },\n        set: function (spread) {\n            this._spread = spread;\n            if (this._oscillators.length > 1) {\n                var start_1 = -spread / 2;\n                var step_1 = spread / (this._oscillators.length - 1);\n                this._forEach(function (osc, i) { return osc.detune.value = start_1 + step_1 * i; });\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FatOscillator.prototype, \"count\", {\n        /**\n         * The number of detuned oscillators. Must be an integer greater than 1.\n         * @example\n         * import { FatOscillator } from \"tone\";\n         * const fatOsc = new FatOscillator(\"C#3\", \"sawtooth\").toDestination().start();\n         * // use 4 sawtooth oscillators\n         * fatOsc.count = 4;\n         */\n        get: function () {\n            return this._oscillators.length;\n        },\n        set: function (count) {\n            var _this = this;\n            assertRange(count, 1);\n            if (this._oscillators.length !== count) {\n                // dispose the previous oscillators\n                this._forEach(function (osc) { return osc.dispose(); });\n                this._oscillators = [];\n                for (var i = 0; i < count; i++) {\n                    var osc = new Oscillator({\n                        context: this.context,\n                        volume: -6 - count * 1.1,\n                        type: this._type,\n                        phase: this._phase + (i / count) * 360,\n                        partialCount: this._partialCount,\n                        onstop: i === 0 ? function () { return _this.onstop(_this); } : noOp,\n                    });\n                    if (this.type === \"custom\") {\n                        osc.partials = this._partials;\n                    }\n                    this.frequency.connect(osc.frequency);\n                    this.detune.connect(osc.detune);\n                    osc.detune.overridden = false;\n                    osc.connect(this.output);\n                    this._oscillators[i] = osc;\n                }\n                // set the spread\n                this.spread = this._spread;\n                if (this.state === \"started\") {\n                    this._forEach(function (osc) { return osc.start(); });\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FatOscillator.prototype, \"phase\", {\n        get: function () {\n            return this._phase;\n        },\n        set: function (phase) {\n            this._phase = phase;\n            this._forEach(function (osc) { return osc.phase = phase; });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FatOscillator.prototype, \"baseType\", {\n        get: function () {\n            return this._oscillators[0].baseType;\n        },\n        set: function (baseType) {\n            this._forEach(function (osc) { return osc.baseType = baseType; });\n            this._type = this._oscillators[0].type;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FatOscillator.prototype, \"partials\", {\n        get: function () {\n            return this._oscillators[0].partials;\n        },\n        set: function (partials) {\n            this._partials = partials;\n            this._partialCount = this._partials.length;\n            if (partials.length) {\n                this._type = \"custom\";\n                this._forEach(function (osc) { return osc.partials = partials; });\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FatOscillator.prototype, \"partialCount\", {\n        get: function () {\n            return this._oscillators[0].partialCount;\n        },\n        set: function (partialCount) {\n            this._partialCount = partialCount;\n            this._forEach(function (osc) { return osc.partialCount = partialCount; });\n            this._type = this._oscillators[0].type;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    FatOscillator.prototype.asArray = function (length) {\n        if (length === void 0) { length = 1024; }\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                return [2 /*return*/, generateWaveform(this, length)];\n            });\n        });\n    };\n    /**\n     * Clean up.\n     */\n    FatOscillator.prototype.dispose = function () {\n        _super.prototype.dispose.call(this);\n        this.frequency.dispose();\n        this.detune.dispose();\n        this._forEach(function (osc) { return osc.dispose(); });\n        return this;\n    };\n    return FatOscillator;\n}(Source));\nexport { FatOscillator };\n//# sourceMappingURL=FatOscillator.js.map","import * as tslib_1 from \"tslib\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { readOnly } from \"../../core/util/Interface\";\nimport { Multiply } from \"../../signal/Multiply\";\nimport { Source } from \"../Source\";\nimport { Oscillator } from \"./Oscillator\";\nimport { generateWaveform } from \"./OscillatorInterface\";\nimport { PulseOscillator } from \"./PulseOscillator\";\n/**\n * PWMOscillator modulates the width of a Tone.PulseOscillator\n * at the modulationFrequency. This has the effect of continuously\n * changing the timbre of the oscillator by altering the harmonics\n * generated.\n * @example\n * import { PWMOscillator } from \"tone\";\n * const pwm = new PWMOscillator(\"Ab3\", 0.3).toDestination().start();\n * @category Source\n */\nvar PWMOscillator = /** @class */ (function (_super) {\n    tslib_1.__extends(PWMOscillator, _super);\n    function PWMOscillator() {\n        var _this = _super.call(this, optionsFromArguments(PWMOscillator.getDefaults(), arguments, [\"frequency\", \"modulationFrequency\"])) || this;\n        _this.name = \"PWMOscillator\";\n        _this.sourceType = \"pwm\";\n        /**\n         * Scale the oscillator so it doesn't go silent\n         * at the extreme values.\n         */\n        _this._scale = new Multiply({\n            context: _this.context,\n            value: 2,\n        });\n        var options = optionsFromArguments(PWMOscillator.getDefaults(), arguments, [\"frequency\", \"modulationFrequency\"]);\n        _this._pulse = new PulseOscillator({\n            context: _this.context,\n            frequency: options.modulationFrequency,\n        });\n        // change the pulse oscillator type\n        // @ts-ignore\n        _this._pulse._sawtooth.type = \"sine\";\n        _this.modulationFrequency = _this._pulse.frequency;\n        _this._modulator = new Oscillator({\n            context: _this.context,\n            detune: options.detune,\n            frequency: options.frequency,\n            onstop: function () { return _this.onstop(_this); },\n            phase: options.phase,\n        });\n        _this.frequency = _this._modulator.frequency;\n        _this.detune = _this._modulator.detune;\n        // connections\n        _this._modulator.chain(_this._scale, _this._pulse.width);\n        _this._pulse.connect(_this.output);\n        readOnly(_this, [\"modulationFrequency\", \"frequency\", \"detune\"]);\n        return _this;\n    }\n    PWMOscillator.getDefaults = function () {\n        return Object.assign(Source.getDefaults(), {\n            detune: 0,\n            frequency: 440,\n            modulationFrequency: 0.4,\n            phase: 0,\n            type: \"pwm\",\n        });\n    };\n    /**\n     * start the oscillator\n     */\n    PWMOscillator.prototype._start = function (time) {\n        time = this.toSeconds(time);\n        this._modulator.start(time);\n        this._pulse.start(time);\n    };\n    /**\n     * stop the oscillator\n     */\n    PWMOscillator.prototype._stop = function (time) {\n        time = this.toSeconds(time);\n        this._modulator.stop(time);\n        this._pulse.stop(time);\n    };\n    /**\n     * restart the oscillator\n     */\n    PWMOscillator.prototype._restart = function (time) {\n        this._modulator.restart(time);\n        this._pulse.restart(time);\n    };\n    Object.defineProperty(PWMOscillator.prototype, \"type\", {\n        /**\n         * The type of the oscillator. Always returns \"pwm\".\n         */\n        get: function () {\n            return \"pwm\";\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PWMOscillator.prototype, \"baseType\", {\n        /**\n         * The baseType of the oscillator. Always returns \"pwm\".\n         */\n        get: function () {\n            return \"pwm\";\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PWMOscillator.prototype, \"partials\", {\n        /**\n         * The partials of the waveform. Cannot set partials for this waveform type\n         */\n        get: function () {\n            return [];\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PWMOscillator.prototype, \"partialCount\", {\n        /**\n         * No partials for this waveform type.\n         */\n        get: function () {\n            return 0;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PWMOscillator.prototype, \"phase\", {\n        /**\n         * The phase of the oscillator in degrees.\n         */\n        get: function () {\n            return this._modulator.phase;\n        },\n        set: function (phase) {\n            this._modulator.phase = phase;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PWMOscillator.prototype.asArray = function (length) {\n        if (length === void 0) { length = 1024; }\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                return [2 /*return*/, generateWaveform(this, length)];\n            });\n        });\n    };\n    /**\n     * Clean up.\n     */\n    PWMOscillator.prototype.dispose = function () {\n        _super.prototype.dispose.call(this);\n        this._pulse.dispose();\n        this._scale.dispose();\n        this._modulator.dispose();\n        return this;\n    };\n    return PWMOscillator;\n}(Source));\nexport { PWMOscillator };\n//# sourceMappingURL=PWMOscillator.js.map","import * as tslib_1 from \"tslib\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { readOnly } from \"../../core/util/Interface\";\nimport { isNumber, isString } from \"../../core/util/TypeCheck\";\nimport { Signal } from \"../../signal/Signal\";\nimport { Source } from \"../Source\";\nimport { AMOscillator } from \"./AMOscillator\";\nimport { FatOscillator } from \"./FatOscillator\";\nimport { FMOscillator } from \"./FMOscillator\";\nimport { Oscillator } from \"./Oscillator\";\nimport { generateWaveform } from \"./OscillatorInterface\";\nimport { PulseOscillator } from \"./PulseOscillator\";\nimport { PWMOscillator } from \"./PWMOscillator\";\nvar OmniOscillatorSourceMap = {\n    am: AMOscillator,\n    fat: FatOscillator,\n    fm: FMOscillator,\n    oscillator: Oscillator,\n    pulse: PulseOscillator,\n    pwm: PWMOscillator,\n};\n/**\n * OmniOscillator aggregates Tone.Oscillator, Tone.PulseOscillator,\n * Tone.PWMOscillator, Tone.FMOscillator, Tone.AMOscillator, and Tone.FatOscillator\n * into one class. The oscillator class can be changed by setting the `type`.\n * `omniOsc.type = \"pwm\"` will set it to the Tone.PWMOscillator. Prefixing\n * any of the basic types (\"sine\", \"square4\", etc.) with \"fm\", \"am\", or \"fat\"\n * will use the FMOscillator, AMOscillator or FatOscillator respectively.\n * For example: `omniOsc.type = \"fatsawtooth\"` will create set the oscillator\n * to a FatOscillator of type \"sawtooth\".\n * @example\n * import { OmniOscillator } from \"tone\";\n * const omniOsc = new OmniOscillator(\"C#4\", \"pwm\");\n * @category Source\n */\nvar OmniOscillator = /** @class */ (function (_super) {\n    tslib_1.__extends(OmniOscillator, _super);\n    function OmniOscillator() {\n        var _this = _super.call(this, optionsFromArguments(OmniOscillator.getDefaults(), arguments, [\"frequency\", \"type\"])) || this;\n        _this.name = \"OmniOscillator\";\n        var options = optionsFromArguments(OmniOscillator.getDefaults(), arguments, [\"frequency\", \"type\"]);\n        _this.frequency = new Signal({\n            context: _this.context,\n            units: \"frequency\",\n            value: options.frequency,\n        });\n        _this.detune = new Signal({\n            context: _this.context,\n            units: \"cents\",\n            value: options.detune,\n        });\n        readOnly(_this, [\"frequency\", \"detune\"]);\n        // set the options\n        _this.set(options);\n        return _this;\n    }\n    OmniOscillator.getDefaults = function () {\n        return Object.assign(Oscillator.getDefaults(), FMOscillator.getDefaults(), AMOscillator.getDefaults(), FatOscillator.getDefaults(), PulseOscillator.getDefaults(), PWMOscillator.getDefaults());\n    };\n    /**\n     * start the oscillator\n     */\n    OmniOscillator.prototype._start = function (time) {\n        this._oscillator.start(time);\n    };\n    /**\n     * start the oscillator\n     */\n    OmniOscillator.prototype._stop = function (time) {\n        this._oscillator.stop(time);\n    };\n    OmniOscillator.prototype._restart = function (time) {\n        this._oscillator.restart(time);\n        return this;\n    };\n    Object.defineProperty(OmniOscillator.prototype, \"type\", {\n        /**\n         * The type of the oscillator. Can be any of the basic types: sine, square, triangle, sawtooth. Or\n         * prefix the basic types with \"fm\", \"am\", or \"fat\" to use the FMOscillator, AMOscillator or FatOscillator\n         * types. The oscillator could also be set to \"pwm\" or \"pulse\". All of the parameters of the\n         * oscillator's class are accessible when the oscillator is set to that type, but throws an error\n         * when it's not.\n         * @example\n         * import { OmniOscillator } from \"tone\";\n         * const omniOsc = new OmniOscillator().toDestination().start();\n         * omniOsc.type = \"pwm\";\n         * // modulationFrequency is parameter which is available\n         * // only when the type is \"pwm\".\n         * omniOsc.modulationFrequency.value = 0.5;\n         * @example\n         * import { OmniOscillator } from \"tone\";\n         * const omniOsc = new OmniOscillator().toDestination().start();\n         * // an square wave frequency modulated by a sawtooth\n         * omniOsc.type = \"fmsquare\";\n         * omniOsc.modulationType = \"sawtooth\";\n         */\n        get: function () {\n            var _this = this;\n            var prefix = \"\";\n            if ([\"am\", \"fm\", \"fat\"].some(function (p) { return _this._sourceType === p; })) {\n                prefix = this._sourceType;\n            }\n            return prefix + this._oscillator.type;\n        },\n        set: function (type) {\n            if (type.substr(0, 2) === \"fm\") {\n                this._createNewOscillator(\"fm\");\n                this._oscillator = this._oscillator;\n                this._oscillator.type = type.substr(2);\n            }\n            else if (type.substr(0, 2) === \"am\") {\n                this._createNewOscillator(\"am\");\n                this._oscillator = this._oscillator;\n                this._oscillator.type = type.substr(2);\n            }\n            else if (type.substr(0, 3) === \"fat\") {\n                this._createNewOscillator(\"fat\");\n                this._oscillator = this._oscillator;\n                this._oscillator.type = type.substr(3);\n            }\n            else if (type === \"pwm\") {\n                this._createNewOscillator(\"pwm\");\n                this._oscillator = this._oscillator;\n            }\n            else if (type === \"pulse\") {\n                this._createNewOscillator(\"pulse\");\n            }\n            else {\n                this._createNewOscillator(\"oscillator\");\n                this._oscillator = this._oscillator;\n                this._oscillator.type = type;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(OmniOscillator.prototype, \"partials\", {\n        /**\n         * The value is an empty array when the type is not \"custom\".\n         * This is not available on \"pwm\" and \"pulse\" oscillator types.\n         * See [[Oscillator.partials]]\n         */\n        get: function () {\n            return this._oscillator.partials;\n        },\n        set: function (partials) {\n            if (!this._getOscType(this._oscillator, \"pulse\") && !this._getOscType(this._oscillator, \"pwm\")) {\n                this._oscillator.partials = partials;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(OmniOscillator.prototype, \"partialCount\", {\n        get: function () {\n            return this._oscillator.partialCount;\n        },\n        set: function (partialCount) {\n            if (!this._getOscType(this._oscillator, \"pulse\") && !this._getOscType(this._oscillator, \"pwm\")) {\n                this._oscillator.partialCount = partialCount;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    OmniOscillator.prototype.set = function (props) {\n        // make sure the type is set first\n        if (Reflect.has(props, \"type\") && props.type) {\n            this.type = props.type;\n        }\n        // then set the rest\n        _super.prototype.set.call(this, props);\n        return this;\n    };\n    /**\n     * connect the oscillator to the frequency and detune signals\n     */\n    OmniOscillator.prototype._createNewOscillator = function (oscType) {\n        var _this = this;\n        if (oscType !== this._sourceType) {\n            this._sourceType = oscType;\n            var OscConstructor = OmniOscillatorSourceMap[oscType];\n            // short delay to avoid clicks on the change\n            var now = this.now();\n            if (this._oscillator) {\n                var oldOsc_1 = this._oscillator;\n                oldOsc_1.stop(now);\n                // dispose the old one\n                this.context.setTimeout(function () { return oldOsc_1.dispose(); }, this.blockTime);\n            }\n            this._oscillator = new OscConstructor({\n                context: this.context,\n            });\n            this.frequency.connect(this._oscillator.frequency);\n            this.detune.connect(this._oscillator.detune);\n            this._oscillator.connect(this.output);\n            this._oscillator.onstop = function () { return _this.onstop(_this); };\n            if (this.state === \"started\") {\n                this._oscillator.start(now);\n            }\n        }\n    };\n    Object.defineProperty(OmniOscillator.prototype, \"phase\", {\n        get: function () {\n            return this._oscillator.phase;\n        },\n        set: function (phase) {\n            this._oscillator.phase = phase;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(OmniOscillator.prototype, \"sourceType\", {\n        /**\n         * The source type of the oscillator.\n         * @example\n         * import { OmniOscillator } from \"tone\";\n         * const omniOsc = new OmniOscillator(440, \"fmsquare\");\n         * console.log(omniOsc.sourceType); // 'fm'\n         */\n        get: function () {\n            return this._sourceType;\n        },\n        set: function (sType) {\n            // the basetype defaults to sine\n            var baseType = \"sine\";\n            if (this._oscillator.type !== \"pwm\" && this._oscillator.type !== \"pulse\") {\n                baseType = this._oscillator.type;\n            }\n            // set the type\n            if (sType === \"fm\") {\n                this.type = \"fm\" + baseType;\n            }\n            else if (sType === \"am\") {\n                this.type = \"am\" + baseType;\n            }\n            else if (sType === \"fat\") {\n                this.type = \"fat\" + baseType;\n            }\n            else if (sType === \"oscillator\") {\n                this.type = baseType;\n            }\n            else if (sType === \"pulse\") {\n                this.type = \"pulse\";\n            }\n            else if (sType === \"pwm\") {\n                this.type = \"pwm\";\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    OmniOscillator.prototype._getOscType = function (osc, sourceType) {\n        return osc instanceof OmniOscillatorSourceMap[sourceType];\n    };\n    Object.defineProperty(OmniOscillator.prototype, \"baseType\", {\n        /**\n         * The base type of the oscillator. See [[Oscillator.baseType]]\n         * @example\n         * import { OmniOscillator } from \"tone\";\n         * const omniOsc = new OmniOscillator(440, \"fmsquare4\");\n         * omniOsc.sourceType; // 'fm'\n         * omniOsc.baseType; // 'square'\n         * omniOsc.partialCount; // 4\n         */\n        get: function () {\n            return this._oscillator.baseType;\n        },\n        set: function (baseType) {\n            if (!this._getOscType(this._oscillator, \"pulse\") &&\n                !this._getOscType(this._oscillator, \"pwm\") &&\n                baseType !== \"pulse\" && baseType !== \"pwm\") {\n                this._oscillator.baseType = baseType;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(OmniOscillator.prototype, \"width\", {\n        /**\n         * The width of the oscillator when sourceType === \"pulse\".\n         * See [[PWMOscillator.width]]\n         * @example\n         * import { OmniOscillator } from \"tone\";\n         * const omniOsc = new OmniOscillator(440, \"pulse\");\n         * // can access the width attribute only if type === \"pulse\"\n         * omniOsc.width.value = 0.2;\n         */\n        get: function () {\n            if (this._getOscType(this._oscillator, \"pulse\")) {\n                return this._oscillator.width;\n            }\n            else {\n                return undefined;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(OmniOscillator.prototype, \"count\", {\n        /**\n         * The number of detuned oscillators when sourceType === \"fat\".\n         * See [[FatOscillator.count]]\n         */\n        get: function () {\n            if (this._getOscType(this._oscillator, \"fat\")) {\n                return this._oscillator.count;\n            }\n            else {\n                return undefined;\n            }\n        },\n        set: function (count) {\n            if (this._getOscType(this._oscillator, \"fat\") && isNumber(count)) {\n                this._oscillator.count = count;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(OmniOscillator.prototype, \"spread\", {\n        /**\n         * The detune spread between the oscillators when sourceType === \"fat\".\n         * See [[FatOscillator.count]]\n         */\n        get: function () {\n            if (this._getOscType(this._oscillator, \"fat\")) {\n                return this._oscillator.spread;\n            }\n            else {\n                return undefined;\n            }\n        },\n        set: function (spread) {\n            if (this._getOscType(this._oscillator, \"fat\") && isNumber(spread)) {\n                this._oscillator.spread = spread;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(OmniOscillator.prototype, \"modulationType\", {\n        /**\n         * The type of the modulator oscillator. Only if the oscillator is set to \"am\" or \"fm\" types.\n         * See [[AMOscillator]] or [[FMOscillator]]\n         */\n        get: function () {\n            if (this._getOscType(this._oscillator, \"fm\") || this._getOscType(this._oscillator, \"am\")) {\n                return this._oscillator.modulationType;\n            }\n            else {\n                return undefined;\n            }\n        },\n        set: function (mType) {\n            if ((this._getOscType(this._oscillator, \"fm\") || this._getOscType(this._oscillator, \"am\")) && isString(mType)) {\n                this._oscillator.modulationType = mType;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(OmniOscillator.prototype, \"modulationIndex\", {\n        /**\n         * The modulation index when the sourceType === \"fm\"\n         * See [[FMOscillator]].\n         */\n        get: function () {\n            if (this._getOscType(this._oscillator, \"fm\")) {\n                return this._oscillator.modulationIndex;\n            }\n            else {\n                return undefined;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(OmniOscillator.prototype, \"harmonicity\", {\n        /**\n         * Harmonicity is the frequency ratio between the carrier and the modulator oscillators.\n         * See [[AMOscillator]] or [[FMOscillator]]\n         */\n        get: function () {\n            if (this._getOscType(this._oscillator, \"fm\") || this._getOscType(this._oscillator, \"am\")) {\n                return this._oscillator.harmonicity;\n            }\n            else {\n                return undefined;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(OmniOscillator.prototype, \"modulationFrequency\", {\n        /**\n         * The modulationFrequency Signal of the oscillator when sourceType === \"pwm\"\n         * see [[PWMOscillator]]\n         * @min 0.1\n         * @max 5\n         */\n        get: function () {\n            if (this._getOscType(this._oscillator, \"pwm\")) {\n                return this._oscillator.modulationFrequency;\n            }\n            else {\n                return undefined;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    OmniOscillator.prototype.asArray = function (length) {\n        if (length === void 0) { length = 1024; }\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                return [2 /*return*/, generateWaveform(this, length)];\n            });\n        });\n    };\n    OmniOscillator.prototype.dispose = function () {\n        _super.prototype.dispose.call(this);\n        this.detune.dispose();\n        this.frequency.dispose();\n        this._oscillator.dispose();\n        return this;\n    };\n    return OmniOscillator;\n}(Source));\nexport { OmniOscillator };\n//# sourceMappingURL=OmniOscillator.js.map","import * as tslib_1 from \"tslib\";\nimport { connectSeries } from \"../core/context/ToneAudioNode\";\nimport { Gain } from \"../core/context/Gain\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { Signal } from \"./Signal\";\n/**\n * Add a signal and a number or two signals. When no value is\n * passed into the constructor, Tone.Add will sum input and `addend`\n * If a value is passed into the constructor, the it will be added to the input.\n *\n * @example\n * import { Add, Signal } from \"tone\";\n * const signal = new Signal(2);\n * // add a signal and a scalar\n * const add = new Add(2);\n * signal.connect(add);\n * // the output of add equals 4\n * @example\n * import { Add, Signal } from \"tone\";\n * // Add two signal inputs\n * const add = new Add();\n * const sig0 = new Signal(3).connect(add);\n * const sig1 = new Signal(4).connect(add.addend);\n * // the output of add equals 7.\n * @category Signal\n */\nvar Add = /** @class */ (function (_super) {\n    tslib_1.__extends(Add, _super);\n    function Add() {\n        var _this = _super.call(this, Object.assign(optionsFromArguments(Add.getDefaults(), arguments, [\"value\"]))) || this;\n        _this.override = false;\n        _this.name = \"Add\";\n        /**\n         * the summing node\n         */\n        _this._sum = new Gain({ context: _this.context });\n        _this.input = _this._sum;\n        _this.output = _this._sum;\n        /**\n         * The value which is added to the input signal\n         */\n        _this.addend = _this._param;\n        connectSeries(_this._constantSource, _this._sum);\n        return _this;\n    }\n    Add.getDefaults = function () {\n        return Object.assign(Signal.getDefaults(), {\n            value: 0,\n        });\n    };\n    Add.prototype.dispose = function () {\n        _super.prototype.dispose.call(this);\n        this._sum.dispose();\n        return this;\n    };\n    return Add;\n}(Signal));\nexport { Add };\n//# sourceMappingURL=Add.js.map","import * as tslib_1 from \"tslib\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { Add } from \"./Add\";\nimport { Multiply } from \"./Multiply\";\nimport { SignalOperator } from \"./SignalOperator\";\n/**\n * Performs a linear scaling on an input signal.\n * Scales a NormalRange input to between\n * outputMin and outputMax.\n *\n * @example\n * import { Scale, Signal } from \"tone\";\n * const scale = new Scale(50, 100);\n * const signal = new Signal(0.5).connect(scale);\n * // the output of scale equals 75\n * @category Signal\n */\nvar Scale = /** @class */ (function (_super) {\n    tslib_1.__extends(Scale, _super);\n    function Scale() {\n        var _this = _super.call(this, Object.assign(optionsFromArguments(Scale.getDefaults(), arguments, [\"min\", \"max\"]))) || this;\n        _this.name = \"Scale\";\n        var options = optionsFromArguments(Scale.getDefaults(), arguments, [\"min\", \"max\"]);\n        _this._mult = _this.input = new Multiply({\n            context: _this.context,\n            value: options.max - options.min,\n        });\n        _this._add = _this.output = new Add({\n            context: _this.context,\n            value: options.min,\n        });\n        _this._min = options.min;\n        _this._max = options.max;\n        _this.input.connect(_this.output);\n        return _this;\n    }\n    Scale.getDefaults = function () {\n        return Object.assign(SignalOperator.getDefaults(), {\n            max: 1,\n            min: 0,\n        });\n    };\n    Object.defineProperty(Scale.prototype, \"min\", {\n        /**\n         * The minimum output value. This number is output when the value input value is 0.\n         */\n        get: function () {\n            return this._min;\n        },\n        set: function (min) {\n            this._min = min;\n            this._setRange();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Scale.prototype, \"max\", {\n        /**\n         * The maximum output value. This number is output when the value input value is 1.\n         */\n        get: function () {\n            return this._max;\n        },\n        set: function (max) {\n            this._max = max;\n            this._setRange();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * set the values\n     */\n    Scale.prototype._setRange = function () {\n        this._add.value = this._min;\n        this._mult.value = this._max - this._min;\n    };\n    Scale.prototype.dispose = function () {\n        _super.prototype.dispose.call(this);\n        this._add.dispose();\n        this._mult.dispose();\n        return this;\n    };\n    return Scale;\n}(SignalOperator));\nexport { Scale };\n//# sourceMappingURL=Scale.js.map","import * as tslib_1 from \"tslib\";\nimport { Gain } from \"../core/context/Gain\";\nimport { connect, disconnect } from \"../core/context/ToneAudioNode\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { SignalOperator } from \"./SignalOperator\";\n/**\n * Tone.Zero outputs 0's at audio-rate. The reason this has to be\n * it's own class is that many browsers optimize out Tone.Signal\n * with a value of 0 and will not process nodes further down the graph.\n * @category Signal\n */\nvar Zero = /** @class */ (function (_super) {\n    tslib_1.__extends(Zero, _super);\n    function Zero() {\n        var _this = _super.call(this, Object.assign(optionsFromArguments(Zero.getDefaults(), arguments))) || this;\n        _this.name = \"Zero\";\n        /**\n         * The gain node which connects the constant source to the output\n         */\n        _this._gain = new Gain({ context: _this.context });\n        /**\n         * Only outputs 0\n         */\n        _this.output = _this._gain;\n        /**\n         * no input node\n         */\n        _this.input = undefined;\n        connect(_this.context.getConstant(0), _this._gain);\n        return _this;\n    }\n    /**\n     * clean up\n     */\n    Zero.prototype.dispose = function () {\n        _super.prototype.dispose.call(this);\n        disconnect(this.context.getConstant(0), this._gain);\n        return this;\n    };\n    return Zero;\n}(SignalOperator));\nexport { Zero };\n//# sourceMappingURL=Zero.js.map","import * as tslib_1 from \"tslib\";\nimport { Gain } from \"../../core/context/Gain\";\nimport { Param } from \"../../core/context/Param\";\nimport { ToneAudioNode } from \"../../core/context/ToneAudioNode\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { readOnly } from \"../../core/util/Interface\";\nimport { AudioToGain } from \"../../signal/AudioToGain\";\nimport { Scale } from \"../../signal/Scale\";\nimport { connectSignal, Signal } from \"../../signal/Signal\";\nimport { Zero } from \"../../signal/Zero\";\nimport { Oscillator } from \"./Oscillator\";\n/**\n * LFO stands for low frequency oscillator. LFO produces an output signal\n * which can be attached to an AudioParam or Tone.Signal\n * in order to modulate that parameter with an oscillator. The LFO can\n * also be synced to the transport to start/stop and change when the tempo changes.\n *\n * @example\n * import { Filter, LFO, Noise } from \"tone\";\n * const filter = new Filter().toDestination();\n * const noise = new Noise().connect(filter).start();\n * const lfo = new LFO(\"4n\", 400, 4000).start();\n * // have it control the filters cutoff\n * lfo.connect(filter.frequency);\n * @category Source\n */\nvar LFO = /** @class */ (function (_super) {\n    tslib_1.__extends(LFO, _super);\n    function LFO() {\n        var _this = _super.call(this, optionsFromArguments(LFO.getDefaults(), arguments, [\"frequency\", \"min\", \"max\"])) || this;\n        _this.name = \"LFO\";\n        /**\n         * The value that the LFO outputs when it's stopped\n         */\n        _this._stoppedValue = 0;\n        /**\n         * A private placeholder for the units\n         */\n        _this._units = \"number\";\n        /**\n         * If the input value is converted using the [[units]]\n         */\n        _this.convert = true;\n        /**\n         * Private methods borrowed from Param\n         */\n        // @ts-ignore\n        _this._fromType = Param.prototype._fromType;\n        // @ts-ignore\n        _this._toType = Param.prototype._toType;\n        // @ts-ignore\n        _this._is = Param.prototype._is;\n        // @ts-ignore\n        _this._clampValue = Param.prototype._clampValue;\n        var options = optionsFromArguments(LFO.getDefaults(), arguments, [\"frequency\", \"min\", \"max\"]);\n        // @ts-ignore\n        _this._oscillator = new Oscillator({\n            context: _this.context,\n            frequency: options.frequency,\n            type: options.type,\n        });\n        _this.frequency = _this._oscillator.frequency;\n        _this._amplitudeGain = new Gain({\n            context: _this.context,\n            gain: options.amplitude,\n            units: \"normalRange\",\n        });\n        _this.amplitude = _this._amplitudeGain.gain;\n        _this._stoppedSignal = new Signal({\n            context: _this.context,\n            units: \"audioRange\",\n            value: 0,\n        });\n        _this._zeros = new Zero({ context: _this.context });\n        _this._a2g = new AudioToGain({ context: _this.context });\n        _this._scaler = _this.output = new Scale({\n            context: _this.context,\n            max: options.max,\n            min: options.min,\n        });\n        _this.min = options.min;\n        _this.max = options.max;\n        _this.units = options.units;\n        // connect it up\n        _this._oscillator.chain(_this._a2g, _this._amplitudeGain, _this._scaler);\n        _this._zeros.connect(_this._a2g);\n        _this._stoppedSignal.connect(_this._a2g);\n        readOnly(_this, [\"amplitude\", \"frequency\"]);\n        _this.phase = options.phase;\n        return _this;\n    }\n    LFO.getDefaults = function () {\n        return Object.assign(ToneAudioNode.getDefaults(), {\n            amplitude: 1,\n            frequency: \"4n\",\n            max: 1,\n            min: 0,\n            phase: 0,\n            type: \"sine\",\n            units: \"number\",\n        });\n    };\n    /**\n     * Start the LFO.\n     * @param time The time the LFO will start\n     */\n    LFO.prototype.start = function (time) {\n        time = this.toSeconds(time);\n        this._stoppedSignal.setValueAtTime(0, time);\n        this._oscillator.start(time);\n        return this;\n    };\n    /**\n     * Stop the LFO.\n     * @param  time The time the LFO will stop\n     */\n    LFO.prototype.stop = function (time) {\n        time = this.toSeconds(time);\n        this._stoppedSignal.setValueAtTime(this._stoppedValue, time);\n        this._oscillator.stop(time);\n        return this;\n    };\n    /**\n     * Sync the start/stop/pause to the transport\n     * and the frequency to the bpm of the transport\n     * @example\n     * import { LFO } from \"tone\";\n     * const lfo = new LFO(\"8n\");\n     * lfo.sync().start(0);\n     * // the rate of the LFO will always be an eighth note, even as the tempo changes\n     */\n    LFO.prototype.sync = function () {\n        this._oscillator.sync();\n        this._oscillator.syncFrequency();\n        return this;\n    };\n    /**\n     * unsync the LFO from transport control\n     */\n    LFO.prototype.unsync = function () {\n        this._oscillator.unsync();\n        this._oscillator.unsyncFrequency();\n        return this;\n    };\n    Object.defineProperty(LFO.prototype, \"min\", {\n        /**\n         * The minimum output of the LFO.\n         */\n        get: function () {\n            return this._toType(this._scaler.min);\n        },\n        set: function (min) {\n            min = this._fromType(min);\n            this._scaler.min = min;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(LFO.prototype, \"max\", {\n        /**\n         * The maximum output of the LFO.\n         */\n        get: function () {\n            return this._toType(this._scaler.max);\n        },\n        set: function (max) {\n            max = this._fromType(max);\n            this._scaler.max = max;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(LFO.prototype, \"type\", {\n        /**\n         * The type of the oscillator: See [[Oscillator.type]]\n         */\n        get: function () {\n            return this._oscillator.type;\n        },\n        set: function (type) {\n            this._oscillator.type = type;\n            this._stoppedValue = this._oscillator.getInitialValue();\n            this._stoppedSignal.value = this._stoppedValue;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(LFO.prototype, \"phase\", {\n        /**\n         * The phase of the LFO.\n         */\n        get: function () {\n            return this._oscillator.phase;\n        },\n        set: function (phase) {\n            this._oscillator.phase = phase;\n            this._stoppedValue = this._oscillator.getInitialValue();\n            this._stoppedSignal.value = this._stoppedValue;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(LFO.prototype, \"units\", {\n        /**\n         * The output units of the LFO.\n         */\n        get: function () {\n            return this._units;\n        },\n        set: function (val) {\n            var currentMin = this.min;\n            var currentMax = this.max;\n            // convert the min and the max\n            this._units = val;\n            this.min = currentMin;\n            this.max = currentMax;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(LFO.prototype, \"state\", {\n        /**\n         * Returns the playback state of the source, either \"started\" or \"stopped\".\n         */\n        get: function () {\n            return this._oscillator.state;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param node the destination to connect to\n     * @param outputNum the optional output number\n     * @param inputNum the input number\n     */\n    LFO.prototype.connect = function (node, outputNum, inputNum) {\n        if (node instanceof Param || node instanceof Signal) {\n            this.convert = node.convert;\n            this.units = node.units;\n        }\n        connectSignal(this, node, outputNum, inputNum);\n        return this;\n    };\n    LFO.prototype.dispose = function () {\n        _super.prototype.dispose.call(this);\n        this._oscillator.dispose();\n        this._stoppedSignal.dispose();\n        this._zeros.dispose();\n        this._scaler.dispose();\n        this._a2g.dispose();\n        this._amplitudeGain.dispose();\n        this.amplitude.dispose();\n        return this;\n    };\n    return LFO;\n}(ToneAudioNode));\nexport { LFO };\n//# sourceMappingURL=LFO.js.map","import { assertRange } from \"./Debug\";\n/**\n * Assert that the number is in the given range.\n */\nexport function range(min, max) {\n    if (max === void 0) { max = Infinity; }\n    var valueMap = new WeakMap();\n    return function (target, propertyKey) {\n        Reflect.defineProperty(target, propertyKey, {\n            configurable: true,\n            enumerable: true,\n            get: function () {\n                return valueMap.get(this);\n            },\n            set: function (newValue) {\n                assertRange(newValue, min, max);\n                valueMap.set(this, newValue);\n            }\n        });\n    };\n}\n/**\n * Convert the time to seconds and assert that the time is in between the two\n * values when being set.\n */\nexport function timeRange(min, max) {\n    if (max === void 0) { max = Infinity; }\n    var valueMap = new WeakMap();\n    return function (target, propertyKey) {\n        Reflect.defineProperty(target, propertyKey, {\n            configurable: true,\n            enumerable: true,\n            get: function () {\n                return valueMap.get(this);\n            },\n            set: function (newValue) {\n                assertRange(this.toSeconds(newValue), min, max);\n                valueMap.set(this, newValue);\n            }\n        });\n    };\n}\n//# sourceMappingURL=Decorator.js.map","import * as tslib_1 from \"tslib\";\nimport { ToneAudioBuffer } from \"../../core/context/ToneAudioBuffer\";\nimport { defaultArg, optionsFromArguments } from \"../../core/util/Defaults\";\nimport { noOp } from \"../../core/util/Interface\";\nimport { isUndef } from \"../../core/util/TypeCheck\";\nimport { Source } from \"../Source\";\nimport { ToneBufferSource } from \"./ToneBufferSource\";\nimport { assertRange } from \"../../core/util/Debug\";\nimport { timeRange } from \"../../core/util/Decorator\";\n/**\n * Player is an audio file player with start, loop, and stop functions.\n * @example\n * import { Player } from \"tone\";\n * const player = new Player(\"https://tonejs.github.io/examples/audio/FWDL.mp3\").toDestination();\n * // play as soon as the buffer is loaded\n * player.autostart = true;\n * @category Source\n */\nvar Player = /** @class */ (function (_super) {\n    tslib_1.__extends(Player, _super);\n    function Player() {\n        var _this = _super.call(this, optionsFromArguments(Player.getDefaults(), arguments, [\"url\", \"onload\"])) || this;\n        _this.name = \"Player\";\n        /**\n         * All of the active buffer source nodes\n         */\n        _this._activeSources = new Set();\n        var options = optionsFromArguments(Player.getDefaults(), arguments, [\"url\", \"onload\"]);\n        _this._buffer = new ToneAudioBuffer({\n            onload: _this._onload.bind(_this, options.onload),\n            onerror: options.onerror,\n            reverse: options.reverse,\n            url: options.url,\n        });\n        _this.autostart = options.autostart;\n        _this._loop = options.loop;\n        _this._loopStart = options.loopStart;\n        _this._loopEnd = options.loopEnd;\n        _this._playbackRate = options.playbackRate;\n        _this.fadeIn = options.fadeIn;\n        _this.fadeOut = options.fadeOut;\n        return _this;\n    }\n    Player.getDefaults = function () {\n        return Object.assign(Source.getDefaults(), {\n            autostart: false,\n            fadeIn: 0,\n            fadeOut: 0,\n            loop: false,\n            loopEnd: 0,\n            loopStart: 0,\n            onload: noOp,\n            onerror: noOp,\n            playbackRate: 1,\n            reverse: false,\n        });\n    };\n    /**\n     * Load the audio file as an audio buffer.\n     * Decodes the audio asynchronously and invokes\n     * the callback once the audio buffer loads.\n     * Note: this does not need to be called if a url\n     * was passed in to the constructor. Only use this\n     * if you want to manually load a new url.\n     * @param url The url of the buffer to load. Filetype support depends on the browser.\n     */\n    Player.prototype.load = function (url) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this._buffer.load(url)];\n                    case 1:\n                        _a.sent();\n                        this._onload();\n                        return [2 /*return*/, this];\n                }\n            });\n        });\n    };\n    /**\n     * Internal callback when the buffer is loaded.\n     */\n    Player.prototype._onload = function (callback) {\n        if (callback === void 0) { callback = noOp; }\n        callback();\n        if (this.autostart) {\n            this.start();\n        }\n    };\n    /**\n     * Internal callback when the buffer is done playing.\n     */\n    Player.prototype._onSourceEnd = function (source) {\n        // invoke the onstop function\n        this.onstop(this);\n        // delete the source from the active sources\n        this._activeSources.delete(source);\n        if (this._activeSources.size === 0 && !this._synced &&\n            this._state.getValueAtTime(this.now()) === \"started\") {\n            this._state.setStateAtTime(\"stopped\", this.now());\n        }\n    };\n    /**\n     * Play the buffer at the given startTime. Optionally add an offset\n     * and/or duration which will play the buffer from a position\n     * within the buffer for the given duration.\n     *\n     * @param  time When the player should start.\n     * @param  offset The offset from the beginning of the sample to start at.\n     * @param  duration How long the sample should play. If no duration is given, it will default to the full length of the sample (minus any offset)\n     */\n    Player.prototype.start = function (time, offset, duration) {\n        _super.prototype.start.call(this, time, offset, duration);\n        return this;\n    };\n    /**\n     * Internal start method\n     */\n    Player.prototype._start = function (startTime, offset, duration) {\n        // if it's a loop the default offset is the loopStart point\n        if (this._loop) {\n            offset = defaultArg(offset, this._loopStart);\n        }\n        else {\n            // otherwise the default offset is 0\n            offset = defaultArg(offset, 0);\n        }\n        // compute the values in seconds\n        var computedOffset = this.toSeconds(offset);\n        // if it's synced, it should factor in the playback rate for computing the offset\n        if (this._synced) {\n            computedOffset *= this._playbackRate;\n        }\n        // compute the duration which is either the passed in duration of the buffer.duration - offset\n        var origDuration = duration;\n        duration = defaultArg(duration, Math.max(this._buffer.duration - computedOffset, 0));\n        var computedDuration = this.toSeconds(duration);\n        // scale it by the playback rate\n        computedDuration = computedDuration / this._playbackRate;\n        // get the start time\n        startTime = this.toSeconds(startTime);\n        // make the source\n        var source = new ToneBufferSource({\n            url: this._buffer,\n            context: this.context,\n            fadeIn: this.fadeIn,\n            fadeOut: this.fadeOut,\n            loop: this._loop,\n            loopEnd: this._loopEnd,\n            loopStart: this._loopStart,\n            onended: this._onSourceEnd.bind(this),\n            playbackRate: this._playbackRate,\n        }).connect(this.output);\n        // set the looping properties\n        if (!this._loop && !this._synced) {\n            // cancel the previous stop\n            this._state.cancel(startTime + computedDuration);\n            // if it's not looping, set the state change at the end of the sample\n            this._state.setStateAtTime(\"stopped\", startTime + computedDuration, {\n                implicitEnd: true,\n            });\n        }\n        // add it to the array of active sources\n        this._activeSources.add(source);\n        // start it\n        if (this._loop && isUndef(origDuration)) {\n            source.start(startTime, computedOffset);\n        }\n        else {\n            // subtract the fade out time\n            source.start(startTime, computedOffset, computedDuration - this.toSeconds(this.fadeOut));\n        }\n    };\n    /**\n     * Stop playback.\n     */\n    Player.prototype._stop = function (time) {\n        var computedTime = this.toSeconds(time);\n        this._activeSources.forEach(function (source) { return source.stop(computedTime); });\n    };\n    /**\n     * Stop and then restart the player from the beginning (or offset)\n     * @param  time When the player should start.\n     * @param  offset The offset from the beginning of the sample to start at.\n     * @param  duration How long the sample should play. If no duration is given,\n     * \t\t\t\t\tit will default to the full length of the sample (minus any offset)\n     */\n    Player.prototype.restart = function (time, offset, duration) {\n        _super.prototype.restart.call(this, time, offset, duration);\n        return this;\n    };\n    Player.prototype._restart = function (time, offset, duration) {\n        this._stop(time);\n        this._start(time, offset, duration);\n    };\n    /**\n     * Seek to a specific time in the player's buffer. If the\n     * source is no longer playing at that time, it will stop.\n     * @param offset The time to seek to.\n     * @param when The time for the seek event to occur.\n     * @example\n     * import { Player } from \"tone\";\n     * const player = new Player(\"https://tonejs.github.io/examples/audio/FWDL.mp3\", () => {\n     * \tplayer.start();\n     * \t// seek to the offset in 1 second from now\n     * \tplayer.seek(0.4, \"+1\");\n     * }).toDestination();\n     */\n    Player.prototype.seek = function (offset, when) {\n        var computedTime = this.toSeconds(when);\n        if (this._state.getValueAtTime(computedTime) === \"started\") {\n            var computedOffset = this.toSeconds(offset);\n            // if it's currently playing, stop it\n            this._stop(computedTime);\n            // restart it at the given time\n            this._start(computedTime, computedOffset);\n        }\n        return this;\n    };\n    /**\n     * Set the loop start and end. Will only loop if loop is set to true.\n     * @param loopStart The loop start time\n     * @param loopEnd The loop end time\n     * @example\n     * import { Player } from \"tone\";\n     * const player = new Player(\"https://tonejs.github.io/examples/audio/FWDL.mp3\").toDestination();\n     * // loop between the given points\n     * player.setLoopPoints(0.2, 0.3);\n     * player.loop = true;\n     * player.autostart = true;\n     */\n    Player.prototype.setLoopPoints = function (loopStart, loopEnd) {\n        this.loopStart = loopStart;\n        this.loopEnd = loopEnd;\n        return this;\n    };\n    Object.defineProperty(Player.prototype, \"loopStart\", {\n        /**\n         * If loop is true, the loop will start at this position.\n         */\n        get: function () {\n            return this._loopStart;\n        },\n        set: function (loopStart) {\n            this._loopStart = loopStart;\n            if (this.buffer.loaded) {\n                assertRange(this.toSeconds(loopStart), 0, this.buffer.duration);\n            }\n            // get the current source\n            this._activeSources.forEach(function (source) {\n                source.loopStart = loopStart;\n            });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Player.prototype, \"loopEnd\", {\n        /**\n         * If loop is true, the loop will end at this position.\n         */\n        get: function () {\n            return this._loopEnd;\n        },\n        set: function (loopEnd) {\n            this._loopEnd = loopEnd;\n            if (this.buffer.loaded) {\n                assertRange(this.toSeconds(loopEnd), 0, this.buffer.duration);\n            }\n            // get the current source\n            this._activeSources.forEach(function (source) {\n                source.loopEnd = loopEnd;\n            });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Player.prototype, \"buffer\", {\n        /**\n         * The audio buffer belonging to the player.\n         */\n        get: function () {\n            return this._buffer;\n        },\n        set: function (buffer) {\n            this._buffer.set(buffer);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Player.prototype, \"loop\", {\n        /**\n         * If the buffer should loop once it's over.\n         */\n        get: function () {\n            return this._loop;\n        },\n        set: function (loop) {\n            // if no change, do nothing\n            if (this._loop === loop) {\n                return;\n            }\n            this._loop = loop;\n            // set the loop of all of the sources\n            this._activeSources.forEach(function (source) {\n                source.loop = loop;\n            });\n            if (loop) {\n                // remove the next stopEvent\n                var stopEvent = this._state.getNextState(\"stopped\", this.now());\n                if (stopEvent) {\n                    this._state.cancel(stopEvent.time);\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Player.prototype, \"playbackRate\", {\n        /**\n         * The playback speed. 1 is normal speed. This is not a signal because\n         * Safari and iOS currently don't support playbackRate as a signal.\n         */\n        get: function () {\n            return this._playbackRate;\n        },\n        set: function (rate) {\n            this._playbackRate = rate;\n            var now = this.now();\n            // cancel the stop event since it's at a different time now\n            var stopEvent = this._state.getNextState(\"stopped\", now);\n            if (stopEvent && stopEvent.implicitEnd) {\n                this._state.cancel(stopEvent.time);\n                this._activeSources.forEach(function (source) { return source.cancelStop(); });\n            }\n            // set all the sources\n            this._activeSources.forEach(function (source) {\n                source.playbackRate.setValueAtTime(rate, now);\n            });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Player.prototype, \"reverse\", {\n        /**\n         * The direction the buffer should play in\n         */\n        get: function () {\n            return this._buffer.reverse;\n        },\n        set: function (rev) {\n            this._buffer.reverse = rev;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Player.prototype, \"loaded\", {\n        /**\n         * If the buffer is loaded\n         */\n        get: function () {\n            return this._buffer.loaded;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Player.prototype.dispose = function () {\n        _super.prototype.dispose.call(this);\n        // disconnect all of the players\n        this._activeSources.forEach(function (source) { return source.dispose(); });\n        this._activeSources.clear();\n        this._buffer.dispose();\n        return this;\n    };\n    tslib_1.__decorate([\n        timeRange(0)\n    ], Player.prototype, \"fadeIn\", void 0);\n    tslib_1.__decorate([\n        timeRange(0)\n    ], Player.prototype, \"fadeOut\", void 0);\n    return Player;\n}(Source));\nexport { Player };\n//# sourceMappingURL=Player.js.map","import * as tslib_1 from \"tslib\";\nimport { SignalOperator } from \"./SignalOperator\";\nimport { WaveShaper } from \"./WaveShaper\";\n/**\n * Return the absolute value of an incoming signal.\n *\n * @example\n * import { Abs, Signal } from \"tone\";\n * const signal = new Signal(-1);\n * const abs = new Abs();\n * signal.connect(abs);\n * // the output of abs is 1.\n * @category Signal\n */\nvar Abs = /** @class */ (function (_super) {\n    tslib_1.__extends(Abs, _super);\n    function Abs() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.name = \"Abs\";\n        /**\n         * The node which converts the audio ranges\n         */\n        _this._abs = new WaveShaper({\n            context: _this.context,\n            mapping: function (val) {\n                if (Math.abs(val) < 0.001) {\n                    return 0;\n                }\n                else {\n                    return Math.abs(val);\n                }\n            },\n        });\n        /**\n         * The AudioRange input [-1, 1]\n         */\n        _this.input = _this._abs;\n        /**\n         * The output range [0, 1]\n         */\n        _this.output = _this._abs;\n        return _this;\n    }\n    /**\n     * clean up\n     */\n    Abs.prototype.dispose = function () {\n        _super.prototype.dispose.call(this);\n        this._abs.dispose();\n        return this;\n    };\n    return Abs;\n}(SignalOperator));\nexport { Abs };\n//# sourceMappingURL=Abs.js.map","import * as tslib_1 from \"tslib\";\nimport { Volume } from \"../../component/channel/Volume\";\nimport { ToneAudioBuffers } from \"../../core/context/ToneAudioBuffers\";\nimport { ToneAudioNode } from \"../../core/context/ToneAudioNode\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { assert } from \"../../core/util/Debug\";\nimport { noOp, readOnly } from \"../../core/util/Interface\";\nimport { Source } from \"../Source\";\nimport { Player } from \"./Player\";\n/**\n * Players combines multiple [[Player]] objects.\n * @category Source\n */\nvar Players = /** @class */ (function (_super) {\n    tslib_1.__extends(Players, _super);\n    function Players() {\n        var _this = _super.call(this, optionsFromArguments(Players.getDefaults(), arguments, [\"urls\", \"onload\"], \"urls\")) || this;\n        _this.name = \"Players\";\n        /**\n         * Players has no input.\n         */\n        _this.input = undefined;\n        /**\n         * The container of all of the players\n         */\n        _this._players = new Map();\n        var options = optionsFromArguments(Players.getDefaults(), arguments, [\"urls\", \"onload\"], \"urls\");\n        /**\n         * The output volume node\n         */\n        _this._volume = _this.output = new Volume({\n            context: _this.context,\n            volume: options.volume,\n        });\n        _this.volume = _this._volume.volume;\n        readOnly(_this, \"volume\");\n        _this._buffers = new ToneAudioBuffers({\n            urls: options.urls,\n            onload: options.onload,\n            baseUrl: options.baseUrl,\n            onerror: options.onerror\n        });\n        // mute initially\n        _this.mute = options.mute;\n        _this._fadeIn = options.fadeIn;\n        _this._fadeOut = options.fadeOut;\n        return _this;\n    }\n    Players.getDefaults = function () {\n        return Object.assign(Source.getDefaults(), {\n            baseUrl: \"\",\n            fadeIn: 0,\n            fadeOut: 0,\n            mute: false,\n            onload: noOp,\n            onerror: noOp,\n            urls: {},\n            volume: 0,\n        });\n    };\n    Object.defineProperty(Players.prototype, \"mute\", {\n        /**\n         * Mute the output.\n         */\n        get: function () {\n            return this._volume.mute;\n        },\n        set: function (mute) {\n            this._volume.mute = mute;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Players.prototype, \"fadeIn\", {\n        /**\n         * The fadeIn time of the envelope applied to the source.\n         */\n        get: function () {\n            return this._fadeIn;\n        },\n        set: function (fadeIn) {\n            this._fadeIn = fadeIn;\n            this._players.forEach(function (player) {\n                player.fadeIn = fadeIn;\n            });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Players.prototype, \"fadeOut\", {\n        /**\n         * The fadeOut time of the each of the sources.\n         */\n        get: function () {\n            return this._fadeOut;\n        },\n        set: function (fadeOut) {\n            this._fadeOut = fadeOut;\n            this._players.forEach(function (player) {\n                player.fadeOut = fadeOut;\n            });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Players.prototype, \"state\", {\n        /**\n         * The state of the players object. Returns \"started\" if any of the players are playing.\n         */\n        get: function () {\n            var playing = Array.from(this._players).some(function (_a) {\n                var _b = tslib_1.__read(_a, 2), _ = _b[0], player = _b[1];\n                return player.state === \"started\";\n            });\n            return playing ? \"started\" : \"stopped\";\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * True if the buffers object has a buffer by that name.\n     * @param name  The key or index of the buffer.\n     */\n    Players.prototype.has = function (name) {\n        return this._buffers.has(name);\n    };\n    /**\n     * Get a player by name.\n     * @param  name  The players name as defined in the constructor object or `add` method.\n     */\n    Players.prototype.player = function (name) {\n        assert(this.has(name), \"No Player with the name \" + name + \" exists on this object\");\n        if (!this._players.has(name)) {\n            var player = new Player({\n                context: this.context,\n                fadeIn: this._fadeIn,\n                fadeOut: this._fadeOut,\n                url: this._buffers.get(name),\n            }).connect(this.output);\n            this._players.set(name, player);\n        }\n        return this._players.get(name);\n    };\n    Object.defineProperty(Players.prototype, \"loaded\", {\n        /**\n         * If all the buffers are loaded or not\n         */\n        get: function () {\n            return this._buffers.loaded;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Add a player by name and url to the Players\n     * @param  name A unique name to give the player\n     * @param  url  Either the url of the bufer or a buffer which will be added with the given name.\n     * @param callback  The callback to invoke when the url is loaded.\n     */\n    Players.prototype.add = function (name, url, callback) {\n        assert(!this._buffers.has(name), \"A buffer with that name already exists on this object\");\n        this._buffers.add(name, url, callback);\n        return this;\n    };\n    /**\n     * Stop all of the players at the given time\n     * @param time The time to stop all of the players.\n     */\n    Players.prototype.stopAll = function (time) {\n        this._players.forEach(function (player) { return player.stop(time); });\n        return this;\n    };\n    Players.prototype.dispose = function () {\n        _super.prototype.dispose.call(this);\n        this._volume.dispose();\n        this.volume.dispose();\n        this._players.forEach(function (player) { return player.dispose(); });\n        this._buffers.dispose();\n        return this;\n    };\n    return Players;\n}(ToneAudioNode));\nexport { Players };\n//# sourceMappingURL=Players.js.map","import * as tslib_1 from \"tslib\";\nimport { Source } from \"../Source\";\nimport { noOp } from \"../../core/util/Interface\";\nimport { ToneAudioBuffer } from \"../../core/context/ToneAudioBuffer\";\nimport { defaultArg, optionsFromArguments } from \"../../core/util/Defaults\";\nimport { Clock } from \"../../core/clock/Clock\";\nimport { ToneBufferSource } from \"./ToneBufferSource\";\nimport { intervalToFrequencyRatio } from \"../../core/type/Conversions\";\nimport { assertRange } from \"../../core/util/Debug\";\n/**\n * GrainPlayer implements [granular synthesis](https://en.wikipedia.org/wiki/Granular_synthesis).\n * Granular Synthesis enables you to adjust pitch and playback rate independently. The grainSize is the\n * amount of time each small chunk of audio is played for and the overlap is the\n * amount of crossfading transition time between successive grains.\n * @category Source\n */\nvar GrainPlayer = /** @class */ (function (_super) {\n    tslib_1.__extends(GrainPlayer, _super);\n    function GrainPlayer() {\n        var _this = _super.call(this, optionsFromArguments(GrainPlayer.getDefaults(), arguments, [\"url\", \"onload\"])) || this;\n        _this.name = \"GrainPlayer\";\n        /**\n         * Internal loopStart value\n         */\n        _this._loopStart = 0;\n        /**\n         * Internal loopStart value\n         */\n        _this._loopEnd = 0;\n        /**\n         * All of the currently playing BufferSources\n         */\n        _this._activeSources = [];\n        var options = optionsFromArguments(GrainPlayer.getDefaults(), arguments, [\"url\", \"onload\"]);\n        _this.buffer = new ToneAudioBuffer({\n            onload: options.onload,\n            onerror: options.onerror,\n            reverse: options.reverse,\n            url: options.url,\n        });\n        _this._clock = new Clock({\n            context: _this.context,\n            callback: _this._tick.bind(_this),\n            frequency: 1 / options.grainSize\n        });\n        _this._playbackRate = options.playbackRate;\n        _this._grainSize = options.grainSize;\n        _this._overlap = options.overlap;\n        _this.detune = options.detune;\n        // setup\n        _this.overlap = options.overlap;\n        _this.loop = options.loop;\n        _this.playbackRate = options.playbackRate;\n        _this.grainSize = options.grainSize;\n        _this.loopStart = options.loopStart;\n        _this.loopEnd = options.loopEnd;\n        _this.reverse = options.reverse;\n        _this._clock.on(\"stop\", _this._onstop.bind(_this));\n        return _this;\n    }\n    GrainPlayer.getDefaults = function () {\n        return Object.assign(Source.getDefaults(), {\n            onload: noOp,\n            onerror: noOp,\n            overlap: 0.1,\n            grainSize: 0.2,\n            playbackRate: 1,\n            detune: 0,\n            loop: false,\n            loopStart: 0,\n            loopEnd: 0,\n            reverse: false\n        });\n    };\n    /**\n     * Internal start method\n     */\n    GrainPlayer.prototype._start = function (time, offset, duration) {\n        offset = defaultArg(offset, 0);\n        offset = this.toSeconds(offset);\n        time = this.toSeconds(time);\n        var grainSize = 1 / this._clock.frequency.getValueAtTime(time);\n        this._clock.start(time, offset / grainSize);\n        if (duration) {\n            this.stop(time + this.toSeconds(duration));\n        }\n    };\n    /**\n     * Stop and then restart the player from the beginning (or offset)\n     * @param  time When the player should start.\n     * @param  offset The offset from the beginning of the sample to start at.\n     * @param  duration How long the sample should play. If no duration is given,\n     * \t\t\t\t\tit will default to the full length of the sample (minus any offset)\n     */\n    GrainPlayer.prototype.restart = function (time, offset, duration) {\n        _super.prototype.restart.call(this, time, offset, duration);\n        return this;\n    };\n    GrainPlayer.prototype._restart = function (time, offset, duration) {\n        this._stop(time);\n        this._start(time, offset, duration);\n    };\n    /**\n     * Internal stop method\n     */\n    GrainPlayer.prototype._stop = function (time) {\n        this._clock.stop(time);\n    };\n    /**\n     * Invoked when the clock is stopped\n     */\n    GrainPlayer.prototype._onstop = function (time) {\n        // stop the players\n        this._activeSources.forEach(function (source) {\n            source.fadeOut = 0;\n            source.stop(time);\n        });\n        this.onstop(this);\n    };\n    /**\n     * Invoked on each clock tick. scheduled a new grain at this time.\n     */\n    GrainPlayer.prototype._tick = function (time) {\n        var _this = this;\n        // check if it should stop looping\n        var ticks = this._clock.getTicksAtTime(time);\n        var grainSize = 1 / this._clock.frequency.getValueAtTime(time);\n        var offset = ticks * grainSize;\n        this.log(\"offset\", offset);\n        if (!this.loop && offset > this.buffer.duration) {\n            this.stop(time);\n            return;\n        }\n        // at the beginning of the file, the fade in should be 0\n        var fadeIn = offset < this._overlap ? 0 : this._overlap;\n        // create a buffer source\n        var source = new ToneBufferSource({\n            context: this.context,\n            url: this.buffer,\n            fadeIn: fadeIn,\n            fadeOut: this._overlap,\n            loop: this.loop,\n            loopStart: this._loopStart,\n            loopEnd: this._loopEnd,\n            // compute the playbackRate based on the detune\n            playbackRate: intervalToFrequencyRatio(this.detune / 100)\n        }).connect(this.output);\n        source.start(time, this._grainSize * ticks);\n        source.stop(time + this._grainSize / this.playbackRate);\n        // add it to the active sources\n        this._activeSources.push(source);\n        // remove it when it's done\n        source.onended = function () {\n            var index = _this._activeSources.indexOf(source);\n            if (index !== -1) {\n                _this._activeSources.splice(index, 1);\n            }\n        };\n    };\n    Object.defineProperty(GrainPlayer.prototype, \"playbackRate\", {\n        /**\n         * The playback rate of the sample\n         */\n        get: function () {\n            return this._playbackRate;\n        },\n        set: function (rate) {\n            assertRange(rate, 0.001);\n            this._playbackRate = rate;\n            this.grainSize = this._grainSize;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GrainPlayer.prototype, \"loopStart\", {\n        /**\n         * The loop start time.\n         */\n        get: function () {\n            return this._loopStart;\n        },\n        set: function (time) {\n            if (this.buffer.loaded) {\n                assertRange(this.toSeconds(time), 0, this.buffer.duration);\n            }\n            this._loopStart = this.toSeconds(time);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GrainPlayer.prototype, \"loopEnd\", {\n        /**\n         * The loop end time.\n         */\n        get: function () {\n            return this._loopEnd;\n        },\n        set: function (time) {\n            if (this.buffer.loaded) {\n                assertRange(this.toSeconds(time), 0, this.buffer.duration);\n            }\n            this._loopEnd = this.toSeconds(time);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GrainPlayer.prototype, \"reverse\", {\n        /**\n         * The direction the buffer should play in\n         */\n        get: function () {\n            return this.buffer.reverse;\n        },\n        set: function (rev) {\n            this.buffer.reverse = rev;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GrainPlayer.prototype, \"grainSize\", {\n        /**\n         * The size of each chunk of audio that the\n         * buffer is chopped into and played back at.\n         */\n        get: function () {\n            return this._grainSize;\n        },\n        set: function (size) {\n            this._grainSize = this.toSeconds(size);\n            this._clock.frequency.setValueAtTime(this._playbackRate / this._grainSize, this.now());\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GrainPlayer.prototype, \"overlap\", {\n        /**\n         * The duration of the cross-fade between successive grains.\n         */\n        get: function () {\n            return this._overlap;\n        },\n        set: function (time) {\n            this._overlap = this.toSeconds(time);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GrainPlayer.prototype, \"loaded\", {\n        /**\n         * If all the buffer is loaded\n         */\n        get: function () {\n            return this.buffer.loaded;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    GrainPlayer.prototype.dispose = function () {\n        _super.prototype.dispose.call(this);\n        this.buffer.dispose();\n        this._clock.dispose();\n        this._activeSources.forEach(function (source) { return source.dispose(); });\n        return this;\n    };\n    return GrainPlayer;\n}(Source));\nexport { GrainPlayer };\n//# sourceMappingURL=GrainPlayer.js.map","import * as tslib_1 from \"tslib\";\nimport { SignalOperator } from \"./SignalOperator\";\nimport { WaveShaper } from \"./WaveShaper\";\n/**\n * GainToAudio converts an input in NormalRange [0,1] to AudioRange [-1,1].\n * See {@link AudioToGain}.\n * @category Signal\n */\nvar GainToAudio = /** @class */ (function (_super) {\n    tslib_1.__extends(GainToAudio, _super);\n    function GainToAudio() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.name = \"GainToAudio\";\n        /**\n         * The node which converts the audio ranges\n         */\n        _this._norm = new WaveShaper({\n            context: _this.context,\n            mapping: function (x) { return Math.abs(x) * 2 - 1; },\n        });\n        /**\n         * The NormalRange input [0, 1]\n         */\n        _this.input = _this._norm;\n        /**\n         * The AudioRange output [-1, 1]\n         */\n        _this.output = _this._norm;\n        return _this;\n    }\n    /**\n     * clean up\n     */\n    GainToAudio.prototype.dispose = function () {\n        _super.prototype.dispose.call(this);\n        this._norm.dispose();\n        return this;\n    };\n    return GainToAudio;\n}(SignalOperator));\nexport { GainToAudio };\n//# sourceMappingURL=GainToAudio.js.map","import * as tslib_1 from \"tslib\";\nimport { Multiply } from \"./Multiply\";\nimport { SignalOperator } from \"./SignalOperator\";\n/**\n * Negate the incoming signal. i.e. an input signal of 10 will output -10\n *\n * @example\n * import { Negate, Signal } from \"tone\";\n * const neg = new Negate();\n * const sig = new Signal(-2).connect(neg);\n * // output of neg is positive 2.\n * @category Signal\n */\nvar Negate = /** @class */ (function (_super) {\n    tslib_1.__extends(Negate, _super);\n    function Negate() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.name = \"Negate\";\n        /**\n         * negation is done by multiplying by -1\n         */\n        _this._multiply = new Multiply({\n            context: _this.context,\n            value: -1,\n        });\n        /**\n         * The input and output are equal to the multiply node\n         */\n        _this.input = _this._multiply;\n        _this.output = _this._multiply;\n        return _this;\n    }\n    /**\n     * clean up\n     * @returns {Negate} this\n     */\n    Negate.prototype.dispose = function () {\n        _super.prototype.dispose.call(this);\n        this._multiply.dispose();\n        return this;\n    };\n    return Negate;\n}(SignalOperator));\nexport { Negate };\n//# sourceMappingURL=Negate.js.map","import * as tslib_1 from \"tslib\";\nimport { connectSeries } from \"../core/context/ToneAudioNode\";\nimport { Gain } from \"../core/context/Gain\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { Negate } from \"../signal/Negate\";\nimport { Signal } from \"../signal/Signal\";\n/**\n * Subtract the signal connected to the input is subtracted from the signal connected\n * The subtrahend.\n *\n * @example\n * import { Signal, Subtract } from \"tone\";\n * // subtract a scalar from a signal\n * const sub = new Subtract(1);\n * const sig = new Signal(4).connect(sub);\n * // the output of sub is 3.\n * @example\n * import { Signal, Subtract } from \"tone\";\n * // subtract two signals\n * const sub = new Subtract();\n * const sigA = new Signal(10);\n * const sigB = new Signal(2.5);\n * sigA.connect(sub);\n * sigB.connect(sub.subtrahend);\n * // output of sub is 7.5\n * @category Signal\n */\nvar Subtract = /** @class */ (function (_super) {\n    tslib_1.__extends(Subtract, _super);\n    function Subtract() {\n        var _this = _super.call(this, Object.assign(optionsFromArguments(Subtract.getDefaults(), arguments, [\"value\"]))) || this;\n        _this.override = false;\n        _this.name = \"Subtract\";\n        /**\n         * the summing node\n         */\n        _this._sum = new Gain({ context: _this.context });\n        _this.input = _this._sum;\n        _this.output = _this._sum;\n        /**\n         * Negate the input of the second input before connecting it to the summing node.\n         */\n        _this._neg = new Negate({ context: _this.context });\n        /**\n         * The value which is subtracted from the main signal\n         */\n        _this.subtrahend = _this._param;\n        connectSeries(_this._constantSource, _this._neg, _this._sum);\n        return _this;\n    }\n    Subtract.getDefaults = function () {\n        return Object.assign(Signal.getDefaults(), {\n            value: 0,\n        });\n    };\n    Subtract.prototype.dispose = function () {\n        _super.prototype.dispose.call(this);\n        this._neg.dispose();\n        this._sum.dispose();\n        return this;\n    };\n    return Subtract;\n}(Signal));\nexport { Subtract };\n//# sourceMappingURL=Subtract.js.map","import * as tslib_1 from \"tslib\";\nimport { SignalOperator } from \"./SignalOperator\";\nimport { Multiply } from \"./Multiply\";\nimport { WaveShaper } from \"./WaveShaper\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\n/**\n * GreaterThanZero outputs 1 when the input is strictly greater than zero\n * @example\n * import { GreaterThanZero, Signal } from \"tone\";\n * const gt0 = new GreaterThanZero();\n * const sig = new Signal(0.01).connect(gt0);\n * // the output of gt0 is 1.\n * sig.value = 0;\n * // the output of gt0 is 0.\n */\nvar GreaterThanZero = /** @class */ (function (_super) {\n    tslib_1.__extends(GreaterThanZero, _super);\n    function GreaterThanZero() {\n        var _this = _super.call(this, Object.assign(optionsFromArguments(GreaterThanZero.getDefaults(), arguments))) || this;\n        _this.name = \"GreaterThanZero\";\n        _this._thresh = _this.output = new WaveShaper({\n            context: _this.context,\n            length: 127,\n            mapping: function (val) {\n                if (val <= 0) {\n                    return 0;\n                }\n                else {\n                    return 1;\n                }\n            },\n        });\n        _this._scale = _this.input = new Multiply({\n            context: _this.context,\n            value: 10000\n        });\n        // connections\n        _this._scale.connect(_this._thresh);\n        return _this;\n    }\n    GreaterThanZero.prototype.dispose = function () {\n        _super.prototype.dispose.call(this);\n        this._scale.dispose();\n        this._thresh.dispose();\n        return this;\n    };\n    return GreaterThanZero;\n}(SignalOperator));\nexport { GreaterThanZero };\n//# sourceMappingURL=GreaterThanZero.js.map","import * as tslib_1 from \"tslib\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { Subtract } from \"./Subtract\";\nimport { Signal } from \"./Signal\";\nimport { GreaterThanZero } from \"./GreaterThanZero\";\nimport { readOnly } from \"../core/util/Interface\";\n/**\n * Output 1 if the signal is greater than the value, otherwise outputs 0.\n * can compare two signals or a signal and a number.\n *\n * @example\n * import { GreaterThan, Signal } from \"tone\";\n * const gt = new GreaterThan(2);\n * const sig = new Signal(4).connect(gt);\n * // output of gt is equal 1.\n */\nvar GreaterThan = /** @class */ (function (_super) {\n    tslib_1.__extends(GreaterThan, _super);\n    function GreaterThan() {\n        var _this = _super.call(this, Object.assign(optionsFromArguments(GreaterThan.getDefaults(), arguments, [\"value\"]))) || this;\n        _this.name = \"GreaterThan\";\n        _this.override = false;\n        var options = optionsFromArguments(GreaterThan.getDefaults(), arguments, [\"value\"]);\n        _this._subtract = _this.input = new Subtract({\n            context: _this.context,\n            value: options.value\n        });\n        _this._gtz = _this.output = new GreaterThanZero({ context: _this.context });\n        _this.comparator = _this._param = _this._subtract.subtrahend;\n        readOnly(_this, \"comparator\");\n        // connect\n        _this._subtract.connect(_this._gtz);\n        return _this;\n    }\n    GreaterThan.getDefaults = function () {\n        return Object.assign(Signal.getDefaults(), {\n            value: 0,\n        });\n    };\n    GreaterThan.prototype.dispose = function () {\n        _super.prototype.dispose.call(this);\n        this._gtz.dispose();\n        this._subtract.dispose();\n        this.comparator.dispose();\n        return this;\n    };\n    return GreaterThan;\n}(Signal));\nexport { GreaterThan };\n//# sourceMappingURL=GreaterThan.js.map","import * as tslib_1 from \"tslib\";\nimport { WaveShaper } from \"./WaveShaper\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { SignalOperator } from \"./SignalOperator\";\n/**\n * Pow applies an exponent to the incoming signal. The incoming signal must be AudioRange [-1, 1]\n *\n * @example\n * import { Pow, Signal } from \"tone\";\n * const pow = new Pow(2);\n * const sig = new Signal(0.5).connect(pow);\n * // output of pow is 0.25.\n * @category Signal\n */\nvar Pow = /** @class */ (function (_super) {\n    tslib_1.__extends(Pow, _super);\n    function Pow() {\n        var _this = _super.call(this, Object.assign(optionsFromArguments(Pow.getDefaults(), arguments, [\"value\"]))) || this;\n        _this.name = \"Pow\";\n        var options = optionsFromArguments(Pow.getDefaults(), arguments, [\"value\"]);\n        _this._exponentScaler = _this.input = _this.output = new WaveShaper({\n            context: _this.context,\n            mapping: _this._expFunc(options.value),\n            length: 8192,\n        });\n        _this._exponent = options.value;\n        return _this;\n    }\n    Pow.getDefaults = function () {\n        return Object.assign(SignalOperator.getDefaults(), {\n            value: 1,\n        });\n    };\n    /**\n     * the function which maps the waveshaper\n     * @param exponent exponent value\n     */\n    Pow.prototype._expFunc = function (exponent) {\n        return function (val) {\n            return Math.pow(Math.abs(val), exponent);\n        };\n    };\n    Object.defineProperty(Pow.prototype, \"value\", {\n        /**\n         * The value of the exponent.\n         */\n        get: function () {\n            return this._exponent;\n        },\n        set: function (exponent) {\n            this._exponent = exponent;\n            this._exponentScaler.setMap(this._expFunc(this._exponent));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Clean up.\n     */\n    Pow.prototype.dispose = function () {\n        _super.prototype.dispose.call(this);\n        this._exponentScaler.dispose();\n        return this;\n    };\n    return Pow;\n}(SignalOperator));\nexport { Pow };\n//# sourceMappingURL=Pow.js.map","import * as tslib_1 from \"tslib\";\nimport { Scale } from \"./Scale\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { Pow } from \"./Pow\";\n/**\n * Performs an exponential scaling on an input signal.\n * Scales a NormalRange value [0,1] exponentially\n * to the output range of outputMin to outputMax.\n * @example\n * import { ScaleExp, Signal } from \"tone\";\n * const scaleExp = new ScaleExp(0, 100, 2);\n * const signal = new Signal(0.5).connect(scaleExp);\n */\nvar ScaleExp = /** @class */ (function (_super) {\n    tslib_1.__extends(ScaleExp, _super);\n    function ScaleExp() {\n        var _this = _super.call(this, Object.assign(optionsFromArguments(ScaleExp.getDefaults(), arguments, [\"min\", \"max\", \"exponent\"]))) || this;\n        _this.name = \"ScaleExp\";\n        var options = optionsFromArguments(ScaleExp.getDefaults(), arguments, [\"min\", \"max\", \"exponent\"]);\n        _this.input = _this._exp = new Pow({\n            context: _this.context,\n            value: options.exponent,\n        });\n        _this._exp.connect(_this._mult);\n        return _this;\n    }\n    ScaleExp.getDefaults = function () {\n        return Object.assign(Scale.getDefaults(), {\n            exponent: 1,\n        });\n    };\n    Object.defineProperty(ScaleExp.prototype, \"exponent\", {\n        /**\n         * Instead of interpolating linearly between the [[min]] and\n         * [[max]] values, setting the exponent will interpolate between\n         * the two values with an exponential curve.\n         */\n        get: function () {\n            return this._exp.value;\n        },\n        set: function (exp) {\n            this._exp.value = exp;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ScaleExp.prototype.dispose = function () {\n        _super.prototype.dispose.call(this);\n        this._exp.dispose();\n        return this;\n    };\n    return ScaleExp;\n}(Scale));\nexport { ScaleExp };\n//# sourceMappingURL=ScaleExp.js.map","import * as tslib_1 from \"tslib\";\nimport { ToneAudioNode } from \"../../core/context/ToneAudioNode\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { isArray, isObject, isString } from \"../../core/util/TypeCheck\";\nimport { connectSignal, Signal } from \"../../signal/Signal\";\nimport { OfflineContext } from \"../../core/context/OfflineContext\";\nimport { assert } from \"../../core/util/Debug\";\nimport { range, timeRange } from \"../../core/util/Decorator\";\n/**\n * Envelope is an [ADSR](https://en.wikipedia.org/wiki/Synthesizer#ADSR_envelope)\n * envelope generator. Envelope outputs a signal which\n * can be connected to an AudioParam or Tone.Signal.\n * ```\n *           /\\\n *          /  \\\n *         /    \\\n *        /      \\\n *       /        \\___________\n *      /                     \\\n *     /                       \\\n *    /                         \\\n *   /                           \\\n * ```\n *\n * @example\n * import { Envelope, Gain } from \"tone\";\n * // an amplitude envelope\n * const gainNode = new Gain();\n * const env = new Envelope({\n * \tattack: 0.1,\n * \tdecay: 0.2,\n * \tsustain: 1,\n * \trelease: 0.8,\n * });\n * env.connect(gainNode.gain);\n * @category Component\n */\nvar Envelope = /** @class */ (function (_super) {\n    tslib_1.__extends(Envelope, _super);\n    function Envelope() {\n        var _this = _super.call(this, optionsFromArguments(Envelope.getDefaults(), arguments, [\"attack\", \"decay\", \"sustain\", \"release\"])) || this;\n        _this.name = \"Envelope\";\n        /**\n         * the signal which is output.\n         */\n        _this._sig = new Signal({\n            context: _this.context,\n            value: 0,\n        });\n        /**\n         * The output signal of the envelope\n         */\n        _this.output = _this._sig;\n        /**\n         * Envelope has no input\n         */\n        _this.input = undefined;\n        var options = optionsFromArguments(Envelope.getDefaults(), arguments, [\"attack\", \"decay\", \"sustain\", \"release\"]);\n        _this.attack = options.attack;\n        _this.decay = options.decay;\n        _this.sustain = options.sustain;\n        _this.release = options.release;\n        _this.attackCurve = options.attackCurve;\n        _this.releaseCurve = options.releaseCurve;\n        _this.decayCurve = options.decayCurve;\n        return _this;\n    }\n    Envelope.getDefaults = function () {\n        return Object.assign(ToneAudioNode.getDefaults(), {\n            attack: 0.01,\n            attackCurve: \"linear\",\n            decay: 0.1,\n            decayCurve: \"exponential\",\n            release: 1,\n            releaseCurve: \"exponential\",\n            sustain: 0.5,\n        });\n    };\n    Object.defineProperty(Envelope.prototype, \"value\", {\n        /**\n         * Read the current value of the envelope. Useful for\n         * synchronizing visual output to the envelope.\n         */\n        get: function () {\n            return this.getValueAtTime(this.now());\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Get the curve\n     * @param  curve\n     * @param  direction  In/Out\n     * @return The curve name\n     */\n    Envelope.prototype._getCurve = function (curve, direction) {\n        if (isString(curve)) {\n            return curve;\n        }\n        else {\n            // look up the name in the curves array\n            var curveName = void 0;\n            for (curveName in EnvelopeCurves) {\n                if (EnvelopeCurves[curveName][direction] === curve) {\n                    return curveName;\n                }\n            }\n            // return the custom curve\n            return curve;\n        }\n    };\n    /**\n     * Assign a the curve to the given name using the direction\n     * @param  name\n     * @param  direction In/Out\n     * @param  curve\n     */\n    Envelope.prototype._setCurve = function (name, direction, curve) {\n        // check if it's a valid type\n        if (isString(curve) && Reflect.has(EnvelopeCurves, curve)) {\n            var curveDef = EnvelopeCurves[curve];\n            if (isObject(curveDef)) {\n                if (name !== \"_decayCurve\") {\n                    this[name] = curveDef[direction];\n                }\n            }\n            else {\n                this[name] = curveDef;\n            }\n        }\n        else if (isArray(curve) && name !== \"_decayCurve\") {\n            this[name] = curve;\n        }\n        else {\n            throw new Error(\"Envelope: invalid curve: \" + curve);\n        }\n    };\n    Object.defineProperty(Envelope.prototype, \"attackCurve\", {\n        /**\n         * The shape of the attack.\n         * Can be any of these strings:\n         * * \"linear\"\n         * * \"exponential\"\n         * * \"sine\"\n         * * \"cosine\"\n         * * \"bounce\"\n         * * \"ripple\"\n         * * \"step\"\n         *\n         * Can also be an array which describes the curve. Values\n         * in the array are evenly subdivided and linearly\n         * interpolated over the duration of the attack.\n         * @example\n         * import { Envelope } from \"tone\";\n         * const env = new Envelope();\n         * env.attackCurve = \"linear\";\n         * @example\n         * import { Envelope } from \"tone\";\n         * const env = new Envelope();\n         * // can also be an array\n         * env.attackCurve = [0, 0.2, 0.3, 0.4, 1];\n         */\n        get: function () {\n            return this._getCurve(this._attackCurve, \"In\");\n        },\n        set: function (curve) {\n            this._setCurve(\"_attackCurve\", \"In\", curve);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Envelope.prototype, \"releaseCurve\", {\n        /**\n         * The shape of the release. See the attack curve types.\n         * @example\n         * import { Envelope } from \"tone\";\n         * const env = new Envelope();\n         * env.releaseCurve = \"linear\";\n         */\n        get: function () {\n            return this._getCurve(this._releaseCurve, \"Out\");\n        },\n        set: function (curve) {\n            this._setCurve(\"_releaseCurve\", \"Out\", curve);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Envelope.prototype, \"decayCurve\", {\n        /**\n         * The shape of the decay either \"linear\" or \"exponential\"\n         * @example\n         * import { Envelope } from \"tone\";\n         * const env = new Envelope();\n         * env.decayCurve = \"linear\";\n         */\n        get: function () {\n            return this._decayCurve;\n        },\n        set: function (curve) {\n            assert([\"linear\", \"exponential\"].some(function (c) { return c === curve; }), \"Invalid envelope curve: \" + curve);\n            this._decayCurve = curve;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Trigger the attack/decay portion of the ADSR envelope.\n     * @param  time When the attack should start.\n     * @param velocity The velocity of the envelope scales the vales.\n     *                             number between 0-1\n     * @example\n     * import { AmplitudeEnvelope, Oscillator } from \"tone\";\n     * const env = new AmplitudeEnvelope().toDestination();\n     * const osc = new Oscillator().connect(env).start();\n     * // trigger the attack 0.5 seconds from now with a velocity of 0.2\n     * env.triggerAttack(\"+0.5\", 0.2);\n     */\n    Envelope.prototype.triggerAttack = function (time, velocity) {\n        if (velocity === void 0) { velocity = 1; }\n        this.log(\"triggerAttack\", time, velocity);\n        time = this.toSeconds(time);\n        var originalAttack = this.toSeconds(this.attack);\n        var attack = originalAttack;\n        var decay = this.toSeconds(this.decay);\n        // check if it's not a complete attack\n        var currentValue = this.getValueAtTime(time);\n        if (currentValue > 0) {\n            // subtract the current value from the attack time\n            var attackRate = 1 / attack;\n            var remainingDistance = 1 - currentValue;\n            // the attack is now the remaining time\n            attack = remainingDistance / attackRate;\n        }\n        // attack\n        if (attack < this.sampleTime) {\n            this._sig.cancelScheduledValues(time);\n            // case where the attack time is 0 should set instantly\n            this._sig.setValueAtTime(velocity, time);\n        }\n        else if (this._attackCurve === \"linear\") {\n            this._sig.linearRampTo(velocity, attack, time);\n        }\n        else if (this._attackCurve === \"exponential\") {\n            this._sig.targetRampTo(velocity, attack, time);\n        }\n        else {\n            this._sig.cancelAndHoldAtTime(time);\n            var curve = this._attackCurve;\n            // find the starting position in the curve\n            for (var i = 1; i < curve.length; i++) {\n                // the starting index is between the two values\n                if (curve[i - 1] <= currentValue && currentValue <= curve[i]) {\n                    curve = this._attackCurve.slice(i);\n                    // the first index is the current value\n                    curve[0] = currentValue;\n                    break;\n                }\n            }\n            this._sig.setValueCurveAtTime(curve, time, attack, velocity);\n        }\n        // decay\n        if (decay && this.sustain < 1) {\n            var decayValue = velocity * this.sustain;\n            var decayStart = time + attack;\n            this.log(\"decay\", decayStart);\n            if (this._decayCurve === \"linear\") {\n                this._sig.linearRampToValueAtTime(decayValue, decay + decayStart);\n            }\n            else {\n                this._sig.exponentialApproachValueAtTime(decayValue, decayStart, decay);\n            }\n        }\n        return this;\n    };\n    /**\n     * Triggers the release of the envelope.\n     * @param  time When the release portion of the envelope should start.\n     * @example\n     * import { AmplitudeEnvelope, Oscillator } from \"tone\";\n     * const env = new AmplitudeEnvelope().toDestination();\n     * const osc = new Oscillator().connect(env).start();\n     * env.triggerAttack();\n     * // trigger the release half a second after the attack\n     * env.triggerRelease(\"+0.5\");\n     */\n    Envelope.prototype.triggerRelease = function (time) {\n        this.log(\"triggerRelease\", time);\n        time = this.toSeconds(time);\n        var currentValue = this.getValueAtTime(time);\n        if (currentValue > 0) {\n            var release = this.toSeconds(this.release);\n            if (release < this.sampleTime) {\n                this._sig.setValueAtTime(0, time);\n            }\n            else if (this._releaseCurve === \"linear\") {\n                this._sig.linearRampTo(0, release, time);\n            }\n            else if (this._releaseCurve === \"exponential\") {\n                this._sig.targetRampTo(0, release, time);\n            }\n            else {\n                assert(isArray(this._releaseCurve), \"releaseCurve must be either 'linear', 'exponential' or an array\");\n                this._sig.cancelAndHoldAtTime(time);\n                this._sig.setValueCurveAtTime(this._releaseCurve, time, release, currentValue);\n            }\n        }\n        return this;\n    };\n    /**\n     * Get the scheduled value at the given time. This will\n     * return the unconverted (raw) value.\n     */\n    Envelope.prototype.getValueAtTime = function (time) {\n        return this._sig.getValueAtTime(time);\n    };\n    /**\n     * triggerAttackRelease is shorthand for triggerAttack, then waiting\n     * some duration, then triggerRelease.\n     * @param duration The duration of the sustain.\n     * @param time When the attack should be triggered.\n     * @param velocity The velocity of the envelope.\n     * @example\n     * import { AmplitudeEnvelope, Oscillator } from \"tone\";\n     * const env = new AmplitudeEnvelope().toDestination();\n     * const osc = new Oscillator().connect(env).start();\n     * // trigger the release 0.5 seconds after the attack\n     * env.triggerAttackRelease(0.5);\n     */\n    Envelope.prototype.triggerAttackRelease = function (duration, time, velocity) {\n        if (velocity === void 0) { velocity = 1; }\n        time = this.toSeconds(time);\n        this.triggerAttack(time, velocity);\n        this.triggerRelease(time + this.toSeconds(duration));\n        return this;\n    };\n    /**\n     * Cancels all scheduled envelope changes after the given time.\n     */\n    Envelope.prototype.cancel = function (after) {\n        this._sig.cancelScheduledValues(this.toSeconds(after));\n        return this;\n    };\n    /**\n     * Connect the envelope to a destination node.\n     */\n    Envelope.prototype.connect = function (destination, outputNumber, inputNumber) {\n        if (outputNumber === void 0) { outputNumber = 0; }\n        if (inputNumber === void 0) { inputNumber = 0; }\n        connectSignal(this, destination, outputNumber, inputNumber);\n        return this;\n    };\n    /**\n     * Render the envelope curve to an array of the given length.\n     * Good for visualizing the envelope curve\n     */\n    Envelope.prototype.asArray = function (length) {\n        if (length === void 0) { length = 1024; }\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var duration, context, attackPortion, envelopeDuration, sustainTime, totalDuration, clone, buffer;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        duration = length / this.context.sampleRate;\n                        context = new OfflineContext(1, duration, this.context.sampleRate);\n                        attackPortion = this.toSeconds(this.attack) + this.toSeconds(this.decay);\n                        envelopeDuration = attackPortion + this.toSeconds(this.release);\n                        sustainTime = envelopeDuration * 0.1;\n                        totalDuration = envelopeDuration + sustainTime;\n                        clone = new this.constructor(Object.assign(this.get(), {\n                            attack: duration * this.toSeconds(this.attack) / totalDuration,\n                            decay: duration * this.toSeconds(this.decay) / totalDuration,\n                            release: duration * this.toSeconds(this.release) / totalDuration,\n                            context: context\n                        }));\n                        clone._sig.toDestination();\n                        clone.triggerAttackRelease(duration * (attackPortion + sustainTime) / totalDuration, 0);\n                        return [4 /*yield*/, context.render()];\n                    case 1:\n                        buffer = _a.sent();\n                        return [2 /*return*/, buffer.getChannelData(0)];\n                }\n            });\n        });\n    };\n    Envelope.prototype.dispose = function () {\n        _super.prototype.dispose.call(this);\n        this._sig.dispose();\n        return this;\n    };\n    tslib_1.__decorate([\n        timeRange(0)\n    ], Envelope.prototype, \"attack\", void 0);\n    tslib_1.__decorate([\n        timeRange(0)\n    ], Envelope.prototype, \"decay\", void 0);\n    tslib_1.__decorate([\n        range(0, 1)\n    ], Envelope.prototype, \"sustain\", void 0);\n    tslib_1.__decorate([\n        timeRange(0)\n    ], Envelope.prototype, \"release\", void 0);\n    return Envelope;\n}(ToneAudioNode));\nexport { Envelope };\n/**\n * Generate some complex envelope curves.\n */\nvar EnvelopeCurves = (function () {\n    var curveLen = 128;\n    var i;\n    var k;\n    // cosine curve\n    var cosineCurve = [];\n    for (i = 0; i < curveLen; i++) {\n        cosineCurve[i] = Math.sin((i / (curveLen - 1)) * (Math.PI / 2));\n    }\n    // ripple curve\n    var rippleCurve = [];\n    var rippleCurveFreq = 6.4;\n    for (i = 0; i < curveLen - 1; i++) {\n        k = (i / (curveLen - 1));\n        var sineWave = Math.sin(k * (Math.PI * 2) * rippleCurveFreq - Math.PI / 2) + 1;\n        rippleCurve[i] = sineWave / 10 + k * 0.83;\n    }\n    rippleCurve[curveLen - 1] = 1;\n    // stairs curve\n    var stairsCurve = [];\n    var steps = 5;\n    for (i = 0; i < curveLen; i++) {\n        stairsCurve[i] = Math.ceil((i / (curveLen - 1)) * steps) / steps;\n    }\n    // in-out easing curve\n    var sineCurve = [];\n    for (i = 0; i < curveLen; i++) {\n        k = i / (curveLen - 1);\n        sineCurve[i] = 0.5 * (1 - Math.cos(Math.PI * k));\n    }\n    // a bounce curve\n    var bounceCurve = [];\n    for (i = 0; i < curveLen; i++) {\n        k = i / (curveLen - 1);\n        var freq = Math.pow(k, 3) * 4 + 0.2;\n        var val = Math.cos(freq * Math.PI * 2 * k);\n        bounceCurve[i] = Math.abs(val * (1 - k));\n    }\n    /**\n     * Invert a value curve to make it work for the release\n     */\n    function invertCurve(curve) {\n        var out = new Array(curve.length);\n        for (var j = 0; j < curve.length; j++) {\n            out[j] = 1 - curve[j];\n        }\n        return out;\n    }\n    /**\n     * reverse the curve\n     */\n    function reverseCurve(curve) {\n        return curve.slice(0).reverse();\n    }\n    /**\n     * attack and release curve arrays\n     */\n    return {\n        bounce: {\n            In: invertCurve(bounceCurve),\n            Out: bounceCurve,\n        },\n        cosine: {\n            In: cosineCurve,\n            Out: reverseCurve(cosineCurve),\n        },\n        exponential: \"exponential\",\n        linear: \"linear\",\n        ripple: {\n            In: rippleCurve,\n            Out: invertCurve(rippleCurve),\n        },\n        sine: {\n            In: sineCurve,\n            Out: invertCurve(sineCurve),\n        },\n        step: {\n            In: stairsCurve,\n            Out: invertCurve(stairsCurve),\n        },\n    };\n})();\n//# sourceMappingURL=Envelope.js.map","import * as tslib_1 from \"tslib\";\nimport { Signal } from \"./Signal\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { TransportTimeClass } from \"../core/type/TransportTime\";\nimport { ToneConstantSource } from \"./ToneConstantSource\";\n/**\n * Adds the ability to synchronize the signal to the [[Transport]]\n */\nvar SyncedSignal = /** @class */ (function (_super) {\n    tslib_1.__extends(SyncedSignal, _super);\n    function SyncedSignal() {\n        var _this = _super.call(this, optionsFromArguments(Signal.getDefaults(), arguments, [\"value\", \"units\"])) || this;\n        _this.name = \"SyncedSignal\";\n        /**\n         * Don't override when something is connected to the input\n         */\n        _this.override = false;\n        var options = optionsFromArguments(Signal.getDefaults(), arguments, [\"value\", \"units\"]);\n        _this._lastVal = options.value;\n        _this._synced = _this.context.transport.scheduleRepeat(_this._onTick.bind(_this), \"1i\");\n        _this._syncedCallback = _this._anchorValue.bind(_this);\n        _this.context.transport.on(\"start\", _this._syncedCallback);\n        _this.context.transport.on(\"pause\", _this._syncedCallback);\n        _this.context.transport.on(\"stop\", _this._syncedCallback);\n        // disconnect the constant source from the output and replace it with another one\n        _this._constantSource.disconnect();\n        _this._constantSource.stop(0);\n        // create a new one\n        _this._constantSource = _this.output = new ToneConstantSource({\n            context: _this.context,\n            offset: options.value,\n            units: options.units,\n        }).start(0);\n        _this.setValueAtTime(options.value, 0);\n        return _this;\n    }\n    /**\n     * Callback which is invoked every tick.\n     */\n    SyncedSignal.prototype._onTick = function (time) {\n        var val = _super.prototype.getValueAtTime.call(this, this.context.transport.seconds);\n        // approximate ramp curves with linear ramps\n        if (this._lastVal !== val) {\n            this._lastVal = val;\n            this._constantSource.offset.setValueAtTime(val, time);\n        }\n    };\n    /**\n     * Anchor the value at the start and stop of the Transport\n     */\n    SyncedSignal.prototype._anchorValue = function (time) {\n        var val = _super.prototype.getValueAtTime.call(this, this.context.transport.seconds);\n        this._lastVal = val;\n        this._constantSource.offset.cancelAndHoldAtTime(time);\n        this._constantSource.offset.setValueAtTime(val, time);\n    };\n    SyncedSignal.prototype.getValueAtTime = function (time) {\n        var computedTime = new TransportTimeClass(this.context, time).toSeconds();\n        return _super.prototype.getValueAtTime.call(this, computedTime);\n    };\n    SyncedSignal.prototype.setValueAtTime = function (value, time) {\n        var computedTime = new TransportTimeClass(this.context, time).toSeconds();\n        _super.prototype.setValueAtTime.call(this, value, computedTime);\n        return this;\n    };\n    SyncedSignal.prototype.linearRampToValueAtTime = function (value, time) {\n        var computedTime = new TransportTimeClass(this.context, time).toSeconds();\n        _super.prototype.linearRampToValueAtTime.call(this, value, computedTime);\n        return this;\n    };\n    SyncedSignal.prototype.exponentialRampToValueAtTime = function (value, time) {\n        var computedTime = new TransportTimeClass(this.context, time).toSeconds();\n        _super.prototype.exponentialRampToValueAtTime.call(this, value, computedTime);\n        return this;\n    };\n    SyncedSignal.prototype.setTargetAtTime = function (value, startTime, timeConstant) {\n        var computedTime = new TransportTimeClass(this.context, startTime).toSeconds();\n        _super.prototype.setTargetAtTime.call(this, value, computedTime, timeConstant);\n        return this;\n    };\n    SyncedSignal.prototype.cancelScheduledValues = function (startTime) {\n        var computedTime = new TransportTimeClass(this.context, startTime).toSeconds();\n        _super.prototype.cancelScheduledValues.call(this, computedTime);\n        return this;\n    };\n    SyncedSignal.prototype.setValueCurveAtTime = function (values, startTime, duration, scaling) {\n        var computedTime = new TransportTimeClass(this.context, startTime).toSeconds();\n        duration = this.toSeconds(duration);\n        _super.prototype.setValueCurveAtTime.call(this, values, computedTime, duration, scaling);\n        return this;\n    };\n    SyncedSignal.prototype.cancelAndHoldAtTime = function (time) {\n        var computedTime = new TransportTimeClass(this.context, time).toSeconds();\n        _super.prototype.cancelAndHoldAtTime.call(this, computedTime);\n        return this;\n    };\n    SyncedSignal.prototype.setRampPoint = function (time) {\n        var computedTime = new TransportTimeClass(this.context, time).toSeconds();\n        _super.prototype.setRampPoint.call(this, computedTime);\n        return this;\n    };\n    SyncedSignal.prototype.exponentialRampTo = function (value, rampTime, startTime) {\n        var computedTime = new TransportTimeClass(this.context, startTime).toSeconds();\n        _super.prototype.exponentialRampTo.call(this, value, rampTime, computedTime);\n        return this;\n    };\n    SyncedSignal.prototype.linearRampTo = function (value, rampTime, startTime) {\n        var computedTime = new TransportTimeClass(this.context, startTime).toSeconds();\n        _super.prototype.linearRampTo.call(this, value, rampTime, computedTime);\n        return this;\n    };\n    SyncedSignal.prototype.targetRampTo = function (value, rampTime, startTime) {\n        var computedTime = new TransportTimeClass(this.context, startTime).toSeconds();\n        _super.prototype.targetRampTo.call(this, value, rampTime, computedTime);\n        return this;\n    };\n    SyncedSignal.prototype.dispose = function () {\n        _super.prototype.dispose.call(this);\n        this.context.transport.clear(this._synced);\n        this.context.transport.off(\"start\", this._syncedCallback);\n        this.context.transport.off(\"pause\", this._syncedCallback);\n        this.context.transport.off(\"stop\", this._syncedCallback);\n        this._constantSource.dispose();\n        return this;\n    };\n    return SyncedSignal;\n}(Signal));\nexport { SyncedSignal };\n//# sourceMappingURL=SyncedSignal.js.map","import * as tslib_1 from \"tslib\";\nimport { Volume } from \"../component/channel/Volume\";\nimport { ToneAudioNode } from \"../core/context/ToneAudioNode\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { readOnly } from \"../core/util/Interface\";\n/**\n * Base-class for all instruments\n */\nvar Instrument = /** @class */ (function (_super) {\n    tslib_1.__extends(Instrument, _super);\n    function Instrument() {\n        var _this = _super.call(this, optionsFromArguments(Instrument.getDefaults(), arguments)) || this;\n        /**\n         * Keep track of all events scheduled to the transport\n         * when the instrument is 'synced'\n         */\n        _this._scheduledEvents = [];\n        /**\n         * If the instrument is currently synced\n         */\n        _this._synced = false;\n        _this._original_triggerAttack = _this.triggerAttack;\n        _this._original_triggerRelease = _this.triggerRelease;\n        var options = optionsFromArguments(Instrument.getDefaults(), arguments);\n        _this._volume = _this.output = new Volume({\n            context: _this.context,\n            volume: options.volume,\n        });\n        _this.volume = _this._volume.volume;\n        readOnly(_this, \"volume\");\n        return _this;\n    }\n    Instrument.getDefaults = function () {\n        return Object.assign(ToneAudioNode.getDefaults(), {\n            volume: 0,\n        });\n    };\n    /**\n     * Sync the instrument to the Transport. All subsequent calls of\n     * [[triggerAttack]] and [[triggerRelease]] will be scheduled along the transport.\n     * @example\n     * import { FMSynth, Transport } from \"tone\";\n     * const fmSynth = new FMSynth().toDestination();\n     * fmSynth.volume.value = -6;\n     * fmSynth.sync();\n     * // schedule 3 notes when the transport first starts\n     * fmSynth.triggerAttackRelease(\"C4\", \"8n\", 0);\n     * fmSynth.triggerAttackRelease(\"E4\", \"8n\", \"8n\");\n     * fmSynth.triggerAttackRelease(\"G4\", \"8n\", \"4n\");\n     * // start the transport to hear the notes\n     * Transport.start();\n     */\n    Instrument.prototype.sync = function () {\n        if (!this._synced) {\n            this._synced = true;\n            this._syncMethod(\"triggerAttack\", 1);\n            this._syncMethod(\"triggerRelease\", 0);\n        }\n        return this;\n    };\n    /**\n     * Wrap the given method so that it can be synchronized\n     * @param method Which method to wrap and sync\n     * @param  timePosition What position the time argument appears in\n     */\n    Instrument.prototype._syncMethod = function (method, timePosition) {\n        var _this = this;\n        var originalMethod = this[\"_original_\" + method] = this[method];\n        this[method] = function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var time = args[timePosition];\n            var id = _this.context.transport.schedule(function (t) {\n                args[timePosition] = t;\n                originalMethod.apply(_this, args);\n            }, time);\n            _this._scheduledEvents.push(id);\n        };\n    };\n    /**\n     * Unsync the instrument from the Transport\n     */\n    Instrument.prototype.unsync = function () {\n        var _this = this;\n        this._scheduledEvents.forEach(function (id) { return _this.context.transport.clear(id); });\n        this._scheduledEvents = [];\n        if (this._synced) {\n            this._synced = false;\n            this.triggerAttack = this._original_triggerAttack;\n            this.triggerRelease = this._original_triggerRelease;\n        }\n        return this;\n    };\n    /**\n     * Trigger the attack and then the release after the duration.\n     * @param  note     The note to trigger.\n     * @param  duration How long the note should be held for before\n     *                         triggering the release. This value must be greater than 0.\n     * @param time  When the note should be triggered.\n     * @param  velocity The velocity the note should be triggered at.\n     * @example\n     * import { Synth } from \"tone\";\n     * const synth = new Synth().toDestination();\n     * // trigger \"C4\" for the duration of an 8th note\n     * synth.triggerAttackRelease(\"C4\", \"8n\");\n     */\n    Instrument.prototype.triggerAttackRelease = function (note, duration, time, velocity) {\n        var computedTime = this.toSeconds(time);\n        var computedDuration = this.toSeconds(duration);\n        this.triggerAttack(note, computedTime, velocity);\n        this.triggerRelease(computedTime + computedDuration);\n        return this;\n    };\n    /**\n     * clean up\n     * @returns {Instrument} this\n     */\n    Instrument.prototype.dispose = function () {\n        _super.prototype.dispose.call(this);\n        this._volume.dispose();\n        this.unsync();\n        this._scheduledEvents = [];\n        return this;\n    };\n    return Instrument;\n}(ToneAudioNode));\nexport { Instrument };\n//# sourceMappingURL=Instrument.js.map","import * as tslib_1 from \"tslib\";\nimport { FrequencyClass } from \"../core/type/Frequency\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { noOp } from \"../core/util/Interface\";\nimport { Instrument } from \"../instrument/Instrument\";\nimport { timeRange } from \"../core/util/Decorator\";\n/**\n * Abstract base class for other monophonic instruments to extend.\n */\nvar Monophonic = /** @class */ (function (_super) {\n    tslib_1.__extends(Monophonic, _super);\n    function Monophonic() {\n        var _this = _super.call(this, optionsFromArguments(Monophonic.getDefaults(), arguments)) || this;\n        var options = optionsFromArguments(Monophonic.getDefaults(), arguments);\n        _this.portamento = options.portamento;\n        _this.onsilence = options.onsilence;\n        return _this;\n    }\n    Monophonic.getDefaults = function () {\n        return Object.assign(Instrument.getDefaults(), {\n            detune: 0,\n            onsilence: noOp,\n            portamento: 0,\n        });\n    };\n    /**\n     * Trigger the attack of the note optionally with a given velocity.\n     * @param  note The note to trigger.\n     * @param  time When the note should start.\n     * @param  velocity The velocity scaler determines how \"loud\" the note will be triggered.\n     * @example\n     * import { Synth } from \"tone\";\n     * const synth = new Synth().toDestination();\n     * // trigger the note a half second from now at half velocity\n     * synth.triggerAttack(\"C4\", \"+0.5\", 0.5);\n     */\n    Monophonic.prototype.triggerAttack = function (note, time, velocity) {\n        if (velocity === void 0) { velocity = 1; }\n        this.log(\"triggerAttack\", note, time, velocity);\n        var seconds = this.toSeconds(time);\n        this._triggerEnvelopeAttack(seconds, velocity);\n        this.setNote(note, seconds);\n        return this;\n    };\n    /**\n     * Trigger the release portion of the envelope\n     * @param  time If no time is given, the release happens immediatly\n     * @example\n     * import { Synth } from \"tone\";\n     * const synth = new Synth().toDestination();\n     * synth.triggerAttack(\"C4\");\n     * // trigger the release a second from now\n     * synth.triggerRelease(\"+1\");\n     */\n    Monophonic.prototype.triggerRelease = function (time) {\n        this.log(\"triggerRelease\", time);\n        var seconds = this.toSeconds(time);\n        this._triggerEnvelopeRelease(seconds);\n        return this;\n    };\n    /**\n     * Set the note at the given time. If no time is given, the note\n     * will set immediately.\n     * @param note The note to change to.\n     * @param  time The time when the note should be set.\n     * @example\n     * import { Synth } from \"tone\";\n     * const synth = new Synth().toDestination();\n     * synth.triggerAttack(\"C4\");\n     * // change to F#6 in one quarter note from now.\n     * synth.setNote(\"F#6\", \"+4n\");\n     */\n    Monophonic.prototype.setNote = function (note, time) {\n        var computedTime = this.toSeconds(time);\n        var computedFrequency = note instanceof FrequencyClass ? note.toFrequency() : note;\n        if (this.portamento > 0 && this.getLevelAtTime(computedTime) > 0.05) {\n            var portTime = this.toSeconds(this.portamento);\n            this.frequency.exponentialRampTo(computedFrequency, portTime, computedTime);\n        }\n        else {\n            this.frequency.setValueAtTime(computedFrequency, computedTime);\n        }\n        return this;\n    };\n    tslib_1.__decorate([\n        timeRange(0)\n    ], Monophonic.prototype, \"portamento\", void 0);\n    return Monophonic;\n}(Instrument));\nexport { Monophonic };\n//# sourceMappingURL=Monophonic.js.map","import * as tslib_1 from \"tslib\";\nimport { Gain } from \"../../core/context/Gain\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { Envelope } from \"./Envelope\";\n/**\n * AmplitudeEnvelope is a Tone.Envelope connected to a gain node.\n * Unlike Tone.Envelope, which outputs the envelope's value, AmplitudeEnvelope accepts\n * an audio signal as the input and will apply the envelope to the amplitude\n * of the signal.\n * Read more about ADSR Envelopes on [Wikipedia](https://en.wikipedia.org/wiki/Synthesizer#ADSR_envelope).\n *\n * @example\n * import { AmplitudeEnvelope, Oscillator } from \"tone\";\n * const ampEnv = new AmplitudeEnvelope({\n * \tattack: 0.1,\n * \tdecay: 0.2,\n * \tsustain: 1.0,\n * \trelease: 0.8\n * }).toDestination();\n * // create an oscillator and connect it\n * const osc = new Oscillator().connect(ampEnv).start();\n * // trigger the envelopes attack and release \"8t\" apart\n * ampEnv.triggerAttackRelease(\"8t\");\n * @category Component\n */\nvar AmplitudeEnvelope = /** @class */ (function (_super) {\n    tslib_1.__extends(AmplitudeEnvelope, _super);\n    function AmplitudeEnvelope() {\n        var _this = _super.call(this, optionsFromArguments(AmplitudeEnvelope.getDefaults(), arguments, [\"attack\", \"decay\", \"sustain\", \"release\"])) || this;\n        _this.name = \"AmplitudeEnvelope\";\n        _this._gainNode = new Gain({\n            context: _this.context,\n            gain: 0,\n        });\n        _this.output = _this._gainNode;\n        _this.input = _this._gainNode;\n        _this._sig.connect(_this._gainNode.gain);\n        _this.output = _this._gainNode;\n        _this.input = _this._gainNode;\n        return _this;\n    }\n    /**\n     * Clean up\n     */\n    AmplitudeEnvelope.prototype.dispose = function () {\n        _super.prototype.dispose.call(this);\n        this._gainNode.dispose();\n        return this;\n    };\n    return AmplitudeEnvelope;\n}(Envelope));\nexport { AmplitudeEnvelope };\n//# sourceMappingURL=AmplitudeEnvelope.js.map","import * as tslib_1 from \"tslib\";\nimport { AmplitudeEnvelope } from \"../component/envelope/AmplitudeEnvelope\";\nimport { Envelope } from \"../component/envelope/Envelope\";\nimport { ToneAudioNode } from \"../core/context/ToneAudioNode\";\nimport { omitFromObject, optionsFromArguments } from \"../core/util/Defaults\";\nimport { readOnly } from \"../core/util/Interface\";\nimport { OmniOscillator } from \"../source/oscillator/OmniOscillator\";\nimport { Source } from \"../source/Source\";\nimport { Monophonic } from \"./Monophonic\";\n/**\n * Synth is composed simply of a {@link OmniOscillator} routed through an {@link AmplitudeEnvelope}.\n * ```\n * +----------------+   +-------------------+\n * | OmniOscillator +>--> AmplitudeEnvelope +>--> Output\n * +----------------+   +-------------------+\n * ```\n * @example\n * import { Synth } from \"tone\";\n * const synth = new Synth().toDestination();\n * synth.triggerAttackRelease(\"C4\", \"8n\");\n * @category Instrument\n */\nvar Synth = /** @class */ (function (_super) {\n    tslib_1.__extends(Synth, _super);\n    function Synth() {\n        var _this = _super.call(this, optionsFromArguments(Synth.getDefaults(), arguments)) || this;\n        _this.name = \"Synth\";\n        var options = optionsFromArguments(Synth.getDefaults(), arguments);\n        _this.oscillator = new OmniOscillator(Object.assign({\n            context: _this.context,\n            detune: options.detune,\n            onstop: function () { return _this.onsilence(_this); },\n        }, options.oscillator));\n        _this.frequency = _this.oscillator.frequency;\n        _this.detune = _this.oscillator.detune;\n        _this.envelope = new AmplitudeEnvelope(Object.assign({\n            context: _this.context,\n        }, options.envelope));\n        // connect the oscillators to the output\n        _this.oscillator.chain(_this.envelope, _this.output);\n        readOnly(_this, [\"oscillator\", \"frequency\", \"detune\", \"envelope\"]);\n        return _this;\n    }\n    Synth.getDefaults = function () {\n        return Object.assign(Monophonic.getDefaults(), {\n            envelope: Object.assign(omitFromObject(Envelope.getDefaults(), Object.keys(ToneAudioNode.getDefaults())), {\n                attack: 0.005,\n                decay: 0.1,\n                release: 1,\n                sustain: 0.3,\n            }),\n            oscillator: Object.assign(omitFromObject(OmniOscillator.getDefaults(), tslib_1.__spread(Object.keys(Source.getDefaults()), [\"frequency\", \"detune\"])), {\n                type: \"triangle\",\n            }),\n        });\n    };\n    /**\n     * start the attack portion of the envelope\n     * @param time the time the attack should start\n     * @param velocity the velocity of the note (0-1)\n     */\n    Synth.prototype._triggerEnvelopeAttack = function (time, velocity) {\n        // the envelopes\n        this.envelope.triggerAttack(time, velocity);\n        this.oscillator.start(time);\n        // if there is no release portion, stop the oscillator\n        if (this.envelope.sustain === 0) {\n            var computedAttack = this.toSeconds(this.envelope.attack);\n            var computedDecay = this.toSeconds(this.envelope.decay);\n            this.oscillator.stop(time + computedAttack + computedDecay);\n        }\n    };\n    /**\n     * start the release portion of the envelope\n     * @param time the time the release should start\n     */\n    Synth.prototype._triggerEnvelopeRelease = function (time) {\n        this.envelope.triggerRelease(time);\n        this.oscillator.stop(time + this.toSeconds(this.envelope.release));\n    };\n    Synth.prototype.getLevelAtTime = function (time) {\n        time = this.toSeconds(time);\n        return this.envelope.getValueAtTime(time);\n    };\n    /**\n     * clean up\n     */\n    Synth.prototype.dispose = function () {\n        _super.prototype.dispose.call(this);\n        this.oscillator.dispose();\n        this.envelope.dispose();\n        return this;\n    };\n    return Synth;\n}(Monophonic));\nexport { Synth };\n//# sourceMappingURL=Synth.js.map","import * as tslib_1 from \"tslib\";\nimport { Signal } from \"../signal/Signal\";\nimport { Multiply } from \"../signal/Multiply\";\nimport { Gain } from \"../core/context/Gain\";\nimport { Envelope } from \"../component/envelope/Envelope\";\nimport { ToneAudioNode } from \"../core/context/ToneAudioNode\";\nimport { Monophonic } from \"./Monophonic\";\nimport { OmniOscillator } from \"../source/oscillator/OmniOscillator\";\nimport { Source } from \"../source/Source\";\nimport { Synth } from \"./Synth\";\nimport { readOnly } from \"../core/util/Interface\";\nimport { omitFromObject, optionsFromArguments } from \"../core/util/Defaults\";\n/**\n * Base class for both AM and FM synths\n */\nvar ModulationSynth = /** @class */ (function (_super) {\n    tslib_1.__extends(ModulationSynth, _super);\n    function ModulationSynth() {\n        var _this = _super.call(this, optionsFromArguments(ModulationSynth.getDefaults(), arguments)) || this;\n        _this.name = \"ModulationSynth\";\n        var options = optionsFromArguments(ModulationSynth.getDefaults(), arguments);\n        _this._carrier = new Synth({\n            context: _this.context,\n            oscillator: options.oscillator,\n            envelope: options.envelope,\n            onsilence: function () { return _this.onsilence(_this); },\n            volume: -10,\n        });\n        _this._modulator = new Synth({\n            context: _this.context,\n            oscillator: options.modulation,\n            envelope: options.modulationEnvelope,\n            volume: -10,\n        });\n        _this.oscillator = _this._carrier.oscillator;\n        _this.envelope = _this._carrier.envelope;\n        _this.modulation = _this._modulator.oscillator;\n        _this.modulationEnvelope = _this._modulator.envelope;\n        _this.frequency = new Signal({\n            context: _this.context,\n            units: \"frequency\",\n        });\n        _this.detune = new Signal({\n            context: _this.context,\n            value: options.detune,\n            units: \"cents\"\n        });\n        _this.harmonicity = new Multiply({\n            context: _this.context,\n            value: options.harmonicity,\n            minValue: 0,\n        });\n        _this._modulationNode = new Gain({\n            context: _this.context,\n            gain: 0,\n        });\n        readOnly(_this, [\"frequency\", \"harmonicity\", \"oscillator\", \"envelope\", \"modulation\", \"modulationEnvelope\", \"detune\"]);\n        return _this;\n    }\n    ModulationSynth.getDefaults = function () {\n        return Object.assign(Monophonic.getDefaults(), {\n            harmonicity: 3,\n            oscillator: Object.assign(omitFromObject(OmniOscillator.getDefaults(), tslib_1.__spread(Object.keys(Source.getDefaults()), [\n                \"frequency\",\n                \"detune\"\n            ])), {\n                type: \"sine\"\n            }),\n            envelope: Object.assign(omitFromObject(Envelope.getDefaults(), Object.keys(ToneAudioNode.getDefaults())), {\n                attack: 0.01,\n                decay: 0.01,\n                sustain: 1,\n                release: 0.5\n            }),\n            modulation: Object.assign(omitFromObject(OmniOscillator.getDefaults(), tslib_1.__spread(Object.keys(Source.getDefaults()), [\n                \"frequency\",\n                \"detune\"\n            ])), {\n                type: \"square\"\n            }),\n            modulationEnvelope: Object.assign(omitFromObject(Envelope.getDefaults(), Object.keys(ToneAudioNode.getDefaults())), {\n                attack: 0.5,\n                decay: 0.0,\n                sustain: 1,\n                release: 0.5\n            })\n        });\n    };\n    /**\n     * Trigger the attack portion of the note\n     */\n    ModulationSynth.prototype._triggerEnvelopeAttack = function (time, velocity) {\n        // @ts-ignore\n        this._carrier._triggerEnvelopeAttack(time, velocity);\n        // @ts-ignore\n        this._modulator._triggerEnvelopeAttack(time, velocity);\n    };\n    /**\n     * Trigger the release portion of the note\n     */\n    ModulationSynth.prototype._triggerEnvelopeRelease = function (time) {\n        // @ts-ignore\n        this._carrier._triggerEnvelopeRelease(time);\n        // @ts-ignore\n        this._modulator._triggerEnvelopeRelease(time);\n        return this;\n    };\n    ModulationSynth.prototype.getLevelAtTime = function (time) {\n        time = this.toSeconds(time);\n        return this.envelope.getValueAtTime(time);\n    };\n    ModulationSynth.prototype.dispose = function () {\n        _super.prototype.dispose.call(this);\n        this._carrier.dispose();\n        this._modulator.dispose();\n        this.frequency.dispose();\n        this.detune.dispose();\n        this.harmonicity.dispose();\n        this._modulationNode.dispose();\n        return this;\n    };\n    return ModulationSynth;\n}(Monophonic));\nexport { ModulationSynth };\n//# sourceMappingURL=ModulationSynth.js.map","import * as tslib_1 from \"tslib\";\nimport { Gain } from \"../../core/context/Gain\";\nimport { connectSeries, ToneAudioNode } from \"../../core/context/ToneAudioNode\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { readOnly, writable } from \"../../core/util/Interface\";\nimport { isNumber } from \"../../core/util/TypeCheck\";\nimport { Signal } from \"../../signal/Signal\";\nimport { assert } from \"../../core/util/Debug\";\n/**\n * Tone.Filter is a filter which allows for all of the same native methods\n * as the [BiquadFilterNode](http://webaudio.github.io/web-audio-api/#the-biquadfilternode-interface).\n * Tone.Filter has the added ability to set the filter rolloff at -12\n * (default), -24 and -48.\n * @example\n * import { Filter, Noise } from \"tone\";\n *\n * const filter = new Filter(1500, \"highpass\").toDestination();\n * filter.frequency.rampTo(20000, 10);\n * const noise = new Noise().connect(filter).start();\n * @category Component\n */\nvar Filter = /** @class */ (function (_super) {\n    tslib_1.__extends(Filter, _super);\n    function Filter() {\n        var _this = _super.call(this, optionsFromArguments(Filter.getDefaults(), arguments, [\"frequency\", \"type\", \"rolloff\"])) || this;\n        _this.name = \"Filter\";\n        _this.input = new Gain({ context: _this.context });\n        _this.output = new Gain({ context: _this.context });\n        _this._filters = [];\n        var options = optionsFromArguments(Filter.getDefaults(), arguments, [\"frequency\", \"type\", \"rolloff\"]);\n        _this._filters = [];\n        _this.Q = new Signal({\n            context: _this.context,\n            units: \"positive\",\n            value: options.Q,\n        });\n        _this.frequency = new Signal({\n            context: _this.context,\n            units: \"frequency\",\n            value: options.frequency,\n        });\n        _this.detune = new Signal({\n            context: _this.context,\n            units: \"cents\",\n            value: options.detune,\n        });\n        _this.gain = new Signal({\n            context: _this.context,\n            units: \"decibels\",\n            value: options.gain,\n        });\n        _this._type = options.type;\n        _this.rolloff = options.rolloff;\n        readOnly(_this, [\"detune\", \"frequency\", \"gain\", \"Q\"]);\n        return _this;\n    }\n    Filter.getDefaults = function () {\n        return Object.assign(ToneAudioNode.getDefaults(), {\n            Q: 1,\n            detune: 0,\n            frequency: 350,\n            gain: 0,\n            rolloff: -12,\n            type: \"lowpass\",\n        });\n    };\n    Object.defineProperty(Filter.prototype, \"type\", {\n        /**\n         * The type of the filter. Types: \"lowpass\", \"highpass\",\n         * \"bandpass\", \"lowshelf\", \"highshelf\", \"notch\", \"allpass\", or \"peaking\".\n         */\n        get: function () {\n            return this._type;\n        },\n        set: function (type) {\n            var types = [\"lowpass\", \"highpass\", \"bandpass\",\n                \"lowshelf\", \"highshelf\", \"notch\", \"allpass\", \"peaking\"];\n            assert(types.indexOf(type) !== -1, \"Invalid filter type: \" + type);\n            this._type = type;\n            this._filters.forEach(function (filter) { return filter.type = type; });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Filter.prototype, \"rolloff\", {\n        /**\n         * The rolloff of the filter which is the drop in db\n         * per octave. Implemented internally by cascading filters.\n         * Only accepts the values -12, -24, -48 and -96.\n         */\n        get: function () {\n            return this._rolloff;\n        },\n        set: function (rolloff) {\n            var rolloffNum = isNumber(rolloff) ? rolloff : parseInt(rolloff, 10);\n            var possibilities = [-12, -24, -48, -96];\n            var cascadingCount = possibilities.indexOf(rolloffNum);\n            // check the rolloff is valid\n            assert(cascadingCount !== -1, \"rolloff can only be \" + possibilities.join(\", \"));\n            cascadingCount += 1;\n            this._rolloff = rolloffNum;\n            this.input.disconnect();\n            this._filters.forEach(function (filter) { return filter.disconnect(); });\n            this._filters = new Array(cascadingCount);\n            for (var count = 0; count < cascadingCount; count++) {\n                var filter = this.context.createBiquadFilter();\n                filter.type = this._type;\n                this.frequency.connect(filter.frequency);\n                this.detune.connect(filter.detune);\n                this.Q.connect(filter.Q);\n                this.gain.connect(filter.gain);\n                this._filters[count] = filter;\n            }\n            this._internalChannels = this._filters;\n            connectSeries.apply(void 0, tslib_1.__spread([this.input], this._internalChannels, [this.output]));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Get the frequency response curve. This curve represents how the filter\n     * responses to frequencies between 20hz-20khz.\n     * @param  len The number of values to return\n     * @return The frequency response curve between 20-20kHz\n     */\n    Filter.prototype.getFrequencyResponse = function (len) {\n        var _this = this;\n        if (len === void 0) { len = 128; }\n        // start with all 1s\n        var totalResponse = new Float32Array(len).map(function () { return 1; });\n        var freqValues = new Float32Array(len);\n        for (var i = 0; i < len; i++) {\n            var norm = Math.pow(i / len, 2);\n            var freq = norm * (20000 - 20) + 20;\n            freqValues[i] = freq;\n        }\n        var magValues = new Float32Array(len);\n        var phaseValues = new Float32Array(len);\n        this._filters.forEach(function () {\n            var filterClone = _this.context.createBiquadFilter();\n            filterClone.type = _this._type;\n            filterClone.Q.value = _this.Q.value;\n            filterClone.frequency.value = _this.frequency.value;\n            filterClone.gain.value = _this.gain.value;\n            filterClone.getFrequencyResponse(freqValues, magValues, phaseValues);\n            magValues.forEach(function (val, i) {\n                totalResponse[i] *= val;\n            });\n        });\n        return totalResponse;\n    };\n    /**\n     * Clean up.\n     */\n    Filter.prototype.dispose = function () {\n        _super.prototype.dispose.call(this);\n        this._filters.forEach(function (filter) {\n            filter.disconnect();\n        });\n        writable(this, [\"detune\", \"frequency\", \"gain\", \"Q\"]);\n        this.frequency.dispose();\n        this.Q.dispose();\n        this.detune.dispose();\n        this.gain.dispose();\n        return this;\n    };\n    return Filter;\n}(ToneAudioNode));\nexport { Filter };\n//# sourceMappingURL=Filter.js.map","import * as tslib_1 from \"tslib\";\nimport { AudioToGain } from \"../signal/AudioToGain\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { ModulationSynth } from \"./ModulationSynth\";\n/**\n * AMSynth uses the output of one Tone.Synth to modulate the\n * amplitude of another Tone.Synth. The harmonicity (the ratio between\n * the two signals) affects the timbre of the output signal greatly.\n * Read more about Amplitude Modulation Synthesis on\n * [SoundOnSound](https://web.archive.org/web/20160404103653/http://www.soundonsound.com:80/sos/mar00/articles/synthsecrets.htm).\n *\n * @example\n * import { AMSynth } from \"tone\";\n * const synth = new AMSynth().toDestination();\n * synth.triggerAttackRelease(\"C4\", \"4n\");\n *\n * @category Instrument\n */\nvar AMSynth = /** @class */ (function (_super) {\n    tslib_1.__extends(AMSynth, _super);\n    function AMSynth() {\n        var _this = _super.call(this, optionsFromArguments(AMSynth.getDefaults(), arguments)) || this;\n        _this.name = \"AMSynth\";\n        _this._modulationScale = new AudioToGain({\n            context: _this.context,\n        });\n        // control the two voices frequency\n        _this.frequency.connect(_this._carrier.frequency);\n        _this.frequency.chain(_this.harmonicity, _this._modulator.frequency);\n        _this.detune.fan(_this._carrier.detune, _this._modulator.detune);\n        _this._modulator.chain(_this._modulationScale, _this._modulationNode.gain);\n        _this._carrier.chain(_this._modulationNode, _this.output);\n        return _this;\n    }\n    AMSynth.prototype.dispose = function () {\n        _super.prototype.dispose.call(this);\n        this._modulationScale.dispose();\n        return this;\n    };\n    return AMSynth;\n}(ModulationSynth));\nexport { AMSynth };\n//# sourceMappingURL=AMSynth.js.map","import * as tslib_1 from \"tslib\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { Envelope } from \"./Envelope\";\nimport { Scale } from \"../../signal/Scale\";\nimport { Pow } from \"../../signal/Pow\";\nimport { assertRange } from \"../../core/util/Debug\";\n/**\n * FrequencyEnvelope is an [[Envelope]] which ramps between [[baseFrequency]]\n * and [[octaves]]. It can also have an optional [[exponent]] to adjust the curve\n * which it ramps.\n * @example\n * import { FrequencyEnvelope, Oscillator } from \"tone\";\n * const oscillator = new Oscillator().toDestination().start();\n * const freqEnv = new FrequencyEnvelope({\n * \tattack: 0.2,\n * \tbaseFrequency: \"C2\",\n * \toctaves: 4\n * });\n * freqEnv.connect(oscillator.frequency);\n * freqEnv.triggerAttack();\n */\nvar FrequencyEnvelope = /** @class */ (function (_super) {\n    tslib_1.__extends(FrequencyEnvelope, _super);\n    function FrequencyEnvelope() {\n        var _this = _super.call(this, optionsFromArguments(FrequencyEnvelope.getDefaults(), arguments, [\"attack\", \"decay\", \"sustain\", \"release\"])) || this;\n        _this.name = \"FrequencyEnvelope\";\n        var options = optionsFromArguments(FrequencyEnvelope.getDefaults(), arguments, [\"attack\", \"decay\", \"sustain\", \"release\"]);\n        _this._octaves = options.octaves;\n        _this._baseFrequency = _this.toFrequency(options.baseFrequency);\n        _this._exponent = _this.input = new Pow({\n            context: _this.context,\n            value: options.exponent\n        });\n        _this._scale = _this.output = new Scale({\n            context: _this.context,\n            min: _this._baseFrequency,\n            max: _this._baseFrequency * Math.pow(2, _this._octaves),\n        });\n        _this._sig.chain(_this._exponent, _this._scale);\n        return _this;\n    }\n    FrequencyEnvelope.getDefaults = function () {\n        return Object.assign(Envelope.getDefaults(), {\n            baseFrequency: 200,\n            exponent: 1,\n            octaves: 4,\n        });\n    };\n    Object.defineProperty(FrequencyEnvelope.prototype, \"baseFrequency\", {\n        /**\n         * The envelope's minimum output value. This is the value which it\n         * starts at.\n         */\n        get: function () {\n            return this._baseFrequency;\n        },\n        set: function (min) {\n            var freq = this.toFrequency(min);\n            assertRange(freq, 0);\n            this._baseFrequency = freq;\n            this._scale.min = this._baseFrequency;\n            // update the max value when the min changes\n            this.octaves = this._octaves;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FrequencyEnvelope.prototype, \"octaves\", {\n        /**\n         * The number of octaves above the baseFrequency that the\n         * envelope will scale to.\n         */\n        get: function () {\n            return this._octaves;\n        },\n        set: function (octaves) {\n            assertRange(octaves, 0);\n            this._octaves = octaves;\n            this._scale.max = this._baseFrequency * Math.pow(2, octaves);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FrequencyEnvelope.prototype, \"exponent\", {\n        /**\n         * The envelope's exponent value.\n         */\n        get: function () {\n            return this._exponent.value;\n        },\n        set: function (exponent) {\n            this._exponent.value = exponent;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Clean up\n     */\n    FrequencyEnvelope.prototype.dispose = function () {\n        _super.prototype.dispose.call(this);\n        this._exponent.dispose();\n        this._scale.dispose();\n        return this;\n    };\n    return FrequencyEnvelope;\n}(Envelope));\nexport { FrequencyEnvelope };\n//# sourceMappingURL=FrequencyEnvelope.js.map","import * as tslib_1 from \"tslib\";\nimport { AmplitudeEnvelope } from \"../component/envelope/AmplitudeEnvelope\";\nimport { Envelope } from \"../component/envelope/Envelope\";\nimport { Filter } from \"../component/filter/Filter\";\nimport { omitFromObject, optionsFromArguments } from \"../core/util/Defaults\";\nimport { readOnly } from \"../core/util/Interface\";\nimport { Monophonic } from \"../instrument/Monophonic\";\nimport { OmniOscillator } from \"../source/oscillator/OmniOscillator\";\nimport { Source } from \"../source/Source\";\nimport { FrequencyEnvelope } from \"../component/envelope/FrequencyEnvelope\";\nimport { ToneAudioNode } from \"../core/context/ToneAudioNode\";\n/**\n * MonoSynth is composed of one `oscillator`, one `filter`, and two `envelopes`.\n * The amplitude of the Oscillator and the cutoff frequency of the\n * Filter are controlled by Envelopes.\n * <img src=\"https://docs.google.com/drawings/d/1gaY1DF9_Hzkodqf8JI1Cg2VZfwSElpFQfI94IQwad38/pub?w=924&h=240\">\n * @example\n * import { MonoSynth } from \"tone\";\n * const synth = new MonoSynth({\n * \toscillator: {\n * \t\ttype: \"square\"\n * \t},\n * \tenvelope: {\n * \t\tattack: 0.1\n * \t}\n * }).toDestination();\n * synth.triggerAttackRelease(\"C4\", \"8n\");\n * @category Instrument\n */\nvar MonoSynth = /** @class */ (function (_super) {\n    tslib_1.__extends(MonoSynth, _super);\n    function MonoSynth() {\n        var _this = _super.call(this, optionsFromArguments(MonoSynth.getDefaults(), arguments)) || this;\n        _this.name = \"MonoSynth\";\n        var options = optionsFromArguments(MonoSynth.getDefaults(), arguments);\n        _this.oscillator = new OmniOscillator(Object.assign(options.oscillator, {\n            context: _this.context,\n            detune: options.detune,\n            onstop: function () { return _this.onsilence(_this); },\n        }));\n        _this.frequency = _this.oscillator.frequency;\n        _this.detune = _this.oscillator.detune;\n        _this.filter = new Filter(Object.assign(options.filter, { context: _this.context }));\n        _this.filterEnvelope = new FrequencyEnvelope(Object.assign(options.filterEnvelope, { context: _this.context }));\n        _this.envelope = new AmplitudeEnvelope(Object.assign(options.envelope, { context: _this.context }));\n        // connect the oscillators to the output\n        _this.oscillator.chain(_this.filter, _this.envelope, _this.output);\n        // connect the filter envelope\n        _this.filterEnvelope.connect(_this.filter.frequency);\n        readOnly(_this, [\"oscillator\", \"frequency\", \"detune\", \"filter\", \"filterEnvelope\", \"envelope\"]);\n        return _this;\n    }\n    MonoSynth.getDefaults = function () {\n        return Object.assign(Monophonic.getDefaults(), {\n            envelope: Object.assign(omitFromObject(Envelope.getDefaults(), Object.keys(ToneAudioNode.getDefaults())), {\n                attack: 0.005,\n                decay: 0.1,\n                release: 1,\n                sustain: 0.9,\n            }),\n            filter: Object.assign(omitFromObject(Filter.getDefaults(), Object.keys(ToneAudioNode.getDefaults())), {\n                Q: 1,\n                rolloff: -12,\n                type: \"lowpass\",\n            }),\n            filterEnvelope: Object.assign(omitFromObject(FrequencyEnvelope.getDefaults(), Object.keys(ToneAudioNode.getDefaults())), {\n                attack: 0.6,\n                baseFrequency: 200,\n                decay: 0.2,\n                exponent: 2,\n                octaves: 3,\n                release: 2,\n                sustain: 0.5,\n            }),\n            oscillator: Object.assign(omitFromObject(OmniOscillator.getDefaults(), Object.keys(Source.getDefaults())), {\n                type: \"sawtooth\",\n            }),\n        });\n    };\n    /**\n     * start the attack portion of the envelope\n     * @param time the time the attack should start\n     * @param velocity the velocity of the note (0-1)\n     */\n    MonoSynth.prototype._triggerEnvelopeAttack = function (time, velocity) {\n        if (velocity === void 0) { velocity = 1; }\n        this.envelope.triggerAttack(time, velocity);\n        this.filterEnvelope.triggerAttack(time);\n        this.oscillator.start(time);\n        if (this.envelope.sustain === 0) {\n            var computedAttack = this.toSeconds(this.envelope.attack);\n            var computedDecay = this.toSeconds(this.envelope.decay);\n            this.oscillator.stop(time + computedAttack + computedDecay);\n        }\n    };\n    /**\n     * start the release portion of the envelope\n     * @param time the time the release should start\n     */\n    MonoSynth.prototype._triggerEnvelopeRelease = function (time) {\n        this.envelope.triggerRelease(time);\n        this.filterEnvelope.triggerRelease(time);\n        this.oscillator.stop(time + this.toSeconds(this.envelope.release));\n    };\n    MonoSynth.prototype.getLevelAtTime = function (time) {\n        time = this.toSeconds(time);\n        return this.envelope.getValueAtTime(time);\n    };\n    MonoSynth.prototype.dispose = function () {\n        _super.prototype.dispose.call(this);\n        this.oscillator.dispose();\n        this.envelope.dispose();\n        this.filterEnvelope.dispose();\n        this.filter.dispose();\n        return this;\n    };\n    return MonoSynth;\n}(Monophonic));\nexport { MonoSynth };\n//# sourceMappingURL=MonoSynth.js.map","import * as tslib_1 from \"tslib\";\nimport { Envelope } from \"../component/envelope/Envelope\";\nimport { Filter } from \"../component/filter/Filter\";\nimport { Gain } from \"../core/context/Gain\";\nimport { ToneAudioNode } from \"../core/context/ToneAudioNode\";\nimport { deepMerge, omitFromObject, optionsFromArguments } from \"../core/util/Defaults\";\nimport { noOp } from \"../core/util/Interface\";\nimport { Multiply } from \"../signal/Multiply\";\nimport { Scale } from \"../signal/Scale\";\nimport { Signal } from \"../signal/Signal\";\nimport { FMOscillator } from \"../source/oscillator/FMOscillator\";\nimport { Monophonic } from \"./Monophonic\";\n/**\n * Inharmonic ratio of frequencies based on the Roland TR-808\n * Taken from https://ccrma.stanford.edu/papers/tr-808-cymbal-physically-informed-circuit-bendable-digital-model\n */\nvar inharmRatios = [1.0, 1.483, 1.932, 2.546, 2.630, 3.897];\n/**\n * A highly inharmonic and spectrally complex source with a highpass filter\n * and amplitude envelope which is good for making metallophone sounds.\n * Based on CymbalSynth by [@polyrhythmatic](https://github.com/polyrhythmatic).\n * Inspiration from [Sound on Sound](https://shorturl.at/rSZ12).\n * @category Instrument\n */\nvar MetalSynth = /** @class */ (function (_super) {\n    tslib_1.__extends(MetalSynth, _super);\n    function MetalSynth() {\n        var _this = _super.call(this, optionsFromArguments(MetalSynth.getDefaults(), arguments)) || this;\n        _this.name = \"MetalSynth\";\n        /**\n         * The array of FMOscillators\n         */\n        _this._oscillators = [];\n        /**\n         * The frequency multipliers\n         */\n        _this._freqMultipliers = [];\n        var options = optionsFromArguments(MetalSynth.getDefaults(), arguments);\n        _this.detune = new Signal({\n            context: _this.context,\n            units: \"cents\",\n            value: options.detune,\n        });\n        _this.frequency = new Signal({\n            context: _this.context,\n            units: \"frequency\",\n        });\n        _this._amplitude = new Gain({\n            context: _this.context,\n            gain: 0,\n        }).connect(_this.output);\n        _this._highpass = new Filter({\n            // Q: -3.0102999566398125,\n            Q: 0,\n            context: _this.context,\n            type: \"highpass\",\n        }).connect(_this._amplitude);\n        for (var i = 0; i < inharmRatios.length; i++) {\n            var osc = new FMOscillator({\n                context: _this.context,\n                harmonicity: options.harmonicity,\n                modulationIndex: options.modulationIndex,\n                modulationType: \"square\",\n                onstop: i === 0 ? function () { return _this.onsilence(_this); } : noOp,\n                type: \"square\",\n            });\n            osc.connect(_this._highpass);\n            _this._oscillators[i] = osc;\n            var mult = new Multiply({\n                context: _this.context,\n                value: inharmRatios[i],\n            });\n            _this._freqMultipliers[i] = mult;\n            _this.frequency.chain(mult, osc.frequency);\n            _this.detune.connect(osc.detune);\n        }\n        _this._filterFreqScaler = new Scale({\n            context: _this.context,\n            max: 7000,\n            min: _this.toFrequency(options.resonance),\n        });\n        _this.envelope = new Envelope({\n            attack: options.envelope.attack,\n            attackCurve: \"linear\",\n            context: _this.context,\n            decay: options.envelope.decay,\n            release: options.envelope.release,\n            sustain: 0,\n        });\n        _this.envelope.chain(_this._filterFreqScaler, _this._highpass.frequency);\n        _this.envelope.connect(_this._amplitude.gain);\n        // set the octaves\n        _this._octaves = options.octaves;\n        _this.octaves = options.octaves;\n        return _this;\n    }\n    MetalSynth.getDefaults = function () {\n        return deepMerge(Monophonic.getDefaults(), {\n            envelope: Object.assign(omitFromObject(Envelope.getDefaults(), Object.keys(ToneAudioNode.getDefaults())), {\n                attack: 0.001,\n                decay: 1.4,\n                release: 0.2,\n            }),\n            harmonicity: 5.1,\n            modulationIndex: 32,\n            octaves: 1.5,\n            resonance: 4000,\n        });\n    };\n    /**\n     * Trigger the attack.\n     * @param time When the attack should be triggered.\n     * @param velocity The velocity that the envelope should be triggered at.\n     */\n    MetalSynth.prototype._triggerEnvelopeAttack = function (time, velocity) {\n        var _this = this;\n        if (velocity === void 0) { velocity = 1; }\n        this.envelope.triggerAttack(time, velocity);\n        this._oscillators.forEach(function (osc) { return osc.start(time); });\n        if (this.envelope.sustain === 0) {\n            this._oscillators.forEach(function (osc) {\n                osc.stop(time + _this.toSeconds(_this.envelope.attack) + _this.toSeconds(_this.envelope.decay));\n            });\n        }\n        return this;\n    };\n    /**\n     * Trigger the release of the envelope.\n     * @param time When the release should be triggered.\n     */\n    MetalSynth.prototype._triggerEnvelopeRelease = function (time) {\n        var _this = this;\n        this.envelope.triggerRelease(time);\n        this._oscillators.forEach(function (osc) { return osc.stop(time + _this.toSeconds(_this.envelope.release)); });\n        return this;\n    };\n    MetalSynth.prototype.getLevelAtTime = function (time) {\n        time = this.toSeconds(time);\n        return this.envelope.getValueAtTime(time);\n    };\n    Object.defineProperty(MetalSynth.prototype, \"modulationIndex\", {\n        /**\n         * The modulationIndex of the oscillators which make up the source.\n         * see [[FMOscillator.modulationIndex]]\n         * @min 1\n         * @max 100\n         */\n        get: function () {\n            return this._oscillators[0].modulationIndex.value;\n        },\n        set: function (val) {\n            this._oscillators.forEach(function (osc) { return (osc.modulationIndex.value = val); });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MetalSynth.prototype, \"harmonicity\", {\n        /**\n         * The harmonicity of the oscillators which make up the source.\n         * see Tone.FMOscillator.harmonicity\n         * @min 0.1\n         * @max 10\n         */\n        get: function () {\n            return this._oscillators[0].harmonicity.value;\n        },\n        set: function (val) {\n            this._oscillators.forEach(function (osc) { return (osc.harmonicity.value = val); });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MetalSynth.prototype, \"resonance\", {\n        /**\n         * The lower level of the highpass filter which is attached to the envelope.\n         * This value should be between [0, 7000]\n         * @min 0\n         * @max 7000\n         */\n        get: function () {\n            return this._filterFreqScaler.min;\n        },\n        set: function (val) {\n            this._filterFreqScaler.min = this.toFrequency(val);\n            this.octaves = this._octaves;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MetalSynth.prototype, \"octaves\", {\n        /**\n         * The number of octaves above the \"resonance\" frequency\n         * that the filter ramps during the attack/decay envelope\n         * @min 0\n         * @max 8\n         */\n        get: function () {\n            return this._octaves;\n        },\n        set: function (val) {\n            this._octaves = val;\n            this._filterFreqScaler.max = this._filterFreqScaler.min * Math.pow(2, val);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    MetalSynth.prototype.dispose = function () {\n        _super.prototype.dispose.call(this);\n        this._oscillators.forEach(function (osc) { return osc.dispose(); });\n        this._freqMultipliers.forEach(function (freqMult) { return freqMult.dispose(); });\n        this.frequency.dispose();\n        this.detune.dispose();\n        this._filterFreqScaler.dispose();\n        this._amplitude.dispose();\n        this.envelope.dispose();\n        this._highpass.dispose();\n        return this;\n    };\n    return MetalSynth;\n}(Monophonic));\nexport { MetalSynth };\n//# sourceMappingURL=MetalSynth.js.map","import * as tslib_1 from \"tslib\";\nimport { Monophonic } from \"./Monophonic\";\nimport { MonoSynth } from \"./MonoSynth\";\nimport { Signal } from \"../signal/Signal\";\nimport { readOnly } from \"../core/util/Interface\";\nimport { LFO } from \"../source/oscillator/LFO\";\nimport { Gain, } from \"../core/context/Gain\";\nimport { Multiply } from \"../signal/Multiply\";\nimport { deepMerge, omitFromObject, optionsFromArguments } from \"../core/util/Defaults\";\n/**\n * DuoSynth is a monophonic synth composed of two [[MonoSynths]] run in parallel with control over the\n * frequency ratio between the two voices and vibrato effect.\n * @example\n * import { DuoSynth } from \"tone\";\n * const duoSynth = new DuoSynth().toDestination();\n * duoSynth.triggerAttackRelease(\"C4\", \"2n\");\n * @category Instrument\n */\nvar DuoSynth = /** @class */ (function (_super) {\n    tslib_1.__extends(DuoSynth, _super);\n    function DuoSynth() {\n        var _this = _super.call(this, optionsFromArguments(DuoSynth.getDefaults(), arguments)) || this;\n        _this.name = \"DuoSynth\";\n        var options = optionsFromArguments(DuoSynth.getDefaults(), arguments);\n        _this.voice0 = new MonoSynth(Object.assign(options.voice0, {\n            context: _this.context,\n            onsilence: function () { return _this.onsilence(_this); }\n        }));\n        _this.voice1 = new MonoSynth(Object.assign(options.voice1, {\n            context: _this.context,\n        }));\n        _this.harmonicity = new Multiply({\n            context: _this.context,\n            units: \"positive\",\n            value: options.harmonicity,\n        });\n        _this._vibrato = new LFO({\n            frequency: options.vibratoRate,\n            context: _this.context,\n            min: -50,\n            max: 50\n        });\n        // start the vibrato immediately\n        _this._vibrato.start();\n        _this.vibratoRate = _this._vibrato.frequency;\n        _this._vibratoGain = new Gain({\n            context: _this.context,\n            units: \"normalRange\",\n            gain: options.vibratoAmount\n        });\n        _this.vibratoAmount = _this._vibratoGain.gain;\n        _this.frequency = new Signal({\n            context: _this.context,\n            units: \"frequency\",\n            value: 440\n        });\n        _this.detune = new Signal({\n            context: _this.context,\n            units: \"cents\",\n            value: options.detune\n        });\n        // control the two voices frequency\n        _this.frequency.connect(_this.voice0.frequency);\n        _this.frequency.chain(_this.harmonicity, _this.voice1.frequency);\n        _this._vibrato.connect(_this._vibratoGain);\n        _this._vibratoGain.fan(_this.voice0.detune, _this.voice1.detune);\n        _this.detune.fan(_this.voice0.detune, _this.voice1.detune);\n        _this.voice0.connect(_this.output);\n        _this.voice1.connect(_this.output);\n        readOnly(_this, [\"voice0\", \"voice1\", \"frequency\", \"vibratoAmount\", \"vibratoRate\"]);\n        return _this;\n    }\n    DuoSynth.prototype.getLevelAtTime = function (time) {\n        time = this.toSeconds(time);\n        return this.voice0.envelope.getValueAtTime(time) + this.voice1.envelope.getValueAtTime(time);\n    };\n    DuoSynth.getDefaults = function () {\n        return deepMerge(Monophonic.getDefaults(), {\n            vibratoAmount: 0.5,\n            vibratoRate: 5,\n            harmonicity: 1.5,\n            voice0: deepMerge(omitFromObject(MonoSynth.getDefaults(), Object.keys(Monophonic.getDefaults())), {\n                filterEnvelope: {\n                    attack: 0.01,\n                    decay: 0.0,\n                    sustain: 1,\n                    release: 0.5\n                },\n                envelope: {\n                    attack: 0.01,\n                    decay: 0.0,\n                    sustain: 1,\n                    release: 0.5\n                }\n            }),\n            voice1: deepMerge(omitFromObject(MonoSynth.getDefaults(), Object.keys(Monophonic.getDefaults())), {\n                filterEnvelope: {\n                    attack: 0.01,\n                    decay: 0.0,\n                    sustain: 1,\n                    release: 0.5\n                },\n                envelope: {\n                    attack: 0.01,\n                    decay: 0.0,\n                    sustain: 1,\n                    release: 0.5\n                }\n            }),\n        });\n    };\n    /**\n     * Trigger the attack portion of the note\n     */\n    DuoSynth.prototype._triggerEnvelopeAttack = function (time, velocity) {\n        // @ts-ignore\n        this.voice0._triggerEnvelopeAttack(time, velocity);\n        // @ts-ignore\n        this.voice1._triggerEnvelopeAttack(time, velocity);\n    };\n    /**\n     * Trigger the release portion of the note\n     */\n    DuoSynth.prototype._triggerEnvelopeRelease = function (time) {\n        // @ts-ignore\n        this.voice0._triggerEnvelopeRelease(time);\n        // @ts-ignore\n        this.voice1._triggerEnvelopeRelease(time);\n        return this;\n    };\n    DuoSynth.prototype.dispose = function () {\n        _super.prototype.dispose.call(this);\n        this.voice0.dispose();\n        this.voice1.dispose();\n        this.frequency.dispose();\n        this.detune.dispose();\n        this._vibrato.dispose();\n        this.vibratoRate.dispose();\n        this._vibratoGain.dispose();\n        this.harmonicity.dispose();\n        return this;\n    };\n    return DuoSynth;\n}(Monophonic));\nexport { DuoSynth };\n//# sourceMappingURL=DuoSynth.js.map","import * as tslib_1 from \"tslib\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { Multiply } from \"../signal/Multiply\";\nimport { ModulationSynth } from \"./ModulationSynth\";\n/**\n * FMSynth is composed of two Tone.Synths where one Tone.Synth modulates\n * the frequency of a second Tone.Synth. A lot of spectral content\n * can be explored using the modulationIndex parameter. Read more about\n * frequency modulation synthesis on Sound On Sound: [Part 1](https://web.archive.org/web/20160403123704/http://www.soundonsound.com/sos/apr00/articles/synthsecrets.htm), [Part 2](https://web.archive.org/web/20160403115835/http://www.soundonsound.com/sos/may00/articles/synth.htm).\n *\n * @example\n * import { FMSynth } from \"tone\";\n * const fmSynth = new FMSynth().toDestination();\n * fmSynth.triggerAttackRelease(\"C5\", \"4n\");\n *\n * @category Instrument\n */\nvar FMSynth = /** @class */ (function (_super) {\n    tslib_1.__extends(FMSynth, _super);\n    function FMSynth() {\n        var _this = _super.call(this, optionsFromArguments(FMSynth.getDefaults(), arguments)) || this;\n        _this.name = \"FMSynth\";\n        var options = optionsFromArguments(FMSynth.getDefaults(), arguments);\n        _this.modulationIndex = new Multiply({\n            context: _this.context,\n            value: options.modulationIndex,\n        });\n        // control the two voices frequency\n        _this.frequency.connect(_this._carrier.frequency);\n        _this.frequency.chain(_this.harmonicity, _this._modulator.frequency);\n        _this.frequency.chain(_this.modulationIndex, _this._modulationNode);\n        _this.detune.fan(_this._carrier.detune, _this._modulator.detune);\n        _this._modulator.connect(_this._modulationNode.gain);\n        _this._modulationNode.connect(_this._carrier.frequency);\n        _this._carrier.connect(_this.output);\n        return _this;\n    }\n    FMSynth.getDefaults = function () {\n        return Object.assign(ModulationSynth.getDefaults(), {\n            modulationIndex: 10,\n        });\n    };\n    FMSynth.prototype.dispose = function () {\n        _super.prototype.dispose.call(this);\n        this.modulationIndex.dispose();\n        return this;\n    };\n    return FMSynth;\n}(ModulationSynth));\nexport { FMSynth };\n//# sourceMappingURL=FMSynth.js.map","import * as tslib_1 from \"tslib\";\nimport { ToneAudioNode } from \"./ToneAudioNode\";\nimport { noOp } from \"../util/Interface\";\nvar ToneAudioWorklet = /** @class */ (function (_super) {\n    tslib_1.__extends(ToneAudioWorklet, _super);\n    function ToneAudioWorklet(options) {\n        var _this = _super.call(this, options) || this;\n        _this.name = \"ToneAudioWorklet\";\n        /**\n         * The constructor options for the node\n         */\n        _this.workletOptions = {};\n        /**\n         * Callback which is invoked when there is an error in the processing\n         */\n        _this.onprocessorerror = noOp;\n        var blobUrl = URL.createObjectURL(new Blob([_this._audioWorklet()], { type: \"text/javascript\" }));\n        var name = _this._audioWorkletName();\n        // Register the processor\n        _this.context.addAudioWorkletModule(blobUrl, name).then(function () {\n            // create the worklet when it's read\n            if (!_this.disposed) {\n                _this._worklet = _this.context.createAudioWorkletNode(name, _this.workletOptions);\n                _this._worklet.onprocessorerror = _this.onprocessorerror.bind(_this);\n                _this.onReady(_this._worklet);\n            }\n        });\n        return _this;\n    }\n    ToneAudioWorklet.prototype.dispose = function () {\n        _super.prototype.dispose.call(this);\n        if (this._worklet) {\n            this._worklet.disconnect();\n        }\n        return this;\n    };\n    return ToneAudioWorklet;\n}(ToneAudioNode));\nexport { ToneAudioWorklet };\n//# sourceMappingURL=ToneAudioWorklet.js.map","import * as tslib_1 from \"tslib\";\nimport { FrequencyClass } from \"../core/type/Frequency\";\nimport { deepMerge, optionsFromArguments } from \"../core/util/Defaults\";\nimport { readOnly } from \"../core/util/Interface\";\nimport { Monophonic } from \"./Monophonic\";\nimport { Synth } from \"./Synth\";\nimport { range, timeRange } from \"../core/util/Decorator\";\n/**\n * MembraneSynth makes kick and tom sounds using a single oscillator\n * with an amplitude envelope and frequency ramp. A Tone.OmniOscillator\n * is routed through a Tone.AmplitudeEnvelope to the output. The drum\n * quality of the sound comes from the frequency envelope applied\n * during MembraneSynth.triggerAttack(note). The frequency envelope\n * starts at <code>note * .octaves</code> and ramps to <code>note</code>\n * over the duration of <code>.pitchDecay</code>.\n * @example\n * import { MembraneSynth } from \"tone\";\n * const synth = new MembraneSynth().toDestination();\n * synth.triggerAttackRelease(\"C2\", \"8n\");\n * @category Instrument\n */\nvar MembraneSynth = /** @class */ (function (_super) {\n    tslib_1.__extends(MembraneSynth, _super);\n    function MembraneSynth() {\n        var _this = _super.call(this, optionsFromArguments(MembraneSynth.getDefaults(), arguments)) || this;\n        _this.name = \"MembraneSynth\";\n        /**\n         * Portamento is ignored in this synth. use pitch decay instead.\n         */\n        _this.portamento = 0;\n        var options = optionsFromArguments(MembraneSynth.getDefaults(), arguments);\n        _this.pitchDecay = options.pitchDecay;\n        _this.octaves = options.octaves;\n        readOnly(_this, [\"oscillator\", \"envelope\"]);\n        return _this;\n    }\n    MembraneSynth.getDefaults = function () {\n        return deepMerge(Monophonic.getDefaults(), Synth.getDefaults(), {\n            envelope: {\n                attack: 0.001,\n                attackCurve: \"exponential\",\n                decay: 0.4,\n                release: 1.4,\n                sustain: 0.01,\n            },\n            octaves: 10,\n            oscillator: {\n                type: \"sine\",\n            },\n            pitchDecay: 0.05,\n        });\n    };\n    MembraneSynth.prototype.setNote = function (note, time) {\n        var seconds = this.toSeconds(time);\n        var hertz = this.toFrequency(note instanceof FrequencyClass ? note.toFrequency() : note);\n        var maxNote = hertz * this.octaves;\n        this.oscillator.frequency.setValueAtTime(maxNote, seconds);\n        this.oscillator.frequency.exponentialRampToValueAtTime(hertz, seconds + this.toSeconds(this.pitchDecay));\n        return this;\n    };\n    MembraneSynth.prototype.dispose = function () {\n        _super.prototype.dispose.call(this);\n        return this;\n    };\n    tslib_1.__decorate([\n        range(0)\n    ], MembraneSynth.prototype, \"octaves\", void 0);\n    tslib_1.__decorate([\n        timeRange(0)\n    ], MembraneSynth.prototype, \"pitchDecay\", void 0);\n    return MembraneSynth;\n}(Synth));\nexport { MembraneSynth };\n//# sourceMappingURL=MembraneSynth.js.map","import * as tslib_1 from \"tslib\";\nimport { AmplitudeEnvelope } from \"../component/envelope/AmplitudeEnvelope\";\nimport { omitFromObject, optionsFromArguments } from \"../core/util/Defaults\";\nimport { Noise } from \"../source/Noise\";\nimport { Instrument } from \"./Instrument\";\nimport { ToneAudioNode } from \"../core/context/ToneAudioNode\";\nimport { Envelope } from \"../component/envelope/Envelope\";\nimport { Source } from \"../source/Source\";\n/**\n * Tone.NoiseSynth is composed of [[Noise]] through an [[AmplitudeEnvelope]].\n * ```\n * +-------+   +-------------------+\n * | Noise +>--> AmplitudeEnvelope +>--> Output\n * +-------+   +-------------------+\n * ```\n * @example\n * import { NoiseSynth } from \"tone\";\n * const noiseSynth = new NoiseSynth().toDestination();\n * noiseSynth.triggerAttackRelease(\"8n\", 0.05);\n * @category Instrument\n */\nvar NoiseSynth = /** @class */ (function (_super) {\n    tslib_1.__extends(NoiseSynth, _super);\n    function NoiseSynth() {\n        var _this = _super.call(this, optionsFromArguments(NoiseSynth.getDefaults(), arguments)) || this;\n        _this.name = \"NoiseSynth\";\n        var options = optionsFromArguments(NoiseSynth.getDefaults(), arguments);\n        _this.noise = new Noise(Object.assign({\n            context: _this.context,\n        }, options.noise));\n        _this.envelope = new AmplitudeEnvelope(Object.assign({\n            context: _this.context,\n        }, options.envelope));\n        // connect the noise to the output\n        _this.noise.chain(_this.envelope, _this.output);\n        return _this;\n    }\n    NoiseSynth.getDefaults = function () {\n        return Object.assign(Instrument.getDefaults(), {\n            envelope: Object.assign(omitFromObject(Envelope.getDefaults(), Object.keys(ToneAudioNode.getDefaults())), {\n                decay: 0.1,\n                sustain: 0.0,\n            }),\n            noise: Object.assign(omitFromObject(Noise.getDefaults(), Object.keys(Source.getDefaults())), {\n                type: \"white\",\n            }),\n        });\n    };\n    /**\n     * Start the attack portion of the envelopes. Unlike other\n     * instruments, Tone.NoiseSynth doesn't have a note.\n     * @example\n     * import { NoiseSynth } from \"tone\";\n     * const noiseSynth = new NoiseSynth().toDestination();\n     * noiseSynth.triggerAttack();\n     */\n    NoiseSynth.prototype.triggerAttack = function (time, velocity) {\n        if (velocity === void 0) { velocity = 1; }\n        time = this.toSeconds(time);\n        // the envelopes\n        this.envelope.triggerAttack(time, velocity);\n        // start the noise\n        this.noise.start(time);\n        if (this.envelope.sustain === 0) {\n            this.noise.stop(time + this.toSeconds(this.envelope.attack) + this.toSeconds(this.envelope.decay));\n        }\n        return this;\n    };\n    /**\n     * Start the release portion of the envelopes.\n     */\n    NoiseSynth.prototype.triggerRelease = function (time) {\n        time = this.toSeconds(time);\n        this.envelope.triggerRelease(time);\n        this.noise.stop(time + this.toSeconds(this.envelope.release));\n        return this;\n    };\n    NoiseSynth.prototype.sync = function () {\n        this._syncMethod(\"triggerAttack\", 0);\n        this._syncMethod(\"triggerRelease\", 0);\n        return this;\n    };\n    NoiseSynth.prototype.triggerAttackRelease = function (duration, time, velocity) {\n        if (velocity === void 0) { velocity = 1; }\n        time = this.toSeconds(time);\n        duration = this.toSeconds(duration);\n        this.triggerAttack(time, velocity);\n        this.triggerRelease(time + duration);\n        return this;\n    };\n    NoiseSynth.prototype.dispose = function () {\n        _super.prototype.dispose.call(this);\n        this.noise.dispose();\n        this.envelope.dispose();\n        return this;\n    };\n    return NoiseSynth;\n}(Instrument));\nexport { NoiseSynth };\n//# sourceMappingURL=NoiseSynth.js.map","import * as tslib_1 from \"tslib\";\nimport { Gain } from \"../../core/context/Gain\";\nimport { Param } from \"../../core/context/Param\";\nimport { connectSeries, ToneAudioNode } from \"../../core/context/ToneAudioNode\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { readOnly } from \"../../core/util/Interface\";\nimport { ToneAudioWorklet } from \"../../core/context/ToneAudioWorklet\";\n/**\n * Comb filters are basic building blocks for physical modeling. Read more\n * about comb filters on [CCRMA's website](https://ccrma.stanford.edu/~jos/pasp/Feedback_Comb_Filters.html).\n *\n * This comb filter is implemented with the AudioWorkletNode which allows it to have feedback delays less than the\n * Web Audio processing block of 128 samples. There is a polyfill for browsers that don't yet support the\n * AudioWorkletNode, but it will add some latency and have slower performance than the AudioWorkletNode.\n * @category Component\n */\nvar FeedbackCombFilter = /** @class */ (function (_super) {\n    tslib_1.__extends(FeedbackCombFilter, _super);\n    function FeedbackCombFilter() {\n        var _this = _super.call(this, optionsFromArguments(FeedbackCombFilter.getDefaults(), arguments, [\"delayTime\", \"resonance\"])) || this;\n        _this.name = \"FeedbackCombFilter\";\n        /**\n         * Default constructor options for the filter\n         */\n        _this.workletOptions = {\n            numberOfInputs: 1,\n            numberOfOutputs: 1,\n            channelCount: 1,\n        };\n        var options = optionsFromArguments(FeedbackCombFilter.getDefaults(), arguments, [\"delayTime\", \"resonance\"]);\n        _this.input = new Gain({ context: _this.context });\n        _this.output = new Gain({ context: _this.context });\n        var dummyGain = _this.context.createGain();\n        _this.delayTime = new Param({\n            context: _this.context,\n            value: options.delayTime,\n            units: \"time\",\n            minValue: 0,\n            maxValue: 1,\n            param: dummyGain.gain,\n            swappable: true,\n        });\n        _this.resonance = new Param({\n            context: _this.context,\n            value: options.resonance,\n            units: \"normalRange\",\n            param: dummyGain.gain,\n            swappable: true,\n        });\n        readOnly(_this, [\"resonance\", \"delayTime\"]);\n        return _this;\n    }\n    FeedbackCombFilter.prototype._audioWorkletName = function () {\n        return \"feedback-comb-filter\";\n    };\n    FeedbackCombFilter.prototype._audioWorklet = function () {\n        return /* javascript */ \" \\n\\t\\t\\tregisterProcessor(\\\"\" + this._audioWorkletName() + \"\\\", class extends AudioWorkletProcessor {\\n\\t\\t\\t\\tstatic get parameterDescriptors() {\\n\\t\\t\\t\\t\\treturn [{\\n\\t\\t\\t\\t\\t\\tname: \\\"delayTime\\\",\\n\\t\\t\\t\\t\\t\\tdefaultValue: 0.1,\\n\\t\\t\\t\\t\\t\\tminValue: 0,\\n\\t\\t\\t\\t\\t\\tmaxValue: 1,\\n\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\tname: \\\"feedback\\\",\\n\\t\\t\\t\\t\\t\\tdefaultValue: 0.5,\\n\\t\\t\\t\\t\\t\\tminValue: 0,\\n\\t\\t\\t\\t\\t\\tmaxValue: 0.9999,\\n\\t\\t\\t\\t\\t}];\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\n\\t\\t\\t\\tconstructor(options) {\\n\\t\\t\\t\\t\\tsuper(options);\\n\\t\\t\\t\\t\\tthis.delayBuffer = new Float32Array(sampleRate);\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\n\\t\\t\\t\\tgetParameter(parameter, index) {\\n\\t\\t\\t\\t\\tif (parameter.length > 1) {\\n\\t\\t\\t\\t\\t\\treturn parameter[index];\\n\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\treturn parameter[0];\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\n\\t\\t\\t\\tprocess(inputs, outputs, parameters) {\\n\\t\\t\\t\\t\\tconst input = inputs[0];\\n\\t\\t\\t\\t\\tconst output = outputs[0];\\n\\t\\t\\t\\t\\tconst delayLength = this.delayBuffer.length;\\n\\t\\t\\t\\t\\tconst inputChannel = input[0];\\n\\t\\t\\t\\t\\tconst outputChannel = output[0];\\n\\t\\t\\t\\t\\tconst delayTimeParam = parameters.delayTime;\\n\\t\\t\\t\\t\\tconst feedbackParam = parameters.feedback;\\n\\t\\t\\t\\t\\tinputChannel.forEach((value, index) => {\\n\\t\\t\\t\\t\\t\\tconst delayTime = this.getParameter(delayTimeParam, index);\\n\\t\\t\\t\\t\\t\\tconst feedback = this.getParameter(feedbackParam, index);\\n\\t\\t\\t\\t\\t\\tconst delaySamples = Math.floor(delayTime * sampleRate);\\n\\t\\t\\t\\t\\t\\tconst currentIndex = (currentFrame + index) % delayLength;\\n\\t\\t\\t\\t\\t\\tconst delayedIndex = (currentFrame + index + delaySamples) % delayLength;\\n\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t// the current value to output\\n\\t\\t\\t\\t\\t\\tconst currentValue = this.delayBuffer[currentIndex];\\n\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t// write the current value to the delayBuffer in the future\\n\\t\\t\\t\\t\\t\\tthis.delayBuffer[delayedIndex] = value + currentValue * feedback;\\n\\n\\t\\t\\t\\t\\t\\t// set all of the output channels to the same value\\n\\t\\t\\t\\t\\t\\toutputChannel[index] = delaySamples > 0 ? currentValue : value;\\n\\t\\t\\t\\t\\t});\\n\\t\\t\\t\\t\\t// keep the processing alive\\n\\t\\t\\t\\t\\treturn true;\\n\\t\\t\\t\\t}\\n\\t\\t\\t});\\n\\t\\t\";\n    };\n    /**\n     * The default parameters\n     */\n    FeedbackCombFilter.getDefaults = function () {\n        return Object.assign(ToneAudioNode.getDefaults(), {\n            delayTime: 0.1,\n            resonance: 0.5,\n        });\n    };\n    FeedbackCombFilter.prototype.onReady = function (node) {\n        connectSeries(this.input, node, this.output);\n        // @ts-ignore\n        var delayTime = node.parameters.get(\"delayTime\");\n        this.delayTime.setParam(delayTime);\n        // @ts-ignore\n        var feedback = node.parameters.get(\"feedback\");\n        this.resonance.setParam(feedback);\n    };\n    FeedbackCombFilter.prototype.dispose = function () {\n        _super.prototype.dispose.call(this);\n        this.input.dispose();\n        this.output.dispose();\n        this.delayTime.dispose();\n        this.resonance.dispose();\n        return this;\n    };\n    return FeedbackCombFilter;\n}(ToneAudioWorklet));\nexport { FeedbackCombFilter };\n//# sourceMappingURL=FeedbackCombFilter.js.map","import * as tslib_1 from \"tslib\";\nimport { ToneAudioNode } from \"../../core/context/ToneAudioNode\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { Gain } from \"../../core/context/Gain\";\n/**\n * A one pole filter with 6db-per-octave rolloff. Either \"highpass\" or \"lowpass\".\n * Note that changing the type or frequency may result in a discontinuity which\n * can sound like a click or pop.\n * References:\n * * http://www.earlevel.com/main/2012/12/15/a-one-pole-filter/\n * * http://www.dspguide.com/ch19/2.htm\n * * https://github.com/vitaliy-bobrov/js-rocks/blob/master/src/app/audio/effects/one-pole-filters.ts\n * @category Component\n */\nvar OnePoleFilter = /** @class */ (function (_super) {\n    tslib_1.__extends(OnePoleFilter, _super);\n    function OnePoleFilter() {\n        var _this = _super.call(this, optionsFromArguments(OnePoleFilter.getDefaults(), arguments, [\"frequency\", \"type\"])) || this;\n        _this.name = \"OnePoleFilter\";\n        var options = optionsFromArguments(OnePoleFilter.getDefaults(), arguments, [\"frequency\", \"type\"]);\n        _this._frequency = options.frequency;\n        _this._type = options.type;\n        _this.input = new Gain({ context: _this.context });\n        _this.output = new Gain({ context: _this.context });\n        _this._createFilter();\n        return _this;\n    }\n    OnePoleFilter.getDefaults = function () {\n        return Object.assign(ToneAudioNode.getDefaults(), {\n            frequency: 880,\n            type: \"lowpass\"\n        });\n    };\n    /**\n     * Create a filter and dispose the old one\n     */\n    OnePoleFilter.prototype._createFilter = function () {\n        var _this = this;\n        var oldFilter = this._filter;\n        var freq = this.toFrequency(this._frequency);\n        var t = 1 / (2 * Math.PI * freq);\n        if (this._type === \"lowpass\") {\n            var a0 = 1 / (t * this.context.sampleRate);\n            var b1 = a0 - 1;\n            this._filter = this.context.createIIRFilter([a0, 0], [1, b1]);\n        }\n        else {\n            var b1 = 1 / (t * this.context.sampleRate) - 1;\n            this._filter = this.context.createIIRFilter([1, -1], [1, b1]);\n        }\n        this.input.chain(this._filter, this.output);\n        if (oldFilter) {\n            // dispose it on the next block\n            this.context.setTimeout(function () {\n                if (!_this.disposed) {\n                    _this.input.disconnect(oldFilter);\n                    oldFilter.disconnect();\n                }\n            }, this.blockTime);\n        }\n    };\n    Object.defineProperty(OnePoleFilter.prototype, \"frequency\", {\n        /**\n         * The frequency value.\n         */\n        get: function () {\n            return this._frequency;\n        },\n        set: function (fq) {\n            this._frequency = fq;\n            this._createFilter();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(OnePoleFilter.prototype, \"type\", {\n        /**\n         * The OnePole Filter type, either \"highpass\" or \"lowpass\"\n         */\n        get: function () {\n            return this._type;\n        },\n        set: function (t) {\n            this._type = t;\n            this._createFilter();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Get the frequency response curve. This curve represents how the filter\n     * responses to frequencies between 20hz-20khz.\n     * @param  len The number of values to return\n     * @return The frequency response curve between 20-20kHz\n     */\n    OnePoleFilter.prototype.getFrequencyResponse = function (len) {\n        if (len === void 0) { len = 128; }\n        var freqValues = new Float32Array(len);\n        for (var i = 0; i < len; i++) {\n            var norm = Math.pow(i / len, 2);\n            var freq = norm * (20000 - 20) + 20;\n            freqValues[i] = freq;\n        }\n        var magValues = new Float32Array(len);\n        var phaseValues = new Float32Array(len);\n        this._filter.getFrequencyResponse(freqValues, magValues, phaseValues);\n        return magValues;\n    };\n    OnePoleFilter.prototype.dispose = function () {\n        _super.prototype.dispose.call(this);\n        this.input.dispose();\n        this.output.dispose();\n        this._filter.disconnect();\n        return this;\n    };\n    return OnePoleFilter;\n}(ToneAudioNode));\nexport { OnePoleFilter };\n//# sourceMappingURL=OnePoleFilter.js.map","import * as tslib_1 from \"tslib\";\nimport { ToneAudioNode } from \"../../core/context/ToneAudioNode\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { FeedbackCombFilter } from \"./FeedbackCombFilter\";\nimport { OnePoleFilter } from \"./OnePoleFilter\";\n/**\n * A lowpass feedback comb filter. It is similar to\n * [[FeedbackCombFilter]], but includes a lowpass filter.\n * @category Component\n */\nvar LowpassCombFilter = /** @class */ (function (_super) {\n    tslib_1.__extends(LowpassCombFilter, _super);\n    function LowpassCombFilter() {\n        var _this = _super.call(this, optionsFromArguments(LowpassCombFilter.getDefaults(), arguments, [\"delayTime\", \"resonance\", \"dampening\"])) || this;\n        _this.name = \"LowpassCombFilter\";\n        var options = optionsFromArguments(LowpassCombFilter.getDefaults(), arguments, [\"delayTime\", \"resonance\", \"dampening\"]);\n        _this._combFilter = _this.output = new FeedbackCombFilter({\n            context: _this.context,\n            delayTime: options.delayTime,\n            resonance: options.resonance,\n        });\n        _this.delayTime = _this._combFilter.delayTime;\n        _this.resonance = _this._combFilter.resonance;\n        _this._lowpass = _this.input = new OnePoleFilter({\n            context: _this.context,\n            frequency: options.dampening,\n            type: \"lowpass\",\n        });\n        // connections\n        _this._lowpass.connect(_this._combFilter);\n        return _this;\n    }\n    LowpassCombFilter.getDefaults = function () {\n        return Object.assign(ToneAudioNode.getDefaults(), {\n            dampening: 3000,\n            delayTime: 0.1,\n            resonance: 0.5,\n        });\n    };\n    Object.defineProperty(LowpassCombFilter.prototype, \"dampening\", {\n        /**\n         * The dampening control of the feedback\n         */\n        get: function () {\n            return this._lowpass.frequency;\n        },\n        set: function (fq) {\n            this._lowpass.frequency = fq;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    LowpassCombFilter.prototype.dispose = function () {\n        _super.prototype.dispose.call(this);\n        this._combFilter.dispose();\n        this._lowpass.dispose();\n        return this;\n    };\n    return LowpassCombFilter;\n}(ToneAudioNode));\nexport { LowpassCombFilter };\n//# sourceMappingURL=LowpassCombFilter.js.map","import * as tslib_1 from \"tslib\";\nimport { MidiClass } from \"../core/type/Midi\";\nimport { deepMerge, omitFromObject, optionsFromArguments } from \"../core/util/Defaults\";\nimport { isArray, isNumber } from \"../core/util/TypeCheck\";\nimport { Instrument } from \"./Instrument\";\nimport { Synth } from \"./Synth\";\nimport { assert, warn } from \"../core/util/Debug\";\n/**\n * PolySynth handles voice creation and allocation for any\n * instruments passed in as the second paramter. PolySynth is\n * not a synthesizer by itself, it merely manages voices of\n * one of the other types of synths, allowing any of the\n * monophonic synthesizers to be polyphonic.\n *\n * @example\n * import { PolySynth } from \"tone\";\n * const synth = new PolySynth().toDestination();\n * // set the attributes across all the voices using 'set'\n * synth.set({ detune: -1200 });\n * // play a chord\n * synth.triggerAttackRelease([\"C4\", \"E4\", \"A4\"], 1);\n * @category Instrument\n */\nvar PolySynth = /** @class */ (function (_super) {\n    tslib_1.__extends(PolySynth, _super);\n    function PolySynth() {\n        var _this = _super.call(this, optionsFromArguments(PolySynth.getDefaults(), arguments, [\"voice\", \"options\"])) || this;\n        _this.name = \"PolySynth\";\n        /**\n         * The voices which are not currently in use\n         */\n        _this._availableVoices = [];\n        /**\n         * The currently active voices\n         */\n        _this._activeVoices = [];\n        /**\n         * All of the allocated voices for this synth.\n         */\n        _this._voices = [];\n        /**\n         * The GC timeout. Held so that it could be cancelled when the node is disposed.\n         */\n        _this._gcTimeout = -1;\n        /**\n         * A moving average of the number of active voices\n         */\n        _this._averageActiveVoices = 0;\n        var options = optionsFromArguments(PolySynth.getDefaults(), arguments, [\"voice\", \"options\"]);\n        // check against the old API (pre 14.3.0)\n        assert(!isNumber(options.voice), \"DEPRECATED: The polyphony count is no longer the first argument.\");\n        var defaults = options.voice.getDefaults();\n        _this.options = Object.assign(defaults, options.options);\n        _this.voice = options.voice;\n        _this.maxPolyphony = options.maxPolyphony;\n        // create the first voice\n        _this._dummyVoice = _this._getNextAvailableVoice();\n        // remove it from the voices list\n        var index = _this._voices.indexOf(_this._dummyVoice);\n        _this._voices.splice(index, 1);\n        // kick off the GC interval\n        _this._gcTimeout = _this.context.setInterval(_this._collectGarbage.bind(_this), 1);\n        return _this;\n    }\n    PolySynth.getDefaults = function () {\n        return Object.assign(Instrument.getDefaults(), {\n            maxPolyphony: 32,\n            options: {},\n            voice: Synth,\n        });\n    };\n    Object.defineProperty(PolySynth.prototype, \"activeVoices\", {\n        /**\n         * The number of active voices.\n         */\n        get: function () {\n            return this._activeVoices.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Invoked when the source is done making sound, so that it can be\n     * readded to the pool of available voices\n     */\n    PolySynth.prototype._makeVoiceAvailable = function (voice) {\n        this._availableVoices.push(voice);\n        // remove the midi note from 'active voices'\n        var activeVoiceIndex = this._activeVoices.findIndex(function (e) { return e.voice === voice; });\n        this._activeVoices.splice(activeVoiceIndex, 1);\n    };\n    /**\n     * Get an available voice from the pool of available voices.\n     * If one is not available and the maxPolyphony limit is reached,\n     * steal a voice, otherwise return null.\n     */\n    PolySynth.prototype._getNextAvailableVoice = function () {\n        // if there are available voices, return the first one\n        if (this._availableVoices.length) {\n            return this._availableVoices.shift();\n        }\n        else if (this._voices.length < this.maxPolyphony) {\n            // otherwise if there is still more maxPolyphony, make a new voice\n            var voice = new this.voice(Object.assign(this.options, {\n                context: this.context,\n                onsilence: this._makeVoiceAvailable.bind(this),\n            }));\n            voice.connect(this.output);\n            this._voices.push(voice);\n            return voice;\n        }\n        else {\n            warn(\"Max polyphony exceeded. Note dropped.\");\n        }\n    };\n    /**\n     * Occasionally check if there are any allocated voices which can be cleaned up.\n     */\n    PolySynth.prototype._collectGarbage = function () {\n        this._averageActiveVoices = Math.max(this._averageActiveVoices * 0.95, this.activeVoices);\n        if (this._availableVoices.length && this._voices.length > Math.ceil(this._averageActiveVoices + 1)) {\n            // take off an available note\n            var firstAvail = this._availableVoices.shift();\n            var index = this._voices.indexOf(firstAvail);\n            this._voices.splice(index, 1);\n            if (!this.context.isOffline) {\n                firstAvail.dispose();\n            }\n        }\n    };\n    /**\n     * Internal method which triggers the attack\n     */\n    PolySynth.prototype._triggerAttack = function (notes, time, velocity) {\n        var _this = this;\n        notes.forEach(function (note) {\n            var midiNote = new MidiClass(_this.context, note).toMidi();\n            var voice = _this._getNextAvailableVoice();\n            if (voice) {\n                voice.triggerAttack(note, time, velocity);\n                _this._activeVoices.push({\n                    midi: midiNote, voice: voice, released: false,\n                });\n                _this.log(\"triggerAttack\", note, time);\n            }\n        });\n    };\n    /**\n     * Internal method which triggers the release\n     */\n    PolySynth.prototype._triggerRelease = function (notes, time) {\n        var _this = this;\n        notes.forEach(function (note) {\n            var midiNote = new MidiClass(_this.context, note).toMidi();\n            var event = _this._activeVoices.find(function (_a) {\n                var midi = _a.midi, released = _a.released;\n                return midi === midiNote && !released;\n            });\n            if (event) {\n                // trigger release on that note\n                event.voice.triggerRelease(time);\n                // mark it as released\n                event.released = true;\n                _this.log(\"triggerRelease\", note, time);\n            }\n        });\n    };\n    /**\n     * Schedule the attack/release events. If the time is in the future, then it should set a timeout\n     * to wait for just-in-time scheduling\n     */\n    PolySynth.prototype._scheduleEvent = function (type, notes, time, velocity) {\n        var _this = this;\n        assert(!this.disposed, \"Synth was already disposed\");\n        // if the notes are greater than this amount of time in the future, they should be scheduled with setTimeout\n        if (time <= this.now()) {\n            // do it immediately\n            if (type === \"attack\") {\n                this._triggerAttack(notes, time, velocity);\n            }\n            else {\n                this._triggerRelease(notes, time);\n            }\n        }\n        else {\n            // schedule it to start in the future\n            this.context.setTimeout(function () {\n                _this._scheduleEvent(type, notes, time, velocity);\n            }, time - this.now());\n        }\n    };\n    /**\n     * Trigger the attack portion of the note\n     * @param  notes The notes to play. Accepts a single Frequency or an array of frequencies.\n     * @param  time  The start time of the note.\n     * @param velocity The velocity of the note.\n     * @example\n     * import { FMSynth, now, PolySynth } from \"tone\";\n     * const synth = new PolySynth(FMSynth).toDestination();\n     * // trigger a chord immediately with a velocity of 0.2\n     * synth.triggerAttack([\"Ab3\", \"C4\", \"F5\"], now(), 0.2);\n     */\n    PolySynth.prototype.triggerAttack = function (notes, time, velocity) {\n        if (!Array.isArray(notes)) {\n            notes = [notes];\n        }\n        var computedTime = this.toSeconds(time);\n        this._scheduleEvent(\"attack\", notes, computedTime, velocity);\n        return this;\n    };\n    /**\n     * Trigger the release of the note. Unlike monophonic instruments,\n     * a note (or array of notes) needs to be passed in as the first argument.\n     * @param  notes The notes to play. Accepts a single Frequency or an array of frequencies.\n     * @param  time  When the release will be triggered.\n     * @example\n     * @example\n     * import { AMSynth, PolySynth } from \"tone\";\n     * const poly = new PolySynth(AMSynth).toDestination();\n     * poly.triggerAttack([\"Ab3\", \"C4\", \"F5\"]);\n     * // trigger the release of the given notes.\n     * poly.triggerRelease([\"Ab3\", \"C4\"], \"+1\");\n     * poly.triggerRelease(\"F5\", \"+3\");\n     */\n    PolySynth.prototype.triggerRelease = function (notes, time) {\n        if (!Array.isArray(notes)) {\n            notes = [notes];\n        }\n        var computedTime = this.toSeconds(time);\n        this._scheduleEvent(\"release\", notes, computedTime);\n        return this;\n    };\n    /**\n     * Trigger the attack and release after the specified duration\n     * @param  notes The notes to play. Accepts a single  Frequency or an array of frequencies.\n     * @param  duration the duration of the note\n     * @param  time  if no time is given, defaults to now\n     * @param  velocity the velocity of the attack (0-1)\n     * @example\n     * import { AMSynth, PolySynth } from \"tone\";\n     * const poly = new PolySynth(AMSynth).toDestination();\n     * // can pass in an array of durations as well\n     * poly.triggerAttackRelease([\"Eb3\", \"G4\", \"Bb4\", \"D5\"], [4, 3, 2, 1]);\n     */\n    PolySynth.prototype.triggerAttackRelease = function (notes, duration, time, velocity) {\n        var computedTime = this.toSeconds(time);\n        this.triggerAttack(notes, computedTime, velocity);\n        if (isArray(duration)) {\n            assert(isArray(notes), \"If the duration is an array, the notes must also be an array\");\n            notes = notes;\n            for (var i = 0; i < notes.length; i++) {\n                var d = duration[Math.min(i, duration.length - 1)];\n                var durationSeconds = this.toSeconds(d);\n                assert(durationSeconds > 0, \"The duration must be greater than 0\");\n                this.triggerRelease(notes[i], computedTime + durationSeconds);\n            }\n        }\n        else {\n            var durationSeconds = this.toSeconds(duration);\n            assert(durationSeconds > 0, \"The duration must be greater than 0\");\n            this.triggerRelease(notes, computedTime + durationSeconds);\n        }\n        return this;\n    };\n    PolySynth.prototype.sync = function () {\n        this._syncMethod(\"triggerAttack\", 1);\n        this._syncMethod(\"triggerRelease\", 1);\n        return this;\n    };\n    /**\n     * Set a member/attribute of the voices\n     * @example\n     * import { PolySynth } from \"tone\";\n     * const poly = new PolySynth().toDestination();\n     * // set all of the voices using an options object for the synth type\n     * poly.set({\n     * \tenvelope: {\n     * \t\tattack: 0.25\n     * \t}\n     * });\n     * poly.triggerAttackRelease(\"Bb3\", 0.2);\n     */\n    PolySynth.prototype.set = function (options) {\n        // remove options which are controlled by the PolySynth\n        var sanitizedOptions = omitFromObject(options, [\"onsilence\", \"context\"]);\n        // store all of the options\n        this.options = deepMerge(this.options, sanitizedOptions);\n        this._voices.forEach(function (voice) { return voice.set(sanitizedOptions); });\n        this._dummyVoice.set(sanitizedOptions);\n        return this;\n    };\n    PolySynth.prototype.get = function () {\n        return this._dummyVoice.get();\n    };\n    /**\n     * Trigger the release portion of all the currently active voices immediately.\n     * Useful for silencing the synth.\n     */\n    PolySynth.prototype.releaseAll = function () {\n        var now = this.now();\n        this._activeVoices.forEach(function (_a) {\n            var voice = _a.voice;\n            voice.triggerRelease(now);\n        });\n        this._activeVoices = [];\n        return this;\n    };\n    PolySynth.prototype.dispose = function () {\n        _super.prototype.dispose.call(this);\n        this._dummyVoice.dispose();\n        this._voices.forEach(function (v) { return v.dispose(); });\n        this._activeVoices = [];\n        this._availableVoices = [];\n        this.context.clearInterval(this._gcTimeout);\n        return this;\n    };\n    return PolySynth;\n}(Instrument));\nexport { PolySynth };\n//# sourceMappingURL=PolySynth.js.map","import * as tslib_1 from \"tslib\";\nimport { LowpassCombFilter } from \"../component/filter/LowpassCombFilter\";\nimport { deepMerge } from \"../core/util/Defaults\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { Noise } from \"../source/Noise\";\nimport { Instrument } from \"./Instrument\";\n/**\n * Karplus-String string synthesis.\n * @example\n * import { PluckSynth } from \"tone\";\n * const plucky = new PluckSynth().toDestination();\n * plucky.triggerAttack(\"C4\", \"+0.5\");\n * plucky.triggerAttack(\"C3\", \"+1\");\n * plucky.triggerAttack(\"C2\", \"+1.5\");\n * plucky.triggerAttack(\"C1\", \"+2\");\n * @category Instrument\n */\nvar PluckSynth = /** @class */ (function (_super) {\n    tslib_1.__extends(PluckSynth, _super);\n    function PluckSynth() {\n        var _this = _super.call(this, optionsFromArguments(PluckSynth.getDefaults(), arguments)) || this;\n        _this.name = \"PluckSynth\";\n        var options = optionsFromArguments(PluckSynth.getDefaults(), arguments);\n        _this._noise = new Noise({\n            context: _this.context,\n            type: \"pink\"\n        });\n        _this.attackNoise = options.attackNoise;\n        _this._lfcf = new LowpassCombFilter({\n            context: _this.context,\n            dampening: options.dampening,\n            resonance: options.resonance,\n        });\n        _this.resonance = options.resonance;\n        _this.release = options.release;\n        _this._noise.connect(_this._lfcf);\n        _this._lfcf.connect(_this.output);\n        return _this;\n    }\n    PluckSynth.getDefaults = function () {\n        return deepMerge(Instrument.getDefaults(), {\n            attackNoise: 1,\n            dampening: 4000,\n            resonance: 0.7,\n            release: 1,\n        });\n    };\n    Object.defineProperty(PluckSynth.prototype, \"dampening\", {\n        /**\n         * The dampening control. i.e. the lowpass filter frequency of the comb filter\n         * @min 0\n         * @max 7000\n         */\n        get: function () {\n            return this._lfcf.dampening;\n        },\n        set: function (fq) {\n            this._lfcf.dampening = fq;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PluckSynth.prototype.triggerAttack = function (note, time) {\n        var freq = this.toFrequency(note);\n        time = this.toSeconds(time);\n        var delayAmount = 1 / freq;\n        this._lfcf.delayTime.setValueAtTime(delayAmount, time);\n        this._noise.start(time);\n        this._noise.stop(time + delayAmount * this.attackNoise);\n        this._lfcf.resonance.cancelScheduledValues(time);\n        this._lfcf.resonance.setValueAtTime(this.resonance, time);\n        return this;\n    };\n    /**\n     * Ramp down the [[resonance]] to 0 over the duration of the release time.\n     */\n    PluckSynth.prototype.triggerRelease = function (time) {\n        this._lfcf.resonance.linearRampTo(0, this.release, time);\n        return this;\n    };\n    PluckSynth.prototype.dispose = function () {\n        _super.prototype.dispose.call(this);\n        this._noise.dispose();\n        this._lfcf.dispose();\n        return this;\n    };\n    return PluckSynth;\n}(Instrument));\nexport { PluckSynth };\n//# sourceMappingURL=PluckSynth.js.map","import * as tslib_1 from \"tslib\";\nimport \"../core/clock/Transport\";\nimport { ToneWithContext } from \"../core/context/ToneWithContext\";\nimport { TicksClass } from \"../core/type/Ticks\";\nimport { defaultArg, optionsFromArguments } from \"../core/util/Defaults\";\nimport { noOp } from \"../core/util/Interface\";\nimport { StateTimeline } from \"../core/util/StateTimeline\";\nimport { isBoolean, isNumber } from \"../core/util/TypeCheck\";\n/**\n * ToneEvent abstracts away this.context.transport.schedule and provides a schedulable\n * callback for a single or repeatable events along the timeline.\n *\n * @example\n * import { PolySynth, Sequence, ToneEvent, Transport } from \"tone\";\n *\n * const synth = new PolySynth().toDestination();\n * const chordEvent = new ToneEvent(((time, chord) => {\n * \t// the chord as well as the exact time of the event\n * \t// are passed in as arguments to the callback function\n * \tsynth.triggerAttackRelease(chord, 0.5, time);\n * }), [\"D4\", \"E4\", \"F4\"]);\n * // start the chord at the beginning of the transport timeline\n * chordEvent.start();\n * // loop it every measure for 8 measures\n * chordEvent.loop = 8;\n * chordEvent.loopEnd = \"1m\";\n * @category Event\n */\nvar ToneEvent = /** @class */ (function (_super) {\n    tslib_1.__extends(ToneEvent, _super);\n    function ToneEvent() {\n        var _this = _super.call(this, optionsFromArguments(ToneEvent.getDefaults(), arguments, [\"callback\", \"value\"])) || this;\n        _this.name = \"ToneEvent\";\n        /**\n         * Tracks the scheduled events\n         */\n        _this._state = new StateTimeline(\"stopped\");\n        /**\n         * A delay time from when the event is scheduled to start\n         */\n        _this._startOffset = 0;\n        var options = optionsFromArguments(ToneEvent.getDefaults(), arguments, [\"callback\", \"value\"]);\n        _this._loop = options.loop;\n        _this.callback = options.callback;\n        _this.value = options.value;\n        _this._loopStart = _this.toTicks(options.loopStart);\n        _this._loopEnd = _this.toTicks(options.loopEnd);\n        _this._playbackRate = options.playbackRate;\n        _this._probability = options.probability;\n        _this._humanize = options.humanize;\n        _this.mute = options.mute;\n        _this._playbackRate = options.playbackRate;\n        _this._state.increasing = true;\n        // schedule the events for the first time\n        _this._rescheduleEvents();\n        return _this;\n    }\n    ToneEvent.getDefaults = function () {\n        return Object.assign(ToneWithContext.getDefaults(), {\n            callback: noOp,\n            humanize: false,\n            loop: false,\n            loopEnd: \"1m\",\n            loopStart: 0,\n            mute: false,\n            playbackRate: 1,\n            probability: 1,\n            value: null,\n        });\n    };\n    /**\n     * Reschedule all of the events along the timeline\n     * with the updated values.\n     * @param after Only reschedules events after the given time.\n     */\n    ToneEvent.prototype._rescheduleEvents = function (after) {\n        var _this = this;\n        if (after === void 0) { after = -1; }\n        // if no argument is given, schedules all of the events\n        this._state.forEachFrom(after, function (event) {\n            var duration;\n            if (event.state === \"started\") {\n                if (event.id !== -1) {\n                    _this.context.transport.clear(event.id);\n                }\n                var startTick = event.time + Math.round(_this.startOffset / _this._playbackRate);\n                if (_this._loop === true || isNumber(_this._loop) && _this._loop > 1) {\n                    duration = Infinity;\n                    if (isNumber(_this._loop)) {\n                        duration = (_this._loop) * _this._getLoopDuration();\n                    }\n                    var nextEvent = _this._state.getAfter(startTick);\n                    if (nextEvent !== null) {\n                        duration = Math.min(duration, nextEvent.time - startTick);\n                    }\n                    if (duration !== Infinity) {\n                        // schedule a stop since it's finite duration\n                        _this._state.setStateAtTime(\"stopped\", startTick + duration + 1, { id: -1 });\n                        duration = new TicksClass(_this.context, duration);\n                    }\n                    var interval = new TicksClass(_this.context, _this._getLoopDuration());\n                    event.id = _this.context.transport.scheduleRepeat(_this._tick.bind(_this), interval, new TicksClass(_this.context, startTick), duration);\n                }\n                else {\n                    event.id = _this.context.transport.schedule(_this._tick.bind(_this), new TicksClass(_this.context, startTick));\n                }\n            }\n        });\n    };\n    Object.defineProperty(ToneEvent.prototype, \"state\", {\n        /**\n         * Returns the playback state of the note, either \"started\" or \"stopped\".\n         */\n        get: function () {\n            return this._state.getValueAtTime(this.context.transport.ticks);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ToneEvent.prototype, \"startOffset\", {\n        /**\n         * The start from the scheduled start time.\n         */\n        get: function () {\n            return this._startOffset;\n        },\n        set: function (offset) {\n            this._startOffset = offset;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ToneEvent.prototype, \"probability\", {\n        /**\n         * The probability of the notes being triggered.\n         */\n        get: function () {\n            return this._probability;\n        },\n        set: function (prob) {\n            this._probability = prob;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ToneEvent.prototype, \"humanize\", {\n        /**\n         * If set to true, will apply small random variation\n         * to the callback time. If the value is given as a time, it will randomize\n         * by that amount.\n         * @example\n         * import { ToneEvent } from \"tone\";\n         * const event = new ToneEvent();\n         * event.humanize = true;\n         */\n        get: function () {\n            return this._humanize;\n        },\n        set: function (variation) {\n            this._humanize = variation;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Start the note at the given time.\n     * @param  time  When the event should start.\n     */\n    ToneEvent.prototype.start = function (time) {\n        var ticks = this.toTicks(time);\n        if (this._state.getValueAtTime(ticks) === \"stopped\") {\n            this._state.add({\n                id: -1,\n                state: \"started\",\n                time: ticks,\n            });\n            this._rescheduleEvents(ticks);\n        }\n        return this;\n    };\n    /**\n     * Stop the Event at the given time.\n     * @param  time  When the event should stop.\n     */\n    ToneEvent.prototype.stop = function (time) {\n        this.cancel(time);\n        var ticks = this.toTicks(time);\n        if (this._state.getValueAtTime(ticks) === \"started\") {\n            this._state.setStateAtTime(\"stopped\", ticks, { id: -1 });\n            var previousEvent = this._state.getBefore(ticks);\n            var reschedulTime = ticks;\n            if (previousEvent !== null) {\n                reschedulTime = previousEvent.time;\n            }\n            this._rescheduleEvents(reschedulTime);\n        }\n        return this;\n    };\n    /**\n     * Cancel all scheduled events greater than or equal to the given time\n     * @param  time  The time after which events will be cancel.\n     */\n    ToneEvent.prototype.cancel = function (time) {\n        var _this = this;\n        time = defaultArg(time, -Infinity);\n        var ticks = this.toTicks(time);\n        this._state.forEachFrom(ticks, function (event) {\n            _this.context.transport.clear(event.id);\n        });\n        this._state.cancel(ticks);\n        return this;\n    };\n    /**\n     * The callback function invoker. Also\n     * checks if the Event is done playing\n     * @param  time  The time of the event in seconds\n     */\n    ToneEvent.prototype._tick = function (time) {\n        var ticks = this.context.transport.getTicksAtTime(time);\n        if (!this.mute && this._state.getValueAtTime(ticks) === \"started\") {\n            if (this.probability < 1 && Math.random() > this.probability) {\n                return;\n            }\n            if (this.humanize) {\n                var variation = 0.02;\n                if (!isBoolean(this.humanize)) {\n                    variation = this.toSeconds(this.humanize);\n                }\n                time += (Math.random() * 2 - 1) * variation;\n            }\n            this.callback(time, this.value);\n        }\n    };\n    /**\n     * Get the duration of the loop.\n     */\n    ToneEvent.prototype._getLoopDuration = function () {\n        return Math.round((this._loopEnd - this._loopStart) / this._playbackRate);\n    };\n    Object.defineProperty(ToneEvent.prototype, \"loop\", {\n        /**\n         * If the note should loop or not\n         * between ToneEvent.loopStart and\n         * ToneEvent.loopEnd. If set to true,\n         * the event will loop indefinitely,\n         * if set to a number greater than 1\n         * it will play a specific number of\n         * times, if set to false, 0 or 1, the\n         * part will only play once.\n         */\n        get: function () {\n            return this._loop;\n        },\n        set: function (loop) {\n            this._loop = loop;\n            this._rescheduleEvents();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ToneEvent.prototype, \"playbackRate\", {\n        /**\n         * The playback rate of the note. Defaults to 1.\n         * @example\n         * import { ToneEvent } from \"tone\";\n         * const note = new ToneEvent();\n         * note.loop = true;\n         * // repeat the note twice as fast\n         * note.playbackRate = 2;\n         */\n        get: function () {\n            return this._playbackRate;\n        },\n        set: function (rate) {\n            this._playbackRate = rate;\n            this._rescheduleEvents();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ToneEvent.prototype, \"loopEnd\", {\n        /**\n         * The loopEnd point is the time the event will loop\n         * if ToneEvent.loop is true.\n         */\n        get: function () {\n            return new TicksClass(this.context, this._loopEnd).toSeconds();\n        },\n        set: function (loopEnd) {\n            this._loopEnd = this.toTicks(loopEnd);\n            if (this._loop) {\n                this._rescheduleEvents();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ToneEvent.prototype, \"loopStart\", {\n        /**\n         * The time when the loop should start.\n         */\n        get: function () {\n            return new TicksClass(this.context, this._loopStart).toSeconds();\n        },\n        set: function (loopStart) {\n            this._loopStart = this.toTicks(loopStart);\n            if (this._loop) {\n                this._rescheduleEvents();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ToneEvent.prototype, \"progress\", {\n        /**\n         * The current progress of the loop interval.\n         * Returns 0 if the event is not started yet or\n         * it is not set to loop.\n         */\n        get: function () {\n            if (this._loop) {\n                var ticks = this.context.transport.ticks;\n                var lastEvent = this._state.get(ticks);\n                if (lastEvent !== null && lastEvent.state === \"started\") {\n                    var loopDuration = this._getLoopDuration();\n                    var progress = (ticks - lastEvent.time) % loopDuration;\n                    return progress / loopDuration;\n                }\n                else {\n                    return 0;\n                }\n            }\n            else {\n                return 0;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ToneEvent.prototype.dispose = function () {\n        _super.prototype.dispose.call(this);\n        this.cancel();\n        this._state.dispose();\n        return this;\n    };\n    return ToneEvent;\n}(ToneWithContext));\nexport { ToneEvent };\n//# sourceMappingURL=ToneEvent.js.map","import * as tslib_1 from \"tslib\";\nimport { ToneAudioBuffers } from \"../core/context/ToneAudioBuffers\";\nimport { intervalToFrequencyRatio } from \"../core/type/Conversions\";\nimport { FrequencyClass } from \"../core/type/Frequency\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { noOp } from \"../core/util/Interface\";\nimport { isArray, isNote, isNumber } from \"../core/util/TypeCheck\";\nimport { Instrument } from \"../instrument/Instrument\";\nimport { ToneBufferSource } from \"../source/buffer/ToneBufferSource\";\nimport { timeRange } from \"../core/util/Decorator\";\nimport { assert } from \"../core/util/Debug\";\n/**\n * Pass in an object which maps the note's pitch or midi value to the url,\n * then you can trigger the attack and release of that note like other instruments.\n * By automatically repitching the samples, it is possible to play pitches which\n * were not explicitly included which can save loading time.\n *\n * For sample or buffer playback where repitching is not necessary,\n * use [[Player]].\n * @example\n * import { Sampler } from \"tone\";\n * const sampler = new Sampler({\n * \turls: {\n * \t\tC1: \"C1.mp3\",\n * \t\tC2: \"C2.mp3\",\n * \t},\n * \tbaseUrl: \"https://tonejs.github.io/examples/audio/casio/\",\n * \tonload: () => {\n * \t\tsampler.triggerAttackRelease([\"C1\", \"E1\", \"G1\", \"B1\"], 0.5);\n * \t},\n * });\n * @category Instrument\n */\nvar Sampler = /** @class */ (function (_super) {\n    tslib_1.__extends(Sampler, _super);\n    function Sampler() {\n        var _this = _super.call(this, optionsFromArguments(Sampler.getDefaults(), arguments, [\"urls\", \"onload\", \"baseUrl\"], \"urls\")) || this;\n        _this.name = \"Sampler\";\n        /**\n         * The object of all currently playing BufferSources\n         */\n        _this._activeSources = new Map();\n        var options = optionsFromArguments(Sampler.getDefaults(), arguments, [\"urls\", \"onload\", \"baseUrl\"], \"urls\");\n        var urlMap = {};\n        Object.keys(options.urls).forEach(function (note) {\n            var noteNumber = parseInt(note, 10);\n            assert(isNote(note)\n                || (isNumber(noteNumber) && isFinite(noteNumber)), \"url key is neither a note or midi pitch: \" + note);\n            if (isNote(note)) {\n                // convert the note name to MIDI\n                var mid = new FrequencyClass(_this.context, note).toMidi();\n                urlMap[mid] = options.urls[note];\n            }\n            else if (isNumber(noteNumber) && isFinite(noteNumber)) {\n                // otherwise if it's numbers assume it's midi\n                urlMap[noteNumber] = options.urls[noteNumber];\n            }\n        });\n        _this._buffers = new ToneAudioBuffers({\n            urls: urlMap,\n            onload: options.onload,\n            baseUrl: options.baseUrl,\n            onerror: options.onerror,\n        });\n        _this.attack = options.attack;\n        _this.release = options.release;\n        _this.curve = options.curve;\n        // invoke the callback if it's already loaded\n        if (_this._buffers.loaded) {\n            // invoke onload deferred\n            Promise.resolve().then(options.onload);\n        }\n        return _this;\n    }\n    Sampler.getDefaults = function () {\n        return Object.assign(Instrument.getDefaults(), {\n            attack: 0,\n            baseUrl: \"\",\n            curve: \"exponential\",\n            onload: noOp,\n            onerror: noOp,\n            release: 0.1,\n            urls: {},\n        });\n    };\n    /**\n     * Returns the difference in steps between the given midi note at the closets sample.\n     */\n    Sampler.prototype._findClosest = function (midi) {\n        // searches within 8 octaves of the given midi note\n        var MAX_INTERVAL = 96;\n        var interval = 0;\n        while (interval < MAX_INTERVAL) {\n            // check above and below\n            if (this._buffers.has(midi + interval)) {\n                return -interval;\n            }\n            else if (this._buffers.has(midi - interval)) {\n                return interval;\n            }\n            interval++;\n        }\n        throw new Error(\"No available buffers for note: \" + midi);\n    };\n    /**\n     * @param  notes\tThe note to play, or an array of notes.\n     * @param  time     When to play the note\n     * @param  velocity The velocity to play the sample back.\n     */\n    Sampler.prototype.triggerAttack = function (notes, time, velocity) {\n        var _this = this;\n        if (velocity === void 0) { velocity = 1; }\n        this.log(\"triggerAttack\", notes, time, velocity);\n        if (!Array.isArray(notes)) {\n            notes = [notes];\n        }\n        notes.forEach(function (note) {\n            var midi = new FrequencyClass(_this.context, note).toMidi();\n            // find the closest note pitch\n            var difference = _this._findClosest(midi);\n            var closestNote = midi - difference;\n            var buffer = _this._buffers.get(closestNote);\n            var playbackRate = intervalToFrequencyRatio(difference);\n            // play that note\n            var source = new ToneBufferSource({\n                url: buffer,\n                context: _this.context,\n                curve: _this.curve,\n                fadeIn: _this.attack,\n                fadeOut: _this.release,\n                playbackRate: playbackRate,\n            }).connect(_this.output);\n            source.start(time, 0, buffer.duration / playbackRate, velocity);\n            // add it to the active sources\n            if (!isArray(_this._activeSources.get(midi))) {\n                _this._activeSources.set(midi, []);\n            }\n            _this._activeSources.get(midi).push(source);\n            // remove it when it's done\n            source.onended = function () {\n                if (_this._activeSources && _this._activeSources.has(midi)) {\n                    var sources = _this._activeSources.get(midi);\n                    var index = sources.indexOf(source);\n                    if (index !== -1) {\n                        sources.splice(index, 1);\n                    }\n                }\n            };\n        });\n        return this;\n    };\n    /**\n     * @param  notes\tThe note to release, or an array of notes.\n     * @param  time     \tWhen to release the note.\n     */\n    Sampler.prototype.triggerRelease = function (notes, time) {\n        var _this = this;\n        this.log(\"triggerRelease\", notes, time);\n        if (!Array.isArray(notes)) {\n            notes = [notes];\n        }\n        notes.forEach(function (note) {\n            var midi = new FrequencyClass(_this.context, note).toMidi();\n            // find the note\n            if (_this._activeSources.has(midi) && _this._activeSources.get(midi).length) {\n                var sources = _this._activeSources.get(midi);\n                time = _this.toSeconds(time);\n                sources.forEach(function (source) {\n                    source.stop(time);\n                });\n                _this._activeSources.set(midi, []);\n            }\n        });\n        return this;\n    };\n    /**\n     * Release all currently active notes.\n     * @param  time     \tWhen to release the notes.\n     */\n    Sampler.prototype.releaseAll = function (time) {\n        var computedTime = this.toSeconds(time);\n        this._activeSources.forEach(function (sources) {\n            while (sources.length) {\n                var source = sources.shift();\n                source.stop(computedTime);\n            }\n        });\n        return this;\n    };\n    Sampler.prototype.sync = function () {\n        this._syncMethod(\"triggerAttack\", 1);\n        this._syncMethod(\"triggerRelease\", 1);\n        return this;\n    };\n    /**\n     * Invoke the attack phase, then after the duration, invoke the release.\n     * @param  notes\tThe note to play and release, or an array of notes.\n     * @param  duration The time the note should be held\n     * @param  time     When to start the attack\n     * @param  velocity The velocity of the attack\n     */\n    Sampler.prototype.triggerAttackRelease = function (notes, duration, time, velocity) {\n        var _this = this;\n        if (velocity === void 0) { velocity = 1; }\n        var computedTime = this.toSeconds(time);\n        this.triggerAttack(notes, computedTime, velocity);\n        if (isArray(duration)) {\n            assert(isArray(notes), \"notes must be an array when duration is array\");\n            notes.forEach(function (note, index) {\n                var d = duration[Math.min(index, duration.length - 1)];\n                _this.triggerRelease(note, computedTime + _this.toSeconds(d));\n            });\n        }\n        else {\n            this.triggerRelease(notes, computedTime + this.toSeconds(duration));\n        }\n        return this;\n    };\n    /**\n     * Add a note to the sampler.\n     * @param  note      The buffer's pitch.\n     * @param  url  Either the url of the buffer, or a buffer which will be added with the given name.\n     * @param  callback  The callback to invoke when the url is loaded.\n     */\n    Sampler.prototype.add = function (note, url, callback) {\n        assert(isNote(note) || isFinite(note), \"note must be a pitch or midi: \" + note);\n        if (isNote(note)) {\n            // convert the note name to MIDI\n            var mid = new FrequencyClass(this.context, note).toMidi();\n            this._buffers.add(mid, url, callback);\n        }\n        else {\n            // otherwise if it's numbers assume it's midi\n            this._buffers.add(note, url, callback);\n        }\n        return this;\n    };\n    Object.defineProperty(Sampler.prototype, \"loaded\", {\n        /**\n         * If the buffers are loaded or not\n         */\n        get: function () {\n            return this._buffers.loaded;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Clean up\n     */\n    Sampler.prototype.dispose = function () {\n        _super.prototype.dispose.call(this);\n        this._buffers.dispose();\n        this._activeSources.forEach(function (sources) {\n            sources.forEach(function (source) { return source.dispose(); });\n        });\n        this._activeSources.clear();\n        return this;\n    };\n    tslib_1.__decorate([\n        timeRange(0)\n    ], Sampler.prototype, \"attack\", void 0);\n    tslib_1.__decorate([\n        timeRange(0)\n    ], Sampler.prototype, \"release\", void 0);\n    return Sampler;\n}(Instrument));\nexport { Sampler };\n//# sourceMappingURL=Sampler.js.map","import * as tslib_1 from \"tslib\";\nimport { ToneEvent } from \"./ToneEvent\";\nimport { ToneWithContext } from \"../core/context/ToneWithContext\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { noOp } from \"../core/util/Interface\";\n/**\n * Loop creates a looped callback at the\n * specified interval. The callback can be\n * started, stopped and scheduled along\n * the Transport's timeline.\n * @example\n * import { Loop, Transport } from \"tone\";\n * const loop = new Loop((time) => {\n * \t// triggered every eighth note.\n * \tconsole.log(time);\n * }, \"8n\").start(0);\n * Transport.start();\n * @category Event\n */\nvar Loop = /** @class */ (function (_super) {\n    tslib_1.__extends(Loop, _super);\n    function Loop() {\n        var _this = _super.call(this, optionsFromArguments(Loop.getDefaults(), arguments, [\"callback\", \"interval\"])) || this;\n        _this.name = \"Loop\";\n        var options = optionsFromArguments(Loop.getDefaults(), arguments, [\"callback\", \"interval\"]);\n        _this._event = new ToneEvent({\n            context: _this.context,\n            callback: _this._tick.bind(_this),\n            loop: true,\n            loopEnd: options.interval,\n            playbackRate: options.playbackRate,\n            probability: options.probability\n        });\n        _this.callback = options.callback;\n        // set the iterations\n        _this.iterations = options.iterations;\n        return _this;\n    }\n    Loop.getDefaults = function () {\n        return Object.assign(ToneWithContext.getDefaults(), {\n            interval: \"4n\",\n            callback: noOp,\n            playbackRate: 1,\n            iterations: Infinity,\n            probability: 1,\n            mute: false,\n            humanize: false\n        });\n    };\n    /**\n     * Start the loop at the specified time along the Transport's timeline.\n     * @param  time  When to start the Loop.\n     */\n    Loop.prototype.start = function (time) {\n        this._event.start(time);\n        return this;\n    };\n    /**\n     * Stop the loop at the given time.\n     * @param  time  When to stop the Loop.\n     */\n    Loop.prototype.stop = function (time) {\n        this._event.stop(time);\n        return this;\n    };\n    /**\n     * Cancel all scheduled events greater than or equal to the given time\n     * @param  time  The time after which events will be cancel.\n     */\n    Loop.prototype.cancel = function (time) {\n        this._event.cancel(time);\n        return this;\n    };\n    /**\n     * Internal function called when the notes should be called\n     * @param time  The time the event occurs\n     */\n    Loop.prototype._tick = function (time) {\n        this.callback(time);\n    };\n    Object.defineProperty(Loop.prototype, \"state\", {\n        /**\n         * The state of the Loop, either started or stopped.\n         */\n        get: function () {\n            return this._event.state;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Loop.prototype, \"progress\", {\n        /**\n         * The progress of the loop as a value between 0-1. 0, when the loop is stopped or done iterating.\n         */\n        get: function () {\n            return this._event.progress;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Loop.prototype, \"interval\", {\n        /**\n         * The time between successive callbacks.\n         * @example\n         * import { Loop, Transport } from \"tone\";\n         * const loop = new Loop();\n         * loop.interval = \"8n\"; // loop every 8n\n         */\n        get: function () {\n            return this._event.loopEnd;\n        },\n        set: function (interval) {\n            this._event.loopEnd = interval;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Loop.prototype, \"playbackRate\", {\n        /**\n         * The playback rate of the loop. The normal playback rate is 1 (no change).\n         * A `playbackRate` of 2 would be twice as fast.\n         */\n        get: function () {\n            return this._event.playbackRate;\n        },\n        set: function (rate) {\n            this._event.playbackRate = rate;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Loop.prototype, \"humanize\", {\n        /**\n         * Random variation +/-0.01s to the scheduled time.\n         * Or give it a time value which it will randomize by.\n         */\n        get: function () {\n            return this._event.humanize;\n        },\n        set: function (variation) {\n            this._event.humanize = variation;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Loop.prototype, \"probability\", {\n        /**\n         * The probably of the callback being invoked.\n         */\n        get: function () {\n            return this._event.probability;\n        },\n        set: function (prob) {\n            this._event.probability = prob;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Loop.prototype, \"mute\", {\n        /**\n         * Muting the Loop means that no callbacks are invoked.\n         */\n        get: function () {\n            return this._event.mute;\n        },\n        set: function (mute) {\n            this._event.mute = mute;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Loop.prototype, \"iterations\", {\n        /**\n         * The number of iterations of the loop. The default value is `Infinity` (loop forever).\n         */\n        get: function () {\n            if (this._event.loop === true) {\n                return Infinity;\n            }\n            else {\n                return this._event.loop;\n            }\n        },\n        set: function (iters) {\n            if (iters === Infinity) {\n                this._event.loop = true;\n            }\n            else {\n                this._event.loop = iters;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Loop.prototype.dispose = function () {\n        _super.prototype.dispose.call(this);\n        this._event.dispose();\n        return this;\n    };\n    return Loop;\n}(ToneWithContext));\nexport { Loop };\n//# sourceMappingURL=Loop.js.map","import * as tslib_1 from \"tslib\";\nimport { TicksClass } from \"../core/type/Ticks\";\nimport { TransportTimeClass } from \"../core/type/TransportTime\";\nimport { defaultArg, optionsFromArguments } from \"../core/util/Defaults\";\nimport { StateTimeline } from \"../core/util/StateTimeline\";\nimport { isArray, isDefined, isObject, isUndef } from \"../core/util/TypeCheck\";\nimport { ToneEvent } from \"./ToneEvent\";\n/**\n * Part is a collection ToneEvents which can be started/stopped and looped as a single unit.\n *\n * @example\n * import { Part, Synth } from \"tone\";\n * const synth = new Synth().toDestination();\n * const part = new Part(((time, note) => {\n * \t// the notes given as the second element in the array\n * \t// will be passed in as the second argument\n * \tsynth.triggerAttackRelease(note, \"8n\", time);\n * }), [[0, \"C2\"], [\"0:2\", \"C3\"], [\"0:3:2\", \"G2\"]]);\n * @example\n * import { Part, Synth } from \"tone\";\n * const synth = new Synth().toDestination();\n * // use an array of objects as long as the object has a \"time\" attribute\n * const part = new Part(((time, value) => {\n * \t// the value is an object which contains both the note and the velocity\n * \tsynth.triggerAttackRelease(value.note, \"8n\", time, value.velocity);\n * }), [{ time: 0, note: \"C3\", velocity: 0.9 },\n * \t{ time: \"0:2\", note: \"C4\", velocity: 0.5 }\n * ]).start(0);\n * @category Event\n */\nvar Part = /** @class */ (function (_super) {\n    tslib_1.__extends(Part, _super);\n    function Part() {\n        var _this = _super.call(this, optionsFromArguments(Part.getDefaults(), arguments, [\"callback\", \"events\"])) || this;\n        _this.name = \"Part\";\n        /**\n         * Tracks the scheduled events\n         */\n        _this._state = new StateTimeline(\"stopped\");\n        /**\n         * The events that belong to this part\n         */\n        _this._events = new Set();\n        var options = optionsFromArguments(Part.getDefaults(), arguments, [\"callback\", \"events\"]);\n        // make sure things are assigned in the right order\n        _this._state.increasing = true;\n        // add the events\n        options.events.forEach(function (event) {\n            if (isArray(event)) {\n                _this.add(event[0], event[1]);\n            }\n            else {\n                _this.add(event);\n            }\n        });\n        return _this;\n    }\n    Part.getDefaults = function () {\n        return Object.assign(ToneEvent.getDefaults(), {\n            events: [],\n        });\n    };\n    /**\n     * Start the part at the given time.\n     * @param  time    When to start the part.\n     * @param  offset  The offset from the start of the part to begin playing at.\n     */\n    Part.prototype.start = function (time, offset) {\n        var _this = this;\n        var ticks = this.toTicks(time);\n        if (this._state.getValueAtTime(ticks) !== \"started\") {\n            offset = defaultArg(offset, this._loop ? this._loopStart : 0);\n            if (this._loop) {\n                offset = defaultArg(offset, this._loopStart);\n            }\n            else {\n                offset = defaultArg(offset, 0);\n            }\n            var computedOffset_1 = this.toTicks(offset);\n            this._state.add({\n                id: -1,\n                offset: computedOffset_1,\n                state: \"started\",\n                time: ticks,\n            });\n            this._forEach(function (event) {\n                _this._startNote(event, ticks, computedOffset_1);\n            });\n        }\n        return this;\n    };\n    /**\n     * Start the event in the given event at the correct time given\n     * the ticks and offset and looping.\n     * @param  event\n     * @param  ticks\n     * @param  offset\n     */\n    Part.prototype._startNote = function (event, ticks, offset) {\n        ticks -= offset;\n        if (this._loop) {\n            if (event.startOffset >= this._loopStart && event.startOffset < this._loopEnd) {\n                if (event.startOffset < offset) {\n                    // start it on the next loop\n                    ticks += this._getLoopDuration();\n                }\n                event.start(new TicksClass(this.context, ticks));\n            }\n            else if (event.startOffset < this._loopStart && event.startOffset >= offset) {\n                event.loop = false;\n                event.start(new TicksClass(this.context, ticks));\n            }\n        }\n        else if (event.startOffset >= offset) {\n            event.start(new TicksClass(this.context, ticks));\n        }\n    };\n    Object.defineProperty(Part.prototype, \"startOffset\", {\n        get: function () {\n            return this._startOffset;\n        },\n        set: function (offset) {\n            var _this = this;\n            this._startOffset = offset;\n            this._forEach(function (event) {\n                event.startOffset += _this._startOffset;\n            });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Stop the part at the given time.\n     * @param  time  When to stop the part.\n     */\n    Part.prototype.stop = function (time) {\n        var ticks = this.toTicks(time);\n        this._state.cancel(ticks);\n        this._state.setStateAtTime(\"stopped\", ticks);\n        this._forEach(function (event) {\n            event.stop(time);\n        });\n        return this;\n    };\n    /**\n     * Get/Set an Event's value at the given time.\n     * If a value is passed in and no event exists at\n     * the given time, one will be created with that value.\n     * If two events are at the same time, the first one will\n     * be returned.\n     * @example\n     * import { Part } from \"tone\";\n     * const part = new Part();\n     * part.at(\"1m\"); // returns the part at the first measure\n     * part.at(\"2m\", \"C2\"); // set the value at \"2m\" to C2.\n     * // if an event didn't exist at that time, it will be created.\n     * @param time The time of the event to get or set.\n     * @param value If a value is passed in, the value of the event at the given time will be set to it.\n     */\n    Part.prototype.at = function (time, value) {\n        var timeInTicks = new TransportTimeClass(this.context, time).toTicks();\n        var tickTime = new TicksClass(this.context, 1).toSeconds();\n        var iterator = this._events.values();\n        var result = iterator.next();\n        while (!result.done) {\n            var event_1 = result.value;\n            if (Math.abs(timeInTicks - event_1.startOffset) < tickTime) {\n                if (isDefined(value)) {\n                    event_1.value = value;\n                }\n                return event_1;\n            }\n            result = iterator.next();\n        }\n        // if there was no event at that time, create one\n        if (isDefined(value)) {\n            this.add(time, value);\n            // return the new event\n            return this.at(time);\n        }\n        else {\n            return null;\n        }\n    };\n    Part.prototype.add = function (time, value) {\n        // extract the parameters\n        if (time instanceof Object && Reflect.has(time, \"time\")) {\n            value = time;\n            time = value.time;\n        }\n        var ticks = this.toTicks(time);\n        var event;\n        if (value instanceof ToneEvent) {\n            event = value;\n            event.callback = this._tick.bind(this);\n        }\n        else {\n            event = new ToneEvent({\n                callback: this._tick.bind(this),\n                context: this.context,\n                value: value,\n            });\n        }\n        // the start offset\n        event.startOffset = ticks;\n        // initialize the values\n        event.set({\n            humanize: this.humanize,\n            loop: this.loop,\n            loopEnd: this.loopEnd,\n            loopStart: this.loopStart,\n            playbackRate: this.playbackRate,\n            probability: this.probability,\n        });\n        this._events.add(event);\n        // start the note if it should be played right now\n        this._restartEvent(event);\n        return this;\n    };\n    /**\n     * Restart the given event\n     */\n    Part.prototype._restartEvent = function (event) {\n        var _this = this;\n        this._state.forEach(function (stateEvent) {\n            if (stateEvent.state === \"started\") {\n                _this._startNote(event, stateEvent.time, stateEvent.offset);\n            }\n            else {\n                // stop the note\n                event.stop(new TicksClass(_this.context, stateEvent.time));\n            }\n        });\n    };\n    Part.prototype.remove = function (time, value) {\n        var _this = this;\n        // extract the parameters\n        if (isObject(time) && time.hasOwnProperty(\"time\")) {\n            value = time;\n            time = value.time;\n        }\n        time = this.toTicks(time);\n        this._events.forEach(function (event) {\n            if (event.startOffset === time) {\n                if (isUndef(value) || (isDefined(value) && event.value === value)) {\n                    _this._events.delete(event);\n                    event.dispose();\n                }\n            }\n        });\n        return this;\n    };\n    /**\n     * Remove all of the notes from the group.\n     */\n    Part.prototype.clear = function () {\n        this._forEach(function (event) { return event.dispose(); });\n        this._events.clear();\n        return this;\n    };\n    /**\n     * Cancel scheduled state change events: i.e. \"start\" and \"stop\".\n     * @param after The time after which to cancel the scheduled events.\n     */\n    Part.prototype.cancel = function (after) {\n        this._forEach(function (event) { return event.cancel(after); });\n        this._state.cancel(this.toTicks(after));\n        return this;\n    };\n    /**\n     * Iterate over all of the events\n     */\n    Part.prototype._forEach = function (callback) {\n        if (this._events) {\n            this._events.forEach(function (event) {\n                if (event instanceof Part) {\n                    event._forEach(callback);\n                }\n                else {\n                    callback(event);\n                }\n            });\n        }\n        return this;\n    };\n    /**\n     * Set the attribute of all of the events\n     * @param  attr  the attribute to set\n     * @param  value      The value to set it to\n     */\n    Part.prototype._setAll = function (attr, value) {\n        this._forEach(function (event) {\n            event[attr] = value;\n        });\n    };\n    /**\n     * Internal tick method\n     * @param  time  The time of the event in seconds\n     */\n    Part.prototype._tick = function (time, value) {\n        if (!this.mute) {\n            this.callback(time, value);\n        }\n    };\n    /**\n     * Determine if the event should be currently looping\n     * given the loop boundries of this Part.\n     * @param  event  The event to test\n     */\n    Part.prototype._testLoopBoundries = function (event) {\n        if (this._loop && (event.startOffset < this._loopStart || event.startOffset >= this._loopEnd)) {\n            event.cancel(0);\n        }\n        else if (event.state === \"stopped\") {\n            // reschedule it if it's stopped\n            this._restartEvent(event);\n        }\n    };\n    Object.defineProperty(Part.prototype, \"probability\", {\n        get: function () {\n            return this._probability;\n        },\n        set: function (prob) {\n            this._probability = prob;\n            this._setAll(\"probability\", prob);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Part.prototype, \"humanize\", {\n        get: function () {\n            return this._humanize;\n        },\n        set: function (variation) {\n            this._humanize = variation;\n            this._setAll(\"humanize\", variation);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Part.prototype, \"loop\", {\n        /**\n         * If the part should loop or not\n         * between Part.loopStart and\n         * Part.loopEnd. If set to true,\n         * the part will loop indefinitely,\n         * if set to a number greater than 1\n         * it will play a specific number of\n         * times, if set to false, 0 or 1, the\n         * part will only play once.\n         * @example\n         * import { Part } from \"tone\";\n         * const part = new Part();\n         * // loop the part 8 times\n         * part.loop = 8;\n         */\n        get: function () {\n            return this._loop;\n        },\n        set: function (loop) {\n            var _this = this;\n            this._loop = loop;\n            this._forEach(function (event) {\n                event.loopStart = _this.loopStart;\n                event.loopEnd = _this.loopEnd;\n                event.loop = loop;\n                _this._testLoopBoundries(event);\n            });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Part.prototype, \"loopEnd\", {\n        /**\n         * The loopEnd point determines when it will\n         * loop if Part.loop is true.\n         */\n        get: function () {\n            return new TicksClass(this.context, this._loopEnd).toSeconds();\n        },\n        set: function (loopEnd) {\n            var _this = this;\n            this._loopEnd = this.toTicks(loopEnd);\n            if (this._loop) {\n                this._forEach(function (event) {\n                    event.loopEnd = loopEnd;\n                    _this._testLoopBoundries(event);\n                });\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Part.prototype, \"loopStart\", {\n        /**\n         * The loopStart point determines when it will\n         * loop if Part.loop is true.\n         */\n        get: function () {\n            return new TicksClass(this.context, this._loopStart).toSeconds();\n        },\n        set: function (loopStart) {\n            var _this = this;\n            this._loopStart = this.toTicks(loopStart);\n            if (this._loop) {\n                this._forEach(function (event) {\n                    event.loopStart = _this.loopStart;\n                    _this._testLoopBoundries(event);\n                });\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Part.prototype, \"playbackRate\", {\n        /**\n         * The playback rate of the part\n         */\n        get: function () {\n            return this._playbackRate;\n        },\n        set: function (rate) {\n            this._playbackRate = rate;\n            this._setAll(\"playbackRate\", rate);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Part.prototype, \"length\", {\n        /**\n         * The number of scheduled notes in the part.\n         */\n        get: function () {\n            return this._events.size;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Part.prototype.dispose = function () {\n        _super.prototype.dispose.call(this);\n        this.clear();\n        return this;\n    };\n    return Part;\n}(ToneEvent));\nexport { Part };\n//# sourceMappingURL=Part.js.map","import * as tslib_1 from \"tslib\";\nimport { assert } from \"../core/util/Debug\";\nimport { clamp } from \"../core/util/Math\";\n/**\n * Start at the first value and go up to the last\n */\nfunction upPatternGen(values) {\n    var index;\n    return tslib_1.__generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                index = 0;\n                _a.label = 1;\n            case 1:\n                if (!(index < values.length)) return [3 /*break*/, 3];\n                index = clampToArraySize(index, values);\n                return [4 /*yield*/, values[index]];\n            case 2:\n                _a.sent();\n                index++;\n                return [3 /*break*/, 1];\n            case 3: return [2 /*return*/];\n        }\n    });\n}\n/**\n * Start at the last value and go down to 0\n */\nfunction downPatternGen(values) {\n    var index;\n    return tslib_1.__generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                index = values.length - 1;\n                _a.label = 1;\n            case 1:\n                if (!(index >= 0)) return [3 /*break*/, 3];\n                index = clampToArraySize(index, values);\n                return [4 /*yield*/, values[index]];\n            case 2:\n                _a.sent();\n                index--;\n                return [3 /*break*/, 1];\n            case 3: return [2 /*return*/];\n        }\n    });\n}\n/**\n * Infinitely yield the generator\n */\nfunction infiniteGen(values, gen) {\n    return tslib_1.__generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (!true) return [3 /*break*/, 2];\n                return [5 /*yield**/, tslib_1.__values(gen(values))];\n            case 1:\n                _a.sent();\n                return [3 /*break*/, 0];\n            case 2: return [2 /*return*/];\n        }\n    });\n}\n/**\n * Make sure that the index is in the given range\n */\nfunction clampToArraySize(index, values) {\n    return clamp(index, 0, values.length - 1);\n}\n/**\n * Alternate between two generators\n */\nfunction alternatingGenerator(values, directionUp) {\n    var index;\n    return tslib_1.__generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                index = directionUp ? 0 : values.length - 1;\n                _a.label = 1;\n            case 1:\n                if (!true) return [3 /*break*/, 3];\n                index = clampToArraySize(index, values);\n                return [4 /*yield*/, values[index]];\n            case 2:\n                _a.sent();\n                if (directionUp) {\n                    index++;\n                    if (index >= values.length - 1) {\n                        directionUp = false;\n                    }\n                }\n                else {\n                    index--;\n                    if (index <= 0) {\n                        directionUp = true;\n                    }\n                }\n                return [3 /*break*/, 1];\n            case 3: return [2 /*return*/];\n        }\n    });\n}\n/**\n * Starting from the bottom move up 2, down 1\n */\nfunction jumpUp(values) {\n    var index, stepIndex;\n    return tslib_1.__generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                index = 0;\n                stepIndex = 0;\n                _a.label = 1;\n            case 1:\n                if (!(index < values.length)) return [3 /*break*/, 3];\n                index = clampToArraySize(index, values);\n                return [4 /*yield*/, values[index]];\n            case 2:\n                _a.sent();\n                stepIndex++;\n                index += (stepIndex % 2 ? 2 : -1);\n                return [3 /*break*/, 1];\n            case 3: return [2 /*return*/];\n        }\n    });\n}\n/**\n * Starting from the top move down 2, up 1\n */\nfunction jumpDown(values) {\n    var index, stepIndex;\n    return tslib_1.__generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                index = values.length - 1;\n                stepIndex = 0;\n                _a.label = 1;\n            case 1:\n                if (!(index >= 0)) return [3 /*break*/, 3];\n                index = clampToArraySize(index, values);\n                return [4 /*yield*/, values[index]];\n            case 2:\n                _a.sent();\n                stepIndex++;\n                index += (stepIndex % 2 ? -2 : 1);\n                return [3 /*break*/, 1];\n            case 3: return [2 /*return*/];\n        }\n    });\n}\n/**\n * Choose a random index each time\n */\nfunction randomGen(values) {\n    var randomIndex;\n    return tslib_1.__generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (!true) return [3 /*break*/, 2];\n                randomIndex = Math.floor(Math.random() * values.length);\n                return [4 /*yield*/, values[randomIndex]];\n            case 1:\n                _a.sent();\n                return [3 /*break*/, 0];\n            case 2: return [2 /*return*/];\n        }\n    });\n}\n/**\n * Randomly go through all of the values once before choosing a new random order\n */\nfunction randomOnce(values) {\n    var copy, i, randVal, index;\n    return tslib_1.__generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                copy = [];\n                for (i = 0; i < values.length; i++) {\n                    copy.push(i);\n                }\n                _a.label = 1;\n            case 1:\n                if (!(copy.length > 0)) return [3 /*break*/, 3];\n                randVal = copy.splice(Math.floor(copy.length * Math.random()), 1);\n                index = clampToArraySize(randVal[0], values);\n                return [4 /*yield*/, values[index]];\n            case 2:\n                _a.sent();\n                return [3 /*break*/, 1];\n            case 3: return [2 /*return*/];\n        }\n    });\n}\n/**\n * Randomly choose to walk up or down 1 index in the values array\n */\nfunction randomWalk(values) {\n    var index;\n    return tslib_1.__generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                index = Math.floor(Math.random() * values.length);\n                _a.label = 1;\n            case 1:\n                if (!true) return [3 /*break*/, 3];\n                if (index === 0) {\n                    index++; // at bottom of array, so force upward step\n                }\n                else if (index === values.length - 1) {\n                    index--; // at top of array, so force downward step\n                }\n                else if (Math.random() < 0.5) { // else choose random downward or upward step\n                    index--;\n                }\n                else {\n                    index++;\n                }\n                return [4 /*yield*/, values[index]];\n            case 2:\n                _a.sent();\n                return [3 /*break*/, 1];\n            case 3: return [2 /*return*/];\n        }\n    });\n}\n/**\n * PatternGenerator returns a generator which will iterate over the given array\n * of values and yield the items according to the passed in pattern\n * @param values An array of values to iterate over\n * @param pattern The name of the pattern use when iterating over\n * @param index Where to start in the offset of the values array\n */\nexport function PatternGenerator(values, pattern, index) {\n    var _a;\n    if (pattern === void 0) { pattern = \"up\"; }\n    if (index === void 0) { index = 0; }\n    return tslib_1.__generator(this, function (_b) {\n        switch (_b.label) {\n            case 0:\n                // safeguards\n                assert(values.length > 0, \"The array must have more than one value in it\");\n                _a = pattern;\n                switch (_a) {\n                    case \"up\": return [3 /*break*/, 1];\n                    case \"down\": return [3 /*break*/, 3];\n                    case \"upDown\": return [3 /*break*/, 5];\n                    case \"downUp\": return [3 /*break*/, 7];\n                    case \"alternateUp\": return [3 /*break*/, 9];\n                    case \"alternateDown\": return [3 /*break*/, 11];\n                    case \"random\": return [3 /*break*/, 13];\n                    case \"randomOnce\": return [3 /*break*/, 15];\n                    case \"randomWalk\": return [3 /*break*/, 17];\n                }\n                return [3 /*break*/, 19];\n            case 1: return [5 /*yield**/, tslib_1.__values(infiniteGen(values, upPatternGen))];\n            case 2:\n                _b.sent();\n                _b.label = 3;\n            case 3: return [5 /*yield**/, tslib_1.__values(infiniteGen(values, downPatternGen))];\n            case 4:\n                _b.sent();\n                _b.label = 5;\n            case 5: return [5 /*yield**/, tslib_1.__values(alternatingGenerator(values, true))];\n            case 6:\n                _b.sent();\n                _b.label = 7;\n            case 7: return [5 /*yield**/, tslib_1.__values(alternatingGenerator(values, false))];\n            case 8:\n                _b.sent();\n                _b.label = 9;\n            case 9: return [5 /*yield**/, tslib_1.__values(infiniteGen(values, jumpUp))];\n            case 10:\n                _b.sent();\n                _b.label = 11;\n            case 11: return [5 /*yield**/, tslib_1.__values(infiniteGen(values, jumpDown))];\n            case 12:\n                _b.sent();\n                _b.label = 13;\n            case 13: return [5 /*yield**/, tslib_1.__values(randomGen(values))];\n            case 14:\n                _b.sent();\n                _b.label = 15;\n            case 15: return [5 /*yield**/, tslib_1.__values(infiniteGen(values, randomOnce))];\n            case 16:\n                _b.sent();\n                _b.label = 17;\n            case 17: return [5 /*yield**/, tslib_1.__values(randomWalk(values))];\n            case 18:\n                _b.sent();\n                _b.label = 19;\n            case 19: return [2 /*return*/];\n        }\n    });\n}\n//# sourceMappingURL=PatternGenerator.js.map","import * as tslib_1 from \"tslib\";\nimport { Loop } from \"./Loop\";\nimport { PatternGenerator } from \"./PatternGenerator\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { noOp } from \"../core/util/Interface\";\n/**\n * Pattern arpeggiates between the given notes\n * in a number of patterns.\n * @example\n * import { Pattern } from \"tone\";\n * const pattern = new Pattern((time, note) => {\n * \t// the order of the notes passed in depends on the pattern\n * }, [\"C2\", \"D4\", \"E5\", \"A6\"], \"upDown\");\n * @category Event\n */\nvar Pattern = /** @class */ (function (_super) {\n    tslib_1.__extends(Pattern, _super);\n    function Pattern() {\n        var _this = _super.call(this, optionsFromArguments(Pattern.getDefaults(), arguments, [\"callback\", \"values\", \"pattern\"])) || this;\n        _this.name = \"Pattern\";\n        var options = optionsFromArguments(Pattern.getDefaults(), arguments, [\"callback\", \"values\", \"pattern\"]);\n        _this.callback = options.callback;\n        _this._values = options.values;\n        _this._pattern = PatternGenerator(options.values, options.pattern);\n        _this._type = options.pattern;\n        return _this;\n    }\n    Pattern.getDefaults = function () {\n        return Object.assign(Loop.getDefaults(), {\n            pattern: \"up\",\n            values: [],\n            callback: noOp,\n        });\n    };\n    /**\n     * Internal function called when the notes should be called\n     */\n    Pattern.prototype._tick = function (time) {\n        var value = this._pattern.next();\n        this._value = value.value;\n        this.callback(time, this._value);\n    };\n    Object.defineProperty(Pattern.prototype, \"values\", {\n        /**\n         * The array of events.\n         */\n        get: function () {\n            return this._values;\n        },\n        set: function (val) {\n            this._values = val;\n            // reset the pattern\n            this.pattern = this._type;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Pattern.prototype, \"value\", {\n        /**\n         * The current value of the pattern.\n         */\n        get: function () {\n            return this._value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Pattern.prototype, \"pattern\", {\n        /**\n         * The pattern type. See Tone.CtrlPattern for the full list of patterns.\n         */\n        get: function () {\n            return this._type;\n        },\n        set: function (pattern) {\n            this._type = pattern;\n            this._pattern = PatternGenerator(this._values, this._type);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return Pattern;\n}(Loop));\nexport { Pattern };\n//# sourceMappingURL=Pattern.js.map","import * as tslib_1 from \"tslib\";\nimport { TicksClass } from \"../core/type/Ticks\";\nimport { omitFromObject, optionsFromArguments } from \"../core/util/Defaults\";\nimport { isArray, isString } from \"../core/util/TypeCheck\";\nimport { Part } from \"./Part\";\nimport { ToneEvent } from \"./ToneEvent\";\n/**\n * A sequence is an alternate notation of a part. Instead\n * of passing in an array of [time, event] pairs, pass\n * in an array of events which will be spaced at the\n * given subdivision. Sub-arrays will subdivide that beat\n * by the number of items are in the array.\n * Sequence notation inspiration from [Tidal](http://yaxu.org/tidal/)\n * @example\n * import { Sequence, Synth, Transport } from \"tone\";\n * const synth = new Synth().toDestination();\n * const seq = new Sequence((time, note) => {\n * \tsynth.triggerAttackRelease(note, 0.1, time);\n * \t// subdivisions are given as subarrays\n * }, [\"C4\", [\"E4\", \"D4\", \"E4\"], \"G4\", [\"A4\", \"G4\"]]).start(0);\n * Transport.start();\n * @category Event\n */\nvar Sequence = /** @class */ (function (_super) {\n    tslib_1.__extends(Sequence, _super);\n    function Sequence() {\n        var _this = _super.call(this, optionsFromArguments(Sequence.getDefaults(), arguments, [\"callback\", \"events\", \"subdivision\"])) || this;\n        _this.name = \"Sequence\";\n        /**\n         * The object responsible for scheduling all of the events\n         */\n        _this._part = new Part({\n            callback: _this._seqCallback.bind(_this),\n            context: _this.context,\n        });\n        /**\n         * private reference to all of the sequence proxies\n         */\n        _this._events = [];\n        /**\n         * The proxied array\n         */\n        _this._eventsArray = [];\n        var options = optionsFromArguments(Sequence.getDefaults(), arguments, [\"callback\", \"events\", \"subdivision\"]);\n        _this._subdivision = _this.toTicks(options.subdivision);\n        _this.events = options.events;\n        // set all of the values\n        _this.loop = options.loop;\n        _this.loopStart = options.loopStart;\n        _this.loopEnd = options.loopEnd;\n        _this.playbackRate = options.playbackRate;\n        _this.probability = options.probability;\n        _this.humanize = options.humanize;\n        _this.mute = options.mute;\n        _this.playbackRate = options.playbackRate;\n        return _this;\n    }\n    Sequence.getDefaults = function () {\n        return Object.assign(omitFromObject(ToneEvent.getDefaults(), [\"value\"]), {\n            events: [],\n            loop: true,\n            loopEnd: 0,\n            loopStart: 0,\n            subdivision: \"8n\",\n        });\n    };\n    /**\n     * The internal callback for when an event is invoked\n     */\n    Sequence.prototype._seqCallback = function (time, value) {\n        if (value !== null) {\n            this.callback(time, value);\n        }\n    };\n    Object.defineProperty(Sequence.prototype, \"events\", {\n        /**\n         * The sequence\n         */\n        get: function () {\n            return this._events;\n        },\n        set: function (s) {\n            this.clear();\n            this._eventsArray = s;\n            this._events = this._createSequence(this._eventsArray);\n            this._eventsUpdated();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Start the part at the given time.\n     * @param  time    When to start the part.\n     * @param  offset  The offset index to start at\n     */\n    Sequence.prototype.start = function (time, offset) {\n        this._part.start(time, offset ? this._indexTime(offset) : offset);\n        return this;\n    };\n    /**\n     * Stop the part at the given time.\n     * @param  time  When to stop the part.\n     */\n    Sequence.prototype.stop = function (time) {\n        this._part.stop(time);\n        return this;\n    };\n    Object.defineProperty(Sequence.prototype, \"subdivision\", {\n        /**\n         * The subdivision of the sequence. This can only be\n         * set in the constructor. The subdivision is the\n         * interval between successive steps.\n         */\n        get: function () {\n            return new TicksClass(this.context, this._subdivision).toSeconds();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Create a sequence proxy which can be monitored to create subsequences\n     */\n    Sequence.prototype._createSequence = function (array) {\n        var _this = this;\n        return new Proxy(array, {\n            get: function (target, property) {\n                // property is index in this case\n                return target[property];\n            },\n            set: function (target, property, value) {\n                if (isString(property) && isFinite(parseInt(property, 10))) {\n                    if (isArray(value)) {\n                        target[property] = _this._createSequence(value);\n                    }\n                    else {\n                        target[property] = value;\n                    }\n                }\n                else {\n                    target[property] = value;\n                }\n                _this._eventsUpdated();\n                // return true to accept the changes\n                return true;\n            },\n        });\n    };\n    /**\n     * When the sequence has changed, all of the events need to be recreated\n     */\n    Sequence.prototype._eventsUpdated = function () {\n        this._part.clear();\n        this._rescheduleSequence(this._eventsArray, this._subdivision, this.startOffset);\n        // update the loopEnd\n        this.loopEnd = this.loopEnd;\n    };\n    /**\n     * reschedule all of the events that need to be rescheduled\n     */\n    Sequence.prototype._rescheduleSequence = function (sequence, subdivision, startOffset) {\n        var _this = this;\n        sequence.forEach(function (value, index) {\n            var eventOffset = index * (subdivision) + startOffset;\n            if (isArray(value)) {\n                _this._rescheduleSequence(value, subdivision / value.length, eventOffset);\n            }\n            else {\n                var startTime = new TicksClass(_this.context, eventOffset, \"i\").toSeconds();\n                _this._part.add(startTime, value);\n            }\n        });\n    };\n    /**\n     * Get the time of the index given the Sequence's subdivision\n     * @param  index\n     * @return The time of that index\n     */\n    Sequence.prototype._indexTime = function (index) {\n        return new TicksClass(this.context, index * (this._subdivision) + this.startOffset).toSeconds();\n    };\n    /**\n     * Clear all of the events\n     */\n    Sequence.prototype.clear = function () {\n        this._part.clear();\n        return this;\n    };\n    Sequence.prototype.dispose = function () {\n        _super.prototype.dispose.call(this);\n        this._part.dispose();\n        return this;\n    };\n    Object.defineProperty(Sequence.prototype, \"loop\", {\n        //-------------------------------------\n        // PROXY CALLS\n        //-------------------------------------\n        get: function () {\n            return this._part.loop;\n        },\n        set: function (l) {\n            this._part.loop = l;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Sequence.prototype, \"loopStart\", {\n        /**\n         * The index at which the sequence should start looping\n         */\n        get: function () {\n            return this._loopStart;\n        },\n        set: function (index) {\n            this._loopStart = index;\n            this._part.loopStart = this._indexTime(index);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Sequence.prototype, \"loopEnd\", {\n        /**\n         * The index at which the sequence should end looping\n         */\n        get: function () {\n            return this._loopEnd;\n        },\n        set: function (index) {\n            this._loopEnd = index;\n            if (index === 0) {\n                this._part.loopEnd = this._indexTime(this._eventsArray.length);\n            }\n            else {\n                this._part.loopEnd = this._indexTime(index);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Sequence.prototype, \"startOffset\", {\n        get: function () {\n            return this._part.startOffset;\n        },\n        set: function (start) {\n            this._part.startOffset = start;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Sequence.prototype, \"playbackRate\", {\n        get: function () {\n            return this._part.playbackRate;\n        },\n        set: function (rate) {\n            this._part.playbackRate = rate;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Sequence.prototype, \"probability\", {\n        get: function () {\n            return this._part.probability;\n        },\n        set: function (prob) {\n            this._part.probability = prob;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Sequence.prototype, \"progress\", {\n        get: function () {\n            return this._part.progress;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Sequence.prototype, \"humanize\", {\n        get: function () {\n            return this._part.humanize;\n        },\n        set: function (variation) {\n            this._part.humanize = variation;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Sequence.prototype, \"length\", {\n        /**\n         * The number of scheduled events\n         */\n        get: function () {\n            return this._part.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return Sequence;\n}(ToneEvent));\nexport { Sequence };\n//# sourceMappingURL=Sequence.js.map","import * as tslib_1 from \"tslib\";\nimport { Gain } from \"../../core/context/Gain\";\nimport { connect, ToneAudioNode } from \"../../core/context/ToneAudioNode\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { readOnly } from \"../../core/util/Interface\";\nimport { GainToAudio } from \"../../signal/GainToAudio\";\nimport { Signal } from \"../../signal/Signal\";\n/**\n * Tone.Crossfade provides equal power fading between two inputs.\n * More on crossfading technique [here](https://en.wikipedia.org/wiki/Fade_(audio_engineering)#Crossfading).\n * ```\n *                                             +---------+\n *                                            +> input a +>--+\n * +-----------+   +---------------------+     |         |   |\n * | 1s signal +>--> stereoPannerNode  L +>----> gain    |   |\n * +-----------+   |                     |     +---------+   |\n *               +-> pan               R +>-+                |   +--------+\n *               | +---------------------+  |                +---> output +>\n *  +------+     |                          |  +---------+   |   +--------+\n *  | fade +>----+                          | +> input b +>--+\n *  +------+                                |  |         |\n *                                          +--> gain    |\n *                                             +---------+\n * ```\n * @example\n * import { CrossFade, Oscillator } from \"tone\";\n * const crossFade = new CrossFade().toDestination();\n * // connect two inputs to a/b\n * const inputA = new Oscillator(440, \"square\").connect(crossFade.a).start();\n * const inputB = new Oscillator(440, \"sine\").connect(crossFade.b).start();\n * // use the fade to control the mix between the two\n * crossFade.fade.value = 0.5;\n * @category Component\n */\nvar CrossFade = /** @class */ (function (_super) {\n    tslib_1.__extends(CrossFade, _super);\n    function CrossFade() {\n        var _this = _super.call(this, Object.assign(optionsFromArguments(CrossFade.getDefaults(), arguments, [\"fade\"]))) || this;\n        _this.name = \"CrossFade\";\n        /**\n         * The crossfading is done by a StereoPannerNode\n         */\n        _this._panner = _this.context.createStereoPanner();\n        /**\n         * Split the output of the panner node into two values used to control the gains.\n         */\n        _this._split = _this.context.createChannelSplitter(2);\n        /**\n         * Convert the fade value into an audio range value so it can be connected\n         * to the panner.pan AudioParam\n         */\n        _this._g2a = new GainToAudio({ context: _this.context });\n        /**\n         * The input which is at full level when fade = 0\n         */\n        _this.a = new Gain({\n            context: _this.context,\n            gain: 0,\n        });\n        /**\n         * The input which is at full level when fade = 1\n         */\n        _this.b = new Gain({\n            context: _this.context,\n            gain: 0,\n        });\n        /**\n         * The output is a mix between `a` and `b` at the ratio of `fade`\n         */\n        _this.output = new Gain({ context: _this.context });\n        _this._internalChannels = [_this.a, _this.b];\n        var options = optionsFromArguments(CrossFade.getDefaults(), arguments, [\"fade\"]);\n        _this.fade = new Signal({\n            context: _this.context,\n            units: \"normalRange\",\n            value: options.fade,\n        });\n        readOnly(_this, \"fade\");\n        _this.context.getConstant(1).connect(_this._panner);\n        _this._panner.connect(_this._split);\n        // this is necessary for standardized-audio-context\n        // doesn't make any difference for the native AudioContext\n        // https://github.com/chrisguttandin/standardized-audio-context/issues/647\n        _this._panner.channelCount = 1;\n        _this._panner.channelCountMode = \"explicit\";\n        connect(_this._split, _this.a.gain, 0);\n        connect(_this._split, _this.b.gain, 1);\n        _this.fade.chain(_this._g2a, _this._panner.pan);\n        _this.a.connect(_this.output);\n        _this.b.connect(_this.output);\n        return _this;\n    }\n    CrossFade.getDefaults = function () {\n        return Object.assign(ToneAudioNode.getDefaults(), {\n            fade: 0.5,\n        });\n    };\n    CrossFade.prototype.dispose = function () {\n        _super.prototype.dispose.call(this);\n        this.a.dispose();\n        this.b.dispose();\n        this.output.dispose();\n        this.fade.dispose();\n        this._g2a.dispose();\n        this._panner.disconnect();\n        this._split.disconnect();\n        return this;\n    };\n    return CrossFade;\n}(ToneAudioNode));\nexport { CrossFade };\n//# sourceMappingURL=CrossFade.js.map","import * as tslib_1 from \"tslib\";\nimport { CrossFade } from \"../component/channel/CrossFade\";\nimport { Gain } from \"../core/context/Gain\";\nimport { ToneAudioNode } from \"../core/context/ToneAudioNode\";\nimport { readOnly } from \"../core/util/Interface\";\n/**\n * Effect is the base class for effects. Connect the effect between\n * the effectSend and effectReturn GainNodes, then control the amount of\n * effect which goes to the output using the wet control.\n */\nvar Effect = /** @class */ (function (_super) {\n    tslib_1.__extends(Effect, _super);\n    function Effect(options) {\n        var _this = _super.call(this, options) || this;\n        _this.name = \"Effect\";\n        /**\n         * the drywet knob to control the amount of effect\n         */\n        _this._dryWet = new CrossFade({ context: _this.context });\n        /**\n         * The wet control is how much of the effected\n         * will pass through to the output. 1 = 100% effected\n         * signal, 0 = 100% dry signal.\n         */\n        _this.wet = _this._dryWet.fade;\n        /**\n         * connect the effectSend to the input of hte effect\n         */\n        _this.effectSend = new Gain({ context: _this.context });\n        /**\n         * connect the output of the effect to the effectReturn\n         */\n        _this.effectReturn = new Gain({ context: _this.context });\n        /**\n         * The effect input node\n         */\n        _this.input = new Gain({ context: _this.context });\n        /**\n         * The effect output\n         */\n        _this.output = _this._dryWet;\n        // connections\n        _this.input.fan(_this._dryWet.a, _this.effectSend);\n        _this.effectReturn.connect(_this._dryWet.b);\n        _this.wet.setValueAtTime(options.wet, 0);\n        _this._internalChannels = [_this.effectReturn, _this.effectSend];\n        readOnly(_this, \"wet\");\n        return _this;\n    }\n    Effect.getDefaults = function () {\n        return Object.assign(ToneAudioNode.getDefaults(), {\n            wet: 1,\n        });\n    };\n    /**\n     * chains the effect in between the effectSend and effectReturn\n     */\n    Effect.prototype.connectEffect = function (effect) {\n        // add it to the internal channels\n        this._internalChannels.push(effect);\n        this.effectSend.chain(effect, this.effectReturn);\n        return this;\n    };\n    Effect.prototype.dispose = function () {\n        _super.prototype.dispose.call(this);\n        this._dryWet.dispose();\n        this.effectSend.dispose();\n        this.effectReturn.dispose();\n        this.wet.dispose();\n        return this;\n    };\n    return Effect;\n}(ToneAudioNode));\nexport { Effect };\n//# sourceMappingURL=Effect.js.map","import * as tslib_1 from \"tslib\";\nimport { Effect } from \"../effect/Effect\";\nimport { LFO } from \"../source/oscillator/LFO\";\nimport { readOnly } from \"../core/util/Interface\";\n/**\n * Base class for LFO-based effects.\n */\nvar LFOEffect = /** @class */ (function (_super) {\n    tslib_1.__extends(LFOEffect, _super);\n    function LFOEffect(options) {\n        var _this = _super.call(this, options) || this;\n        _this.name = \"LFOEffect\";\n        _this._lfo = new LFO({\n            context: _this.context,\n            frequency: options.frequency,\n            amplitude: options.depth,\n        });\n        _this.depth = _this._lfo.amplitude;\n        _this.frequency = _this._lfo.frequency;\n        _this.type = options.type;\n        readOnly(_this, [\"frequency\", \"depth\"]);\n        return _this;\n    }\n    LFOEffect.getDefaults = function () {\n        return Object.assign(Effect.getDefaults(), {\n            frequency: 1,\n            type: \"sine\",\n            depth: 1,\n        });\n    };\n    /**\n     * Start the effect.\n     */\n    LFOEffect.prototype.start = function (time) {\n        this._lfo.start(time);\n        return this;\n    };\n    /**\n     * Stop the lfo\n     */\n    LFOEffect.prototype.stop = function (time) {\n        this._lfo.stop(time);\n        return this;\n    };\n    /**\n     * Sync the filter to the transport. See [[LFO.sync]]\n     */\n    LFOEffect.prototype.sync = function () {\n        this._lfo.sync();\n        return this;\n    };\n    /**\n     * Unsync the filter from the transport.\n     */\n    LFOEffect.prototype.unsync = function () {\n        this._lfo.unsync();\n        return this;\n    };\n    Object.defineProperty(LFOEffect.prototype, \"type\", {\n        /**\n         * The type of the LFO's oscillator: See [[Oscillator.type]]\n         * @example\n         * import { AutoFilter, Noise } from \"tone\";\n         * const autoFilter = new AutoFilter().start().toDestination();\n         * const noise = new Noise().start().connect(autoFilter);\n         * autoFilter.type = \"square\";\n         */\n        get: function () {\n            return this._lfo.type;\n        },\n        set: function (type) {\n            this._lfo.type = type;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    LFOEffect.prototype.dispose = function () {\n        _super.prototype.dispose.call(this);\n        this._lfo.dispose();\n        this.frequency.dispose();\n        this.depth.dispose();\n        return this;\n    };\n    return LFOEffect;\n}(Effect));\nexport { LFOEffect };\n//# sourceMappingURL=LFOEffect.js.map","import * as tslib_1 from \"tslib\";\nimport { Param } from \"../../core/context/Param\";\nimport { ToneAudioNode } from \"../../core/context/ToneAudioNode\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { readOnly } from \"../../core/util/Interface\";\n/**\n * Panner is an equal power Left/Right Panner. It is a wrapper around the StereoPannerNode.\n * @example\n * import { Oscillator, Panner } from \"tone\";\n * // pan the input signal hard right.\n * const panner = new Panner(1).toDestination();\n * const osc = new Oscillator().connect(panner).start();\n * @category Component\n */\nvar Panner = /** @class */ (function (_super) {\n    tslib_1.__extends(Panner, _super);\n    function Panner() {\n        var _this = _super.call(this, Object.assign(optionsFromArguments(Panner.getDefaults(), arguments, [\"pan\"]))) || this;\n        _this.name = \"Panner\";\n        /**\n         * the panner node\n         */\n        _this._panner = _this.context.createStereoPanner();\n        _this.input = _this._panner;\n        _this.output = _this._panner;\n        var options = optionsFromArguments(Panner.getDefaults(), arguments, [\"pan\"]);\n        _this.pan = new Param({\n            context: _this.context,\n            param: _this._panner.pan,\n            value: options.pan,\n            minValue: -1,\n            maxValue: 1,\n        });\n        // this is necessary for standardized-audio-context\n        // doesn't make any difference for the native AudioContext\n        // https://github.com/chrisguttandin/standardized-audio-context/issues/647\n        _this._panner.channelCount = options.channelCount;\n        _this._panner.channelCountMode = \"explicit\";\n        // initial value\n        readOnly(_this, \"pan\");\n        return _this;\n    }\n    Panner.getDefaults = function () {\n        return Object.assign(ToneAudioNode.getDefaults(), {\n            pan: 0,\n            channelCount: 1,\n        });\n    };\n    Panner.prototype.dispose = function () {\n        _super.prototype.dispose.call(this);\n        this._panner.disconnect();\n        this.pan.dispose();\n        return this;\n    };\n    return Panner;\n}(ToneAudioNode));\nexport { Panner };\n//# sourceMappingURL=Panner.js.map","import * as tslib_1 from \"tslib\";\nimport { Filter } from \"../component/filter/Filter\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { LFOEffect } from \"./LFOEffect\";\n/**\n * AutoFilter is a Tone.Filter with a Tone.LFO connected to the filter cutoff frequency.\n * Setting the LFO rate and depth allows for control over the filter modulation rate\n * and depth.\n *\n * @example\n * import { AutoFilter, Oscillator } from \"tone\";\n * // create an autofilter and start it's LFO\n * const autoFilter = new AutoFilter(\"4n\").toDestination().start();\n * // route an oscillator through the filter and start it\n * const oscillator = new Oscillator().connect(autoFilter).start();\n * @category Effect\n */\nvar AutoFilter = /** @class */ (function (_super) {\n    tslib_1.__extends(AutoFilter, _super);\n    function AutoFilter() {\n        var _this = _super.call(this, optionsFromArguments(AutoFilter.getDefaults(), arguments, [\"frequency\", \"baseFrequency\", \"octaves\"])) || this;\n        _this.name = \"AutoFilter\";\n        var options = optionsFromArguments(AutoFilter.getDefaults(), arguments, [\"frequency\", \"baseFrequency\", \"octaves\"]);\n        _this.filter = new Filter(Object.assign(options.filter, {\n            context: _this.context,\n        }));\n        // connections\n        _this.connectEffect(_this.filter);\n        _this._lfo.connect(_this.filter.frequency);\n        _this.octaves = options.octaves;\n        _this.baseFrequency = options.baseFrequency;\n        return _this;\n    }\n    AutoFilter.getDefaults = function () {\n        return Object.assign(LFOEffect.getDefaults(), {\n            baseFrequency: 200,\n            octaves: 2.6,\n            filter: {\n                type: \"lowpass\",\n                rolloff: -12,\n                Q: 1,\n            }\n        });\n    };\n    Object.defineProperty(AutoFilter.prototype, \"baseFrequency\", {\n        /**\n         * The minimum value of the filter's cutoff frequency.\n         */\n        get: function () {\n            return this._lfo.min;\n        },\n        set: function (freq) {\n            this._lfo.min = this.toFrequency(freq);\n            // and set the max\n            this.octaves = this._octaves;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AutoFilter.prototype, \"octaves\", {\n        /**\n         * The maximum value of the filter's cutoff frequency.\n         */\n        get: function () {\n            return this._octaves;\n        },\n        set: function (oct) {\n            this._octaves = oct;\n            this._lfo.max = this._lfo.min * Math.pow(2, oct);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    AutoFilter.prototype.dispose = function () {\n        _super.prototype.dispose.call(this);\n        this.filter.dispose();\n        return this;\n    };\n    return AutoFilter;\n}(LFOEffect));\nexport { AutoFilter };\n//# sourceMappingURL=AutoFilter.js.map","import * as tslib_1 from \"tslib\";\nimport { ToneAudioNode } from \"../../core/context/ToneAudioNode\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { OnePoleFilter } from \"../filter/OnePoleFilter\";\nimport { Abs } from \"../../signal/Abs\";\n/**\n * Follower is a simple envelope follower.\n * It's implemented by applying a lowpass filter to the absolute value of the incoming signal.\n * ```\n *          +-----+    +---------------+\n * Input +--> Abs +----> OnePoleFilter +--> Output\n *          +-----+    +---------------+\n * ```\n * @category Component\n */\nvar Follower = /** @class */ (function (_super) {\n    tslib_1.__extends(Follower, _super);\n    function Follower() {\n        var _this = _super.call(this, optionsFromArguments(Follower.getDefaults(), arguments, [\"smoothing\"])) || this;\n        _this.name = \"Follower\";\n        var options = optionsFromArguments(Follower.getDefaults(), arguments, [\"smoothing\"]);\n        _this._abs = _this.input = new Abs({ context: _this.context });\n        _this._lowpass = _this.output = new OnePoleFilter({\n            context: _this.context,\n            frequency: 1 / _this.toSeconds(options.smoothing),\n            type: \"lowpass\"\n        });\n        _this._abs.connect(_this._lowpass);\n        _this._smoothing = options.smoothing;\n        return _this;\n    }\n    Follower.getDefaults = function () {\n        return Object.assign(ToneAudioNode.getDefaults(), {\n            smoothing: 0.05\n        });\n    };\n    Object.defineProperty(Follower.prototype, \"smoothing\", {\n        /**\n         * The amount of time it takes a value change to arrive at the updated value.\n         */\n        get: function () {\n            return this._smoothing;\n        },\n        set: function (smoothing) {\n            this._smoothing = smoothing;\n            this._lowpass.frequency = 1 / this.toSeconds(this.smoothing);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Follower.prototype.dispose = function () {\n        _super.prototype.dispose.call(this);\n        this._abs.dispose();\n        this._lowpass.dispose();\n        return this;\n    };\n    return Follower;\n}(ToneAudioNode));\nexport { Follower };\n//# sourceMappingURL=Follower.js.map","import * as tslib_1 from \"tslib\";\nimport { Panner } from \"../component/channel/Panner\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { LFOEffect } from \"./LFOEffect\";\n/**\n * AutoPanner is a [[Panner]] with an [[LFO]] connected to the pan amount.\n * [Related Reading](https://www.ableton.com/en/blog/autopan-chopper-effect-and-more-liveschool/).\n *\n * @example\n * import { AutoPanner, Oscillator } from \"tone\";\n * // create an autopanner and start it\n * const autoPanner = new AutoPanner(\"4n\").toDestination().start();\n * // route an oscillator through the panner and start it\n * const oscillator = new Oscillator().connect(autoPanner).start();\n * @category Effect\n */\nvar AutoPanner = /** @class */ (function (_super) {\n    tslib_1.__extends(AutoPanner, _super);\n    function AutoPanner() {\n        var _this = _super.call(this, optionsFromArguments(AutoPanner.getDefaults(), arguments, [\"frequency\"])) || this;\n        _this.name = \"AutoPanner\";\n        _this._panner = new Panner({ context: _this.context });\n        // connections\n        _this.connectEffect(_this._panner);\n        _this._lfo.connect(_this._panner.pan);\n        _this._lfo.min = -1;\n        _this._lfo.max = 1;\n        return _this;\n    }\n    AutoPanner.prototype.dispose = function () {\n        _super.prototype.dispose.call(this);\n        this._panner.dispose();\n        return this;\n    };\n    return AutoPanner;\n}(LFOEffect));\nexport { AutoPanner };\n//# sourceMappingURL=AutoPanner.js.map","import * as tslib_1 from \"tslib\";\nimport { ToneAudioWorklet } from \"../core/context/ToneAudioWorklet\";\nimport { Effect } from \"./Effect\";\nimport { Gain } from \"../core/context/Gain\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { connectSeries } from \"../core/context/ToneAudioNode\";\nimport { Param } from \"../core/context/Param\";\n/**\n * BitCrusher down-samples the incoming signal to a different bit depth.\n * Lowering the bit depth of the signal creates distortion. Read more about BitCrushing\n * on [Wikipedia](https://en.wikipedia.org/wiki/Bitcrusher).\n * @example\n * import { BitCrusher, Synth } from \"tone\";\n * // initialize crusher and route a synth through it\n * const crusher = new BitCrusher(4).toDestination();\n * const synth = new Synth().connect(crusher);\n * synth.triggerAttackRelease(\"C2\", 2);\n *\n * @category Effect\n */\nvar BitCrusher = /** @class */ (function (_super) {\n    tslib_1.__extends(BitCrusher, _super);\n    function BitCrusher() {\n        var _this = _super.call(this, optionsFromArguments(BitCrusher.getDefaults(), arguments, [\"bits\"])) || this;\n        _this.name = \"BitCrusher\";\n        var options = optionsFromArguments(BitCrusher.getDefaults(), arguments, [\"bits\"]);\n        _this._bitCrusherWorklet = new BitCrusherWorklet({\n            context: _this.context,\n            bits: options.bits,\n        });\n        // connect it up\n        _this.connectEffect(_this._bitCrusherWorklet);\n        _this.bits = _this._bitCrusherWorklet.bits;\n        return _this;\n    }\n    BitCrusher.getDefaults = function () {\n        return Object.assign(Effect.getDefaults(), {\n            bits: 4,\n            frequencyReduction: 0.5,\n        });\n    };\n    BitCrusher.prototype.dispose = function () {\n        _super.prototype.dispose.call(this);\n        this._bitCrusherWorklet.dispose();\n        return this;\n    };\n    return BitCrusher;\n}(Effect));\nexport { BitCrusher };\n/**\n * Internal class which creates an AudioWorklet to do the bit crushing\n */\nvar BitCrusherWorklet = /** @class */ (function (_super) {\n    tslib_1.__extends(BitCrusherWorklet, _super);\n    function BitCrusherWorklet() {\n        var _this = _super.call(this, optionsFromArguments(BitCrusherWorklet.getDefaults(), arguments)) || this;\n        _this.name = \"BitCrusherWorklet\";\n        _this.workletOptions = {\n            numberOfInputs: 1,\n            numberOfOutputs: 1,\n        };\n        var options = optionsFromArguments(BitCrusherWorklet.getDefaults(), arguments);\n        _this.input = new Gain({ context: _this.context });\n        _this.output = new Gain({ context: _this.context });\n        var dummyGain = _this.context.createGain();\n        _this.bits = new Param({\n            context: _this.context,\n            value: options.bits,\n            units: \"positive\",\n            minValue: 1,\n            maxValue: 16,\n            param: dummyGain.gain,\n            swappable: true,\n        });\n        return _this;\n    }\n    BitCrusherWorklet.getDefaults = function () {\n        return Object.assign(ToneAudioWorklet.getDefaults(), {\n            bits: 12,\n        });\n    };\n    BitCrusherWorklet.prototype._audioWorkletName = function () {\n        return \"bit-crusher\";\n    };\n    BitCrusherWorklet.prototype._audioWorklet = function () {\n        return /* javascript */ \" \\n\\t\\tregisterProcessor(\\\"\" + this._audioWorkletName() + \"\\\", class extends AudioWorkletProcessor {\\n\\t\\t\\tstatic get parameterDescriptors () {\\n\\t\\t\\t\\treturn [{\\n\\t\\t\\t\\t\\tname: 'bits',\\n\\t\\t\\t\\t\\tdefaultValue: 12,\\n\\t\\t\\t\\t\\tminValue: 1,\\n\\t\\t\\t\\t\\tmaxValue: 16\\n\\t\\t\\t\\t}];\\n\\t\\t\\t}\\n\\t\\t\\t\\n\\t\\t\\tprocess (inputs, outputs, parameters) {\\n\\t\\t\\t\\tconst input = inputs[0];\\n\\t\\t\\t\\tconst output = outputs[0];\\n\\t\\t\\t\\tif (input && output && input.length === output.length) {\\n\\t\\t\\t\\t\\tconst bits = parameters.bits;\\n\\t\\t\\t\\t\\tfor (let channelNum = 0; channelNum < input.length; channelNum++) {\\n\\t\\t\\t\\t\\t\\tconst inputChannel = input[channelNum];\\n\\t\\t\\t\\t\\t\\tfor (let index = 0; index < inputChannel.length; index++) {\\n\\t\\t\\t\\t\\t\\t\\tconst value = inputChannel[index];\\n\\t\\t\\t\\t\\t\\t\\tconst step = bits.length > 1 ? Math.pow(0.5, bits[index]) : Math.pow(0.5, bits[0]);\\n\\t\\t\\t\\t\\t\\t\\tconst val = step * Math.floor(value / step + 0.5);\\n\\t\\t\\t\\t\\t\\t\\toutput[channelNum][index] = val;\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\treturn true;\\n\\t\\t\\t}\\n\\t\\t});\\n\\t\\t\";\n    };\n    BitCrusherWorklet.prototype.onReady = function (node) {\n        connectSeries(this.input, node, this.output);\n        // @ts-ignore\n        var bits = node.parameters.get(\"bits\");\n        this.bits.setParam(bits);\n    };\n    BitCrusherWorklet.prototype.dispose = function () {\n        _super.prototype.dispose.call(this);\n        this.input.dispose();\n        this.output.dispose();\n        this.bits.dispose();\n        return this;\n    };\n    return BitCrusherWorklet;\n}(ToneAudioWorklet));\n//# sourceMappingURL=BitCrusher.js.map","import * as tslib_1 from \"tslib\";\nimport { Effect } from \"./Effect\";\nimport { Filter } from \"../component/filter/Filter\";\nimport { Follower } from \"../component/analysis/Follower\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { Gain } from \"../core/context/Gain\";\nimport { dbToGain, gainToDb } from \"../core/type/Conversions\";\nimport { ScaleExp } from \"../signal/ScaleExp\";\nimport { readOnly } from \"../core/util/Interface\";\n/**\n * AutoWah connects a [[Follower]] to a [[Filter]].\n * The frequency of the filter, follows the input amplitude curve.\n * Inspiration from [Tuna.js](https://github.com/Dinahmoe/tuna).\n *\n * @example\n * import { AutoWah, Synth } from \"tone\";\n * const autoWah = new AutoWah(50, 6, -30).toDestination();\n * // initialize the synth and connect to autowah\n * const synth = new Synth().connect(autoWah);\n * // Q value influences the effect of the wah - default is 2\n * autoWah.Q.value = 6;\n * // more audible on higher notes\n * synth.triggerAttackRelease(\"C4\", \"8n\");\n * @category Effect\n */\nvar AutoWah = /** @class */ (function (_super) {\n    tslib_1.__extends(AutoWah, _super);\n    function AutoWah() {\n        var _this = _super.call(this, optionsFromArguments(AutoWah.getDefaults(), arguments, [\"baseFrequency\", \"octaves\", \"sensitivity\"])) || this;\n        _this.name = \"AutoWah\";\n        var options = optionsFromArguments(AutoWah.getDefaults(), arguments, [\"baseFrequency\", \"octaves\", \"sensitivity\"]);\n        _this._follower = new Follower({\n            context: _this.context,\n            smoothing: options.follower,\n        });\n        _this._sweepRange = new ScaleExp({\n            context: _this.context,\n            min: 0,\n            max: 1,\n            exponent: 0.5,\n        });\n        _this._baseFrequency = _this.toFrequency(options.baseFrequency);\n        _this._octaves = options.octaves;\n        _this._inputBoost = new Gain({ context: _this.context });\n        _this._bandpass = new Filter({\n            context: _this.context,\n            rolloff: -48,\n            frequency: 0,\n            Q: options.Q,\n        });\n        _this._peaking = new Filter({\n            context: _this.context,\n            type: \"peaking\"\n        });\n        _this._peaking.gain.value = options.gain;\n        _this.gain = _this._peaking.gain;\n        _this.Q = _this._bandpass.Q;\n        // the control signal path\n        _this.effectSend.chain(_this._inputBoost, _this._follower, _this._sweepRange);\n        _this._sweepRange.connect(_this._bandpass.frequency);\n        _this._sweepRange.connect(_this._peaking.frequency);\n        // the filtered path\n        _this.effectSend.chain(_this._bandpass, _this._peaking, _this.effectReturn);\n        // set the initial value\n        _this._setSweepRange();\n        _this.sensitivity = options.sensitivity;\n        readOnly(_this, [\"gain\", \"Q\"]);\n        return _this;\n    }\n    AutoWah.getDefaults = function () {\n        return Object.assign(Effect.getDefaults(), {\n            baseFrequency: 100,\n            octaves: 6,\n            sensitivity: 0,\n            Q: 2,\n            gain: 2,\n            follower: 0.2,\n        });\n    };\n    Object.defineProperty(AutoWah.prototype, \"octaves\", {\n        /**\n         * The number of octaves that the filter will sweep above the baseFrequency.\n         */\n        get: function () {\n            return this._octaves;\n        },\n        set: function (octaves) {\n            this._octaves = octaves;\n            this._setSweepRange();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AutoWah.prototype, \"follower\", {\n        /**\n         * The follower's smoothing time\n         */\n        get: function () {\n            return this._follower.smoothing;\n        },\n        set: function (follower) {\n            this._follower.smoothing = follower;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AutoWah.prototype, \"baseFrequency\", {\n        /**\n         * The base frequency from which the sweep will start from.\n         */\n        get: function () {\n            return this._baseFrequency;\n        },\n        set: function (baseFreq) {\n            this._baseFrequency = this.toFrequency(baseFreq);\n            this._setSweepRange();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AutoWah.prototype, \"sensitivity\", {\n        /**\n         * The sensitivity to control how responsive to the input signal the filter is.\n         */\n        get: function () {\n            return gainToDb(1 / this._inputBoost.gain.value);\n        },\n        set: function (sensitivity) {\n            this._inputBoost.gain.value = 1 / dbToGain(sensitivity);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * sets the sweep range of the scaler\n     */\n    AutoWah.prototype._setSweepRange = function () {\n        this._sweepRange.min = this._baseFrequency;\n        this._sweepRange.max = Math.min(this._baseFrequency * Math.pow(2, this._octaves), this.context.sampleRate / 2);\n    };\n    AutoWah.prototype.dispose = function () {\n        _super.prototype.dispose.call(this);\n        this._follower.dispose();\n        this._sweepRange.dispose();\n        this._bandpass.dispose();\n        this._peaking.dispose();\n        this._inputBoost.dispose();\n        return this;\n    };\n    return AutoWah;\n}(Effect));\nexport { AutoWah };\n//# sourceMappingURL=AutoWah.js.map","import * as tslib_1 from \"tslib\";\nimport { ToneAudioNode } from \"../../core/context/ToneAudioNode\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\n/**\n * Split splits an incoming signal into the number of given channels.\n *\n * @example\n * import { Split } from \"tone\";\n *\n * const split = new Split();\n * // stereoSignal.connect(split);\n * @category Component\n */\nvar Split = /** @class */ (function (_super) {\n    tslib_1.__extends(Split, _super);\n    function Split() {\n        var _this = _super.call(this, optionsFromArguments(Split.getDefaults(), arguments, [\"channels\"])) || this;\n        _this.name = \"Split\";\n        var options = optionsFromArguments(Split.getDefaults(), arguments, [\"channels\"]);\n        _this._splitter = _this.input = _this.output = _this.context.createChannelSplitter(options.channels);\n        _this._internalChannels = [_this._splitter];\n        return _this;\n    }\n    Split.getDefaults = function () {\n        return Object.assign(ToneAudioNode.getDefaults(), {\n            channels: 2,\n        });\n    };\n    Split.prototype.dispose = function () {\n        _super.prototype.dispose.call(this);\n        this._splitter.disconnect();\n        return this;\n    };\n    return Split;\n}(ToneAudioNode));\nexport { Split };\n//# sourceMappingURL=Split.js.map","import * as tslib_1 from \"tslib\";\nimport { Effect } from \"./Effect\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { WaveShaper } from \"../signal/WaveShaper\";\n/**\n * Chebyshev is a waveshaper which is good\n * for making different types of distortion sounds.\n * Note that odd orders sound very different from even ones,\n * and order = 1 is no change.\n * Read more at [music.columbia.edu](http://music.columbia.edu/cmc/musicandcomputers/chapter4/04_06.php).\n * @example\n * import { Chebyshev, MonoSynth } from \"tone\";\n * // create a new cheby\n * const cheby = new Chebyshev(50).toDestination();\n * // create a monosynth connected to our cheby\n * const synth = new MonoSynth().connect(cheby);\n * synth.triggerAttackRelease(\"C2\", 0.4);\n * @category Effect\n */\nvar Chebyshev = /** @class */ (function (_super) {\n    tslib_1.__extends(Chebyshev, _super);\n    function Chebyshev() {\n        var _this = _super.call(this, optionsFromArguments(Chebyshev.getDefaults(), arguments, [\"order\"])) || this;\n        _this.name = \"Chebyshev\";\n        var options = optionsFromArguments(Chebyshev.getDefaults(), arguments, [\"order\"]);\n        _this._shaper = new WaveShaper({\n            context: _this.context,\n            length: 4096\n        });\n        _this._order = options.order;\n        _this.connectEffect(_this._shaper);\n        _this.order = options.order;\n        _this.oversample = options.oversample;\n        return _this;\n    }\n    Chebyshev.getDefaults = function () {\n        return Object.assign(Effect.getDefaults(), {\n            order: 1,\n            oversample: \"none\"\n        });\n    };\n    /**\n     * get the coefficient for that degree\n     * @param  x the x value\n     * @param  degree\n     * @param  memo memoize the computed value. this speeds up computation greatly.\n     */\n    Chebyshev.prototype._getCoefficient = function (x, degree, memo) {\n        if (memo.has(degree)) {\n            return memo.get(degree);\n        }\n        else if (degree === 0) {\n            memo.set(degree, 0);\n        }\n        else if (degree === 1) {\n            memo.set(degree, x);\n        }\n        else {\n            memo.set(degree, 2 * x * this._getCoefficient(x, degree - 1, memo) - this._getCoefficient(x, degree - 2, memo));\n        }\n        return memo.get(degree);\n    };\n    Object.defineProperty(Chebyshev.prototype, \"order\", {\n        /**\n         * The order of the Chebyshev polynomial which creates the equation which is applied to the incoming\n         * signal through a Tone.WaveShaper. The equations are in the form:\n         * ```\n         * order 2: 2x^2 + 1\n         * order 3: 4x^3 + 3x\n         * ```\n         * @min 1\n         * @max 100\n         */\n        get: function () {\n            return this._order;\n        },\n        set: function (order) {\n            var _this = this;\n            this._order = order;\n            this._shaper.setMap((function (x) {\n                return _this._getCoefficient(x, order, new Map());\n            }));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Chebyshev.prototype, \"oversample\", {\n        /**\n         * The oversampling of the effect. Can either be \"none\", \"2x\" or \"4x\".\n         */\n        get: function () {\n            return this._shaper.oversample;\n        },\n        set: function (oversampling) {\n            this._shaper.oversample = oversampling;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Chebyshev.prototype.dispose = function () {\n        _super.prototype.dispose.call(this);\n        this._shaper.dispose();\n        return this;\n    };\n    return Chebyshev;\n}(Effect));\nexport { Chebyshev };\n//# sourceMappingURL=Chebyshev.js.map","import * as tslib_1 from \"tslib\";\nimport { ToneAudioNode } from \"../../core/context/ToneAudioNode\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\n/**\n * Merge brings multiple mono input channels into a single multichannel output channel.\n *\n * @example\n * import { Merge, Noise, Oscillator } from \"tone\";\n * const merge = new Merge().toDestination();\n * // routing a sine tone in the left channel\n * const osc = new Oscillator().connect(merge, 0, 0).start();\n * // and noise in the right channel\n * const noise = new Noise().connect(merge, 0, 1).start();;\n * @category Component\n */\nvar Merge = /** @class */ (function (_super) {\n    tslib_1.__extends(Merge, _super);\n    function Merge() {\n        var _this = _super.call(this, optionsFromArguments(Merge.getDefaults(), arguments, [\"channels\"])) || this;\n        _this.name = \"Merge\";\n        var options = optionsFromArguments(Merge.getDefaults(), arguments, [\"channels\"]);\n        _this._merger = _this.output = _this.input = _this.context.createChannelMerger(options.channels);\n        return _this;\n    }\n    Merge.getDefaults = function () {\n        return Object.assign(ToneAudioNode.getDefaults(), {\n            channels: 2,\n        });\n    };\n    Merge.prototype.dispose = function () {\n        _super.prototype.dispose.call(this);\n        this._merger.disconnect();\n        return this;\n    };\n    return Merge;\n}(ToneAudioNode));\nexport { Merge };\n//# sourceMappingURL=Merge.js.map","import * as tslib_1 from \"tslib\";\nimport { connect, connectSeries, ToneAudioNode } from \"../core/context/ToneAudioNode\";\nimport { CrossFade } from \"../component/channel/CrossFade\";\nimport { Split } from \"../component/channel/Split\";\nimport { Gain } from \"../core/context/Gain\";\nimport { Merge } from \"../component/channel/Merge\";\nimport { readOnly } from \"../core/util/Interface\";\n/**\n * Base class for Stereo effects.\n */\nvar StereoEffect = /** @class */ (function (_super) {\n    tslib_1.__extends(StereoEffect, _super);\n    function StereoEffect(options) {\n        var _this = _super.call(this, options) || this;\n        _this.name = \"StereoEffect\";\n        _this.input = new Gain({ context: _this.context });\n        // force mono sources to be stereo\n        _this.input.channelCount = 2;\n        _this.input.channelCountMode = \"explicit\";\n        _this._dryWet = _this.output = new CrossFade({\n            context: _this.context,\n            fade: options.wet\n        });\n        _this.wet = _this._dryWet.fade;\n        _this._split = new Split({ context: _this.context, channels: 2 });\n        _this._merge = new Merge({ context: _this.context, channels: 2 });\n        // connections\n        _this.input.connect(_this._split);\n        // dry wet connections\n        _this.input.connect(_this._dryWet.a);\n        _this._merge.connect(_this._dryWet.b);\n        readOnly(_this, [\"wet\"]);\n        return _this;\n    }\n    /**\n     * Connect the left part of the effect\n     */\n    StereoEffect.prototype.connectEffectLeft = function () {\n        var nodes = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            nodes[_i] = arguments[_i];\n        }\n        this._split.connect(nodes[0], 0, 0);\n        connectSeries.apply(void 0, tslib_1.__spread(nodes));\n        connect(nodes[nodes.length - 1], this._merge, 0, 0);\n    };\n    /**\n     * Connect the right part of the effect\n     */\n    StereoEffect.prototype.connectEffectRight = function () {\n        var nodes = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            nodes[_i] = arguments[_i];\n        }\n        this._split.connect(nodes[0], 1, 0);\n        connectSeries.apply(void 0, tslib_1.__spread(nodes));\n        connect(nodes[nodes.length - 1], this._merge, 0, 1);\n    };\n    StereoEffect.getDefaults = function () {\n        return Object.assign(ToneAudioNode.getDefaults(), {\n            wet: 1,\n        });\n    };\n    StereoEffect.prototype.dispose = function () {\n        _super.prototype.dispose.call(this);\n        this._dryWet.dispose();\n        this._split.dispose();\n        this._merge.dispose();\n        return this;\n    };\n    return StereoEffect;\n}(ToneAudioNode));\nexport { StereoEffect };\n//# sourceMappingURL=StereoEffect.js.map","import * as tslib_1 from \"tslib\";\nimport { StereoEffect } from \"./StereoEffect\";\nimport { Signal } from \"../signal/Signal\";\nimport { Gain } from \"../core/context/Gain\";\nimport { readOnly } from \"../core/util/Interface\";\nimport { Split } from \"../component/channel/Split\";\nimport { Merge } from \"../component/channel/Merge\";\n/**\n * Just like a stereo feedback effect, but the feedback is routed from left to right\n * and right to left instead of on the same channel.\n * ```\n * +--------------------------------+ feedbackL <-----------------------------------+\n * |                                                                                |\n * +-->                          +----->        +---->                          +---+\n *      feedbackMerge +--> split        (EFFECT)       merge +--> feedbackSplit\n * +-->                          +----->        +---->                          +---+\n * |                                                                                |\n * +--------------------------------+ feedbackR <-----------------------------------+\n * ```\n */\nvar StereoFeedbackEffect = /** @class */ (function (_super) {\n    tslib_1.__extends(StereoFeedbackEffect, _super);\n    function StereoFeedbackEffect(options) {\n        var _this = _super.call(this, options) || this;\n        _this.feedback = new Signal({\n            context: _this.context,\n            value: options.feedback,\n            units: \"normalRange\"\n        });\n        _this._feedbackL = new Gain({ context: _this.context });\n        _this._feedbackR = new Gain({ context: _this.context });\n        _this._feedbackSplit = new Split({ context: _this.context, channels: 2 });\n        _this._feedbackMerge = new Merge({ context: _this.context, channels: 2 });\n        _this._merge.connect(_this._feedbackSplit);\n        _this._feedbackMerge.connect(_this._split);\n        // the left output connected to the left input\n        _this._feedbackSplit.connect(_this._feedbackL, 0, 0);\n        _this._feedbackL.connect(_this._feedbackMerge, 0, 0);\n        // the right output connected to the right input\n        _this._feedbackSplit.connect(_this._feedbackR, 1, 0);\n        _this._feedbackR.connect(_this._feedbackMerge, 0, 1);\n        // the feedback control\n        _this.feedback.fan(_this._feedbackL.gain, _this._feedbackR.gain);\n        readOnly(_this, [\"feedback\"]);\n        return _this;\n    }\n    StereoFeedbackEffect.getDefaults = function () {\n        return Object.assign(StereoEffect.getDefaults(), {\n            feedback: 0.5,\n        });\n    };\n    StereoFeedbackEffect.prototype.dispose = function () {\n        _super.prototype.dispose.call(this);\n        this.feedback.dispose();\n        this._feedbackL.dispose();\n        this._feedbackR.dispose();\n        this._feedbackSplit.dispose();\n        this._feedbackMerge.dispose();\n        return this;\n    };\n    return StereoFeedbackEffect;\n}(StereoEffect));\nexport { StereoFeedbackEffect };\n//# sourceMappingURL=StereoFeedbackEffect.js.map","import * as tslib_1 from \"tslib\";\nimport { Gain } from \"../core/context/Gain\";\nimport { readOnly } from \"../core/util/Interface\";\nimport { Effect } from \"./Effect\";\n/**\n * FeedbackEffect provides a loop between an audio source and its own output.\n * This is a base-class for feedback effects.\n */\nvar FeedbackEffect = /** @class */ (function (_super) {\n    tslib_1.__extends(FeedbackEffect, _super);\n    function FeedbackEffect(options) {\n        var _this = _super.call(this, options) || this;\n        _this.name = \"FeedbackEffect\";\n        _this._feedbackGain = new Gain({\n            context: _this.context,\n            gain: options.feedback,\n            units: \"normalRange\",\n        });\n        _this.feedback = _this._feedbackGain.gain;\n        readOnly(_this, \"feedback\");\n        // the feedback loop\n        _this.effectReturn.chain(_this._feedbackGain, _this.effectSend);\n        return _this;\n    }\n    FeedbackEffect.getDefaults = function () {\n        return Object.assign(Effect.getDefaults(), {\n            feedback: 0.125,\n        });\n    };\n    FeedbackEffect.prototype.dispose = function () {\n        _super.prototype.dispose.call(this);\n        this._feedbackGain.dispose();\n        this.feedback.dispose();\n        return this;\n    };\n    return FeedbackEffect;\n}(Effect));\nexport { FeedbackEffect };\n//# sourceMappingURL=FeedbackEffect.js.map","import * as tslib_1 from \"tslib\";\nimport { StereoFeedbackEffect } from \"../effect/StereoFeedbackEffect\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { LFO } from \"../source/oscillator/LFO\";\nimport { Delay } from \"../core/context/Delay\";\nimport { readOnly } from \"../core/util/Interface\";\n/**\n * Chorus is a stereo chorus effect composed of a left and right delay with an [[LFO]] applied to the delayTime of each channel.\n * When [[feedback]] is set to a value larger than 0, you also get Flanger-type effects.\n * Inspiration from [Tuna.js](https://github.com/Dinahmoe/tuna/blob/master/tuna.js).\n * Read more on the chorus effect on [SoundOnSound](http://www.soundonsound.com/sos/jun04/articles/synthsecrets.htm).\n *\n * @example\n * import { Chorus, PolySynth } from \"tone\";\n * const chorus = new Chorus(4, 2.5, 0.5);\n * const synth = new PolySynth().connect(chorus);\n * synth.triggerAttackRelease([\"C3\", \"E3\", \"G3\"], \"8n\");\n *\n * @category Effect\n */\nvar Chorus = /** @class */ (function (_super) {\n    tslib_1.__extends(Chorus, _super);\n    function Chorus() {\n        var _this = _super.call(this, optionsFromArguments(Chorus.getDefaults(), arguments, [\"frequency\", \"delayTime\", \"depth\"])) || this;\n        _this.name = \"Chorus\";\n        var options = optionsFromArguments(Chorus.getDefaults(), arguments, [\"frequency\", \"delayTime\", \"depth\"]);\n        _this._depth = options.depth;\n        _this._delayTime = options.delayTime / 1000;\n        _this._lfoL = new LFO({\n            context: _this.context,\n            frequency: options.frequency,\n            min: 0,\n            max: 1,\n        });\n        _this._lfoR = new LFO({\n            context: _this.context,\n            frequency: options.frequency,\n            min: 0,\n            max: 1,\n            phase: 180\n        });\n        _this._delayNodeL = new Delay({ context: _this.context });\n        _this._delayNodeR = new Delay({ context: _this.context });\n        _this.frequency = _this._lfoL.frequency;\n        readOnly(_this, [\"frequency\"]);\n        // have one LFO frequency control the other\n        _this._lfoL.frequency.connect(_this._lfoR.frequency);\n        // connections\n        _this.connectEffectLeft(_this._delayNodeL);\n        _this.connectEffectRight(_this._delayNodeR);\n        // lfo setup\n        _this._lfoL.connect(_this._delayNodeL.delayTime);\n        _this._lfoR.connect(_this._delayNodeR.delayTime);\n        // set the initial values\n        _this.depth = _this._depth;\n        _this.type = options.type;\n        _this.spread = options.spread;\n        return _this;\n    }\n    Chorus.getDefaults = function () {\n        return Object.assign(StereoFeedbackEffect.getDefaults(), {\n            frequency: 1.5,\n            delayTime: 3.5,\n            depth: 0.7,\n            type: \"sine\",\n            spread: 180,\n            feedback: 0,\n            wet: 0.5,\n        });\n    };\n    Object.defineProperty(Chorus.prototype, \"depth\", {\n        /**\n         * The depth of the effect. A depth of 1 makes the delayTime\n         * modulate between 0 and 2*delayTime (centered around the delayTime).\n         */\n        get: function () {\n            return this._depth;\n        },\n        set: function (depth) {\n            this._depth = depth;\n            var deviation = this._delayTime * depth;\n            this._lfoL.min = Math.max(this._delayTime - deviation, 0);\n            this._lfoL.max = this._delayTime + deviation;\n            this._lfoR.min = Math.max(this._delayTime - deviation, 0);\n            this._lfoR.max = this._delayTime + deviation;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Chorus.prototype, \"delayTime\", {\n        /**\n         * The delayTime in milliseconds of the chorus. A larger delayTime\n         * will give a more pronounced effect. Nominal range a delayTime\n         * is between 2 and 20ms.\n         */\n        get: function () {\n            return this._delayTime * 1000;\n        },\n        set: function (delayTime) {\n            this._delayTime = delayTime / 1000;\n            this.depth = this._depth;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Chorus.prototype, \"type\", {\n        /**\n         * The oscillator type of the LFO.\n         */\n        get: function () {\n            return this._lfoL.type;\n        },\n        set: function (type) {\n            this._lfoL.type = type;\n            this._lfoR.type = type;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Chorus.prototype, \"spread\", {\n        /**\n         * Amount of stereo spread. When set to 0, both LFO's will be panned centrally.\n         * When set to 180, LFO's will be panned hard left and right respectively.\n         */\n        get: function () {\n            return this._lfoR.phase - this._lfoL.phase;\n        },\n        set: function (spread) {\n            this._lfoL.phase = 90 - (spread / 2);\n            this._lfoR.phase = (spread / 2) + 90;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Start the effect.\n     */\n    Chorus.prototype.start = function (time) {\n        this._lfoL.start(time);\n        this._lfoR.start(time);\n        return this;\n    };\n    /**\n     * Stop the lfo\n     */\n    Chorus.prototype.stop = function (time) {\n        this._lfoL.stop(time);\n        this._lfoR.stop(time);\n        return this;\n    };\n    /**\n     * Sync the filter to the transport. See [[LFO.sync]]\n     */\n    Chorus.prototype.sync = function () {\n        this._lfoL.sync();\n        this._lfoR.sync();\n        return this;\n    };\n    /**\n     * Unsync the filter from the transport.\n     */\n    Chorus.prototype.unsync = function () {\n        this._lfoL.unsync();\n        this._lfoR.unsync();\n        return this;\n    };\n    Chorus.prototype.dispose = function () {\n        _super.prototype.dispose.call(this);\n        this._lfoL.dispose();\n        this._lfoR.dispose();\n        this._delayNodeL.dispose();\n        this._delayNodeR.dispose();\n        this.frequency.dispose();\n        return this;\n    };\n    return Chorus;\n}(StereoFeedbackEffect));\nexport { Chorus };\n//# sourceMappingURL=Chorus.js.map","import * as tslib_1 from \"tslib\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { WaveShaper } from \"../signal/WaveShaper\";\nimport { Effect } from \"./Effect\";\n/**\n * A simple distortion effect using Tone.WaveShaper.\n * Algorithm from [this stackoverflow answer](http://stackoverflow.com/a/22313408).\n *\n * @example\n * import { Distortion, FMSynth } from \"tone\";\n * const dist = new Distortion(0.8).toDestination();\n * const fm = new FMSynth().connect(dist);\n * fm.triggerAttackRelease(\"A1\", \"8n\");\n * @category Effect\n */\nvar Distortion = /** @class */ (function (_super) {\n    tslib_1.__extends(Distortion, _super);\n    function Distortion() {\n        var _this = _super.call(this, optionsFromArguments(Distortion.getDefaults(), arguments, [\"distortion\"])) || this;\n        _this.name = \"Distortion\";\n        var options = optionsFromArguments(Distortion.getDefaults(), arguments, [\"distortion\"]);\n        _this._shaper = new WaveShaper({\n            context: _this.context,\n            length: 4096,\n        });\n        _this._distortion = options.distortion;\n        _this.connectEffect(_this._shaper);\n        _this.distortion = options.distortion;\n        _this.oversample = options.oversample;\n        return _this;\n    }\n    Distortion.getDefaults = function () {\n        return Object.assign(Effect.getDefaults(), {\n            distortion: 0.4,\n            oversample: \"none\",\n        });\n    };\n    Object.defineProperty(Distortion.prototype, \"distortion\", {\n        /**\n         * The amount of distortion. Nominal range is between 0 and 1.\n         */\n        get: function () {\n            return this._distortion;\n        },\n        set: function (amount) {\n            this._distortion = amount;\n            var k = amount * 100;\n            var deg = Math.PI / 180;\n            this._shaper.setMap(function (x) {\n                if (Math.abs(x) < 0.001) {\n                    // should output 0 when input is 0\n                    return 0;\n                }\n                else {\n                    return (3 + k) * x * 20 * deg / (Math.PI + k * Math.abs(x));\n                }\n            });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Distortion.prototype, \"oversample\", {\n        /**\n         * The oversampling of the effect. Can either be \"none\", \"2x\" or \"4x\".\n         */\n        get: function () {\n            return this._shaper.oversample;\n        },\n        set: function (oversampling) {\n            this._shaper.oversample = oversampling;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Distortion.prototype.dispose = function () {\n        _super.prototype.dispose.call(this);\n        this._shaper.dispose();\n        return this;\n    };\n    return Distortion;\n}(Effect));\nexport { Distortion };\n//# sourceMappingURL=Distortion.js.map","import * as tslib_1 from \"tslib\";\nimport { Gain } from \"../../core/context/Gain\";\nimport { connectSeries, ToneAudioNode } from \"../../core/context/ToneAudioNode\";\n/**\n * PhaseShiftAllpass is an very efficient implementation of a Hilbert Transform\n * using two Allpass filter banks whose outputs have a phase difference of 90°.\n * Here the `offset90` phase is offset by +90° in relation to `output`.\n * Coefficients and structure was developed by Olli Niemitalo.\n * For more details see: http://yehar.com/blog/?p=368\n * @category Component\n */\nvar PhaseShiftAllpass = /** @class */ (function (_super) {\n    tslib_1.__extends(PhaseShiftAllpass, _super);\n    function PhaseShiftAllpass(options) {\n        var _this = _super.call(this, options) || this;\n        _this.name = \"PhaseShiftAllpass\";\n        _this.input = new Gain({ context: _this.context });\n        /**\n         * The phase shifted output\n         */\n        _this.output = new Gain({ context: _this.context });\n        /**\n         * The PhaseShifted allpass output\n         */\n        _this.offset90 = new Gain({ context: _this.context });\n        var allpassBank1Values = [0.6923878, 0.9360654322959, 0.9882295226860, 0.9987488452737];\n        var allpassBank2Values = [0.4021921162426, 0.8561710882420, 0.9722909545651, 0.9952884791278];\n        _this._bank0 = _this._createAllPassFilterBank(allpassBank1Values);\n        _this._bank1 = _this._createAllPassFilterBank(allpassBank2Values);\n        _this._oneSampleDelay = _this.context.createIIRFilter([0.0, 1.0], [1.0, 0.0]);\n        // connect Allpass filter banks\n        connectSeries.apply(void 0, tslib_1.__spread([_this.input], _this._bank0, [_this._oneSampleDelay, _this.output]));\n        connectSeries.apply(void 0, tslib_1.__spread([_this.input], _this._bank1, [_this.offset90]));\n        return _this;\n    }\n    /**\n     * Create all of the IIR filters from an array of values using the coefficient calculation.\n     */\n    PhaseShiftAllpass.prototype._createAllPassFilterBank = function (bankValues) {\n        var _this = this;\n        var nodes = bankValues.map(function (value) {\n            var coefficients = [[value * value, 0, -1], [1, 0, -(value * value)]];\n            return _this.context.createIIRFilter(coefficients[0], coefficients[1]);\n        });\n        return nodes;\n    };\n    PhaseShiftAllpass.prototype.dispose = function () {\n        _super.prototype.dispose.call(this);\n        this.input.dispose();\n        this.output.dispose();\n        this.offset90.dispose();\n        this._bank0.forEach(function (f) { return f.disconnect(); });\n        this._bank1.forEach(function (f) { return f.disconnect(); });\n        this._oneSampleDelay.disconnect();\n        return this;\n    };\n    return PhaseShiftAllpass;\n}(ToneAudioNode));\nexport { PhaseShiftAllpass };\n//# sourceMappingURL=PhaseShiftAllpass.js.map","import * as tslib_1 from \"tslib\";\nimport { Delay } from \"../core/context/Delay\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { readOnly } from \"../core/util/Interface\";\nimport { FeedbackEffect } from \"./FeedbackEffect\";\n/**\n * FeedbackDelay is a DelayNode in which part of output signal is fed back into the delay.\n *\n * @param delayTime The delay applied to the incoming signal.\n * @param feedback The amount of the effected signal which is fed back through the delay.\n * @example\n * import { FeedbackDelay, MembraneSynth } from \"tone\";\n * const feedbackDelay = new FeedbackDelay(\"8n\", 0.5).toDestination();\n * const tom = new MembraneSynth({\n * \toctaves: 4,\n * \tpitchDecay: 0.1\n * }).connect(feedbackDelay);\n * tom.triggerAttackRelease(\"A2\", \"32n\");\n * @category Effect\n */\nvar FeedbackDelay = /** @class */ (function (_super) {\n    tslib_1.__extends(FeedbackDelay, _super);\n    function FeedbackDelay() {\n        var _this = _super.call(this, optionsFromArguments(FeedbackDelay.getDefaults(), arguments, [\"delayTime\", \"feedback\"])) || this;\n        _this.name = \"FeedbackDelay\";\n        var options = optionsFromArguments(FeedbackDelay.getDefaults(), arguments, [\"delayTime\", \"feedback\"]);\n        _this._delayNode = new Delay({\n            context: _this.context,\n            delayTime: options.delayTime,\n            maxDelay: options.maxDelay,\n        });\n        _this.delayTime = _this._delayNode.delayTime;\n        // connect it up\n        _this.connectEffect(_this._delayNode);\n        readOnly(_this, \"delayTime\");\n        return _this;\n    }\n    FeedbackDelay.getDefaults = function () {\n        return Object.assign(FeedbackEffect.getDefaults(), {\n            delayTime: 0.25,\n            maxDelay: 1,\n        });\n    };\n    FeedbackDelay.prototype.dispose = function () {\n        _super.prototype.dispose.call(this);\n        this._delayNode.dispose();\n        this.delayTime.dispose();\n        return this;\n    };\n    return FeedbackDelay;\n}(FeedbackEffect));\nexport { FeedbackDelay };\n//# sourceMappingURL=FeedbackDelay.js.map","import * as tslib_1 from \"tslib\";\nimport { StereoEffect } from \"./StereoEffect\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { readOnly } from \"../core/util/Interface\";\nimport { Signal } from \"../signal/Signal\";\nimport { LowpassCombFilter } from \"../component/filter/LowpassCombFilter\";\n/**\n * An array of comb filter delay values from Freeverb implementation\n */\nvar combFilterTunings = [1557 / 44100, 1617 / 44100, 1491 / 44100, 1422 / 44100, 1277 / 44100, 1356 / 44100, 1188 / 44100, 1116 / 44100];\n/**\n * An array of allpass filter frequency values from Freeverb implementation\n */\nvar allpassFilterFrequencies = [225, 556, 441, 341];\n/**\n * Freeverb is a reverb based on [Freeverb](https://ccrma.stanford.edu/~jos/pasp/Freeverb.html).\n * Read more on reverb on [Sound On Sound](https://web.archive.org/web/20160404083902/http://www.soundonsound.com:80/sos/feb01/articles/synthsecrets.asp).\n * Freeverb is now implemented with an AudioWorkletNode which may result on performance degradation on some platforms\n * @example\n * import { Freeverb, NoiseSynth } from \"tone\";\n * const freeverb = new Freeverb().toDestination();\n * freeverb.dampening = 1000;\n * // routing synth through the reverb\n * const synth = new NoiseSynth().connect(freeverb);\n * synth.triggerAttackRelease(0.05);\n * @category Effect\n */\nvar Freeverb = /** @class */ (function (_super) {\n    tslib_1.__extends(Freeverb, _super);\n    function Freeverb() {\n        var _this = _super.call(this, optionsFromArguments(Freeverb.getDefaults(), arguments, [\"roomSize\", \"dampening\"])) || this;\n        _this.name = \"Freeverb\";\n        /**\n         * the comb filters\n         */\n        _this._combFilters = [];\n        /**\n         * the allpass filters on the left\n         */\n        _this._allpassFiltersL = [];\n        /**\n         * the allpass filters on the right\n         */\n        _this._allpassFiltersR = [];\n        var options = optionsFromArguments(Freeverb.getDefaults(), arguments, [\"roomSize\", \"dampening\"]);\n        _this.roomSize = new Signal({\n            context: _this.context,\n            value: options.roomSize,\n            units: \"normalRange\",\n        });\n        // make the allpass filters on the right\n        _this._allpassFiltersL = allpassFilterFrequencies.map(function (freq) {\n            var allpassL = _this.context.createBiquadFilter();\n            allpassL.type = \"allpass\";\n            allpassL.frequency.value = freq;\n            return allpassL;\n        });\n        // make the allpass filters on the left\n        _this._allpassFiltersR = allpassFilterFrequencies.map(function (freq) {\n            var allpassR = _this.context.createBiquadFilter();\n            allpassR.type = \"allpass\";\n            allpassR.frequency.value = freq;\n            return allpassR;\n        });\n        // make the comb filters\n        _this._combFilters = combFilterTunings.map(function (delayTime, index) {\n            var lfpf = new LowpassCombFilter({\n                context: _this.context,\n                dampening: options.dampening,\n                delayTime: delayTime,\n            });\n            if (index < combFilterTunings.length / 2) {\n                _this.connectEffectLeft.apply(_this, tslib_1.__spread([lfpf], _this._allpassFiltersL));\n            }\n            else {\n                _this.connectEffectRight.apply(_this, tslib_1.__spread([lfpf], _this._allpassFiltersR));\n            }\n            _this.roomSize.connect(lfpf.resonance);\n            return lfpf;\n        });\n        readOnly(_this, [\"roomSize\"]);\n        return _this;\n    }\n    Freeverb.getDefaults = function () {\n        return Object.assign(StereoEffect.getDefaults(), {\n            roomSize: 0.7,\n            dampening: 3000\n        });\n    };\n    Object.defineProperty(Freeverb.prototype, \"dampening\", {\n        /**\n         * The amount of dampening of the reverberant signal.\n         */\n        get: function () {\n            return this._combFilters[0].dampening;\n        },\n        set: function (d) {\n            this._combFilters.forEach(function (c) { return c.dampening = d; });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Freeverb.prototype.dispose = function () {\n        _super.prototype.dispose.call(this);\n        this._allpassFiltersL.forEach(function (al) { return al.disconnect(); });\n        this._allpassFiltersR.forEach(function (ar) { return ar.disconnect(); });\n        this._combFilters.forEach(function (cf) { return cf.dispose(); });\n        this.roomSize.dispose();\n        return this;\n    };\n    return Freeverb;\n}(StereoEffect));\nexport { Freeverb };\n//# sourceMappingURL=Freeverb.js.map","import * as tslib_1 from \"tslib\";\nimport { PhaseShiftAllpass } from \"../component/filter/PhaseShiftAllpass\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { Effect } from \"../effect/Effect\";\nimport { Add } from \"../signal/Add\";\nimport { Multiply } from \"../signal/Multiply\";\nimport { Negate } from \"../signal/Negate\";\nimport { Signal } from \"../signal/Signal\";\nimport { Oscillator } from \"../source/oscillator/Oscillator\";\nimport { ToneOscillatorNode } from \"../source/oscillator/ToneOscillatorNode\";\n/**\n * FrequencyShifter can be used to shift all frequencies of a signal by a fixed amount.\n * The amount can be changed at audio rate and the effect is applied in real time.\n * The frequency shifting is implemented with a technique called single side band modulation using a ring modulator.\n * Note: Contrary to pitch shifting, all frequencies are shifted by the same amount,\n * destroying the harmonic relationship between them. This leads to the classic ring modulator timbre distortion.\n * The algorithm will produces some aliasing towards the high end, especially if your source material\n * contains a lot of high frequencies. Unfortunatelly the webaudio API does not support resampling\n * buffers in real time, so it is not possible to fix it properly. Depending on the use case it might\n * be an option to low pass filter your input before frequency shifting it to get ride of the aliasing.\n * You can find a very detailed description of the algorithm here: https://larzeitlin.github.io/RMFS/\n *\n * @example\n * import { FrequencyShifter, Oscillator } from \"tone\";\n * const input = new Oscillator(230, \"sawtooth\").start();\n * const shift = new FrequencyShifter(42).toDestination();\n * input.connect(shift);\n * @category Effect\n */\nvar FrequencyShifter = /** @class */ (function (_super) {\n    tslib_1.__extends(FrequencyShifter, _super);\n    function FrequencyShifter() {\n        var _this = _super.call(this, optionsFromArguments(FrequencyShifter.getDefaults(), arguments, [\"frequency\"])) || this;\n        _this.name = \"FrequencyShifter\";\n        var options = optionsFromArguments(FrequencyShifter.getDefaults(), arguments, [\"frequency\"]);\n        _this.frequency = new Signal({\n            context: _this.context,\n            units: \"frequency\",\n            value: options.frequency,\n            minValue: -_this.context.sampleRate / 2,\n            maxValue: _this.context.sampleRate / 2,\n        });\n        _this._sine = new ToneOscillatorNode({\n            context: _this.context,\n            type: \"sine\",\n        });\n        _this._cosine = new Oscillator({\n            context: _this.context,\n            phase: -90,\n            type: \"sine\",\n        });\n        _this._sineMultiply = new Multiply({ context: _this.context });\n        _this._cosineMultiply = new Multiply({ context: _this.context });\n        _this._negate = new Negate({ context: _this.context });\n        _this._add = new Add({ context: _this.context });\n        _this._phaseShifter = new PhaseShiftAllpass({ context: _this.context });\n        _this.effectSend.connect(_this._phaseShifter);\n        // connect the carrier frequency signal to the two oscillators\n        _this.frequency.fan(_this._sine.frequency, _this._cosine.frequency);\n        _this._phaseShifter.offset90.connect(_this._cosineMultiply);\n        _this._cosine.connect(_this._cosineMultiply.factor);\n        _this._phaseShifter.connect(_this._sineMultiply);\n        _this._sine.connect(_this._sineMultiply.factor);\n        _this._sineMultiply.connect(_this._negate);\n        _this._cosineMultiply.connect(_this._add);\n        _this._negate.connect(_this._add.addend);\n        _this._add.connect(_this.effectReturn);\n        // start the oscillators at the same time\n        var now = _this.immediate();\n        _this._sine.start(now);\n        _this._cosine.start(now);\n        return _this;\n    }\n    FrequencyShifter.getDefaults = function () {\n        return Object.assign(Effect.getDefaults(), {\n            frequency: 0,\n        });\n    };\n    FrequencyShifter.prototype.dispose = function () {\n        _super.prototype.dispose.call(this);\n        this.frequency.dispose();\n        this._add.dispose();\n        this._cosine.dispose();\n        this._cosineMultiply.dispose();\n        this._negate.dispose();\n        this._phaseShifter.dispose();\n        this._sine.dispose();\n        this._sineMultiply.dispose();\n        return this;\n    };\n    return FrequencyShifter;\n}(Effect));\nexport { FrequencyShifter };\n//# sourceMappingURL=FrequencyShifter.js.map","import * as tslib_1 from \"tslib\";\nimport { StereoEffect } from \"./StereoEffect\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { Scale } from \"../signal/Scale\";\nimport { Signal } from \"../signal/Signal\";\nimport { FeedbackCombFilter } from \"../component/filter/FeedbackCombFilter\";\nimport { readOnly } from \"../core/util/Interface\";\n/**\n * an array of the comb filter delay time values\n */\nvar combFilterDelayTimes = [1687 / 25000, 1601 / 25000, 2053 / 25000, 2251 / 25000];\n/**\n * the resonances of each of the comb filters\n */\nvar combFilterResonances = [0.773, 0.802, 0.753, 0.733];\n/**\n * the allpass filter frequencies\n */\nvar allpassFilterFreqs = [347, 113, 37];\n/**\n * JCReverb is a simple [Schroeder Reverberator](https://ccrma.stanford.edu/~jos/pasp/Schroeder_Reverberators.html)\n * tuned by John Chowning in 1970.\n * It is made up of three allpass filters and four [[FeedbackCombFilter]].\n * JCReverb is now implemented with an AudioWorkletNode which may result on performance degradation on some platforms\n *\n * @example\n * import { DuoSynth, FeedbackDelay, JCReverb } from \"tone\";\n * const reverb = new JCReverb(0.4).toDestination();\n * const delay = new FeedbackDelay(0.5);\n * // connecting the synth to reverb through delay\n * const synth = new DuoSynth().chain(delay, reverb);\n * synth.triggerAttackRelease(\"A4\", \"8n\");\n *\n * @category Effect\n */\nvar JCReverb = /** @class */ (function (_super) {\n    tslib_1.__extends(JCReverb, _super);\n    function JCReverb() {\n        var _this = _super.call(this, optionsFromArguments(JCReverb.getDefaults(), arguments, [\"roomSize\"])) || this;\n        _this.name = \"JCReverb\";\n        /**\n         * a series of allpass filters\n         */\n        _this._allpassFilters = [];\n        /**\n         * parallel feedback comb filters\n         */\n        _this._feedbackCombFilters = [];\n        var options = optionsFromArguments(JCReverb.getDefaults(), arguments, [\"roomSize\"]);\n        _this.roomSize = new Signal({\n            context: _this.context,\n            value: options.roomSize,\n            units: \"normalRange\",\n        });\n        _this._scaleRoomSize = new Scale({\n            context: _this.context,\n            min: -0.733,\n            max: 0.197,\n        });\n        // make the allpass filters\n        _this._allpassFilters = allpassFilterFreqs.map(function (freq) {\n            var allpass = _this.context.createBiquadFilter();\n            allpass.type = \"allpass\";\n            allpass.frequency.value = freq;\n            return allpass;\n        });\n        // and the comb filters\n        _this._feedbackCombFilters = combFilterDelayTimes.map(function (delayTime, index) {\n            var fbcf = new FeedbackCombFilter({\n                context: _this.context,\n                delayTime: delayTime,\n            });\n            _this._scaleRoomSize.connect(fbcf.resonance);\n            fbcf.resonance.value = combFilterResonances[index];\n            if (index < combFilterDelayTimes.length / 2) {\n                _this.connectEffectLeft.apply(_this, tslib_1.__spread(_this._allpassFilters, [fbcf]));\n            }\n            else {\n                _this.connectEffectRight.apply(_this, tslib_1.__spread(_this._allpassFilters, [fbcf]));\n            }\n            return fbcf;\n        });\n        // chain the allpass filters together\n        _this.roomSize.connect(_this._scaleRoomSize);\n        readOnly(_this, [\"roomSize\"]);\n        return _this;\n    }\n    JCReverb.getDefaults = function () {\n        return Object.assign(StereoEffect.getDefaults(), {\n            roomSize: 0.5,\n        });\n    };\n    JCReverb.prototype.dispose = function () {\n        _super.prototype.dispose.call(this);\n        this._allpassFilters.forEach(function (apf) { return apf.disconnect(); });\n        this._feedbackCombFilters.forEach(function (fbcf) { return fbcf.dispose(); });\n        this.roomSize.dispose();\n        this._scaleRoomSize.dispose();\n        return this;\n    };\n    return JCReverb;\n}(StereoEffect));\nexport { JCReverb };\n//# sourceMappingURL=JCReverb.js.map","import * as tslib_1 from \"tslib\";\nimport { StereoFeedbackEffect } from \"./StereoFeedbackEffect\";\nimport { readOnly } from \"../core/util/Interface\";\n/**\n * Just like a [[StereoFeedbackEffect]], but the feedback is routed from left to right\n * and right to left instead of on the same channel.\n * ```\n * +--------------------------------+ feedbackL <-----------------------------------+\n * |                                                                                |\n * +-->                          +----->        +---->                          +-----+\n *      feedbackMerge +--> split        (EFFECT)       merge +--> feedbackSplit     | |\n * +-->                          +----->        +---->                          +---+ |\n * |                                                                                  |\n * +--------------------------------+ feedbackR <-------------------------------------+\n * ```\n */\nvar StereoXFeedbackEffect = /** @class */ (function (_super) {\n    tslib_1.__extends(StereoXFeedbackEffect, _super);\n    function StereoXFeedbackEffect(options) {\n        var _this = _super.call(this, options) || this;\n        // the left output connected to the right input\n        _this._feedbackL.disconnect();\n        _this._feedbackL.connect(_this._feedbackMerge, 0, 1);\n        // the left output connected to the right input\n        _this._feedbackR.disconnect();\n        _this._feedbackR.connect(_this._feedbackMerge, 0, 0);\n        readOnly(_this, [\"feedback\"]);\n        return _this;\n    }\n    return StereoXFeedbackEffect;\n}(StereoFeedbackEffect));\nexport { StereoXFeedbackEffect };\n//# sourceMappingURL=StereoXFeedbackEffect.js.map","import * as tslib_1 from \"tslib\";\nimport { ToneAudioNode } from \"../../core/context/ToneAudioNode\";\nimport { Split } from \"./Split\";\nimport { Add } from \"../../signal/Add\";\nimport { Multiply } from \"../../signal/Multiply\";\nimport { Subtract } from \"../../signal/Subtract\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\n/**\n * Mid/Side processing separates the the 'mid' signal (which comes out of both the left and the right channel)\n * and the 'side' (which only comes out of the the side channels).\n * ```\n * Mid = (Left+Right)/sqrt(2);   // obtain mid-signal from left and right\n * Side = (Left-Right)/sqrt(2);   // obtain side-signal from left and right\n * ```\n */\nvar MidSideSplit = /** @class */ (function (_super) {\n    tslib_1.__extends(MidSideSplit, _super);\n    function MidSideSplit() {\n        var _this = _super.call(this, optionsFromArguments(MidSideSplit.getDefaults(), arguments)) || this;\n        _this.name = \"MidSideSplit\";\n        _this._split = _this.input = new Split({\n            channels: 2,\n            context: _this.context\n        });\n        _this._midAdd = new Add({ context: _this.context });\n        _this.mid = new Multiply({\n            context: _this.context,\n            value: Math.SQRT1_2,\n        });\n        _this._sideSubtract = new Subtract({ context: _this.context });\n        _this.side = new Multiply({\n            context: _this.context,\n            value: Math.SQRT1_2,\n        });\n        _this._split.connect(_this._midAdd, 0);\n        _this._split.connect(_this._midAdd.addend, 1);\n        _this._split.connect(_this._sideSubtract, 0);\n        _this._split.connect(_this._sideSubtract.subtrahend, 1);\n        _this._midAdd.connect(_this.mid);\n        _this._sideSubtract.connect(_this.side);\n        return _this;\n    }\n    MidSideSplit.prototype.dispose = function () {\n        _super.prototype.dispose.call(this);\n        this.mid.dispose();\n        this.side.dispose();\n        this._midAdd.dispose();\n        this._sideSubtract.dispose();\n        this._split.dispose();\n        return this;\n    };\n    return MidSideSplit;\n}(ToneAudioNode));\nexport { MidSideSplit };\n//# sourceMappingURL=MidSideSplit.js.map","import * as tslib_1 from \"tslib\";\nimport { StereoXFeedbackEffect } from \"./StereoXFeedbackEffect\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { Delay } from \"../core/context/Delay\";\nimport { Signal } from \"../signal/Signal\";\nimport { readOnly } from \"../core/util/Interface\";\n/**\n * PingPongDelay is a feedback delay effect where the echo is heard\n * first in one channel and next in the opposite channel. In a stereo\n * system these are the right and left channels.\n * PingPongDelay in more simplified terms is two Tone.FeedbackDelays\n * with independent delay values. Each delay is routed to one channel\n * (left or right), and the channel triggered second will always\n * trigger at the same interval after the first.\n * @example\n * import { MembraneSynth, PingPongDelay } from \"tone\";\n * const pingPong = new PingPongDelay(\"4n\", 0.2).toDestination();\n * const drum = new MembraneSynth().connect(pingPong);\n * drum.triggerAttackRelease(\"C4\", \"32n\");\n * @category Effect\n */\nvar PingPongDelay = /** @class */ (function (_super) {\n    tslib_1.__extends(PingPongDelay, _super);\n    function PingPongDelay() {\n        var _this = _super.call(this, optionsFromArguments(PingPongDelay.getDefaults(), arguments, [\"delayTime\", \"feedback\"])) || this;\n        _this.name = \"PingPongDelay\";\n        var options = optionsFromArguments(PingPongDelay.getDefaults(), arguments, [\"delayTime\", \"feedback\"]);\n        _this._leftDelay = new Delay({\n            context: _this.context,\n            maxDelay: options.maxDelay,\n        });\n        _this._rightDelay = new Delay({\n            context: _this.context,\n            maxDelay: options.maxDelay\n        });\n        _this._rightPreDelay = new Delay({\n            context: _this.context,\n            maxDelay: options.maxDelay\n        });\n        _this.delayTime = new Signal({\n            context: _this.context,\n            units: \"time\",\n            value: options.delayTime,\n        });\n        // connect it up\n        _this.connectEffectLeft(_this._leftDelay);\n        _this.connectEffectRight(_this._rightPreDelay, _this._rightDelay);\n        _this.delayTime.fan(_this._leftDelay.delayTime, _this._rightDelay.delayTime, _this._rightPreDelay.delayTime);\n        // rearranged the feedback to be after the rightPreDelay\n        _this._feedbackL.disconnect();\n        _this._feedbackL.connect(_this._rightDelay);\n        readOnly(_this, [\"delayTime\"]);\n        return _this;\n    }\n    PingPongDelay.getDefaults = function () {\n        return Object.assign(StereoXFeedbackEffect.getDefaults(), {\n            delayTime: 0.25,\n            maxDelay: 1\n        });\n    };\n    PingPongDelay.prototype.dispose = function () {\n        _super.prototype.dispose.call(this);\n        this._leftDelay.dispose();\n        this._rightDelay.dispose();\n        this._rightPreDelay.dispose();\n        this.delayTime.dispose();\n        return this;\n    };\n    return PingPongDelay;\n}(StereoXFeedbackEffect));\nexport { PingPongDelay };\n//# sourceMappingURL=PingPongDelay.js.map","import * as tslib_1 from \"tslib\";\nimport { FeedbackEffect } from \"./FeedbackEffect\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { LFO } from \"../source/oscillator/LFO\";\nimport { Delay } from \"../core/context/Delay\";\nimport { CrossFade } from \"../component/channel/CrossFade\";\nimport { Signal } from \"../signal/Signal\";\nimport { readOnly } from \"../core/util/Interface\";\nimport { intervalToFrequencyRatio } from \"../core/type/Conversions\";\n/**\n * PitchShift does near-realtime pitch shifting to the incoming signal.\n * The effect is achieved by speeding up or slowing down the delayTime\n * of a DelayNode using a sawtooth wave.\n * Algorithm found in [this pdf](http://dsp-book.narod.ru/soundproc.pdf).\n * Additional reference by [Miller Pucket](http://msp.ucsd.edu/techniques/v0.11/book-html/node115.html).\n * @category Effect\n */\nvar PitchShift = /** @class */ (function (_super) {\n    tslib_1.__extends(PitchShift, _super);\n    function PitchShift() {\n        var _this = _super.call(this, optionsFromArguments(PitchShift.getDefaults(), arguments, [\"pitch\"])) || this;\n        _this.name = \"PitchShift\";\n        var options = optionsFromArguments(PitchShift.getDefaults(), arguments, [\"pitch\"]);\n        _this._frequency = new Signal({ context: _this.context });\n        _this._delayA = new Delay({\n            maxDelay: 1,\n            context: _this.context\n        });\n        _this._lfoA = new LFO({\n            context: _this.context,\n            min: 0,\n            max: 0.1,\n            type: \"sawtooth\"\n        }).connect(_this._delayA.delayTime);\n        _this._delayB = new Delay({\n            maxDelay: 1,\n            context: _this.context\n        });\n        _this._lfoB = new LFO({\n            context: _this.context,\n            min: 0,\n            max: 0.1,\n            type: \"sawtooth\",\n            phase: 180\n        }).connect(_this._delayB.delayTime);\n        _this._crossFade = new CrossFade({ context: _this.context });\n        _this._crossFadeLFO = new LFO({\n            context: _this.context,\n            min: 0,\n            max: 1,\n            type: \"triangle\",\n            phase: 90\n        }).connect(_this._crossFade.fade);\n        _this._feedbackDelay = new Delay({\n            delayTime: options.delayTime,\n            context: _this.context,\n        });\n        _this.delayTime = _this._feedbackDelay.delayTime;\n        readOnly(_this, \"delayTime\");\n        _this._pitch = options.pitch;\n        _this._windowSize = options.windowSize;\n        // connect the two delay lines up\n        _this._delayA.connect(_this._crossFade.a);\n        _this._delayB.connect(_this._crossFade.b);\n        // connect the frequency\n        _this._frequency.fan(_this._lfoA.frequency, _this._lfoB.frequency, _this._crossFadeLFO.frequency);\n        // route the input\n        _this.effectSend.fan(_this._delayA, _this._delayB);\n        _this._crossFade.chain(_this._feedbackDelay, _this.effectReturn);\n        // start the LFOs at the same time\n        var now = _this.now();\n        _this._lfoA.start(now);\n        _this._lfoB.start(now);\n        _this._crossFadeLFO.start(now);\n        // set the initial value\n        _this.windowSize = _this._windowSize;\n        return _this;\n    }\n    PitchShift.getDefaults = function () {\n        return Object.assign(FeedbackEffect.getDefaults(), {\n            pitch: 0,\n            windowSize: 0.1,\n            delayTime: 0,\n            feedback: 0\n        });\n    };\n    Object.defineProperty(PitchShift.prototype, \"pitch\", {\n        /**\n         * Repitch the incoming signal by some interval (measured in semi-tones).\n         * @example\n         * import { Oscillator, PitchShift } from \"tone\";\n         * const pitchShift = new PitchShift().toDestination();\n         * const osc = new Oscillator().connect(pitchShift).start().toDestination();\n         * pitchShift.pitch = -12; // down one octave\n         * pitchShift.pitch = 7; // up a fifth\n         */\n        get: function () {\n            return this._pitch;\n        },\n        set: function (interval) {\n            this._pitch = interval;\n            var factor = 0;\n            if (interval < 0) {\n                this._lfoA.min = 0;\n                this._lfoA.max = this._windowSize;\n                this._lfoB.min = 0;\n                this._lfoB.max = this._windowSize;\n                factor = intervalToFrequencyRatio(interval - 1) + 1;\n            }\n            else {\n                this._lfoA.min = this._windowSize;\n                this._lfoA.max = 0;\n                this._lfoB.min = this._windowSize;\n                this._lfoB.max = 0;\n                factor = intervalToFrequencyRatio(interval) - 1;\n            }\n            this._frequency.value = factor * (1.2 / this._windowSize);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PitchShift.prototype, \"windowSize\", {\n        /**\n         * The window size corresponds roughly to the sample length in a looping sampler.\n         * Smaller values are desirable for a less noticeable delay time of the pitch shifted\n         * signal, but larger values will result in smoother pitch shifting for larger intervals.\n         * A nominal range of 0.03 to 0.1 is recommended.\n         */\n        get: function () {\n            return this._windowSize;\n        },\n        set: function (size) {\n            this._windowSize = this.toSeconds(size);\n            this.pitch = this._pitch;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PitchShift.prototype.dispose = function () {\n        _super.prototype.dispose.call(this);\n        this._frequency.dispose();\n        this._delayA.dispose();\n        this._delayB.dispose();\n        this._lfoA.dispose();\n        this._lfoB.dispose();\n        this._crossFade.dispose();\n        this._crossFadeLFO.dispose();\n        this._feedbackDelay.dispose();\n        return this;\n    };\n    return PitchShift;\n}(FeedbackEffect));\nexport { PitchShift };\n//# sourceMappingURL=PitchShift.js.map","import * as tslib_1 from \"tslib\";\nimport { StereoEffect } from \"./StereoEffect\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { LFO } from \"../source/oscillator/LFO\";\nimport { Signal } from \"../signal/Signal\";\nimport { readOnly } from \"../core/util/Interface\";\n/**\n * Phaser is a phaser effect. Phasers work by changing the phase\n * of different frequency components of an incoming signal. Read more on\n * [Wikipedia](https://en.wikipedia.org/wiki/Phaser_(effect)).\n * Inspiration for this phaser comes from [Tuna.js](https://github.com/Dinahmoe/tuna/).\n * @example\n * import { FMSynth, Phaser } from \"tone\";\n * const phaser = new Phaser({\n * \tfrequency: 15,\n * \toctaves: 5,\n * \tbaseFrequency: 1000\n * }).toDestination();\n * const synth = new FMSynth().connect(phaser);\n * synth.triggerAttackRelease(\"E3\", \"2n\");\n * @category Effect\n */\nvar Phaser = /** @class */ (function (_super) {\n    tslib_1.__extends(Phaser, _super);\n    function Phaser() {\n        var _this = _super.call(this, optionsFromArguments(Phaser.getDefaults(), arguments, [\"frequency\", \"octaves\", \"baseFrequency\"])) || this;\n        _this.name = \"Phaser\";\n        var options = optionsFromArguments(Phaser.getDefaults(), arguments, [\"frequency\", \"octaves\", \"baseFrequency\"]);\n        _this._lfoL = new LFO({\n            context: _this.context,\n            frequency: options.frequency,\n            min: 0,\n            max: 1\n        });\n        _this._lfoR = new LFO({\n            context: _this.context,\n            frequency: options.frequency,\n            min: 0,\n            max: 1,\n            phase: 180,\n        });\n        _this._baseFrequency = _this.toFrequency(options.baseFrequency);\n        _this._octaves = options.octaves;\n        _this.Q = new Signal({\n            context: _this.context,\n            value: options.Q,\n            units: \"positive\",\n        });\n        _this._filtersL = _this._makeFilters(options.stages, _this._lfoL);\n        _this._filtersR = _this._makeFilters(options.stages, _this._lfoR);\n        _this.frequency = _this._lfoL.frequency;\n        _this.frequency.value = options.frequency;\n        // connect them up\n        _this.connectEffectLeft.apply(_this, tslib_1.__spread(_this._filtersL));\n        _this.connectEffectRight.apply(_this, tslib_1.__spread(_this._filtersR));\n        // control the frequency with one LFO\n        _this._lfoL.frequency.connect(_this._lfoR.frequency);\n        // set the options\n        _this.baseFrequency = options.baseFrequency;\n        _this.octaves = options.octaves;\n        // start the lfo\n        _this._lfoL.start();\n        _this._lfoR.start();\n        readOnly(_this, [\"frequency\", \"Q\"]);\n        return _this;\n    }\n    Phaser.getDefaults = function () {\n        return Object.assign(StereoEffect.getDefaults(), {\n            frequency: 0.5,\n            octaves: 3,\n            stages: 10,\n            Q: 10,\n            baseFrequency: 350,\n        });\n    };\n    Phaser.prototype._makeFilters = function (stages, connectToFreq) {\n        var filters = [];\n        // make all the filters\n        for (var i = 0; i < stages; i++) {\n            var filter = this.context.createBiquadFilter();\n            filter.type = \"allpass\";\n            this.Q.connect(filter.Q);\n            connectToFreq.connect(filter.frequency);\n            filters.push(filter);\n        }\n        return filters;\n    };\n    Object.defineProperty(Phaser.prototype, \"octaves\", {\n        /**\n         * The number of octaves the phase goes above the baseFrequency\n         */\n        get: function () {\n            return this._octaves;\n        },\n        set: function (octaves) {\n            this._octaves = octaves;\n            var max = this._baseFrequency * Math.pow(2, octaves);\n            this._lfoL.max = max;\n            this._lfoR.max = max;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Phaser.prototype, \"baseFrequency\", {\n        /**\n         * The the base frequency of the filters.\n         */\n        get: function () {\n            return this._baseFrequency;\n        },\n        set: function (freq) {\n            this._baseFrequency = this.toFrequency(freq);\n            this._lfoL.min = this._baseFrequency;\n            this._lfoR.min = this._baseFrequency;\n            this.octaves = this._octaves;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Phaser.prototype.dispose = function () {\n        _super.prototype.dispose.call(this);\n        this.Q.dispose();\n        this._lfoL.dispose();\n        this._lfoR.dispose();\n        this._filtersL.forEach(function (f) { return f.disconnect(); });\n        this._filtersR.forEach(function (f) { return f.disconnect(); });\n        this.frequency.dispose();\n        return this;\n    };\n    return Phaser;\n}(StereoEffect));\nexport { Phaser };\n//# sourceMappingURL=Phaser.js.map","import * as tslib_1 from \"tslib\";\nimport { Merge } from \"../component/channel/Merge\";\nimport { Gain } from \"../core/context/Gain\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { Noise } from \"../source/Noise\";\nimport { Effect } from \"./Effect\";\nimport { OfflineContext } from \"../core/context/OfflineContext\";\nimport { noOp } from \"../core/util/Interface\";\nimport { assertRange } from \"../core/util/Debug\";\n/**\n * Simple convolution created with decaying noise.\n * Generates an Impulse Response Buffer\n * with Tone.Offline then feeds the IR into ConvolverNode.\n * The impulse response generation is async, so you have\n * to wait until [[ready]] resolves before it will make a sound.\n *\n * Inspiration from [ReverbGen](https://github.com/adelespinasse/reverbGen).\n * Copyright (c) 2014 Alan deLespinasse Apache 2.0 License.\n *\n * @category Effect\n */\nvar Reverb = /** @class */ (function (_super) {\n    tslib_1.__extends(Reverb, _super);\n    function Reverb() {\n        var _this = _super.call(this, optionsFromArguments(Reverb.getDefaults(), arguments, [\"decay\"])) || this;\n        _this.name = \"Reverb\";\n        /**\n         * Convolver node\n         */\n        _this._convolver = _this.context.createConvolver();\n        /**\n         * Resolves when the reverb buffer is generated. Whenever either [[decay]]\n         * or [[preDelay]] are set, you have to wait until [[ready]] resolves\n         * before the IR is generated with the latest values.\n         */\n        _this.ready = Promise.resolve();\n        var options = optionsFromArguments(Reverb.getDefaults(), arguments, [\"decay\"]);\n        _this._decay = options.decay;\n        _this._preDelay = options.preDelay;\n        _this.generate();\n        _this.connectEffect(_this._convolver);\n        return _this;\n    }\n    Reverb.getDefaults = function () {\n        return Object.assign(Effect.getDefaults(), {\n            decay: 1.5,\n            preDelay: 0.01,\n        });\n    };\n    Object.defineProperty(Reverb.prototype, \"decay\", {\n        /**\n         * The duration of the reverb.\n         */\n        get: function () {\n            return this._decay;\n        },\n        set: function (time) {\n            time = this.toSeconds(time);\n            assertRange(time, 0.001);\n            this._decay = time;\n            this.generate();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Reverb.prototype, \"preDelay\", {\n        /**\n         * The amount of time before the reverb is fully ramped in.\n         */\n        get: function () {\n            return this._preDelay;\n        },\n        set: function (time) {\n            time = this.toSeconds(time);\n            assertRange(time, 0);\n            this._preDelay = time;\n            this.generate();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Generate the Impulse Response. Returns a promise while the IR is being generated.\n     * @return Promise which returns this object.\n     */\n    Reverb.prototype.generate = function () {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var previousReady, context, noiseL, noiseR, merge, gainNode, renderPromise, _a;\n            return tslib_1.__generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        previousReady = this.ready;\n                        context = new OfflineContext(2, this._decay + this._preDelay, this.context.sampleRate);\n                        noiseL = new Noise({ context: context });\n                        noiseR = new Noise({ context: context });\n                        merge = new Merge({ context: context });\n                        noiseL.connect(merge, 0, 0);\n                        noiseR.connect(merge, 0, 1);\n                        gainNode = new Gain({ context: context }).toDestination();\n                        merge.connect(gainNode);\n                        noiseL.start(0);\n                        noiseR.start(0);\n                        // predelay\n                        gainNode.gain.setValueAtTime(0, 0);\n                        gainNode.gain.setValueAtTime(1, this._preDelay);\n                        // decay\n                        gainNode.gain.exponentialApproachValueAtTime(0, this._preDelay, this.decay);\n                        renderPromise = context.render();\n                        this.ready = renderPromise.then(noOp);\n                        // wait for the previous `ready` to resolve\n                        return [4 /*yield*/, previousReady];\n                    case 1:\n                        // wait for the previous `ready` to resolve\n                        _b.sent();\n                        // set the buffer\n                        _a = this._convolver;\n                        return [4 /*yield*/, renderPromise];\n                    case 2:\n                        // set the buffer\n                        _a.buffer = (_b.sent()).get();\n                        return [2 /*return*/, this];\n                }\n            });\n        });\n    };\n    Reverb.prototype.dispose = function () {\n        _super.prototype.dispose.call(this);\n        this._convolver.disconnect();\n        return this;\n    };\n    return Reverb;\n}(Effect));\nexport { Reverb };\n//# sourceMappingURL=Reverb.js.map","import * as tslib_1 from \"tslib\";\nimport { ToneAudioNode } from \"../../core/context/ToneAudioNode\";\nimport { Merge } from \"./Merge\";\nimport { Add } from \"../../signal/Add\";\nimport { Multiply } from \"../../signal/Multiply\";\nimport { Subtract } from \"../../signal/Subtract\";\nimport { Gain } from \"../../core/context/Gain\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\n/**\n * MidSideMerge merges the mid and side signal after they've been separated by [[MidSideMerge]]\n * ```\n * Mid = (Left+Right)/sqrt(2);   // obtain mid-signal from left and right\n * Side = (Left-Right)/sqrt(2);   // obtain side-signal from left and righ\n * ```\n */\nvar MidSideMerge = /** @class */ (function (_super) {\n    tslib_1.__extends(MidSideMerge, _super);\n    function MidSideMerge() {\n        var _this = _super.call(this, optionsFromArguments(MidSideMerge.getDefaults(), arguments)) || this;\n        _this.name = \"MidSideMerge\";\n        _this.mid = new Gain({ context: _this.context });\n        _this.side = new Gain({ context: _this.context });\n        _this._left = new Add({ context: _this.context });\n        _this._leftMult = new Multiply({\n            context: _this.context,\n            value: Math.SQRT1_2\n        });\n        _this._right = new Subtract({ context: _this.context });\n        _this._rightMult = new Multiply({\n            context: _this.context,\n            value: Math.SQRT1_2\n        });\n        _this._merge = _this.output = new Merge({ context: _this.context });\n        _this.mid.fan(_this._left);\n        _this.side.connect(_this._left.addend);\n        _this.mid.connect(_this._right);\n        _this.side.connect(_this._right.subtrahend);\n        _this._left.connect(_this._leftMult);\n        _this._right.connect(_this._rightMult);\n        _this._leftMult.connect(_this._merge, 0, 0);\n        _this._rightMult.connect(_this._merge, 0, 1);\n        return _this;\n    }\n    MidSideMerge.prototype.dispose = function () {\n        _super.prototype.dispose.call(this);\n        this.mid.dispose();\n        this.side.dispose();\n        this._leftMult.dispose();\n        this._rightMult.dispose();\n        this._left.dispose();\n        this._right.dispose();\n        return this;\n    };\n    return MidSideMerge;\n}(ToneAudioNode));\nexport { MidSideMerge };\n//# sourceMappingURL=MidSideMerge.js.map","import * as tslib_1 from \"tslib\";\nimport { Effect } from \"./Effect\";\nimport { MidSideSplit } from \"../component/channel/MidSideSplit\";\nimport { MidSideMerge } from \"../component/channel/MidSideMerge\";\n/**\n * Mid/Side processing separates the the 'mid' signal\n * (which comes out of both the left and the right channel)\n * and the 'side' (which only comes out of the the side channels)\n * and effects them separately before being recombined.\n * Applies a Mid/Side seperation and recombination.\n * Algorithm found in [kvraudio forums](http://www.kvraudio.com/forum/viewtopic.php?t=212587).\n * This is a base-class for Mid/Side Effects.\n */\nvar MidSideEffect = /** @class */ (function (_super) {\n    tslib_1.__extends(MidSideEffect, _super);\n    function MidSideEffect(options) {\n        var _this = _super.call(this, options) || this;\n        _this.name = \"MidSideEffect\";\n        _this._midSideMerge = new MidSideMerge({ context: _this.context });\n        _this._midSideSplit = new MidSideSplit({ context: _this.context });\n        _this._midSend = _this._midSideSplit.mid;\n        _this._sideSend = _this._midSideSplit.side;\n        _this._midReturn = _this._midSideMerge.mid;\n        _this._sideReturn = _this._midSideMerge.side;\n        // the connections\n        _this.effectSend.connect(_this._midSideSplit);\n        _this._midSideMerge.connect(_this.effectReturn);\n        return _this;\n    }\n    /**\n     * Connect the mid chain of the effect\n     */\n    MidSideEffect.prototype.connectEffectMid = function () {\n        var _a;\n        var nodes = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            nodes[_i] = arguments[_i];\n        }\n        (_a = this._midSend).chain.apply(_a, tslib_1.__spread(nodes, [this._midReturn]));\n    };\n    /**\n     * Connect the side chain of the effect\n     */\n    MidSideEffect.prototype.connectEffectSide = function () {\n        var _a;\n        var nodes = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            nodes[_i] = arguments[_i];\n        }\n        (_a = this._sideSend).chain.apply(_a, tslib_1.__spread(nodes, [this._sideReturn]));\n    };\n    MidSideEffect.prototype.dispose = function () {\n        _super.prototype.dispose.call(this);\n        this._midSideSplit.dispose();\n        this._midSideMerge.dispose();\n        this._midSend.dispose();\n        this._sideSend.dispose();\n        this._midReturn.dispose();\n        this._sideReturn.dispose();\n        return this;\n    };\n    return MidSideEffect;\n}(Effect));\nexport { MidSideEffect };\n//# sourceMappingURL=MidSideEffect.js.map","import * as tslib_1 from \"tslib\";\nimport { ToneAudioNode } from \"../../core/context/ToneAudioNode\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { Split } from \"../channel/Split\";\nimport { Gain } from \"../../core/context/Gain\";\nimport { assert, assertRange } from \"../../core/util/Debug\";\n/**\n * Wrapper around the native Web Audio's [AnalyserNode](http://webaudio.github.io/web-audio-api/#idl-def-AnalyserNode).\n * Extracts FFT or Waveform data from the incoming signal.\n * @category Component\n */\nvar Analyser = /** @class */ (function (_super) {\n    tslib_1.__extends(Analyser, _super);\n    function Analyser() {\n        var _this = _super.call(this, optionsFromArguments(Analyser.getDefaults(), arguments, [\"type\", \"size\"])) || this;\n        _this.name = \"Analyser\";\n        /**\n         * The analyser node.\n         */\n        _this._analysers = [];\n        /**\n         * The buffer that the FFT data is written to\n         */\n        _this._buffers = [];\n        var options = optionsFromArguments(Analyser.getDefaults(), arguments, [\"type\", \"size\"]);\n        _this.input = _this.output = _this._gain = new Gain({ context: _this.context });\n        _this._split = new Split({\n            context: _this.context,\n            channels: options.channels,\n        });\n        _this.input.connect(_this._split);\n        assertRange(options.channels, 1);\n        // create the analysers\n        for (var channel = 0; channel < options.channels; channel++) {\n            _this._analysers[channel] = _this.context.createAnalyser();\n            _this._split.connect(_this._analysers[channel], channel, 0);\n        }\n        // set the values initially\n        _this.size = options.size;\n        _this.type = options.type;\n        return _this;\n    }\n    Analyser.getDefaults = function () {\n        return Object.assign(ToneAudioNode.getDefaults(), {\n            size: 1024,\n            smoothing: 0.8,\n            type: \"fft\",\n            channels: 1,\n        });\n    };\n    /**\n     * Run the analysis given the current settings. If [[channels]] = 1,\n     * it will return a Float32Array. If [[channels]] > 1, it will\n     * return an array of Float32Arrays where each index in the array\n     * represents the analysis done on a channel.\n     */\n    Analyser.prototype.getValue = function () {\n        var _this = this;\n        this._analysers.forEach(function (analyser, index) {\n            var buffer = _this._buffers[index];\n            if (_this._type === \"fft\") {\n                analyser.getFloatFrequencyData(buffer);\n            }\n            else if (_this._type === \"waveform\") {\n                analyser.getFloatTimeDomainData(buffer);\n            }\n        });\n        if (this.channels === 1) {\n            return this._buffers[0];\n        }\n        else {\n            return this._buffers;\n        }\n    };\n    Object.defineProperty(Analyser.prototype, \"size\", {\n        /**\n         * The size of analysis. This must be a power of two in the range 16 to 16384.\n         */\n        get: function () {\n            return this._analysers[0].frequencyBinCount;\n        },\n        set: function (size) {\n            var _this = this;\n            this._analysers.forEach(function (analyser, index) {\n                analyser.fftSize = size * 2;\n                _this._buffers[index] = new Float32Array(size);\n            });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Analyser.prototype, \"channels\", {\n        /**\n         * The number of channels the analyser does the analysis on. Channel\n         * separation is done using [[Split]]\n         */\n        get: function () {\n            return this._analysers.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Analyser.prototype, \"type\", {\n        /**\n         * The analysis function returned by analyser.getValue(), either \"fft\" or \"waveform\".\n         */\n        get: function () {\n            return this._type;\n        },\n        set: function (type) {\n            assert(type === \"waveform\" || type === \"fft\", \"Analyser: invalid type: \" + type);\n            this._type = type;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Analyser.prototype, \"smoothing\", {\n        /**\n         * 0 represents no time averaging with the last analysis frame.\n         */\n        get: function () {\n            return this._analysers[0].smoothingTimeConstant;\n        },\n        set: function (val) {\n            this._analysers.forEach(function (a) { return a.smoothingTimeConstant = val; });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Clean up.\n     */\n    Analyser.prototype.dispose = function () {\n        _super.prototype.dispose.call(this);\n        this._analysers.forEach(function (a) { return a.disconnect(); });\n        this._split.dispose();\n        this._gain.dispose();\n        return this;\n    };\n    return Analyser;\n}(ToneAudioNode));\nexport { Analyser };\n//# sourceMappingURL=Analyser.js.map","import * as tslib_1 from \"tslib\";\nimport { MidSideEffect } from \"../effect/MidSideEffect\";\nimport { Signal } from \"../signal/Signal\";\nimport { Multiply } from \"../signal/Multiply\";\nimport { Subtract } from \"../signal/Subtract\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { readOnly } from \"../core/util/Interface\";\nimport { connect } from \"../core/context/ToneAudioNode\";\n/**\n * Applies a width factor to the mid/side seperation.\n * 0 is all mid and 1 is all side.\n * Algorithm found in [kvraudio forums](http://www.kvraudio.com/forum/viewtopic.php?t=212587).\n * ```\n * Mid *= 2*(1-width)<br>\n * Side *= 2*width\n * ```\n * @category Effect\n */\nvar StereoWidener = /** @class */ (function (_super) {\n    tslib_1.__extends(StereoWidener, _super);\n    function StereoWidener() {\n        var _this = _super.call(this, optionsFromArguments(StereoWidener.getDefaults(), arguments, [\"width\"])) || this;\n        _this.name = \"StereoWidener\";\n        var options = optionsFromArguments(StereoWidener.getDefaults(), arguments, [\"width\"]);\n        _this.width = new Signal({\n            context: _this.context,\n            value: options.width,\n            units: \"normalRange\",\n        });\n        readOnly(_this, [\"width\"]);\n        _this._twoTimesWidthMid = new Multiply({\n            context: _this.context,\n            value: 2,\n        });\n        _this._twoTimesWidthSide = new Multiply({\n            context: _this.context,\n            value: 2,\n        });\n        _this._midMult = new Multiply({ context: _this.context });\n        _this._twoTimesWidthMid.connect(_this._midMult.factor);\n        _this.connectEffectMid(_this._midMult);\n        _this._oneMinusWidth = new Subtract({ context: _this.context });\n        _this._oneMinusWidth.connect(_this._twoTimesWidthMid);\n        connect(_this.context.getConstant(1), _this._oneMinusWidth);\n        _this.width.connect(_this._oneMinusWidth.subtrahend);\n        _this._sideMult = new Multiply({ context: _this.context });\n        _this.width.connect(_this._twoTimesWidthSide);\n        _this._twoTimesWidthSide.connect(_this._sideMult.factor);\n        _this.connectEffectSide(_this._sideMult);\n        return _this;\n    }\n    StereoWidener.getDefaults = function () {\n        return Object.assign(MidSideEffect.getDefaults(), {\n            width: 0.5,\n        });\n    };\n    StereoWidener.prototype.dispose = function () {\n        _super.prototype.dispose.call(this);\n        this.width.dispose();\n        this._midMult.dispose();\n        this._sideMult.dispose();\n        this._twoTimesWidthMid.dispose();\n        this._twoTimesWidthSide.dispose();\n        this._oneMinusWidth.dispose();\n        return this;\n    };\n    return StereoWidener;\n}(MidSideEffect));\nexport { StereoWidener };\n//# sourceMappingURL=StereoWidener.js.map","import * as tslib_1 from \"tslib\";\nimport { StereoEffect } from \"./StereoEffect\";\nimport { LFO } from \"../source/oscillator/LFO\";\nimport { Gain } from \"../core/context/Gain\";\nimport { Signal } from \"../signal/Signal\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { readOnly } from \"../core/util/Interface\";\n/**\n * Tremolo modulates the amplitude of an incoming signal using an [[LFO]].\n * The effect is a stereo effect where the modulation phase is inverted in each channel.\n *\n * @example\n * import { Oscillator, Tremolo } from \"tone\";\n * // create a tremolo and start it's LFO\n * const tremolo = new Tremolo(9, 0.75).toDestination().start();\n * // route an oscillator through the tremolo and start it\n * const oscillator = new Oscillator().connect(tremolo).start();\n *\n * @category Effect\n */\nvar Tremolo = /** @class */ (function (_super) {\n    tslib_1.__extends(Tremolo, _super);\n    function Tremolo() {\n        var _this = _super.call(this, optionsFromArguments(Tremolo.getDefaults(), arguments, [\"frequency\", \"depth\"])) || this;\n        _this.name = \"Tremolo\";\n        var options = optionsFromArguments(Tremolo.getDefaults(), arguments, [\"frequency\", \"depth\"]);\n        _this._lfoL = new LFO({\n            context: _this.context,\n            type: options.type,\n            min: 1,\n            max: 0,\n        });\n        _this._lfoR = new LFO({\n            context: _this.context,\n            type: options.type,\n            min: 1,\n            max: 0,\n        });\n        _this._amplitudeL = new Gain({ context: _this.context });\n        _this._amplitudeR = new Gain({ context: _this.context });\n        _this.frequency = new Signal({\n            context: _this.context,\n            value: options.frequency,\n            units: \"frequency\",\n        });\n        _this.depth = new Signal({\n            context: _this.context,\n            value: options.depth,\n            units: \"normalRange\",\n        });\n        readOnly(_this, [\"frequency\", \"depth\"]);\n        _this.connectEffectLeft(_this._amplitudeL);\n        _this.connectEffectRight(_this._amplitudeR);\n        _this._lfoL.connect(_this._amplitudeL.gain);\n        _this._lfoR.connect(_this._amplitudeR.gain);\n        _this.frequency.fan(_this._lfoL.frequency, _this._lfoR.frequency);\n        _this.depth.fan(_this._lfoR.amplitude, _this._lfoL.amplitude);\n        _this.spread = options.spread;\n        return _this;\n    }\n    Tremolo.getDefaults = function () {\n        return Object.assign(StereoEffect.getDefaults(), {\n            frequency: 10,\n            type: \"sine\",\n            depth: 0.5,\n            spread: 180,\n        });\n    };\n    /**\n     * Start the tremolo.\n     */\n    Tremolo.prototype.start = function (time) {\n        this._lfoL.start(time);\n        this._lfoR.start(time);\n        return this;\n    };\n    /**\n     * Stop the tremolo.\n     */\n    Tremolo.prototype.stop = function (time) {\n        this._lfoL.stop(time);\n        this._lfoR.stop(time);\n        return this;\n    };\n    /**\n     * Sync the effect to the transport.\n     */\n    Tremolo.prototype.sync = function () {\n        this._lfoL.sync();\n        this._lfoR.sync();\n        this.context.transport.syncSignal(this.frequency);\n        return this;\n    };\n    /**\n     * Unsync the filter from the transport\n     */\n    Tremolo.prototype.unsync = function () {\n        this._lfoL.unsync();\n        this._lfoR.unsync();\n        this.context.transport.unsyncSignal(this.frequency);\n        return this;\n    };\n    Object.defineProperty(Tremolo.prototype, \"type\", {\n        /**\n         * The oscillator type.\n         */\n        get: function () {\n            return this._lfoL.type;\n        },\n        set: function (type) {\n            this._lfoL.type = type;\n            this._lfoR.type = type;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Tremolo.prototype, \"spread\", {\n        /**\n         * Amount of stereo spread. When set to 0, both LFO's will be panned centrally.\n         * When set to 180, LFO's will be panned hard left and right respectively.\n         */\n        get: function () {\n            return this._lfoR.phase - this._lfoL.phase; // 180\n        },\n        set: function (spread) {\n            this._lfoL.phase = 90 - (spread / 2);\n            this._lfoR.phase = (spread / 2) + 90;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Tremolo.prototype.dispose = function () {\n        _super.prototype.dispose.call(this);\n        this._lfoL.dispose();\n        this._lfoR.dispose();\n        this._amplitudeL.dispose();\n        this._amplitudeR.dispose();\n        this.frequency.dispose();\n        this.depth.dispose();\n        return this;\n    };\n    return Tremolo;\n}(StereoEffect));\nexport { Tremolo };\n//# sourceMappingURL=Tremolo.js.map","import * as tslib_1 from \"tslib\";\nimport { Effect } from \"./Effect\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { LFO } from \"../source/oscillator/LFO\";\nimport { Delay } from \"../core/context/Delay\";\nimport { readOnly } from \"../core/util/Interface\";\n/**\n * A Vibrato effect composed of a Tone.Delay and a Tone.LFO. The LFO\n * modulates the delayTime of the delay, causing the pitch to rise and fall.\n * @category Effect\n */\nvar Vibrato = /** @class */ (function (_super) {\n    tslib_1.__extends(Vibrato, _super);\n    function Vibrato() {\n        var _this = _super.call(this, optionsFromArguments(Vibrato.getDefaults(), arguments, [\"frequency\", \"depth\"])) || this;\n        _this.name = \"Vibrato\";\n        var options = optionsFromArguments(Vibrato.getDefaults(), arguments, [\"frequency\", \"depth\"]);\n        _this._delayNode = new Delay({\n            context: _this.context,\n            delayTime: 0,\n            maxDelay: options.maxDelay,\n        });\n        _this._lfo = new LFO({\n            context: _this.context,\n            type: options.type,\n            min: 0,\n            max: options.maxDelay,\n            frequency: options.frequency,\n            phase: -90 // offse the phase so the resting position is in the center\n        }).start().connect(_this._delayNode.delayTime);\n        _this.frequency = _this._lfo.frequency;\n        _this.depth = _this._lfo.amplitude;\n        _this.depth.value = options.depth;\n        readOnly(_this, [\"frequency\", \"depth\"]);\n        _this.effectSend.chain(_this._delayNode, _this.effectReturn);\n        return _this;\n    }\n    Vibrato.getDefaults = function () {\n        return Object.assign(Effect.getDefaults(), {\n            maxDelay: 0.005,\n            frequency: 5,\n            depth: 0.1,\n            type: \"sine\"\n        });\n    };\n    Object.defineProperty(Vibrato.prototype, \"type\", {\n        /**\n         * Type of oscillator attached to the Vibrato.\n         */\n        get: function () {\n            return this._lfo.type;\n        },\n        set: function (type) {\n            this._lfo.type = type;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Vibrato.prototype.dispose = function () {\n        _super.prototype.dispose.call(this);\n        this._delayNode.dispose();\n        this._lfo.dispose();\n        this.frequency.dispose();\n        this.depth.dispose();\n        return this;\n    };\n    return Vibrato;\n}(Effect));\nexport { Vibrato };\n//# sourceMappingURL=Vibrato.js.map","import * as tslib_1 from \"tslib\";\nimport { ToneAudioNode } from \"../../core/context/ToneAudioNode\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { Analyser } from \"./Analyser\";\n/**\n * The base class for Metering classes.\n */\nvar MeterBase = /** @class */ (function (_super) {\n    tslib_1.__extends(MeterBase, _super);\n    function MeterBase() {\n        var _this = _super.call(this, optionsFromArguments(MeterBase.getDefaults(), arguments)) || this;\n        _this.name = \"MeterBase\";\n        _this.input = _this.output = _this._analyser = new Analyser({\n            context: _this.context,\n            size: 256,\n            type: \"waveform\",\n        });\n        return _this;\n    }\n    MeterBase.prototype.dispose = function () {\n        _super.prototype.dispose.call(this);\n        this._analyser.dispose();\n        return this;\n    };\n    return MeterBase;\n}(ToneAudioNode));\nexport { MeterBase };\n//# sourceMappingURL=MeterBase.js.map","import * as tslib_1 from \"tslib\";\nimport { Gain } from \"../../core/context/Gain\";\nimport { ToneAudioNode } from \"../../core/context/ToneAudioNode\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\n/**\n * Solo lets you isolate a specific audio stream. When an instance is set to `solo=true`,\n * it will mute all other instances of Solo.\n * @example\n * import { Oscillator, Solo } from \"tone\";\n *\n * const soloA = new Solo().toDestination();\n * const oscA = new Oscillator(\"C4\", \"sawtooth\").connect(soloA);\n * const soloB = new Solo().toDestination();\n * const oscB = new Oscillator(\"E4\", \"square\").connect(soloB);\n *\n * soloA.solo = true;\n * // no audio will pass through soloB\n * @category Component\n */\nvar Solo = /** @class */ (function (_super) {\n    tslib_1.__extends(Solo, _super);\n    function Solo() {\n        var _this = _super.call(this, optionsFromArguments(Solo.getDefaults(), arguments, [\"solo\"])) || this;\n        _this.name = \"Solo\";\n        var options = optionsFromArguments(Solo.getDefaults(), arguments, [\"solo\"]);\n        _this.input = _this.output = new Gain({\n            context: _this.context,\n        });\n        if (!Solo._allSolos.has(_this.context)) {\n            Solo._allSolos.set(_this.context, new Set());\n        }\n        Solo._allSolos.get(_this.context).add(_this);\n        // set initially\n        _this.solo = options.solo;\n        return _this;\n    }\n    Solo.getDefaults = function () {\n        return Object.assign(ToneAudioNode.getDefaults(), {\n            solo: false,\n        });\n    };\n    Object.defineProperty(Solo.prototype, \"solo\", {\n        /**\n         * Isolates this instance and mutes all other instances of Solo.\n         * Only one instance can be soloed at a time. A soloed\n         * instance will report `solo=false` when another instance is soloed.\n         */\n        get: function () {\n            return this._isSoloed();\n        },\n        set: function (solo) {\n            if (solo) {\n                this._addSolo();\n            }\n            else {\n                this._removeSolo();\n            }\n            Solo._allSolos.get(this.context).forEach(function (instance) { return instance._updateSolo(); });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Solo.prototype, \"muted\", {\n        /**\n         * If the current instance is muted, i.e. another instance is soloed\n         */\n        get: function () {\n            return this.input.gain.value === 0;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Add this to the soloed array\n     */\n    Solo.prototype._addSolo = function () {\n        if (!Solo._soloed.has(this.context)) {\n            Solo._soloed.set(this.context, new Set());\n        }\n        Solo._soloed.get(this.context).add(this);\n    };\n    /**\n     * Remove this from the soloed array\n     */\n    Solo.prototype._removeSolo = function () {\n        if (Solo._soloed.has(this.context)) {\n            Solo._soloed.get(this.context).delete(this);\n        }\n    };\n    /**\n     * Is this on the soloed array\n     */\n    Solo.prototype._isSoloed = function () {\n        return Solo._soloed.has(this.context) && Solo._soloed.get(this.context).has(this);\n    };\n    /**\n     * Returns true if no one is soloed\n     */\n    Solo.prototype._noSolos = function () {\n        // either does not have any soloed added\n        return !Solo._soloed.has(this.context) ||\n            // or has a solo set but doesn't include any items\n            (Solo._soloed.has(this.context) && Solo._soloed.get(this.context).size === 0);\n    };\n    /**\n     * Solo the current instance and unsolo all other instances.\n     */\n    Solo.prototype._updateSolo = function () {\n        if (this._isSoloed()) {\n            this.input.gain.value = 1;\n        }\n        else if (this._noSolos()) {\n            // no one is soloed\n            this.input.gain.value = 1;\n        }\n        else {\n            this.input.gain.value = 0;\n        }\n    };\n    Solo.prototype.dispose = function () {\n        _super.prototype.dispose.call(this);\n        Solo._allSolos.get(this.context).delete(this);\n        this._removeSolo();\n        return this;\n    };\n    /**\n     * Hold all of the solo'ed tracks belonging to a specific context\n     */\n    Solo._allSolos = new Map();\n    /**\n     * Hold the currently solo'ed instance(s)\n     */\n    Solo._soloed = new Map();\n    return Solo;\n}(ToneAudioNode));\nexport { Solo };\n//# sourceMappingURL=Solo.js.map","import * as tslib_1 from \"tslib\";\nimport { gainToDb } from \"../../core/type/Conversions\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { MeterBase } from \"./MeterBase\";\nimport { warn } from \"../../core/util/Debug\";\nimport { Analyser } from \"./Analyser\";\n/**\n * Meter gets the [RMS](https://en.wikipedia.org/wiki/Root_mean_square)\n * of an input signal. It can also get the raw value of the input signal.\n *\n * @example\n * import { Meter, UserMedia } from \"tone\";\n * const meter = new Meter();\n * const mic = new UserMedia();\n * mic.open();\n * // connect mic to the meter\n * mic.connect(meter);\n * // the current level of the mic\n * const level = meter.getValue();\n * @category Component\n */\nvar Meter = /** @class */ (function (_super) {\n    tslib_1.__extends(Meter, _super);\n    function Meter() {\n        var _this = _super.call(this, optionsFromArguments(Meter.getDefaults(), arguments, [\"smoothing\"])) || this;\n        _this.name = \"Meter\";\n        /**\n         * The previous frame's value\n         */\n        _this._rms = 0;\n        var options = optionsFromArguments(Meter.getDefaults(), arguments, [\"smoothing\"]);\n        _this.input = _this.output = _this._analyser = new Analyser({\n            context: _this.context,\n            size: 256,\n            type: \"waveform\",\n            channels: options.channels,\n        });\n        _this.smoothing = options.smoothing,\n            _this.normalRange = options.normalRange;\n        return _this;\n    }\n    Meter.getDefaults = function () {\n        return Object.assign(MeterBase.getDefaults(), {\n            smoothing: 0.8,\n            normalRange: false,\n            channels: 1,\n        });\n    };\n    /**\n     * Use [[getValue]] instead. For the previous getValue behavior, use DCMeter.\n     * @deprecated\n     */\n    Meter.prototype.getLevel = function () {\n        warn(\"'getLevel' has been changed to 'getValue'\");\n        return this.getValue();\n    };\n    /**\n     * Get the current value of the incoming signal.\n     * Output is in decibels when [[normalRange]] is `false`.\n     * If [[channels]] = 1, then the output is a single number\n     * representing the value of the input signal. When [[channels]] > 1,\n     * then each channel is returned as a value in a number array.\n     */\n    Meter.prototype.getValue = function () {\n        var _this = this;\n        var aValues = this._analyser.getValue();\n        var channelValues = this.channels === 1 ? [aValues] : aValues;\n        var vals = channelValues.map(function (values) {\n            var totalSquared = values.reduce(function (total, current) { return total + current * current; }, 0);\n            var rms = Math.sqrt(totalSquared / values.length);\n            // the rms can only fall at the rate of the smoothing\n            // but can jump up instantly\n            _this._rms = Math.max(rms, _this._rms * _this.smoothing);\n            return _this.normalRange ? _this._rms : gainToDb(_this._rms);\n        });\n        if (this.channels === 1) {\n            return vals[0];\n        }\n        else {\n            return vals;\n        }\n    };\n    Object.defineProperty(Meter.prototype, \"channels\", {\n        /**\n         * The number of channels of analysis.\n         */\n        get: function () {\n            return this._analyser.channels;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Meter.prototype.dispose = function () {\n        _super.prototype.dispose.call(this);\n        this._analyser.dispose();\n        return this;\n    };\n    return Meter;\n}(MeterBase));\nexport { Meter };\n//# sourceMappingURL=Meter.js.map","import * as tslib_1 from \"tslib\";\nimport { ToneAudioNode } from \"../../core/context/ToneAudioNode\";\nimport { dbToGain } from \"../../core/type/Conversions\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { MeterBase } from \"./MeterBase\";\n/**\n * Get the current frequency data of the connected audio source using a fast Fourier transform.\n * @category Component\n */\nvar FFT = /** @class */ (function (_super) {\n    tslib_1.__extends(FFT, _super);\n    function FFT() {\n        var _this = _super.call(this, optionsFromArguments(FFT.getDefaults(), arguments, [\"size\"])) || this;\n        _this.name = \"FFT\";\n        var options = optionsFromArguments(FFT.getDefaults(), arguments, [\"size\"]);\n        _this.normalRange = options.normalRange;\n        _this._analyser.type = \"fft\";\n        _this.size = options.size;\n        return _this;\n    }\n    FFT.getDefaults = function () {\n        return Object.assign(ToneAudioNode.getDefaults(), {\n            normalRange: false,\n            size: 1024,\n            smoothing: 0.8,\n        });\n    };\n    /**\n     * Gets the current frequency data from the connected audio source.\n     * Returns the frequency data of length [[size]] as a Float32Array of decibel values.\n     */\n    FFT.prototype.getValue = function () {\n        var _this = this;\n        var values = this._analyser.getValue();\n        return values.map(function (v) { return _this.normalRange ? dbToGain(v) : v; });\n    };\n    Object.defineProperty(FFT.prototype, \"size\", {\n        /**\n         * The size of analysis. This must be a power of two in the range 16 to 16384.\n         * Determines the size of the array returned by [[getValue]] (i.e. the number of\n         * frequency bins). Large FFT sizes may be costly to compute.\n         */\n        get: function () {\n            return this._analyser.size;\n        },\n        set: function (size) {\n            this._analyser.size = size;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FFT.prototype, \"smoothing\", {\n        /**\n         * 0 represents no time averaging with the last analysis frame.\n         */\n        get: function () {\n            return this._analyser.smoothing;\n        },\n        set: function (val) {\n            this._analyser.smoothing = val;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return FFT;\n}(MeterBase));\nexport { FFT };\n//# sourceMappingURL=FFT.js.map","import * as tslib_1 from \"tslib\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { MeterBase } from \"./MeterBase\";\n/**\n * DCMeter gets the raw value of the input signal at the current time.\n *\n * @example\n * import { DCMeter, UserMedia } from \"tone\";\n * const meter = new DCMeter();\n * const mic = new UserMedia();\n * mic.open();\n * // connect mic to the meter\n * mic.connect(meter);\n * // the current level of the mic\n * const level = meter.getValue();\n * @category Component\n */\nvar DCMeter = /** @class */ (function (_super) {\n    tslib_1.__extends(DCMeter, _super);\n    function DCMeter() {\n        var _this = _super.call(this, optionsFromArguments(DCMeter.getDefaults(), arguments)) || this;\n        _this.name = \"DCMeter\";\n        _this._analyser.type = \"waveform\";\n        _this._analyser.size = 256;\n        return _this;\n    }\n    /**\n     * Get the signal value of the incoming signal\n     */\n    DCMeter.prototype.getValue = function () {\n        var value = this._analyser.getValue();\n        return value[0];\n    };\n    return DCMeter;\n}(MeterBase));\nexport { DCMeter };\n//# sourceMappingURL=DCMeter.js.map","import * as tslib_1 from \"tslib\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { MeterBase } from \"./MeterBase\";\n/**\n * Get the current waveform data of the connected audio source.\n * @category Component\n */\nvar Waveform = /** @class */ (function (_super) {\n    tslib_1.__extends(Waveform, _super);\n    function Waveform() {\n        var _this = _super.call(this, optionsFromArguments(Waveform.getDefaults(), arguments, [\"size\"])) || this;\n        _this.name = \"Waveform\";\n        var options = optionsFromArguments(Waveform.getDefaults(), arguments, [\"size\"]);\n        _this._analyser.type = \"waveform\";\n        _this.size = options.size;\n        return _this;\n    }\n    Waveform.getDefaults = function () {\n        return Object.assign(MeterBase.getDefaults(), {\n            size: 1024,\n        });\n    };\n    /**\n     * Return the waveform for the current time as a Float32Array where each value in the array\n     * represents a sample in the waveform.\n     */\n    Waveform.prototype.getValue = function () {\n        return this._analyser.getValue();\n    };\n    Object.defineProperty(Waveform.prototype, \"size\", {\n        /**\n         * The size of analysis. This must be a power of two in the range 16 to 16384.\n         * Determines the size of the array returned by [[getValue]].\n         */\n        get: function () {\n            return this._analyser.size;\n        },\n        set: function (size) {\n            this._analyser.size = size;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return Waveform;\n}(MeterBase));\nexport { Waveform };\n//# sourceMappingURL=Waveform.js.map","import * as tslib_1 from \"tslib\";\nimport { readOnly } from \"../../core/util/Interface\";\nimport { ToneAudioNode } from \"../../core/context/ToneAudioNode\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { Panner } from \"./Panner\";\nimport { Volume } from \"./Volume\";\n/**\n * PanVol is a Tone.Panner and Tone.Volume in one.\n * @example\n * import { Oscillator, PanVol } from \"tone\";\n * // pan the incoming signal left and drop the volume\n * const panVol = new PanVol(-0.25, -12).toDestination();\n * const osc = new Oscillator().connect(panVol).start();\n * @category Component\n */\nvar PanVol = /** @class */ (function (_super) {\n    tslib_1.__extends(PanVol, _super);\n    function PanVol() {\n        var _this = _super.call(this, optionsFromArguments(PanVol.getDefaults(), arguments, [\"pan\", \"volume\"])) || this;\n        _this.name = \"PanVol\";\n        var options = optionsFromArguments(PanVol.getDefaults(), arguments, [\"pan\", \"volume\"]);\n        _this._panner = _this.input = new Panner({\n            context: _this.context,\n            pan: options.pan,\n        });\n        _this.pan = _this._panner.pan;\n        _this._volume = _this.output = new Volume({\n            context: _this.context,\n            volume: options.volume,\n        });\n        _this.volume = _this._volume.volume;\n        // connections\n        _this._panner.connect(_this._volume);\n        _this.mute = options.mute;\n        readOnly(_this, [\"pan\", \"volume\"]);\n        return _this;\n    }\n    PanVol.getDefaults = function () {\n        return Object.assign(ToneAudioNode.getDefaults(), {\n            mute: false,\n            pan: 0,\n            volume: 0,\n        });\n    };\n    Object.defineProperty(PanVol.prototype, \"mute\", {\n        /**\n         * Mute/unmute the volume\n         */\n        get: function () {\n            return this._volume.mute;\n        },\n        set: function (mute) {\n            this._volume.mute = mute;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PanVol.prototype.dispose = function () {\n        _super.prototype.dispose.call(this);\n        this._panner.dispose();\n        this.pan.dispose();\n        this._volume.dispose();\n        this.volume.dispose();\n        return this;\n    };\n    return PanVol;\n}(ToneAudioNode));\nexport { PanVol };\n//# sourceMappingURL=PanVol.js.map","import * as tslib_1 from \"tslib\";\nimport { Gain } from \"../../core/context/Gain\";\nimport { ToneAudioNode } from \"../../core/context/ToneAudioNode\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { readOnly, writable } from \"../../core/util/Interface\";\nimport { Signal } from \"../../signal/Signal\";\nimport { Filter } from \"../filter/Filter\";\n/**\n * Split the incoming signal into three bands (low, mid, high)\n * with two crossover frequency controls.\n * ```\n *            +----------------------+\n *          +-> input < lowFrequency +------------------> low\n *          | +----------------------+\n *          |\n *          | +--------------------------------------+\n * input ---+-> lowFrequency < input < highFrequency +--> mid\n *          | +--------------------------------------+\n *          |\n *          | +-----------------------+\n *          +-> highFrequency < input +-----------------> high\n *            +-----------------------+\n * ```\n * @category Component\n */\nvar MultibandSplit = /** @class */ (function (_super) {\n    tslib_1.__extends(MultibandSplit, _super);\n    function MultibandSplit() {\n        var _this = _super.call(this, optionsFromArguments(MultibandSplit.getDefaults(), arguments, [\"lowFrequency\", \"highFrequency\"])) || this;\n        _this.name = \"MultibandSplit\";\n        /**\n         * the input\n         */\n        _this.input = new Gain({ context: _this.context });\n        /**\n         * no output node, use either low, mid or high outputs\n         */\n        _this.output = undefined;\n        /**\n         * The low band.\n         */\n        _this.low = new Filter({\n            context: _this.context,\n            frequency: 0,\n            type: \"lowpass\",\n        });\n        /**\n         * the lower filter of the mid band\n         */\n        _this._lowMidFilter = new Filter({\n            context: _this.context,\n            frequency: 0,\n            type: \"highpass\",\n        });\n        /**\n         * The mid band output.\n         */\n        _this.mid = new Filter({\n            context: _this.context,\n            frequency: 0,\n            type: \"lowpass\",\n        });\n        /**\n         * The high band output.\n         */\n        _this.high = new Filter({\n            context: _this.context,\n            frequency: 0,\n            type: \"highpass\",\n        });\n        _this._internalChannels = [_this.low, _this.mid, _this.high];\n        var options = optionsFromArguments(MultibandSplit.getDefaults(), arguments, [\"lowFrequency\", \"highFrequency\"]);\n        _this.lowFrequency = new Signal({\n            context: _this.context,\n            units: \"frequency\",\n            value: options.lowFrequency,\n        });\n        _this.highFrequency = new Signal({\n            context: _this.context,\n            units: \"frequency\",\n            value: options.highFrequency,\n        });\n        _this.Q = new Signal({\n            context: _this.context,\n            units: \"positive\",\n            value: options.Q,\n        });\n        _this.input.fan(_this.low, _this.high);\n        _this.input.chain(_this._lowMidFilter, _this.mid);\n        // the frequency control signal\n        _this.lowFrequency.fan(_this.low.frequency, _this._lowMidFilter.frequency);\n        _this.highFrequency.fan(_this.mid.frequency, _this.high.frequency);\n        // the Q value\n        _this.Q.connect(_this.low.Q);\n        _this.Q.connect(_this._lowMidFilter.Q);\n        _this.Q.connect(_this.mid.Q);\n        _this.Q.connect(_this.high.Q);\n        readOnly(_this, [\"high\", \"mid\", \"low\", \"highFrequency\", \"lowFrequency\"]);\n        return _this;\n    }\n    MultibandSplit.getDefaults = function () {\n        return Object.assign(ToneAudioNode.getDefaults(), {\n            Q: 1,\n            highFrequency: 2500,\n            lowFrequency: 400,\n        });\n    };\n    /**\n     * Clean up.\n     */\n    MultibandSplit.prototype.dispose = function () {\n        _super.prototype.dispose.call(this);\n        writable(this, [\"high\", \"mid\", \"low\", \"highFrequency\", \"lowFrequency\"]);\n        this.low.dispose();\n        this._lowMidFilter.dispose();\n        this.mid.dispose();\n        this.high.dispose();\n        this.lowFrequency.dispose();\n        this.highFrequency.dispose();\n        this.Q.dispose();\n        return this;\n    };\n    return MultibandSplit;\n}(ToneAudioNode));\nexport { MultibandSplit };\n//# sourceMappingURL=MultibandSplit.js.map","import * as tslib_1 from \"tslib\";\nimport { ToneAudioNode } from \"../../core/context/ToneAudioNode\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { Solo } from \"./Solo\";\nimport { PanVol } from \"./PanVol\";\nimport { readOnly } from \"../../core/util/Interface\";\nimport { Gain } from \"../../core/context/Gain\";\n/**\n * Channel provides a channel strip interface with volume, pan, solo and mute controls.\n * See [[PanVol]] and [[Solo]]\n * @example\n * import { Channel } from \"tone\";\n * // pan the incoming signal left and drop the volume 12db\n * const channel = new Channel(-0.25, -12);\n * @category Component\n */\nvar Channel = /** @class */ (function (_super) {\n    tslib_1.__extends(Channel, _super);\n    function Channel() {\n        var _this = _super.call(this, optionsFromArguments(Channel.getDefaults(), arguments, [\"volume\", \"pan\"])) || this;\n        _this.name = \"Channel\";\n        var options = optionsFromArguments(Channel.getDefaults(), arguments, [\"volume\", \"pan\"]);\n        _this._solo = _this.input = new Solo({\n            solo: options.solo,\n            context: _this.context,\n        });\n        _this._panVol = _this.output = new PanVol({\n            context: _this.context,\n            pan: options.pan,\n            volume: options.volume,\n            mute: options.mute,\n        });\n        _this.pan = _this._panVol.pan;\n        _this.volume = _this._panVol.volume;\n        _this._solo.connect(_this._panVol);\n        readOnly(_this, [\"pan\", \"volume\"]);\n        return _this;\n    }\n    Channel.getDefaults = function () {\n        return Object.assign(ToneAudioNode.getDefaults(), {\n            pan: 0,\n            volume: 0,\n            mute: false,\n            solo: false\n        });\n    };\n    Object.defineProperty(Channel.prototype, \"solo\", {\n        /**\n         * Solo/unsolo the channel. Soloing is only relative to other [[Channels]] and [[Solo]] instances\n         */\n        get: function () {\n            return this._solo.solo;\n        },\n        set: function (solo) {\n            this._solo.solo = solo;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Channel.prototype, \"muted\", {\n        /**\n         * If the current instance is muted, i.e. another instance is soloed,\n         * or the channel is muted\n         */\n        get: function () {\n            return this._solo.muted || this.mute;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Channel.prototype, \"mute\", {\n        /**\n         * Mute/unmute the volume\n         */\n        get: function () {\n            return this._panVol.mute;\n        },\n        set: function (mute) {\n            this._panVol.mute = mute;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Get the gain node belonging to the bus name. Create it if\n     * it doesn't exist\n     * @param name The bus name\n     */\n    Channel.prototype._getBus = function (name) {\n        if (!Channel.buses.has(name)) {\n            Channel.buses.set(name, new Gain({ context: this.context }));\n        }\n        return Channel.buses.get(name);\n    };\n    /**\n     * Send audio to another channel using a string. `send` is a lot like\n     * [[connect]], except it uses a string instead of an object. This can\n     * be useful in large applications to decouple sections since [[send]]\n     * and [[receive]] can be invoked separately in order to connect an object\n     * @param name The channel name to send the audio\n     * @param volume The amount of the signal to send.\n     * \tDefaults to 0db, i.e. send the entire signal\n     * @returns Returns the gain node of this connection.\n     */\n    Channel.prototype.send = function (name, volume) {\n        if (volume === void 0) { volume = 0; }\n        var bus = this._getBus(name);\n        var sendKnob = new Gain({\n            context: this.context,\n            units: \"decibels\",\n            gain: volume,\n        });\n        this.connect(sendKnob);\n        sendKnob.connect(bus);\n        return sendKnob;\n    };\n    /**\n     * Receive audio from a channel which was connected with [[send]].\n     * @param name The channel name to receive audio from.\n     */\n    Channel.prototype.receive = function (name) {\n        var bus = this._getBus(name);\n        bus.connect(this);\n        return this;\n    };\n    Channel.prototype.dispose = function () {\n        _super.prototype.dispose.call(this);\n        this._panVol.dispose();\n        this.pan.dispose();\n        this.volume.dispose();\n        this._solo.dispose();\n        return this;\n    };\n    /**\n     * Store the send/receive channels by name.\n     */\n    Channel.buses = new Map();\n    return Channel;\n}(ToneAudioNode));\nexport { Channel };\n//# sourceMappingURL=Channel.js.map","import * as tslib_1 from \"tslib\";\nimport { ToneAudioNode } from \"./ToneAudioNode\";\nimport { Param } from \"./Param\";\nimport { onContextClose, onContextInit } from \"./ContextInitialization\";\n/**\n * Tone.Listener is a thin wrapper around the AudioListener. Listener combined\n * with [[Panner3D]] makes up the Web Audio API's 3D panning system. Panner3D allows you\n * to place sounds in 3D and Listener allows you to navigate the 3D sound environment from\n * a first-person perspective. There is only one listener per audio context.\n */\nvar Listener = /** @class */ (function (_super) {\n    tslib_1.__extends(Listener, _super);\n    function Listener() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.name = \"Listener\";\n        _this.positionX = new Param({\n            context: _this.context,\n            param: _this.context.rawContext.listener.positionX,\n        });\n        _this.positionY = new Param({\n            context: _this.context,\n            param: _this.context.rawContext.listener.positionY,\n        });\n        _this.positionZ = new Param({\n            context: _this.context,\n            param: _this.context.rawContext.listener.positionZ,\n        });\n        _this.forwardX = new Param({\n            context: _this.context,\n            param: _this.context.rawContext.listener.forwardX,\n        });\n        _this.forwardY = new Param({\n            context: _this.context,\n            param: _this.context.rawContext.listener.forwardY,\n        });\n        _this.forwardZ = new Param({\n            context: _this.context,\n            param: _this.context.rawContext.listener.forwardZ,\n        });\n        _this.upX = new Param({\n            context: _this.context,\n            param: _this.context.rawContext.listener.upX,\n        });\n        _this.upY = new Param({\n            context: _this.context,\n            param: _this.context.rawContext.listener.upY,\n        });\n        _this.upZ = new Param({\n            context: _this.context,\n            param: _this.context.rawContext.listener.upZ,\n        });\n        return _this;\n    }\n    Listener.getDefaults = function () {\n        return Object.assign(ToneAudioNode.getDefaults(), {\n            positionX: 0,\n            positionY: 0,\n            positionZ: 0,\n            forwardX: 0,\n            forwardY: 0,\n            forwardZ: -1,\n            upX: 0,\n            upY: 1,\n            upZ: 0,\n        });\n    };\n    Listener.prototype.dispose = function () {\n        _super.prototype.dispose.call(this);\n        this.positionX.dispose();\n        this.positionY.dispose();\n        this.positionZ.dispose();\n        this.forwardX.dispose();\n        this.forwardY.dispose();\n        this.forwardZ.dispose();\n        this.upX.dispose();\n        this.upY.dispose();\n        this.upZ.dispose();\n        return this;\n    };\n    return Listener;\n}(ToneAudioNode));\nexport { Listener };\n//-------------------------------------\n// \tINITIALIZATION\n//-------------------------------------\nonContextInit(function (context) {\n    context.listener = new Listener({ context: context });\n});\nonContextClose(function (context) {\n    context.listener.dispose();\n});\n//# sourceMappingURL=Listener.js.map","import * as tslib_1 from \"tslib\";\nimport { Param } from \"../../core/context/Param\";\nimport { ToneAudioNode } from \"../../core/context/ToneAudioNode\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport \"../../core/context/Listener\";\n/**\n * A spatialized panner node which supports equalpower or HRTF panning.\n * @category Component\n */\nvar Panner3D = /** @class */ (function (_super) {\n    tslib_1.__extends(Panner3D, _super);\n    function Panner3D() {\n        var _this = _super.call(this, optionsFromArguments(Panner3D.getDefaults(), arguments, [\"positionX\", \"positionY\", \"positionZ\"])) || this;\n        _this.name = \"Panner3D\";\n        var options = optionsFromArguments(Panner3D.getDefaults(), arguments, [\"positionX\", \"positionY\", \"positionZ\"]);\n        _this._panner = _this.input = _this.output = _this.context.createPanner();\n        // set some values\n        _this.panningModel = options.panningModel;\n        _this.maxDistance = options.maxDistance;\n        _this.distanceModel = options.distanceModel;\n        _this.coneOuterGain = options.coneOuterGain;\n        _this.coneOuterAngle = options.coneOuterAngle;\n        _this.coneInnerAngle = options.coneInnerAngle;\n        _this.refDistance = options.refDistance;\n        _this.rolloffFactor = options.rolloffFactor;\n        _this.positionX = new Param({\n            context: _this.context,\n            param: _this._panner.positionX,\n            value: options.positionX,\n        });\n        _this.positionY = new Param({\n            context: _this.context,\n            param: _this._panner.positionY,\n            value: options.positionY,\n        });\n        _this.positionZ = new Param({\n            context: _this.context,\n            param: _this._panner.positionZ,\n            value: options.positionZ,\n        });\n        _this.orientationX = new Param({\n            context: _this.context,\n            param: _this._panner.orientationX,\n            value: options.orientationX,\n        });\n        _this.orientationY = new Param({\n            context: _this.context,\n            param: _this._panner.orientationY,\n            value: options.orientationY,\n        });\n        _this.orientationZ = new Param({\n            context: _this.context,\n            param: _this._panner.orientationZ,\n            value: options.orientationZ,\n        });\n        return _this;\n    }\n    Panner3D.getDefaults = function () {\n        return Object.assign(ToneAudioNode.getDefaults(), {\n            coneInnerAngle: 360,\n            coneOuterAngle: 360,\n            coneOuterGain: 0,\n            distanceModel: \"inverse\",\n            maxDistance: 10000,\n            orientationX: 0,\n            orientationY: 0,\n            orientationZ: 0,\n            panningModel: \"equalpower\",\n            positionX: 0,\n            positionY: 0,\n            positionZ: 0,\n            refDistance: 1,\n            rolloffFactor: 1,\n        });\n    };\n    /**\n     * Sets the position of the source in 3d space.\n     */\n    Panner3D.prototype.setPosition = function (x, y, z) {\n        this.positionX.value = x;\n        this.positionY.value = y;\n        this.positionZ.value = z;\n        return this;\n    };\n    /**\n     * Sets the orientation of the source in 3d space.\n     */\n    Panner3D.prototype.setOrientation = function (x, y, z) {\n        this.orientationX.value = x;\n        this.orientationY.value = y;\n        this.orientationZ.value = z;\n        return this;\n    };\n    Object.defineProperty(Panner3D.prototype, \"panningModel\", {\n        /**\n         * The panning model. Either \"equalpower\" or \"HRTF\".\n         */\n        get: function () {\n            return this._panner.panningModel;\n        },\n        set: function (val) {\n            this._panner.panningModel = val;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Panner3D.prototype, \"refDistance\", {\n        /**\n         * A reference distance for reducing volume as source move further from the listener\n         */\n        get: function () {\n            return this._panner.refDistance;\n        },\n        set: function (val) {\n            this._panner.refDistance = val;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Panner3D.prototype, \"rolloffFactor\", {\n        /**\n         * Describes how quickly the volume is reduced as source moves away from listener.\n         */\n        get: function () {\n            return this._panner.rolloffFactor;\n        },\n        set: function (val) {\n            this._panner.rolloffFactor = val;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Panner3D.prototype, \"distanceModel\", {\n        /**\n         * The distance model used by,  \"linear\", \"inverse\", or \"exponential\".\n         */\n        get: function () {\n            return this._panner.distanceModel;\n        },\n        set: function (val) {\n            this._panner.distanceModel = val;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Panner3D.prototype, \"coneInnerAngle\", {\n        /**\n         * The angle, in degrees, inside of which there will be no volume reduction\n         */\n        get: function () {\n            return this._panner.coneInnerAngle;\n        },\n        set: function (val) {\n            this._panner.coneInnerAngle = val;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Panner3D.prototype, \"coneOuterAngle\", {\n        /**\n         * The angle, in degrees, outside of which the volume will be reduced\n         * to a constant value of coneOuterGain\n         */\n        get: function () {\n            return this._panner.coneOuterAngle;\n        },\n        set: function (val) {\n            this._panner.coneOuterAngle = val;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Panner3D.prototype, \"coneOuterGain\", {\n        /**\n         * The gain outside of the coneOuterAngle\n         */\n        get: function () {\n            return this._panner.coneOuterGain;\n        },\n        set: function (val) {\n            this._panner.coneOuterGain = val;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Panner3D.prototype, \"maxDistance\", {\n        /**\n         * The maximum distance between source and listener,\n         * after which the volume will not be reduced any further.\n         */\n        get: function () {\n            return this._panner.maxDistance;\n        },\n        set: function (val) {\n            this._panner.maxDistance = val;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Panner3D.prototype.dispose = function () {\n        _super.prototype.dispose.call(this);\n        this._panner.disconnect();\n        this.orientationX.dispose();\n        this.orientationY.dispose();\n        this.orientationZ.dispose();\n        this.positionX.dispose();\n        this.positionY.dispose();\n        this.positionZ.dispose();\n        return this;\n    };\n    return Panner3D;\n}(ToneAudioNode));\nexport { Panner3D };\n//# sourceMappingURL=Panner3D.js.map","import * as tslib_1 from \"tslib\";\nimport { Param } from \"../../core/context/Param\";\nimport { ToneAudioNode } from \"../../core/context/ToneAudioNode\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { readOnly } from \"../../core/util/Interface\";\n/**\n * Compressor is a thin wrapper around the Web Audio\n * [DynamicsCompressorNode](http://webaudio.github.io/web-audio-api/#the-dynamicscompressornode-interface).\n * Compression reduces the volume of loud sounds or amplifies quiet sounds\n * by narrowing or \"compressing\" an audio signal's dynamic range.\n * Read more on [Wikipedia](https://en.wikipedia.org/wiki/Dynamic_range_compression).\n * @example\n * import { Compressor } from \"tone\";\n * const comp = new Compressor(-30, 3);\n * @category Component\n */\nvar Compressor = /** @class */ (function (_super) {\n    tslib_1.__extends(Compressor, _super);\n    function Compressor() {\n        var _this = _super.call(this, optionsFromArguments(Compressor.getDefaults(), arguments, [\"threshold\", \"ratio\"])) || this;\n        _this.name = \"Compressor\";\n        /**\n         * the compressor node\n         */\n        _this._compressor = _this.context.createDynamicsCompressor();\n        _this.input = _this._compressor;\n        _this.output = _this._compressor;\n        var options = optionsFromArguments(Compressor.getDefaults(), arguments, [\"threshold\", \"ratio\"]);\n        _this.threshold = new Param({\n            minValue: _this._compressor.threshold.minValue,\n            maxValue: _this._compressor.threshold.maxValue,\n            context: _this.context,\n            convert: false,\n            param: _this._compressor.threshold,\n            units: \"decibels\",\n            value: options.threshold,\n        });\n        _this.attack = new Param({\n            minValue: _this._compressor.attack.minValue,\n            maxValue: _this._compressor.attack.maxValue,\n            context: _this.context,\n            param: _this._compressor.attack,\n            units: \"time\",\n            value: options.attack,\n        });\n        _this.release = new Param({\n            minValue: _this._compressor.release.minValue,\n            maxValue: _this._compressor.release.maxValue,\n            context: _this.context,\n            param: _this._compressor.release,\n            units: \"time\",\n            value: options.release,\n        });\n        _this.knee = new Param({\n            minValue: _this._compressor.knee.minValue,\n            maxValue: _this._compressor.knee.maxValue,\n            context: _this.context,\n            convert: false,\n            param: _this._compressor.knee,\n            units: \"decibels\",\n            value: options.knee,\n        });\n        _this.ratio = new Param({\n            minValue: _this._compressor.ratio.minValue,\n            maxValue: _this._compressor.ratio.maxValue,\n            context: _this.context,\n            convert: false,\n            param: _this._compressor.ratio,\n            units: \"positive\",\n            value: options.ratio,\n        });\n        // set the defaults\n        readOnly(_this, [\"knee\", \"release\", \"attack\", \"ratio\", \"threshold\"]);\n        return _this;\n    }\n    Compressor.getDefaults = function () {\n        return Object.assign(ToneAudioNode.getDefaults(), {\n            attack: 0.003,\n            knee: 30,\n            ratio: 12,\n            release: 0.25,\n            threshold: -24,\n        });\n    };\n    Object.defineProperty(Compressor.prototype, \"reduction\", {\n        /**\n         * A read-only decibel value for metering purposes, representing the current amount of gain\n         * reduction that the compressor is applying to the signal. If fed no signal the value will be 0 (no gain reduction).\n         */\n        get: function () {\n            return this._compressor.reduction;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Compressor.prototype.dispose = function () {\n        _super.prototype.dispose.call(this);\n        this._compressor.disconnect();\n        this.attack.dispose();\n        this.release.dispose();\n        this.threshold.dispose();\n        this.ratio.dispose();\n        this.knee.dispose();\n        return this;\n    };\n    return Compressor;\n}(ToneAudioNode));\nexport { Compressor };\n//# sourceMappingURL=Compressor.js.map","import * as tslib_1 from \"tslib\";\nimport { ToneAudioNode } from \"../../core/context/ToneAudioNode\";\nimport { GreaterThan } from \"../../signal/GreaterThan\";\nimport { Gain } from \"../../core/context/Gain\";\nimport { Follower } from \"../analysis/Follower\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { dbToGain, gainToDb } from \"../../core/type/Conversions\";\n/**\n * Gate only passes a signal through when the incoming\n * signal exceeds a specified threshold. It uses [[Follower]] to follow the ampltiude\n * of the incoming signal and compares it to the [[threshold]] value using [[GreaterThan]].\n *\n * @example\n * import { Gate, UserMedia } from \"tone\";\n * const gate = new Gate(-30, 0.2).toDestination();\n * const mic = new UserMedia().connect(gate);\n * // the gate will only pass through the incoming\n * // signal when it's louder than -30db\n */\nvar Gate = /** @class */ (function (_super) {\n    tslib_1.__extends(Gate, _super);\n    function Gate() {\n        var _this = _super.call(this, Object.assign(optionsFromArguments(Gate.getDefaults(), arguments, [\"threshold\", \"smoothing\"]))) || this;\n        _this.name = \"Gate\";\n        var options = optionsFromArguments(Gate.getDefaults(), arguments, [\"threshold\", \"smoothing\"]);\n        _this._follower = new Follower({\n            context: _this.context,\n            smoothing: options.smoothing,\n        });\n        _this._gt = new GreaterThan({\n            context: _this.context,\n            value: dbToGain(options.threshold),\n        });\n        _this.input = new Gain({ context: _this.context });\n        _this._gate = _this.output = new Gain({ context: _this.context });\n        // connections\n        _this.input.connect(_this._gate);\n        // the control signal\n        _this.input.chain(_this._follower, _this._gt, _this._gate.gain);\n        return _this;\n    }\n    Gate.getDefaults = function () {\n        return Object.assign(ToneAudioNode.getDefaults(), {\n            smoothing: 0.1,\n            threshold: -40\n        });\n    };\n    Object.defineProperty(Gate.prototype, \"threshold\", {\n        /**\n         * The threshold of the gate in decibels\n         */\n        get: function () {\n            return gainToDb(this._gt.value);\n        },\n        set: function (thresh) {\n            this._gt.value = dbToGain(thresh);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Gate.prototype, \"smoothing\", {\n        /**\n         * The attack/decay speed of the gate. See [[Follower.smoothing]]\n         */\n        get: function () {\n            return this._follower.smoothing;\n        },\n        set: function (smoothingTime) {\n            this._follower.smoothing = smoothingTime;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Gate.prototype.dispose = function () {\n        _super.prototype.dispose.call(this);\n        this.input.dispose();\n        this._follower.dispose();\n        this._gt.dispose();\n        this._gate.dispose();\n        return this;\n    };\n    return Gate;\n}(ToneAudioNode));\nexport { Gate };\n//# sourceMappingURL=Gate.js.map","import * as tslib_1 from \"tslib\";\nimport { ToneAudioNode } from \"../../core/context/ToneAudioNode\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { Compressor } from \"./Compressor\";\nimport { readOnly } from \"../../core/util/Interface\";\n;\n/**\n * Limiter will limit the loudness of an incoming signal.\n * It is composed of a [[Compressor]] with a fast attack\n * and release and max ratio. Limiters are commonly used to safeguard against\n * signal clipping. Unlike a compressor, limiters do not provide\n * smooth gain reduction and almost completely prevent\n * additional gain above the threshold.\n *\n * @example\n * import { Limiter, Oscillator } from \"tone\";\n * const limiter = new Limiter(-20).toDestination();\n * const oscillator = new Oscillator().connect(limiter);\n * oscillator.start();\n */\nvar Limiter = /** @class */ (function (_super) {\n    tslib_1.__extends(Limiter, _super);\n    function Limiter() {\n        var _this = _super.call(this, Object.assign(optionsFromArguments(Limiter.getDefaults(), arguments, [\"threshold\"]))) || this;\n        _this.name = \"Limiter\";\n        var options = optionsFromArguments(Limiter.getDefaults(), arguments, [\"threshold\"]);\n        _this._compressor = _this.input = _this.output = new Compressor({\n            context: _this.context,\n            ratio: 20,\n            attack: 0,\n            release: 0,\n            threshold: options.threshold\n        });\n        _this.threshold = _this._compressor.threshold;\n        readOnly(_this, \"threshold\");\n        return _this;\n    }\n    Limiter.getDefaults = function () {\n        return Object.assign(ToneAudioNode.getDefaults(), {\n            threshold: -12\n        });\n    };\n    Object.defineProperty(Limiter.prototype, \"reduction\", {\n        /**\n         * A read-only decibel value for metering purposes, representing the current amount of gain\n         * reduction that the compressor is applying to the signal.\n         */\n        get: function () {\n            return this._compressor.reduction;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Limiter.prototype.dispose = function () {\n        _super.prototype.dispose.call(this);\n        this._compressor.dispose();\n        this.threshold.dispose();\n        return this;\n    };\n    return Limiter;\n}(ToneAudioNode));\nexport { Limiter };\n//# sourceMappingURL=Limiter.js.map","import * as tslib_1 from \"tslib\";\nimport { ToneAudioNode } from \"../../core/context/ToneAudioNode\";\nimport { Compressor } from \"./Compressor\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { MidSideSplit } from \"../channel/MidSideSplit\";\nimport { MidSideMerge } from \"../channel/MidSideMerge\";\nimport { readOnly } from \"../../core/util/Interface\";\n/**\n * MidSideCompressor applies two different compressors to the [[mid]]\n * and [[side]] signal components of the input. See [[MidSideSplit]] and [[MidSideMerge]].\n */\nvar MidSideCompressor = /** @class */ (function (_super) {\n    tslib_1.__extends(MidSideCompressor, _super);\n    function MidSideCompressor() {\n        var _this = _super.call(this, Object.assign(optionsFromArguments(MidSideCompressor.getDefaults(), arguments))) || this;\n        _this.name = \"MidSideCompressor\";\n        var options = optionsFromArguments(MidSideCompressor.getDefaults(), arguments);\n        _this._midSideSplit = _this.input = new MidSideSplit({ context: _this.context });\n        _this._midSideMerge = _this.output = new MidSideMerge({ context: _this.context });\n        _this.mid = new Compressor(Object.assign(options.mid, { context: _this.context }));\n        _this.side = new Compressor(Object.assign(options.side, { context: _this.context }));\n        _this._midSideSplit.mid.chain(_this.mid, _this._midSideMerge.mid);\n        _this._midSideSplit.side.chain(_this.side, _this._midSideMerge.side);\n        readOnly(_this, [\"mid\", \"side\"]);\n        return _this;\n    }\n    MidSideCompressor.getDefaults = function () {\n        return Object.assign(ToneAudioNode.getDefaults(), {\n            mid: {\n                ratio: 3,\n                threshold: -24,\n                release: 0.03,\n                attack: 0.02,\n                knee: 16\n            },\n            side: {\n                ratio: 6,\n                threshold: -30,\n                release: 0.25,\n                attack: 0.03,\n                knee: 10\n            }\n        });\n    };\n    MidSideCompressor.prototype.dispose = function () {\n        _super.prototype.dispose.call(this);\n        this.mid.dispose();\n        this.side.dispose();\n        this._midSideSplit.dispose();\n        this._midSideMerge.dispose();\n        return this;\n    };\n    return MidSideCompressor;\n}(ToneAudioNode));\nexport { MidSideCompressor };\n//# sourceMappingURL=MidSideCompressor.js.map","import * as tslib_1 from \"tslib\";\nimport { ToneAudioNode } from \"../../core/context/ToneAudioNode\";\nimport { Compressor } from \"./Compressor\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { readOnly } from \"../../core/util/Interface\";\nimport { MultibandSplit } from \"../channel/MultibandSplit\";\nimport { Gain } from \"../../core/context/Gain\";\n/**\n * A compressor with separate controls over low/mid/high dynamics. See [[Compressor]] and [[MultibandSplit]]\n *\n * @example\n * import { MultibandCompressor } from \"tone\";\n * const multiband = new MultibandCompressor({\n * \tlowFrequency: 200,\n * \thighFrequency: 1300,\n * \tlow: {\n * \t\tthreshold: -12\n * \t}\n * });\n */\nvar MultibandCompressor = /** @class */ (function (_super) {\n    tslib_1.__extends(MultibandCompressor, _super);\n    function MultibandCompressor() {\n        var _this = _super.call(this, Object.assign(optionsFromArguments(MultibandCompressor.getDefaults(), arguments))) || this;\n        _this.name = \"MultibandCompressor\";\n        var options = optionsFromArguments(MultibandCompressor.getDefaults(), arguments);\n        _this._splitter = _this.input = new MultibandSplit({\n            context: _this.context,\n            lowFrequency: options.lowFrequency,\n            highFrequency: options.highFrequency\n        });\n        _this.lowFrequency = _this._splitter.lowFrequency;\n        _this.highFrequency = _this._splitter.highFrequency;\n        _this.output = new Gain({ context: _this.context });\n        _this.low = new Compressor(Object.assign(options.low, { context: _this.context }));\n        _this.mid = new Compressor(Object.assign(options.mid, { context: _this.context }));\n        _this.high = new Compressor(Object.assign(options.high, { context: _this.context }));\n        // connect the compressor\n        _this._splitter.low.chain(_this.low, _this.output);\n        _this._splitter.mid.chain(_this.mid, _this.output);\n        _this._splitter.high.chain(_this.high, _this.output);\n        readOnly(_this, [\"high\", \"mid\", \"low\", \"highFrequency\", \"lowFrequency\"]);\n        return _this;\n    }\n    MultibandCompressor.getDefaults = function () {\n        return Object.assign(ToneAudioNode.getDefaults(), {\n            lowFrequency: 250,\n            highFrequency: 2000,\n            low: {\n                ratio: 6,\n                threshold: -30,\n                release: 0.25,\n                attack: 0.03,\n                knee: 10\n            },\n            mid: {\n                ratio: 3,\n                threshold: -24,\n                release: 0.03,\n                attack: 0.02,\n                knee: 16\n            },\n            high: {\n                ratio: 3,\n                threshold: -24,\n                release: 0.03,\n                attack: 0.02,\n                knee: 16\n            },\n        });\n    };\n    MultibandCompressor.prototype.dispose = function () {\n        _super.prototype.dispose.call(this);\n        this._splitter.dispose();\n        this.low.dispose();\n        this.mid.dispose();\n        this.high.dispose();\n        this.output.dispose();\n        return this;\n    };\n    return MultibandCompressor;\n}(ToneAudioNode));\nexport { MultibandCompressor };\n//# sourceMappingURL=MultibandCompressor.js.map","import * as tslib_1 from \"tslib\";\nimport { Gain } from \"../../core/context/Gain\";\nimport { ToneAudioNode } from \"../../core/context/ToneAudioNode\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { readOnly, writable } from \"../../core/util/Interface\";\nimport { MultibandSplit } from \"../channel/MultibandSplit\";\n/**\n * EQ3 provides 3 equalizer bins: Low/Mid/High.\n * @category Component\n */\nvar EQ3 = /** @class */ (function (_super) {\n    tslib_1.__extends(EQ3, _super);\n    function EQ3() {\n        var _this = _super.call(this, optionsFromArguments(EQ3.getDefaults(), arguments, [\"low\", \"mid\", \"high\"])) || this;\n        _this.name = \"EQ3\";\n        /**\n         * the output\n         */\n        _this.output = new Gain({ context: _this.context });\n        _this._internalChannels = [];\n        var options = optionsFromArguments(EQ3.getDefaults(), arguments, [\"low\", \"mid\", \"high\"]);\n        _this.input = _this._multibandSplit = new MultibandSplit({\n            context: _this.context,\n            highFrequency: options.highFrequency,\n            lowFrequency: options.lowFrequency,\n        });\n        _this._lowGain = new Gain({\n            context: _this.context,\n            gain: options.low,\n            units: \"decibels\",\n        });\n        _this._midGain = new Gain({\n            context: _this.context,\n            gain: options.mid,\n            units: \"decibels\",\n        });\n        _this._highGain = new Gain({\n            context: _this.context,\n            gain: options.high,\n            units: \"decibels\",\n        });\n        _this.low = _this._lowGain.gain;\n        _this.mid = _this._midGain.gain;\n        _this.high = _this._highGain.gain;\n        _this.Q = _this._multibandSplit.Q;\n        _this.lowFrequency = _this._multibandSplit.lowFrequency;\n        _this.highFrequency = _this._multibandSplit.highFrequency;\n        // the frequency bands\n        _this._multibandSplit.low.chain(_this._lowGain, _this.output);\n        _this._multibandSplit.mid.chain(_this._midGain, _this.output);\n        _this._multibandSplit.high.chain(_this._highGain, _this.output);\n        readOnly(_this, [\"low\", \"mid\", \"high\", \"lowFrequency\", \"highFrequency\"]);\n        _this._internalChannels = [_this._multibandSplit];\n        return _this;\n    }\n    EQ3.getDefaults = function () {\n        return Object.assign(ToneAudioNode.getDefaults(), {\n            high: 0,\n            highFrequency: 2500,\n            low: 0,\n            lowFrequency: 400,\n            mid: 0,\n        });\n    };\n    /**\n     * Clean up.\n     */\n    EQ3.prototype.dispose = function () {\n        _super.prototype.dispose.call(this);\n        writable(this, [\"low\", \"mid\", \"high\", \"lowFrequency\", \"highFrequency\"]);\n        this._multibandSplit.dispose();\n        this.lowFrequency.dispose();\n        this.highFrequency.dispose();\n        this._lowGain.dispose();\n        this._midGain.dispose();\n        this._highGain.dispose();\n        this.low.dispose();\n        this.mid.dispose();\n        this.high.dispose();\n        this.Q.dispose();\n        return this;\n    };\n    return EQ3;\n}(ToneAudioNode));\nexport { EQ3 };\n//# sourceMappingURL=EQ3.js.map","import * as tslib_1 from \"tslib\";\nimport { ToneAudioNode } from \"../../core/context/ToneAudioNode\";\nimport { ToneAudioBuffer } from \"../../core/context/ToneAudioBuffer\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { Gain } from \"../../core/context/Gain\";\nimport { noOp } from \"../../core/util/Interface\";\n/**\n * Convolver is a wrapper around the Native Web Audio\n * [ConvolverNode](http://webaudio.github.io/web-audio-api/#the-convolvernode-interface).\n * Convolution is useful for reverb and filter emulation. Read more about convolution reverb on\n * [Wikipedia](https://en.wikipedia.org/wiki/Convolution_reverb).\n *\n * @example\n * import { Convolver } from \"tone\";\n * // initializing the convolver with an impulse response\n * const convolver = new Convolver(\"./path/to/ir.wav\").toDestination();\n * @category Component\n */\nvar Convolver = /** @class */ (function (_super) {\n    tslib_1.__extends(Convolver, _super);\n    function Convolver() {\n        var _this = _super.call(this, optionsFromArguments(Convolver.getDefaults(), arguments, [\"url\", \"onload\"])) || this;\n        _this.name = \"Convolver\";\n        /**\n         * The native ConvolverNode\n         */\n        _this._convolver = _this.context.createConvolver();\n        var options = optionsFromArguments(Convolver.getDefaults(), arguments, [\"url\", \"onload\"]);\n        _this._buffer = new ToneAudioBuffer(options.url, function (buffer) {\n            _this.buffer = buffer;\n            options.onload();\n        });\n        _this.input = new Gain({ context: _this.context });\n        _this.output = new Gain({ context: _this.context });\n        // set if it's already loaded, set it immediately\n        if (_this._buffer.loaded) {\n            _this.buffer = _this._buffer;\n        }\n        // initially set normalization\n        _this.normalize = options.normalize;\n        // connect it up\n        _this.input.chain(_this._convolver, _this.output);\n        return _this;\n    }\n    Convolver.getDefaults = function () {\n        return Object.assign(ToneAudioNode.getDefaults(), {\n            normalize: true,\n            onload: noOp,\n        });\n    };\n    /**\n     * Load an impulse response url as an audio buffer.\n     * Decodes the audio asynchronously and invokes\n     * the callback once the audio buffer loads.\n     * @param url The url of the buffer to load. filetype support depends on the browser.\n     */\n    Convolver.prototype.load = function (url) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var _a;\n            return tslib_1.__generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        _a = this;\n                        return [4 /*yield*/, this._buffer.load(url)];\n                    case 1:\n                        _a.buffer = _b.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    Object.defineProperty(Convolver.prototype, \"buffer\", {\n        /**\n         * The convolver's buffer\n         */\n        get: function () {\n            if (this._buffer.length) {\n                return this._buffer;\n            }\n            else {\n                return null;\n            }\n        },\n        set: function (buffer) {\n            if (buffer) {\n                this._buffer.set(buffer);\n            }\n            // if it's already got a buffer, create a new one\n            if (this._convolver.buffer) {\n                // disconnect the old one\n                this.input.disconnect();\n                this._convolver.disconnect();\n                // create and connect a new one\n                this._convolver = this.context.createConvolver();\n                this.input.chain(this._convolver, this.output);\n            }\n            var buff = this._buffer.get();\n            this._convolver.buffer = buff ? buff : null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Convolver.prototype, \"normalize\", {\n        /**\n         * The normalize property of the ConvolverNode interface is a boolean that\n         * controls whether the impulse response from the buffer will be scaled by\n         * an equal-power normalization when the buffer attribute is set, or not.\n         */\n        get: function () {\n            return this._convolver.normalize;\n        },\n        set: function (norm) {\n            this._convolver.normalize = norm;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Convolver.prototype.dispose = function () {\n        _super.prototype.dispose.call(this);\n        this._buffer.dispose();\n        this._convolver.disconnect();\n        return this;\n    };\n    return Convolver;\n}(ToneAudioNode));\nexport { Convolver };\n//# sourceMappingURL=Convolver.js.map","export { getContext, setContext } from \"./core/Global\";\nexport * from \"./classes\";\nexport * from \"./version\";\nimport { getContext } from \"./core/Global\";\nimport { ToneAudioBuffer } from \"./core/context/ToneAudioBuffer\";\nexport { start } from \"./core/Global\";\n/**\n * The current audio context time of the global [[Context]].\n * See [[Context.now]]\n * @category Core\n */\nexport var now = getContext().now.bind(getContext());\n/**\n * The current audio context time of the global [[Context]] without the [[Context.lookAhead]]\n * See [[Context.immediate]]\n * @category Core\n */\nexport var immediate = getContext().immediate.bind(getContext());\n/**\n * The Transport object belonging to the global Tone.js Context.\n * See [[Transport]]\n * @category Core\n */\nexport var Transport = getContext().transport;\n/**\n * The Destination (output) belonging to the global Tone.js Context.\n * See [[Destination]]\n * @category Core\n */\nexport var Destination = getContext().destination;\n/**\n * The [[Listener]] belonging to the global Tone.js Context.\n * @category Core\n */\nexport var Listener = getContext().listener;\n/**\n * Draw is used to synchronize the draw frame with the Transport's callbacks.\n * See [[Draw]]\n * @category Core\n */\nexport var Draw = getContext().draw;\n/**\n * A reference to the global context\n * See [[Context]]\n * @category Core\n */\nexport var context = getContext();\n/**\n * Promise which resolves when all of the loading promises are resolved.\n * Alias for static [[ToneAudioBuffer.loaded]] method.\n * @category Core\n */\nexport var loaded = ToneAudioBuffer.loaded.bind(ToneAudioBuffer);\n// this fills in name changes from 13.x to 14.x\nimport { ToneAudioBuffers } from \"./core/context/ToneAudioBuffers\";\nimport { ToneBufferSource } from \"./source/buffer/ToneBufferSource\";\nexport var Buffer = ToneAudioBuffer;\nexport var Buffers = ToneAudioBuffers;\nexport var BufferSource = ToneBufferSource;\n//# sourceMappingURL=index.js.map","import { PolySynth, start } from \"tone\";\n\nconst PASSIVE = { passive: true };\nconst playingNotes = new Set();\n\nfunction triggerRelease() {\n  getSynth().then(synth => synth.triggerRelease(this.textContent));\n  this.removeEventListener(\"pointerout\", triggerRelease);\n\n  // delaying the deletion to cancel pending click event\n  requestAnimationFrame(() => playingNotes.delete(this));\n}\n\nfunction triggerAttack() {\n  if (!playingNotes.has(this)) {\n    playingNotes.add(this);\n    getSynth()\n      .then(synth => {\n        synth.triggerAttack(this.textContent);\n        this.focus();\n        this.addEventListener(\"pointerout\", triggerRelease, PASSIVE);\n      })\n      .catch(console.error);\n  }\n}\n\nfunction handlePointerMovements(e) {\n  triggerAttack.call(e.target);\n}\n\nlet synth;\nconst getSynth = () => {\n  if (synth == null) {\n    synth = start().then(() => new PolySynth().toDestination());\n  }\n  return synth;\n};\n\nfunction clickHandler(e) {\n  if (!playingNotes.has(e.target)) {\n    playingNotes.add(e.target);\n    getSynth()\n      .then(synth => synth.triggerAttackRelease(e.target.textContent, \"8n\"))\n      .then(() => playingNotes.delete(e.target))\n      .catch(console.error);\n  }\n}\n\nexport function addEventListeners(piano) {\n  function monitorPointerMovements(e) {\n    piano.addEventListener(\"pointermove\", handlePointerMovements, PASSIVE);\n    piano.addEventListener(\n      \"pointerleave\",\n      deactivatePointerMonitoring,\n      PASSIVE\n    );\n    piano.addEventListener(\"pointerup\", deactivatePointerMonitoring, PASSIVE);\n    piano.addEventListener(\n      \"pointercancel\",\n      deactivatePointerMonitoring,\n      PASSIVE\n    );\n\n    handlePointerMovements(e);\n  }\n\n  function deactivatePointerMonitoring(e) {\n    piano.removeEventListener(\"pointermove\", handlePointerMovements);\n    piano.removeEventListener(\"pointerleave\", deactivatePointerMonitoring);\n    piano.removeEventListener(\"pointerup\", deactivatePointerMonitoring);\n    piano.removeEventListener(\"pointercancel\", deactivatePointerMonitoring);\n    playingNotes.forEach(Function.prototype.call.bind(triggerRelease));\n  }\n\n  piano.addEventListener(\"pointerdown\", monitorPointerMovements, PASSIVE);\n  piano.addEventListener(\"click\", clickHandler, PASSIVE);\n}\n","import { addEventListeners } from \"./playNotes.js\";\n\nconst getNoteName = (index, octaveNumber, sharp = \"\") =>\n  (((index + 2) % 7) + 10).toString(36).toUpperCase() + sharp + octaveNumber;\n\nfunction* createOctaveKeys(octaveNumber) {\n  for (let i = 0; i < 7; i++) {\n    const button = document.createElement(\"button\");\n    button.textContent = getNoteName(i, octaveNumber);\n    button.autofocus = button.textContent === \"C4\";\n    yield button;\n    if (i !== 2 && i !== 6) {\n      const button = document.createElement(\"button\");\n      button.textContent = getNoteName(i, octaveNumber, \"#\");\n      button.className = \"sharp\";\n      yield button;\n    }\n  }\n}\n\nconst piano = document.createElement(\"main\");\npiano.id = \"piano\";\naddEventListeners(piano);\nfor (let octavePitch = 1; octavePitch < 8; octavePitch++) {\n  piano.append(...createOctaveKeys(octavePitch));\n}\n\nconst pianoMinimap = document.createElement(\"input\");\npianoMinimap.type = \"range\";\npianoMinimap.min = 0;\nfunction updateMinimapRange() {\n  const { value, max } = pianoMinimap;\n  const { offsetWidth, scrollLeft, scrollWidth } = piano;\n  if (max !== scrollWidth - offsetWidth) {\n    pianoMinimap.max = scrollWidth - offsetWidth;\n    pianoMinimap.value = ((value / max) * pianoMinimap.max) | 0;\n    pianoMinimap.style.setProperty(\n      \"--visible-ratio\",\n      (offsetWidth / scrollWidth) * 100 + \"%\"\n    );\n    pianoMinimap.value =\n      ((scrollLeft + offsetWidth / 2) / scrollWidth) * pianoMinimap.max;\n  }\n}\npianoMinimap.addEventListener(\n  \"input\",\n  () => {\n    piano.scrollLeft = Number(pianoMinimap.value) | 0;\n  },\n  { passive: true }\n);\npianoMinimap.addEventListener(\"keydown\", event => {\n  if (event.code.startsWith(\"Arrow\")) {\n    const { value, max } = pianoMinimap;\n    const { offsetWidth, scrollWidth } = piano;\n    pianoMinimap.step = Math.min(\n      (event.code === \"ArrowUp\" || event.code === \"ArrowRight\"\n        ? max - value\n        : value) || 1,\n      pianoMinimap.max * (offsetWidth / scrollWidth)\n    );\n  }\n});\npianoMinimap.addEventListener(\"wheel\", e => {\n  piano.scrollLeft += e.deltaY;\n  console.log(pianoMinimap.value);\n  pianoMinimap.value += e.deltaY;\n  console.log(pianoMinimap.value);\n});\npianoMinimap.addEventListener(\"keyup\", () => {\n  pianoMinimap.step = 1;\n});\naddEventListener(\"resize\", updateMinimapRange, { passive: true });\nrequestAnimationFrame(updateMinimapRange);\n\ndocument.body.append(piano, pianoMinimap);\nif (typeof Element.prototype.scrollIntoView === \"function\") {\n  requestAnimationFrame(() =>\n    document.querySelector(\"[autofocus]\").scrollIntoView({\n      behavior: \"auto\",\n      block: \"center\",\n      inline: \"center\",\n    })\n  );\n}\n"],"names":["createExtendedExponentialRampToValueAutomationEvent","value","endTime","insertTime","type","createExtendedLinearRampToValueAutomationEvent","createSetValueAutomationEvent","startTime","createSetValueCurveAutomationEvent","values","duration","getTargetValueAtTime","time","valueAtStartTime","target","timeConstant","Math","exp","isExponentialRampToValueAutomationEvent","automationEvent","isLinearRampToValueAutomationEvent","isAnyRampToValueAutomationEvent","isSetValueAutomationEvent","isSetValueCurveAutomationEvent","getValueOfAutomationEventAtIndexAtTime","automationEvents","index","defaultValue","undefined","length","getEndTimeAndValueOfPreviousAutomationEvent","currentAutomationEvent","nextAutomationEvent","isCancelAndHoldAutomationEvent","isCancelScheduledValuesAutomationEvent","getEventTime","cancelTime","getExponentialRampValueAtTime","getLinearRampValueAtTime","getValueCurveValueAtTime","theoreticIndex","lowerIndex","floor","upperIndex","ceil","interpolateValue","isSetTargetAutomationEvent","AutomationEventList","[object Object]","this","_automationEvents","_currenTime","_defaultValue","Symbol","iterator","eventTime","findIndex","removedAutomationEvent","slice","lastAutomationEvent","Error","startValue","truncatedAutomationEvent","push","getValue","Float32Array","previousAutomationEvent","persistentAutomationEvent","splice","remainingAutomationEvents","firstRemainingAutomationEvent","unshift","ACTIVE_AUDIO_NODE_STORE","WeakSet","AUDIO_NODE_CONNECTIONS_STORE","WeakMap","AUDIO_NODE_STORE","AUDIO_PARAM_CONNECTIONS_STORE","AUDIO_PARAM_STORE","BACKUP_NATIVE_CONTEXT_STORE","CONTEXT_STORE","EVENT_LISTENERS","CYCLE_COUNTERS","NODE_NAME_TO_PROCESSOR_CONSTRUCTOR_MAPS","NODE_TO_PROCESSOR_MAPS","handler","construct","IMPORT_STATEMENT_REGEX","splitImportStatements","source","url","importStatements","sourceWithoutImportStatements","replace","result","match","unresolvedUrl","importStatementWithResolvedUrl","URL","toString","join","verifyParameterDescriptors","parameterDescriptors","Array","isArray","TypeError","verifyProcessorCtor","processorCtor","constructible","Proxy","isConstructible","prototype","DEFAULT_OPTIONS","channelCount","channelCountMode","channelInterpretation","fftSize","maxDecibels","minDecibels","smoothingTimeConstant","isOwnedByContext","nativeAudioNode","nativeContext","context","testAudioBufferCopyChannelMethodsOutOfBoundsSupport","nativeAudioBuffer","copyToChannel","createIndexSizeError","DOMException","err","code","name","wrapAudioBufferGetChannelDataMethod","audioBuffer","getChannelData","channel","call","numberOfChannels","MOST_NEGATIVE_SINGLE_FLOAT","MOST_POSITIVE_SINGLE_FLOAT","getValueForKey","map","key","get","getEventListenersOfAudioNode","audioNode","setInternalStateToActive","has","add","forEach","eventListener","setInternalStateToPassive","delete","buffer","loop","loopEnd","loopStart","playbackRate","isAudioNode","audioNodeOrAudioParam","isAudioNodeOutputConnection","outputConnection","isAudioWorkletNode","isNativeAudioNodeFaker","nativeAudioNodeOrNativeAudioNodeFaker","connectNativeAudioNodeToNativeAudioNode","nativeSourceAudioNode","nativeDestinationAudioNode","output","input","fakeNativeDestinationAudioNode","inputs","connect","deleteEventListenerOfAudioNode","disconnectNativeAudioNodeFromNativeAudioNode","disconnect","getAudioNodeConnections","getAudioParamConnections","audioParam","getNativeAudioNode","getNativeAudioParam","insertElementInSet","set","element","predicate","ignoreDuplicates","lmnt","isActiveAudioNode","isPartOfACycle","isPassiveAudioNode","pickElementFromSet","matchingElements","from","filter","matchingElement","setInternalStateToPassiveWhenNecessary","activeInputs","every","connections","size","testAudioNodeDisconnectMethodSupport","nativeAudioContext","Promise","resolve","analyzer","createScriptProcessor","dummy","createGain","ones","createBuffer","channelData","createBufferSource","destination","onaudioprocess","event","chnnlDt","inputBuffer","some","sample","stop","start","visitEachAudioNodeOnce","cycles","visitor","counts","Map","cycle","count","isNativeAudioNode","nativeAudioNodeOrAudioParam","wrapAudioNodeDisconnectMethod","returnValue","connectionsToDestination","connection","bind","destinationOrOutput","apply","clear","filteredConnections","addActiveInputConnectionToAudioNode","activeInputConnection","addActiveInputConnectionToAudioParam","addPassiveInputConnectionToAudioNode","passiveInputs","passiveInputConnections","Set","passiveInputConnection","addPassiveInputConnectionToAudioParam","deletePassiveInputConnectionToAudioNode","matchingConnection","deletePassiveInputConnectionToAudioParam","addConnectionToAudioNodeOfAudioContext","outputs","eventListeners","isActive","partialConnection","deleteActiveInputConnectionToAudioNode","addConnectionToAudioParamOfAudioContext","nativeAudioParam","deleteActiveInputConnectionToAudioParam","deleteActiveInputConnection","activeInputConnections","deleteInputsOfAudioNode","listener","deleteInputConnectionOfAudioNode","deleteInputsOfAudioParam","deleteInputConnectionOfAudioParam","ReadOnlyMap","parameters","_map","entries","callback","thisArg","keys","numberOfInputs","numberOfOutputs","outputChannelCount","parameterData","processorOptions","createChannelCount","i","copyFromChannel","parent","channelNumber","bufferOffset","byteLength","slicedInput","BYTES_PER_ELEMENT","createNestedArrays","x","y","arrays","array","j","processBuffer","async","proxy","renderedBuffer","nativeOfflineAudioContext","options","processorConstructor","exposeCurrentFrameAndCurrentTime","numberOfInputChannels","numberOfOutputChannels","reduce","sum","processedBuffer","sampleRate","audioNodeConnections","audioWorkletProcessor","nodeToProcessorMap","nativeAudioWorkletNode","getAudioWorkletProcessor","prmtrs","k","potentiallyEmptyInputs","activeSourceFlag","process","outputChannelSplitterNodeOutput","error","dispatchEvent","ErrorEvent","Q","detune","frequency","gain","offset","disableNormalization","delayTime","maxDelayTime","getOutputAudioNodeAtIndex","outputAudioNodes","outputAudioNode","attack","knee","ratio","release","threshold","createInvalidStateError","createInvalidAccessError","filterBuffer","feedback","feedbackLength","feedforward","feedforwardLength","minLength","xBuffer","yBuffer","bufferIndex","bufferLength","inputLength","testPromiseSupport","uint32Array","Uint32Array","promise","decodeAudioData","catch","assignNativeAudioNodeOption","option","assignNativeAudioNodeOptions","testAnalyserNodeGetFloatTimeDomainDataMethodSupport","nativeAnalyserNode","getFloatTimeDomainData","assignNativeAudioNodeAudioParamValue","wrapAudioScheduledSourceNodeStartMethodNegativeParameters","nativeAudioScheduledSourceNode","when","RangeError","wrapAudioScheduledSourceNodeStopMethodNegativeParameters","computeBufferSize","baseLatency","max","min","pow","round","log2","createAudioWorkletProcessorPromise","audioWorkletNodeOptions","reject","port1","port2","MessageChannel","onmessage","data","close","onmessageerror","postMessage","cloneAudioWorkletNodeOptions","interceptConnections","original","interceptor","divide","a","b","denominator","evaluatePolynomial","coefficient","z","createNotSupportedError","coneInnerAngle","coneOuterAngle","coneOuterGain","distanceModel","maxDistance","orientationX","orientationY","orientationZ","panningModel","positionX","positionY","positionZ","refDistance","rolloffFactor","pan","curve","oversample","isDCCurve","overwriteAccessors","object","property","createGetter","createSetter","Object","getPrototypeOf","hasOwnProperty","getOwnPropertyDescriptor","defineProperty","wrapEventListener","descriptor","defineProperties","currentTarget","handleEvent","cacheTestResult","ongoingTests","testResults","tester","test","cachedTestResult","ongoingTest","synchronousTestResult","then","finalTestResult","window","nativeOfflineAudioContextConstructor","OfflineAudioContext","webkitOfflineAudioContext","createNativeOfflineAudioContextConstructor","isNativeOfflineAudioContext","anything","createIsNativeOfflineAudioContext","nativeAudioContextConstructor","AudioContext","webkitAudioContext","createNativeAudioContextConstructor","getBackupNativeContext","state","backupNativeContext","bckpNtveCntxt","createGetBackupNativeContext","createNativeAudioNode","factoryFunction","createNativeAudioNodeFactory","createNativeAnalyserNode","ntvCntxt","createAnalyser","byteTimeDomainData","Uint8Array","getByteTimeDomainData","wrapAnalyserNodeGetFloatTimeDomainDataMethod","createNativeAnalyserNodeFactory","getAudioNodeRenderer","renderer","createGetAudioNodeRenderer","renderInputsOfAudioNode","trace","nextTrace","all","includes","audioNodeRenderer","renderedNativeAudioNode","render","allRenderingPromises","renderingPromises","createRenderInputsOfAudioNode","createAnalyserNodeRenderer","renderedNativeAnalyserNodes","renderedNativeAnalyserNode","createAnalyserNode","createAnalyserNodeRendererFactory","auxiliaryGainNodeStore","getNativeContext","contextStore","audioParamAudioNodeStore","eventTargetConstructor","_nativeEventTarget","_listeners","wrappedEventListener","addEventListener","removeEventListener","createEventTargetConstructor","isNativeAudioContext","createIsNativeAudioContext","AudioNode","createIsNativeAudioNode","isNativeAudioParam","AudioParam","createIsNativeAudioParam","audioNodeConstructor","addAudioNodeConnections","createIncrementCycleCounter","decrementCycleCounter","detectCycles","super","_context","_nativeAudioNode","isOffline","auxiliaryGainNodes","nativeGainNode","addConnectionToAudioNodeOfOfflineAudioContext","addConnectionToAudioParamOfOfflineAudioContext","destinations","audioNodeConnectionsOfSource","deleteAnyConnection","deleteConnectionAtOutput","deleteConnectionToDestination","createAudioNodeConstructor","audioNodeConnectionsStore","cycleCounters","cycleCounter","nativeDestinationAudioParam","createIncrementCycleCounterFactory","createDecrementCycleCounter","chain","nextLink","isDelayNode","mergedCycles","nestedCycles","concat","createDetectCycles","analyserNodeConstructor","audionNodeConstructor","mergedOptions","_nativeAnalyserNode","frequencyBinCount","getByteFrequencyData","getFloatFrequencyData","createAnalyserNodeConstructor","audioBufferStore","nativeAudioBufferConstructor","AudioBuffer","createNativeAudioBufferConstructor","convertNumberToUnsignedLong","unit32Array","wrapAudioBufferCopyChannelMethods","channelNumberAsNumber","bufferOffsetAsNumber","audioBufferLength","destinationLength","sourceLength","createWrapAudioBufferCopyChannelMethods","wrapAudioBufferCopyChannelMethodsOutOfBounds","createWrapAudioBufferCopyChannelMethodsOutOfBounds","audioBufferConstructor","testNativeAudioBufferConstructorSupport","hasInstance","instance","createAudioBufferConstructor","createTestAudioBufferConstructorSupport","testAudioScheduledSourceNodeStartMethodNegativeParametersSupport","nativeAudioBufferSourceNode","createOscillator","createTestAudioScheduledSourceNodeStartMethodNegativeParametersSupport","testAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport","createTestAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport","testAudioScheduledSourceNodeStopMethodNegativeParametersSupport","createTestAudioScheduledSourceNodeStopMethodNegativeParametersSupport","wrapAudioScheduledSourceNodeStopMethodConsecutiveCalls","disconnectGainNode","isStopped","setValueAtTime","createWrapAudioScheduledSourceNodeStopMethodConsecutiveCalls","renderInputsOfAudioParam","audioParamConnections","createRenderInputsOfAudioParam","connectAudioParam","createConnectAudioParam","createNativeAudioBufferSourceNode","testAudioBufferSourceNodeStartMethodConsecutiveCallsSupport","testAudioBufferSourceNodeStartMethodDurationParameterSupport","testAudioBufferSourceNodeStartMethodOffsetClampingSupport","testAudioBufferSourceNodeStopMethodNullifiedBufferSupport","wrapAudioBufferSourceNodeStartMethodOffsetClampling","wrapAudioBufferSourceNodeStopMethodNullifiedBuffer","isScheduled","wrapAudioBufferSourceNodeStartMethodConsecutiveCalls","Number","POSITIVE_INFINITY","stopTime","actualStartTime","currentTime","durationInBufferTime","wrapAudioBufferSourceNodeStartMethodDurationParameter","createNativeAudioBufferSourceNodeFactory","createTestAudioBufferSourceNodeStartMethodConsecutiveCallsSupport","offlineAudioContext","audioBufferSourceNode","oncomplete","startRendering","createTestAudioBufferSourceNodeStartMethodDurationParameterSupport","createTestAudioBufferSourceNodeStartMethodOffsetClampingSupport","createTestAudioBufferSourceNodeStopMethodNullifiedBufferSupport","clampedOffset","nullifiedBuffer","createWrapAudioBufferSourceNodeStopMethodNullifiedBuffer","renderAutomation","getAudioParamRenderer","replay","createRenderAutomation","createGetAudioParamRenderer","createAudioBufferSourceNodeRenderer","renderedNativeAudioBufferSourceNodes","renderedNativeAudioBufferSourceNode","nativeAudioBufferSourceNodeIsOwnedByContext","createAudioBufferSourceNode","createAudioBufferSourceNodeRendererFactory","createAudioParam","addAudioParamConnections","audioParamStore","createAudioParamRenderer","createCancelAndHoldAutomationEvent","createCancelScheduledValuesAutomationEvent","createExponentialRampToValueAutomationEvent","createLinearRampToValueAutomationEvent","createSetTargetAutomationEvent","isAudioParamOfOfflineAudioContext","maxValue","minValue","automationEventList","audioParamRenderer","cancelAndHoldAtTime","flush","previousLastEvent","pop","currentLastEvent","cancelScheduledValues","exponentialRampToValueAtTime","linearRampToValueAtTime","setValueCurveAtTime","setTargetAtTime","firstSample","lastSample","numberOfInterpolatedValues","interpolatedValues","timeOfLastSample","createAudioParamFactory","audioParamConnectionsStore","audioBufferSourceNodeConstructor","audioBufferSourceNodeRenderer","_audioBufferSourceNodeRenderer","_isBufferNullified","_isBufferSet","_nativeAudioBufferSourceNode","_onended","_playbackRate","fill","onended","wrappedListener","nativeOnEnded","resetInternalStateToPassive","setTimeout","createAudioBufferSourceNodeConstructor","createNativeGainNode","createNativeGainNodeFactory","audioDestinationNodeConstructor","createAudioDestinationNodeRenderer","createNativeAudioDestinationNode","nativeAudioDestinationNode","_isNodeOfNativeOfflineAudioContext","_nativeAudioDestinationNode","maxChannelCount","createAudioDestinationNodeConstructor","nativeAudioDestinationNodePromise","createAudioDestinationNode","isNodeOfNativeOfflineAudioContext","gainNode","createNativeAudioDestinationNodeFactory","createNativeBiquadFilterNode","nativeBiquadFilterNode","createBiquadFilter","createNativeBiquadFilterNodeFactory","biquadFilterNodeConstructor","createBiquadFilterNodeRenderer","_Q","_detune","_frequency","_gain","log10","_nativeBiquadFilterNode","frequencyHz","magResponse","phaseResponse","getFrequencyResponse","createBiquadFilterNodeConstructor","renderedNativeBiquadFilterNodes","renderedNativeBiquadFilterNode","nativeBiquadFilterNodeIsOwnedByContext","createBiquadFilterNode","createBiquadFilterNodeRendererFactory","monitorConnections","whenConnected","whenDisconnected","wasDisconnected","wasConnected","isDisconnected","createMonitorConnections","wrapChannelMergerNode","monitorConnectionsFunction","channelMergerNode","createWrapChannelMergerNode","createNativeChannelMergerNode","nativeChannelMergerNode","createChannelMerger","createNativeChannelMergerNodeFactory","channelMergerNodeConstructor","createChannelMergerNodeRenderer","createChannelMergerNodeConstructor","renderedNativeAudioNodes","createAudioNode","createChannelMergerNodeRendererFactory","createNativeChannelSplitterNode","nativeChannelSplitterNode","createChannelSplitter","channelSplitterNode","wrapChannelSplitterNode","createNativeChannelSplitterNodeFactory","channelSplitterNodeConstructor","createChannelSplitterNodeRenderer","sanitizedOptions","createChannelSplitterNodeConstructor","createChannelSplitterNodeRendererFactory","createNativeConstantSourceNode","createNativeConstantSourceNodeFaker","createConstantSource","nativeConstantSourceNode","createNativeConstantSourceNodeFactory","audioNodeOptions","bufferSize","args","createNativeConstantSourceNodeFakerFactory","constantSourceNodeConstructor","createConstantSourceNodeRendererFactory","constantSourceNodeRenderer","_constantSourceNodeRenderer","_nativeConstantSourceNode","_offset","createConstantSourceNodeConstructor","renderedNativeConstantSourceNodes","renderedNativeConstantSourceNode","nativeConstantSourceNodeIsOwnedByContext","createConstantSourceNode","createNativeConvolverNodeFaker","convolverNode","createConvolver","nativeConvolverNodeFaker","normalize","createNativeConvolverNodeFakerFactory","createNativeConvolverNode","nativeConvolverNode","createNativeConvolverNodeFactory","convolverNodeConstructor","createConvolverNodeRenderer","_nativeConvolverNode","createConvolverNodeConstructor","renderedNativeConvolverNodes","renderedNativeConvolverNode","createConvolverNode","createConvolverNodeRendererFactory","createNativeDelayNode","nativeDelayNode","createDelay","createNativeDelayNodeFactory","delayNodeConstructor","createDelayNodeRenderer","_delayTime","createDelayNodeConstructor","renderedNativeDelayNodes","renderedNativeDelayNode","nativeDelayNodeIsOwnedByContext","createDelayNode","createDelayNodeRendererFactory","createNativeDynamicsCompressorNode","nativeDynamicsCompressorNode","createDynamicsCompressor","createNativeDynamicsCompressorNodeFactory","dynamicsCompressorNodeConstructor","createDynamicsCompressorNodeRenderer","_attack","_knee","_nativeDynamicsCompressorNode","_ratio","_release","_threshold","previousChannelCount","reduction","createDynamicsCompressorNodeConstructor","renderedNativeDynamicsCompressorNodes","renderedNativeDynamicsCompressorNode","nativeDynamicsCompressorNodeIsOwnedByContext","createDynamicsCompressorNode","createDynamicsCompressorNodeRendererFactory","gainNodeConstructor","createGainNodeRenderer","createGainNodeConstructor","renderedNativeGainNodes","renderedNativeGainNode","nativeGainNodeIsOwnedByContext","createGainNode","createGainNodeRendererFactory","createNativeScriptProcessorNode","createNativeScriptProcessorNodeFactory","createNativeIIRFilterNodeFaker","scriptProcessorNode","bufferIndexes","xBuffers","yBuffers","outputBuffer","nyquist","omega","PI","cos","sin","response","sqrt","atan2","createNativeIIRFilterNodeFakerFactory","renderNativeOfflineAudioContext","testOfflineAudioContextCurrentTimeSupport","isOfflineAudioContextCurrentTimeSupported","createRenderNativeOfflineAudioContext","createTestOfflineAudioContextCurrentTimeSupport","createIIRFilterNodeRenderer","filteredBufferPromise","nativeIIRFilterNode","nativeIIRFilterNodeIsOwnedByContext","createIIRFilter","partialOfflineAudioContext","filteredBuffer","filterFullBuffer","createIIRFilterNodeRendererFactory","iIRFilterNodeConstructor","createNativeIIRFilterNode","wrapIIRFilterNodeGetFrequencyResponseMethod","_nativeIIRFilterNode","createIIRFilterNodeConstructor","createNativeIIRFilterNodeFactory","createAudioListener","nativeListener","forwardX","forwardY","forwardZ","upX","upY","upZ","createFakeAudioParam","constantSourceNode","lastOrientation","lastPosition","orientation","setOrientation","positon","setPosition","createFakeAudioParams","createAudioListenerFactory","unrenderedAudioWorkletNodeStore","minimalBaseAudioContextConstructor","_nativeContext","_destination","_listener","_onstatechange","onstatechange","nativeOnStateChange","createMinimalBaseAudioContextConstructor","createNativeOscillatorNode","nativeOscillatorNode","periodicWave","setPeriodicWave","createNativeOscillatorNodeFactory","createOscillatorNodeRenderer","renderedNativeOscillatorNodes","renderedNativeOscillatorNode","nativeOscillatorNodeIsOwnedByContext","createOscillatorNode","createOscillatorNodeRendererFactory","oscillatorNodeConstructor","oscillatorNodeRenderer","_nativeOscillatorNode","_oscillatorNodeRenderer","createOscillatorNodeConstructor","createConnectedNativeAudioBufferSourceNode","createConnectedNativeAudioBufferSourceNodeFactory","createNativeWaveShaperNodeFaker","negativeWaveShaperNode","createWaveShaper","positiveWaveShaperNode","inputGainNode","invertGainNode","outputGainNode","revertGainNode","disconnectNativeAudioBufferSourceNode","isConnected","unmodifiedCurve","nativeWaveShaperNodeFaker","curveLength","negativeCurve","positiveCurve","centerIndex","createNativeWaveShaperNodeFakerFactory","createNativeWaveShaperNode","nativeWaveShaperNode","createNativeWaveShaperNodeFactory","createNativePannerNodeFaker","pannerNode","createPanner","SINGLE_CHANNEL_OPTIONS","orientationXGainNode","orientationYGainNode","orientationZGainNode","positionXGainNode","positionYGainNode","positionZGainNode","waveShaperNode","nativePannerNodeFaker","createNativePannerNodeFakerFactory","createNativePannerNode","nativePannerNode","createNativePannerNodeFactory","createPannerNodeRenderer","renderedBufferPromise","renderedNativeGainNodeOrNativePannerNode","commonAudioNodeOptions","commonNativePannerNodeOptions","nativePannerNodeIsOwnedByContext","nativeConstantSourceNodes","channelDatas","gateGainNode","partialPannerNode","createPannerNodeRendererFactory","pannerNodeConstructor","_nativePannerNode","_orientationX","_orientationY","_orientationZ","_positionX","_positionY","_positionZ","createPannerNodeConstructor","periodicWaveConstructor","createNativePeriodicWave","periodicWaveStore","PeriodicWave","createPeriodicWaveConstructor","imag","real","wrappedImag","wrappedReal","createPeriodicWave","createNativePeriodicWaveFactory","createNativeStereoPannerNode","createNativeStereoPannerNodeFaker","createStereoPanner","nativeStereoPannerNode","createNativeStereoPannerNodeFactory","DC_CURVE","HALF_PI","SINGLE_CHANNEL_WAVE_SHAPER_OPTIONS","buildInternalGraph","panGainNode","leftWaveShaperCurve","rightWaveShaperCurve","leftGainNode","leftWaveShaperNode","panWaveShaperNode","rightGainNode","rightWaveShaperNode","buildInternalGraphForMono","leftInputForLeftOutputWaveShaperCurve","leftInputForRightOutputWaveShaperCurve","rightInputForLeftOutputWaveShaperCurve","rightInputForRightOutputWaveShaperCurve","CURVE_SIZE","leftInputForLeftOutputGainNode","leftInputForLeftOutputWaveShaperNode","leftInputForRightOutputGainNode","leftInputForRightOutputWaveShaperNode","rightInputForLeftOutputGainNode","rightInputForLeftOutputWaveShaperNode","rightInputForRightOutputGainNode","rightInputForRightOutputWaveShaperNode","buildInternalGraphForStereo","connectGraph","disconnectGraph","nativeStereoPannerNodeFakerFactory","createNativeStereoPannerNodeFakerFactory","createStereoPannerNodeRenderer","renderedNativeStereoPannerNodes","renderedNativeStereoPannerNode","nativeStereoPannerNodeIsOwnedByContext","createStereoPannerNode","createStereoPannerNodeRendererFactory","stereoPannerNodeConstructor","_pan","createStereoPannerNodeConstructor","createWaveShaperNodeRenderer","renderedNativeWaveShaperNodes","renderedNativeWaveShaperNode","createWaveShaperNode","createWaveShaperNodeRendererFactory","waveShaperNodeConstructor","_isCurveNullified","_nativeWaveShaperNode","createWaveShaperNodeConstructor","isSecureContext","createIsSecureContext","fn","currentFrame","configurable","createExposeCurrentFrameAndCurrentTime","addAudioWorkletModule","evaluateSource","fetchSource","ongoingRequests","resolvedRequests","moduleURL","credentials","absoluteUrl","location","href","audioWorklet","blob","Blob","createObjectURL","addModule","revokeObjectURL","resolvedRequestsOfContext","ongoingRequestsOfContext","promiseOfOngoingRequest","evaluateAudioWorkletGlobalScope","_AWGS","SyntaxError","trim","nodeNameToProcessorConstructorMap","rslvdRqstsFCntxt","ngngRqstsFCntxt","createAddAudioWorkletModule","head","document","script","createElement","originalOnErrorHandler","onerror","removeErrorEventListenerAndRevokeUrl","message","src","lineno","colno","onload","appendChild","createEvaluateSource","createAbortError","fetch","ok","text","createFetchSource","isNativeContext","createIsNativeContext","baseAudioContextConstructor","_audioWorklet","constraints","audioData","successCallback","errorCallback","createBaseAudioContextConstructor","createDataCloneError","createEncodingError","detachedArrayBuffers","anyContext","complete","arrayBuffer","detachArrayBuffer","fail","createDecodeAudioData","mediaElementAudioSourceNodeConstructor","createNativeMediaElementAudioSourceNode","nativeMediaElementAudioSourceNode","_mediaElement","mediaElement","_nativeMediaElementAudioSourceNode","createMediaElementAudioSourceNodeConstructor","ntvDCntxt","createMediaElementSource","createNativeMediaElementAudioSourceNodeFactory","mediaStreamAudioDestinationNodeConstructor","createNativeMediaStreamAudioDestinationNode","nativeMediaStreamAudioDestinationNode","_nativeMediaStreamAudioDestinationNode","stream","createMediaStreamAudioDestinationNodeConstructor","createMediaStreamDestination","createNativeMediaStreamAudioDestinationNodeFactory","mediaStreamAudioSourceNodeConstructor","createNativeMediaStreamAudioSourceNode","nativeMediaStreamAudioSourceNode","_nativeMediaStreamAudioSourceNode","mediaStream","createMediaStreamAudioSourceNodeConstructor","audioStreamTracks","getAudioTracks","filteredAudioStreamTracks","sort","id","createMediaStreamSource","MediaStream","createNativeMediaStreamAudioSourceNodeFactory","mediaStreamTrackAudioSourceNodeConstructor","createNativeMediaStreamTrackAudioSourceNode","createMediaStreamTrackAudioSourceNodeConstructor","mediaStreamTrack","createMediaStreamTrackSource","kind","createNativeMediaStreamTrackAudioSourceNodeFactory","audioContextConstructor","createUnknownError","latencyHint","isValidLatencyHint","_baseLatency","_nativeAudioContext","_state","revokeState","resolvePromise","resume","suspend","createAudioContextConstructor","getUnrenderedAudioWorkletNodes","unrenderedAudioWorkletNodes","createGetUnrenderedAudioWorkletNodes","addUnrenderedAudioWorkletNode","audioWorkletNode","createAddUnrenderedAudioWorkletNode","connectMultipleOutputs","createConnectMultipleOutputs","deleteUnrenderedAudioWorkletNode","createDeleteUnrenderedAudioWorkletNode","disconnectMultipleOutputs","createDisconnectMultipleOutputs","createNativeAudioWorkletNodeFaker","numberOfParameters","messageChannel","gainNodes","inputChannelSplitterNodes","constantSourceNodes","inputChannelMergerNode","outputChannelSplitterNode","outputChannelMergerNodes","parameterMap","onprocessorerror","nativeAudioWorkletNodeFaker","_","port","patchedEventListeners","unpatchedEventListener","patchedEventListener","audioWorkletProcessorPromise","createAudioWorkletProcessor","dWrkltPrcssr","disconnectOutputsGraph","outputChannelMergerNode","disconnectFakeGraph","connectFakeGraph","createNativeAudioWorkletNodeFakerFactory","createNativeAudioWorkletNode","nativeAudioWorkletNodeConstructor","testClonabilityOfAudioWorkletNodeOptions","createNativeAudioWorkletNodeFactory","AudioWorkletNode","createNativeAudioWorkletNodeConstructor","createAudioWorkletNodeRenderer","processedBufferPromise","renderedNativeAudioWorkletNodeOrGainNode","nativeOutputNodes","nativeAudioWorkletNodeIsOwnedByContext","renderBuffer","nm","createAudioWorkletNodeRendererFactory","audioWorkletNodeConstructor","_nativeAudioWorkletNode","_onprocessorerror","_parameters","nativeOnProcessorError","createAudioWorkletNodeConstructor","createNativeOfflineAudioContext","createCreateNativeOfflineAudioContext","createStartRendering","offlineAudioContextConstructor","c","delayStateChangeEvent","stopImmediatePropagation","_waitForThePromiseToSettle","_length","_nativeOfflineAudioContext","createOfflineAudioContextConstructor","isAnyAudioContext","createIsAnyAudioContext","isAnyAudioNode","audioNodeStore","createIsAnyAudioNode","isAnyAudioParam","createIsAnyAudioParam","isAnyOfflineAudioContext","createIsAnyOfflineAudioContext","extendStatics","d","setPrototypeOf","__proto__","p","__extends","__","constructor","create","__decorate","decorators","desc","arguments","r","Reflect","decorate","__awaiter","_arguments","P","generator","fulfilled","step","next","e","rejected","done","__generator","body","f","t","g","label","sent","trys","ops","verb","throw","return","n","v","op","__values","o","s","m","__read","ar","__spread","assert","statement","assertRange","gte","lte","Infinity","assertContextRunning","warn","defaultLogger","console","log","_i","tslib_1.__spread","isUndef","arg","isDefined","isFunction","isNumber","isObject","isBoolean","isString","isNote","createAudioContext","stdAudioContext","createOfflineAudioContext","channels","stdOfflineAudioContext","theWindow","self","hasAudioContext","Ticker","updateInterval","_callback","_type","_updateInterval","_createClock","_createWorker","toFixed","blobUrl","worker","Worker","_worker","_createTimeout","_this","_timeout","_disposeClock","clearTimeout","terminate","interval","enumerable","dispose","isAudioParam","isOfflineAudioContext","isAudioContext","isAudioBuffer","noCopy","deepMerge","_a","_b","sources","shift","assign","optionsFromArguments","defaults","argsArray","objKey","opts","indexOf","defaultArg","given","fallback","omitFromObject","obj","omit","prop","Tone","debug","_wasDisposed","getDefaults","TONE_DEBUG_CLASS","version","GT","GTE","EQ","LT","abs","clamp","Timeline","_super","_timeline","memory","increasing","tslib_1.__extends","valueOf","lastValue","_search","diff","remove","param","peek","getAfter","getBefore","len","cancel","after","cancelBefore","previousEvent","beginning","end","midPoint","event_1","nextEvent","_iterate","lowerBound","upperBound","forEachBefore","forEachAfter","forEachBetween","forEachFrom","forEachAtTime","notifyNewContext","onContextInit","cb","notifyCloseContext","onContextClose","Emitter","on","split","eventName","_events","once","boundCallback","off","eventList","emit","mixin","constr","BaseContext","Context","_constants","_timeouts","_timeoutIds","_initialized","_workletModules","_latencyHint","lookAhead","_ticker","clockSource","_timeoutLoop","initialize","ctx","feedForward","l","_transport","_draw","createAudioWorkletNode","stdAudioWorkletNode","rawContext","tslib_1.__awaiter","tslib_1.__generator","workletsAreReady","promises","hint","lookAheadValue","now","immediate","getConstant","val","arr","constant","firstEvent","timeout","clearInterval","setInterval","intervalFn","DummyContext","_numberOfChannels","_sampleRate","_numberOfInputs","_numberOfOutputs","_maxDelayTime","_feedForward","_feedback","_real","_imag","_constraints","_stream","_audioData","_name","_options","_url","_fn","_id","_interval","_val","_d","readOnly","str","writable","noOp","ToneAudioBuffer","reverse","load","_buffer","getContext","loaded","_reversed","_reverse","doneLoading","downloads","fromArray","isMultidimensional","multiChannelArray","toMono","chanNum","toArray","outputArray","numChannels_1","channelArray","ret","startSamples","endSamples","retBuffer","subarray","rev","fromUrl","matches","extensions","extension","extensions_1","extensions_1_1","ext","baseUrl","e_1","tslib_1.__values","supportsType","e_1_1","endsWith","canPlayType","OfflineContext","_currentTime","_duration","_renderClock","asynchronous","yieldEvery","dummyContext","globalContext","setContext","TONE_SILENCE_LOGGING","dbToGain","db","gainToDb","LN10","intervalToFrequencyRatio","A4","ftom","ftomf","mtof","midi","TimeClass","_getExpressions","method","capture","_now","regexp","quantize","quantTo","_secondsToUnits","transport","nextSubdivision","subdiv","percent","subdivision","toNotation","toSeconds","testNotations","power","closest","closestSeconds","notation","notationSeconds","toBarsBeatsSixteenths","quarterTime","_beatsToUnits","quarters","parseFloat","measures","_getTimeSignature","sixteenths","sixteenthString","toTicks","_getPPQ","toMidi","toFrequency","TimeBaseClass","units","defaultUnits","_units","_expressions","hz","_frequencyToUnits","_ticksToUnits","parseInt","dot","numericValue","scalar","number","samples","tr","q","total","fromType","_noArg","typeName","quantity","expr","matching","freq","beats","_getBpm","seconds","ticks","bpm","timeSignature","PPQ","toSamples","toMilliseconds","FrequencyClass","setA4","note","pitch","octave","noteNumber","noteToScaleIndex","toLowerCase","transpose","harmonize","intervals","toNote","scaleIndexToNote","cbb","c#","cx","dbb","d#","dx","ebb","eb","e#","ex","fbb","fb","f#","fx","gbb","gb","g#","gx","abb","ab","a#","ax","bbb","bb","b#","bx","TransportTimeClass","ToneWithContext","defaultContext","_getPartialProperties","props","attribute","member","StateTimeline","initial","_initial","setStateAtTime","getValueAtTime","getLastState","getNextState","event_2","Param","overridden","_minOutput","_param","_swappable","swappable","_initialValue","convert","_minValue","_maxValue","_toType","_is","_assertRange","_fromType","computedTime","isFinite","JSON","stringify","before","beforeValue","previous","_linearInterpolate","_exponentialInterpolate","previousVal","_exponentialApproach","setRampPoint","currentVal","exponentialRampTo","rampTime","linearRampTo","targetRampTo","exponentialApproachValueAtTime","scaling","startingValue","segTime","valueAtTime","sampleTime","rampTo","subdivisions","setParam","t0","v0","v1","t1","ToneAudioNode","_internalChannels","_isAudioNode","node","_getInternalNodes","nodeList","_setChannelProperties","_getChannelProperties","outputNum","inputNum","toDestination","toMaster","nodes","connectSeries","fan","first","prev","current","srcNode","dstNode","outputNumber","inputNumber","Gain","_gainNode","OneShotSource","_startTime","_stopTime","getStateAtTime","_fadeIn","fadeIn","_fadeOut","fadeOut","_curve","_startGain","fadeInTime","_stopGain","cancelStop","fadeOutTime","additionalTail","_stopSource","ToneConstantSource","_source","Signal","override","_constantSource","connectSignal","signal","TickParam","_multiplier","multiplier","computedValue","prevEvent","segments","rampVal","ticksUntilTime","_getTicksUntilEvent","computedVal","segmentDur","val0","val1","onTheLineEvent","getTicksAtTime","getDurationOfTicks","currentTick","getTimeOfTick","tick","delta","sol1","ticksToTime","timeToTicks","computedDuration","startTicks","TickSignal","TickSource","_tickOffset","setTicksAtTime","pause","stopEvent","tmpEvent","lastState","elapsedTicks","periodStartTime","offsetEvent","getSecondsAtTime","elapsedSeconds","absoluteTicks","forEachTickBetween","lastStateEvent","maxStartTime","nextTickTime","Clock","_lastUpdate","_boundLoop","_loop","_tickSource","TimelineValue","initialValue","TicksClass","IntervalTimeline","_root","IntervalNode","insert","updateHeight","updateMax","_rebalance","results","search","results_1","results_1_1","_removeNode","_setRoot","_replaceNodeInParent","replacement","isLeftChild","left","right","temp","getBalance","_rotateLeft","pivotNode","_rotateRight","balance","low","allNodes_1","traverse","searchAfter","high","_left","_right","height","point","TransportEvent","_eventId","_once","invoke","TransportRepeatEvent","_currentId","_nextId","_nextTick","_boundRestart","_restart","_createEvents","scheduleOnce","Transport","_loopStart","_loopEnd","_scheduledEvents","_repeatedEvents","_syncedSignals","_swingAmount","_ppq","ppq","_clock","_processTick","_bindClockEvents","_timeSignature","_swingTicks","swing","swingSubdivision","tickTime","progress","amount","schedule","_addEvent","scheduleRepeat","eventId","item","timeline","computedAfter","offsetTicks","toggle","timeSig","startPosition","endPosition","setLoopPoints","remainingTicks","syncSignal","computedFreq","ratioSignal","unsyncSignal","syncedSignal","Delay","maxDelayInSeconds","maxDelay","_maxDelay","_delayNode","Volume","volume","_unmutedVolume","mute","Destination","ToneAudioBuffers","_buffers","_loadingCount","urls","_bufferLoaded","tslib_1.__read","MidiClass","Draw","expiration","anticipation","_boundDrawLoop","_drawLoop","_animationFrame","requestAnimationFrame","cancelAnimationFrame","draw","Source","_synced","_scheduled","_syncedStart","_syncedStop","_volume","onstop","_clampToCurrentTime","restart","sched","_start","_stop","sync","stateEvent","startOffset","unsync","ToneBufferSource","_sourceStarted","_sourceStopped","computedOffset","loopDuration","computedDur","Noise","_noiseBuffers","rate","random","_noiseCache","brown","pink","white","channelNum","lastOut","b0","b1","b2","b3","b4","b5","b6","UserMedia","open","labelOrId","devices","mediaStreamNode","supported","enumerateDevices","_device","find","device","deviceId","audio","echoCancellation","noiseSuppression","mozNoiseSuppression","navigator","mediaDevices","getUserMedia","_mediaStream","track","active","groupId","generateWaveform","ToneOscillatorNode","_oscillator","Oscillator","_partials","partials","_partialCount","partialCount","baseType","phase","oscillator","_wave","syncFrequency","unsyncFrequency","_getCachedPeriodicWave","oscProps","_periodicWaveCache","description","_phase","arrayA","arrayB","isBasicType","cache","wave","_getRealImaginary","partial","exec","fullPartials_1","periodicWaveSize","piFactor","_inverseFFT","getInitialValue","twoPi","asArray","SignalOperator","WaveShaper","_shaper","mapping","setMap","normalized","oversampling","AudioToGain","_norm","Multiply","_mult","factor","AMOscillator","_modulationScale","_modulationNode","_carrier","_modulator","modulationType","harmonicity","FMOscillator","modulationIndex","PulseOscillator","_widthGate","_thresh","width","_sawtooth","FatOscillator","_oscillators","_spread","spread","_forEach","osc","start_1","step_1","PWMOscillator","sourceType","_scale","_pulse","modulationFrequency","OmniOscillatorSourceMap","am","fat","fm","pulse","pwm","OmniOscillator","prefix","_sourceType","substr","_createNewOscillator","_getOscType","oscType","OscConstructor","oldOsc_1","blockTime","sType","mType","Add","_sum","addend","Scale","_add","_min","_max","_setRange","Zero","LFO","_stoppedValue","_clampValue","_amplitudeGain","amplitude","_stoppedSignal","_zeros","_a2g","_scaler","currentMin","currentMax","range","valueMap","propertyKey","newValue","timeRange","Player","_activeSources","_onload","autostart","_onSourceEnd","origDuration","implicitEnd","seek","tslib_1.__decorate","Abs","Players","_players","player","stopAll","GrainPlayer","_tick","grainSize","_grainSize","_overlap","overlap","_onstop","_abs","GainToAudio","Negate","_multiply","Subtract","_neg","subtrahend","GreaterThanZero","GreaterThan","_subtract","_gtz","comparator","Pow","_exponentScaler","_expFunc","_exponent","exponent","ScaleExp","_exp","Envelope","SyncedSignal","_lastVal","_onTick","_syncedCallback","_anchorValue","_sig","decay","sustain","attackCurve","releaseCurve","decayCurve","_getCurve","direction","curveName","EnvelopeCurves","_setCurve","curveDef","_attackCurve","_releaseCurve","_decayCurve","triggerAttack","velocity","currentValue","decayValue","decayStart","triggerRelease","triggerAttackRelease","attackPortion","envelopeDuration","sustainTime","totalDuration","clone","cosineCurve","rippleCurve","curveLen","sineWave","stairsCurve","sineCurve","bounceCurve","invertCurve","out","bounce","In","Out","cosine","exponential","linear","ripple","sine","Instrument","_original_triggerAttack","_original_triggerRelease","_syncMethod","timePosition","originalMethod","Monophonic","portamento","onsilence","_triggerEnvelopeAttack","setNote","_triggerEnvelopeRelease","computedFrequency","getLevelAtTime","portTime","AmplitudeEnvelope","Synth","envelope","computedAttack","computedDecay","ModulationSynth","modulation","modulationEnvelope","Filter","AMSynth","_filters","rolloff","_rolloff","rolloffNum","possibilities","cascadingCount","totalResponse","freqValues","magValues","phaseValues","filterClone","FrequencyEnvelope","_octaves","octaves","_baseFrequency","baseFrequency","MonoSynth","filterEnvelope","inharmRatios","DuoSynth","voice0","voice1","_vibrato","vibratoRate","_vibratoGain","vibratoAmount","FMSynth","ToneAudioWorklet","MetalSynth","_freqMultipliers","_amplitude","_highpass","mult","_filterFreqScaler","resonance","freqMult","MembraneSynth","pitchDecay","hertz","maxNote","NoiseSynth","noise","workletOptions","_audioWorkletName","disposed","_worklet","onReady","FeedbackCombFilter","dummyGain","OnePoleFilter","_createFilter","oldFilter","_filter","a0","fq","LowpassCombFilter","_combFilter","_lowpass","dampening","PolySynth","PluckSynth","_noise","attackNoise","_lfcf","delayAmount","_availableVoices","_activeVoices","_voices","_gcTimeout","_averageActiveVoices","voice","maxPolyphony","_dummyVoice","_getNextAvailableVoice","_collectGarbage","_makeVoiceAvailable","activeVoiceIndex","activeVoices","firstAvail","_triggerAttack","notes","midiNote","released","_triggerRelease","_scheduleEvent","durationSeconds","releaseAll","ToneEvent","Sampler","urlMap","mid","_findClosest","difference","closestNote","_startOffset","_probability","probability","_humanize","humanize","_rescheduleEvents","startTick","_getLoopDuration","prob","variation","reschedulTime","lastEvent","Loop","_event","iterations","iters","Part","events","computedOffset_1","_startNote","at","timeInTicks","_restartEvent","_setAll","attr","_testLoopBoundries","upPatternGen","clampToArraySize","downPatternGen","infiniteGen","gen","alternatingGenerator","directionUp","jumpUp","stepIndex","jumpDown","randomGen","randomIndex","randomOnce","copy","randVal","randomWalk","PatternGenerator","pattern","Pattern","_values","_pattern","_value","Sequence","_part","_seqCallback","_eventsArray","_subdivision","_createSequence","_eventsUpdated","_indexTime","_rescheduleSequence","sequence","eventOffset","CrossFade","_panner","_split","_g2a","fade","Effect","_dryWet","wet","effectSend","effectReturn","connectEffect","effect","LFOEffect","_lfo","depth","Panner","AutoFilter","oct","Follower","AutoPanner","smoothing","_smoothing","BitCrusherWorklet","AutoWah","_follower","follower","_sweepRange","_inputBoost","_bandpass","_peaking","_setSweepRange","sensitivity","baseFreq","BitCrusher","_bitCrusherWorklet","bits","frequencyReduction","Split","Chebyshev","_order","order","_getCoefficient","degree","memo","_splitter","Merge","_merger","StereoEffect","_merge","connectEffectLeft","connectEffectRight","StereoFeedbackEffect","_feedbackL","_feedbackR","_feedbackSplit","_feedbackMerge","FeedbackEffect","Chorus","_depth","_lfoL","_lfoR","_delayNodeL","_delayNodeR","deviation","Distortion","_distortion","distortion","deg","_feedbackGain","PhaseShiftAllpass","FeedbackDelay","offset90","_bank0","_createAllPassFilterBank","_bank1","_oneSampleDelay","bankValues","coefficients","combFilterTunings","FrequencyShifter","_sine","_cosine","_sineMultiply","_cosineMultiply","_negate","_phaseShifter","allpassFilterFrequencies","combFilterDelayTimes","Freeverb","_combFilters","_allpassFiltersL","_allpassFiltersR","roomSize","allpassL","allpassR","lfpf","al","cf","combFilterResonances","allpassFilterFreqs","StereoXFeedbackEffect","JCReverb","_allpassFilters","_feedbackCombFilters","_scaleRoomSize","allpass","fbcf","apf","MidSideSplit","PingPongDelay","_leftDelay","_rightDelay","_rightPreDelay","PitchShift","_delayA","_lfoA","_delayB","_lfoB","_crossFade","_crossFadeLFO","_feedbackDelay","_pitch","_windowSize","windowSize","Phaser","_filtersL","_makeFilters","stages","_filtersR","connectToFreq","filters","Reverb","_convolver","ready","_decay","_preDelay","preDelay","generate","previousReady","noiseL","noiseR","merge","renderPromise","_midAdd","SQRT1_2","_sideSubtract","side","MidSideMerge","_leftMult","_rightMult","MidSideEffect","_midSideMerge","_midSideSplit","_midSend","_sideSend","_midReturn","_sideReturn","connectEffectMid","connectEffectSide","Analyser","StereoWidener","_twoTimesWidthMid","_twoTimesWidthSide","_midMult","_oneMinusWidth","_sideMult","Tremolo","_amplitudeL","_amplitudeR","Vibrato","_analysers","analyser","MeterBase","_analyser","Solo","Meter","_rms","normalRange","getLevel","aValues","vals","totalSquared","rms","FFT","DCMeter","Waveform","_allSolos","solo","_isSoloed","_addSolo","_removeSolo","_updateSolo","_soloed","_noSolos","PanVol","MultibandSplit","Channel","_solo","_panVol","muted","_getBus","buses","send","bus","sendKnob","receive","_lowMidFilter","lowFrequency","highFrequency","Listener","Panner3D","Compressor","_compressor","Gate","_gt","_gate","thresh","smoothingTime","Limiter","MidSideCompressor","MultibandCompressor","EQ3","_multibandSplit","_lowGain","_midGain","_highGain","Convolver","buff","norm","PASSIVE","passive","playingNotes","getSynth","synth","textContent","focus","handlePointerMovements","clickHandler","getNoteName","octaveNumber","sharp","toUpperCase","createOctaveKeys","button","autofocus","className","piano","deactivatePointerMonitoring","Function","addEventListeners","octavePitch","append","pianoMinimap","updateMinimapRange","offsetWidth","scrollLeft","scrollWidth","style","setProperty","startsWith","deltaY","Element","scrollIntoView","querySelector","behavior","block","inline"],"mappings":"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"}